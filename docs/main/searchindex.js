Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "config_mod", "control_flow_cond", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "config_mod.rst", "control_flow_cond.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "torch.__config__", "Control Flow - Cond", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 nn.Module Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 39, 41, 42, 43, 44, 45, 47, 51, 54, 55, 56, 65, 66, 139, 591, 668, 677, 723, 726, 727, 728, 733, 734, 736, 744, 745, 748, 752, 776, 777, 787, 788, 802, 812, 829, 846, 881, 890, 892, 893, 894, 919, 924, 927, 945, 958, 977, 1023, 1066, 1086, 1122, 1134, 1146, 1154, 1155, 1190, 1193, 1200, 1201, 1205, 1207, 1209, 1224, 1241, 1266, 1298, 1358, 1359, 1360, 1363, 1379, 1380, 1388, 1393, 1397, 1398, 1423, 1424, 1425, 1427, 1433, 1434, 1437, 1442, 1444, 1455, 1470, 1471, 1472, 1473, 1474, 1498, 1499, 1576, 1607, 1621, 1641, 1649, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1691, 1694, 1699, 1735, 1745, 1793, 1794, 1795, 1796, 1797, 1798, 1836, 1838, 1847, 1857, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1903, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1938, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1952, 1953, 1954, 1956, 1957], "conveni": [0, 3, 7, 14, 38, 41, 42, 47, 53, 1134, 1251, 1598, 1753, 1847, 1849, 1857, 1864, 1868, 1873, 1888, 1889, 1892, 1894, 1899, 1900, 1913, 1920, 1939, 1941, 1942, 1947, 1948], "method": [0, 3, 7, 9, 14, 15, 18, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 39, 41, 45, 47, 54, 55, 56, 58, 63, 64, 69, 210, 211, 312, 474, 475, 476, 485, 486, 487, 508, 602, 781, 785, 787, 803, 804, 805, 826, 829, 842, 862, 863, 864, 881, 885, 886, 887, 888, 901, 902, 1003, 1117, 1146, 1191, 1193, 1194, 1196, 1197, 1198, 1204, 1205, 1209, 1210, 1211, 1239, 1257, 1258, 1265, 1266, 1324, 1327, 1335, 1343, 1370, 1427, 1428, 1429, 1437, 1438, 1443, 1455, 1526, 1598, 1607, 1615, 1616, 1619, 1621, 1623, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1643, 1648, 1664, 1665, 1666, 1668, 1678, 1710, 1792, 1807, 1811, 1847, 1864, 1865, 1866, 1869, 1870, 1877, 1879, 1881, 1882, 1883, 1887, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1905, 1908, 1912, 1913, 1916, 1918, 1921, 1923, 1927, 1928, 1930, 1931, 1933, 1936, 1940, 1941, 1944, 1947, 1952, 1954, 1955], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 21, 22, 24, 28, 29, 30, 32, 34, 41, 42, 43, 44, 45, 47, 49, 50, 52, 55, 75, 142, 212, 243, 389, 391, 474, 668, 681, 683, 684, 687, 723, 746, 748, 769, 808, 809, 821, 865, 884, 889, 891, 904, 909, 918, 924, 931, 932, 933, 940, 954, 958, 970, 972, 981, 983, 1045, 1046, 1049, 1053, 1071, 1082, 1083, 1085, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1098, 1099, 1101, 1103, 1127, 1128, 1129, 1133, 1134, 1137, 1149, 1150, 1151, 1152, 1182, 1183, 1185, 1186, 1189, 1190, 1191, 1194, 1207, 1213, 1214, 1215, 1218, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1265, 1266, 1271, 1274, 1281, 1282, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1317, 1322, 1323, 1325, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1497, 1499, 1509, 1510, 1517, 1522, 1524, 1525, 1543, 1544, 1561, 1563, 1564, 1567, 1568, 1570, 1576, 1579, 1607, 1609, 1610, 1614, 1641, 1642, 1643, 1644, 1653, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1697, 1707, 1709, 1710, 1730, 1731, 1767, 1773, 1774, 1779, 1783, 1788, 1789, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1805, 1806, 1807, 1810, 1811, 1825, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1852, 1853, 1854, 1855, 1856, 1857, 1866, 1867, 1869, 1870, 1875, 1876, 1878, 1881, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1925, 1926, 1928, 1930, 1935, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1952, 1954, 1955, 1956], "some": [0, 1, 3, 7, 8, 9, 14, 20, 21, 22, 24, 26, 29, 30, 32, 34, 42, 43, 45, 47, 50, 52, 53, 54, 55, 74, 76, 465, 484, 555, 677, 736, 940, 967, 1001, 1019, 1023, 1026, 1066, 1087, 1089, 1097, 1098, 1099, 1114, 1123, 1134, 1168, 1190, 1191, 1193, 1194, 1204, 1207, 1209, 1239, 1257, 1263, 1288, 1295, 1298, 1335, 1339, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1442, 1443, 1458, 1459, 1475, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1538, 1543, 1561, 1564, 1569, 1576, 1598, 1607, 1608, 1609, 1610, 1614, 1647, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1709, 1729, 1753, 1760, 1774, 1811, 1849, 1857, 1864, 1866, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1930, 1936, 1941, 1942, 1943, 1945, 1946, 1947, 1950, 1951, 1952, 1953, 1954], "oper": [0, 2, 4, 5, 7, 8, 11, 13, 15, 18, 21, 26, 30, 31, 38, 39, 41, 42, 48, 53, 54, 55, 68, 69, 71, 72, 73, 74, 75, 243, 302, 310, 324, 341, 391, 433, 434, 435, 436, 437, 476, 481, 484, 487, 501, 503, 505, 577, 668, 674, 677, 729, 730, 731, 735, 736, 745, 746, 756, 757, 767, 773, 780, 781, 783, 784, 787, 811, 814, 847, 849, 850, 853, 877, 879, 885, 887, 908, 909, 911, 913, 916, 918, 920, 922, 927, 930, 937, 940, 947, 952, 970, 972, 1000, 1009, 1040, 1045, 1046, 1047, 1048, 1061, 1066, 1067, 1068, 1069, 1079, 1084, 1102, 1114, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1134, 1141, 1144, 1150, 1151, 1168, 1193, 1204, 1205, 1209, 1210, 1213, 1223, 1236, 1246, 1249, 1250, 1263, 1264, 1273, 1280, 1288, 1293, 1298, 1308, 1309, 1322, 1325, 1339, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1384, 1385, 1386, 1387, 1389, 1394, 1413, 1418, 1423, 1424, 1425, 1427, 1440, 1445, 1446, 1447, 1454, 1469, 1470, 1472, 1474, 1478, 1494, 1495, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1521, 1522, 1526, 1530, 1537, 1543, 1545, 1551, 1552, 1562, 1564, 1568, 1576, 1582, 1583, 1594, 1595, 1596, 1597, 1607, 1609, 1610, 1643, 1649, 1654, 1658, 1659, 1677, 1683, 1693, 1697, 1706, 1707, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1729, 1735, 1752, 1753, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1785, 1787, 1788, 1789, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1810, 1825, 1843, 1846, 1847, 1849, 1857, 1860, 1862, 1863, 1865, 1866, 1870, 1873, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1912, 1915, 1917, 1919, 1920, 1921, 1922, 1926, 1928, 1929, 1932, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1954], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 17, 19, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 53, 54, 56, 58, 63, 64, 65, 66, 71, 72, 73, 75, 77, 86, 108, 139, 143, 180, 197, 308, 310, 324, 331, 332, 395, 423, 436, 446, 474, 475, 476, 484, 487, 501, 505, 508, 532, 545, 571, 572, 573, 575, 576, 605, 668, 674, 677, 700, 701, 702, 703, 704, 705, 708, 717, 718, 719, 720, 721, 723, 736, 745, 748, 756, 757, 760, 761, 762, 767, 769, 773, 774, 775, 778, 781, 782, 783, 784, 787, 790, 795, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 819, 820, 821, 822, 825, 842, 846, 847, 849, 850, 853, 866, 867, 868, 877, 878, 879, 881, 882, 883, 884, 886, 887, 889, 890, 891, 892, 895, 896, 897, 901, 902, 905, 908, 909, 910, 918, 920, 921, 928, 930, 940, 943, 947, 951, 954, 956, 967, 968, 969, 970, 972, 974, 975, 977, 980, 990, 991, 994, 995, 1001, 1005, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1023, 1024, 1033, 1035, 1036, 1042, 1047, 1048, 1049, 1058, 1066, 1067, 1068, 1069, 1079, 1080, 1081, 1084, 1086, 1094, 1096, 1100, 1102, 1109, 1111, 1114, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1138, 1139, 1143, 1144, 1146, 1150, 1151, 1152, 1153, 1167, 1168, 1180, 1190, 1191, 1193, 1194, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1215, 1217, 1225, 1229, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1248, 1250, 1251, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1271, 1274, 1280, 1283, 1284, 1287, 1288, 1293, 1294, 1295, 1298, 1304, 1305, 1317, 1322, 1324, 1325, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1427, 1429, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1463, 1466, 1474, 1475, 1476, 1477, 1479, 1482, 1483, 1484, 1491, 1493, 1494, 1495, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1535, 1537, 1538, 1545, 1550, 1551, 1552, 1562, 1564, 1570, 1576, 1580, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1658, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1688, 1689, 1691, 1692, 1694, 1695, 1697, 1707, 1709, 1710, 1711, 1714, 1715, 1716, 1718, 1720, 1722, 1724, 1725, 1731, 1738, 1741, 1746, 1747, 1749, 1750, 1751, 1753, 1755, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1778, 1783, 1786, 1787, 1789, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1810, 1811, 1812, 1825, 1829, 1832, 1836, 1838, 1843, 1845, 1846, 1847, 1849, 1854, 1857, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1873, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1915, 1917, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1951, 1953, 1955], "float": [0, 1, 3, 11, 21, 22, 24, 28, 30, 32, 35, 43, 45, 47, 55, 142, 143, 208, 302, 304, 306, 310, 322, 389, 463, 469, 487, 501, 673, 675, 680, 682, 686, 720, 723, 726, 727, 728, 732, 733, 734, 736, 743, 744, 749, 750, 751, 752, 753, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 773, 780, 781, 782, 787, 805, 807, 818, 826, 827, 840, 845, 846, 849, 850, 853, 868, 896, 897, 909, 910, 918, 925, 928, 932, 933, 948, 953, 954, 958, 966, 1036, 1049, 1060, 1061, 1067, 1068, 1069, 1071, 1084, 1102, 1111, 1112, 1113, 1114, 1116, 1137, 1140, 1149, 1150, 1151, 1154, 1155, 1175, 1182, 1183, 1185, 1186, 1187, 1188, 1191, 1193, 1209, 1210, 1213, 1217, 1219, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1271, 1280, 1282, 1284, 1312, 1316, 1317, 1321, 1323, 1324, 1325, 1328, 1331, 1335, 1339, 1345, 1346, 1347, 1349, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1381, 1382, 1383, 1386, 1387, 1388, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1415, 1419, 1427, 1432, 1433, 1435, 1436, 1441, 1445, 1448, 1449, 1450, 1451, 1452, 1458, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1479, 1480, 1481, 1508, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1528, 1537, 1562, 1569, 1576, 1595, 1607, 1611, 1612, 1615, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1643, 1644, 1648, 1654, 1655, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1691, 1692, 1693, 1695, 1697, 1703, 1706, 1710, 1711, 1712, 1713, 1725, 1729, 1730, 1750, 1751, 1754, 1758, 1767, 1768, 1770, 1771, 1773, 1808, 1811, 1815, 1832, 1834, 1846, 1866, 1867, 1868, 1869, 1870, 1876, 1879, 1881, 1882, 1884, 1885, 1887, 1888, 1892, 1894, 1896, 1900, 1903, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1921, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1942, 1944, 1946, 1949, 1953, 1957], "datatyp": [0, 55, 868, 1190, 1193, 1427, 1609, 1610, 1753, 1903, 1910, 1925], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 21, 22, 25, 28, 29, 30, 31, 32, 34, 38, 39, 41, 42, 45, 47, 48, 50, 52, 53, 54, 55, 86, 87, 102, 118, 119, 122, 134, 135, 138, 139, 148, 149, 154, 155, 185, 186, 187, 196, 223, 228, 232, 233, 234, 244, 263, 264, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 292, 293, 296, 297, 298, 299, 302, 304, 310, 313, 333, 341, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 367, 368, 383, 384, 397, 401, 426, 427, 438, 439, 443, 444, 475, 476, 486, 508, 549, 550, 551, 552, 568, 571, 604, 605, 606, 609, 610, 668, 673, 682, 726, 727, 728, 729, 730, 731, 748, 802, 814, 849, 853, 859, 866, 867, 872, 878, 881, 882, 895, 896, 897, 901, 902, 912, 913, 915, 916, 917, 919, 924, 940, 953, 966, 967, 970, 972, 974, 981, 991, 1001, 1012, 1054, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1086, 1093, 1111, 1112, 1113, 1114, 1117, 1123, 1124, 1125, 1126, 1129, 1133, 1135, 1136, 1137, 1147, 1148, 1149, 1158, 1159, 1161, 1162, 1167, 1168, 1170, 1182, 1191, 1193, 1197, 1205, 1214, 1216, 1217, 1218, 1220, 1221, 1226, 1230, 1244, 1246, 1249, 1250, 1263, 1271, 1272, 1273, 1275, 1277, 1278, 1281, 1282, 1288, 1291, 1292, 1296, 1297, 1301, 1304, 1316, 1318, 1328, 1331, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1364, 1374, 1379, 1381, 1393, 1427, 1428, 1437, 1455, 1470, 1474, 1478, 1501, 1502, 1503, 1528, 1537, 1576, 1595, 1598, 1607, 1611, 1612, 1630, 1652, 1656, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1688, 1689, 1695, 1697, 1725, 1729, 1745, 1750, 1753, 1755, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1808, 1809, 1825, 1831, 1835, 1837, 1843, 1854, 1855, 1860, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1908, 1910, 1912, 1916, 1917, 1921, 1922, 1923, 1926, 1930, 1931, 1932, 1939, 1941, 1942, 1944, 1945, 1947, 1949, 1952, 1953, 1954, 1955], "lower": [0, 1, 8, 13, 22, 24, 30, 45, 781, 783, 847, 919, 924, 931, 932, 933, 935, 1080, 1081, 1153, 1154, 1223, 1230, 1232, 1240, 1241, 1248, 1251, 1256, 1294, 1317, 1324, 1335, 1445, 1501, 1502, 1503, 1574, 1575, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1693, 1708, 1710, 1730, 1745, 1753, 1791, 1834, 1835, 1836, 1866, 1867, 1869, 1885, 1887, 1889, 1900, 1905, 1911, 1916, 1926, 1932, 1949, 1954], "point": [0, 1, 7, 8, 9, 11, 21, 22, 25, 28, 32, 38, 41, 42, 47, 55, 77, 142, 143, 310, 322, 328, 469, 487, 686, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 741, 742, 743, 744, 747, 749, 750, 751, 752, 753, 763, 765, 767, 768, 769, 773, 783, 787, 807, 808, 809, 810, 813, 818, 840, 849, 850, 853, 868, 890, 892, 893, 894, 896, 897, 909, 910, 918, 940, 953, 954, 958, 1015, 1017, 1026, 1030, 1031, 1067, 1068, 1069, 1112, 1113, 1114, 1140, 1146, 1150, 1151, 1155, 1175, 1190, 1193, 1209, 1210, 1217, 1219, 1240, 1241, 1264, 1266, 1271, 1280, 1324, 1331, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1427, 1478, 1479, 1491, 1517, 1526, 1537, 1576, 1595, 1607, 1654, 1663, 1694, 1710, 1711, 1712, 1716, 1725, 1738, 1750, 1751, 1758, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1846, 1847, 1865, 1866, 1868, 1869, 1870, 1873, 1879, 1885, 1887, 1888, 1889, 1892, 1893, 1897, 1900, 1903, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1925, 1928, 1930, 1931, 1932, 1934, 1940, 1941, 1944, 1946, 1947, 1950, 1953, 1956, 1957], "lower_precision_fp": 0, "half": [0, 1, 10, 22, 30, 605, 948, 1080, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1193, 1256, 1262, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1378, 1427, 1521, 1522, 1525, 1660, 1685, 1738, 1807, 1882, 1900, 1903, 1908, 1925, 1927, 1928, 1931], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 21, 22, 24, 29, 30, 39, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 325, 577, 605, 748, 781, 829, 848, 866, 887, 896, 897, 909, 918, 942, 947, 1009, 1010, 1019, 1061, 1066, 1067, 1087, 1109, 1112, 1113, 1119, 1123, 1126, 1127, 1128, 1134, 1150, 1151, 1191, 1193, 1194, 1201, 1204, 1209, 1213, 1240, 1241, 1252, 1265, 1335, 1343, 1371, 1374, 1390, 1391, 1392, 1427, 1428, 1429, 1437, 1438, 1455, 1478, 1520, 1538, 1594, 1598, 1607, 1608, 1609, 1610, 1615, 1640, 1658, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1703, 1718, 1722, 1741, 1750, 1753, 1811, 1822, 1847, 1857, 1862, 1864, 1865, 1866, 1868, 1869, 1876, 1881, 1882, 1883, 1888, 1889, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1919, 1921, 1922, 1925, 1927, 1928, 1932, 1933, 1935, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956], "linear": [0, 2, 9, 22, 24, 25, 28, 30, 45, 47, 49, 51, 53, 55, 56, 419, 460, 461, 462, 463, 464, 467, 699, 708, 716, 717, 753, 780, 781, 782, 784, 802, 842, 846, 847, 849, 850, 891, 933, 972, 1066, 1122, 1124, 1132, 1134, 1146, 1193, 1197, 1205, 1219, 1225, 1230, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1256, 1284, 1324, 1343, 1349, 1369, 1377, 1378, 1386, 1412, 1427, 1429, 1442, 1444, 1446, 1454, 1456, 1463, 1466, 1470, 1472, 1474, 1477, 1479, 1515, 1524, 1525, 1537, 1571, 1579, 1584, 1595, 1598, 1607, 1614, 1615, 1619, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1651, 1688, 1691, 1699, 1710, 1846, 1857, 1865, 1867, 1868, 1874, 1877, 1884, 1887, 1892, 1893, 1894, 1896, 1900, 1905, 1908, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1921, 1952, 1954], "layer": [0, 8, 22, 24, 26, 28, 29, 47, 50, 722, 723, 748, 829, 846, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1412, 1414, 1420, 1421, 1422, 1433, 1434, 1442, 1444, 1455, 1466, 1470, 1471, 1472, 1473, 1474, 1540, 1607, 1614, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1865, 1887, 1892, 1894, 1896, 1899, 1900, 1905, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1925, 1935], "convolut": [0, 1, 2, 45, 726, 727, 728, 729, 730, 731, 760, 761, 762, 940, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1403, 1404, 1405, 1406, 1407, 1408, 1439, 1440, 1445, 1475, 1476, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1525, 1526, 1753, 1865, 1867, 1877, 1887, 1891, 1892, 1897, 1900, 1911, 1915, 1916, 1919, 1949], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 86, 139, 222, 243, 308, 310, 324, 325, 328, 366, 391, 436, 459, 469, 474, 487, 501, 505, 532, 568, 577, 605, 668, 677, 678, 679, 685, 723, 744, 748, 749, 751, 752, 753, 767, 770, 771, 773, 774, 775, 780, 781, 782, 783, 784, 787, 802, 803, 804, 805, 807, 808, 809, 810, 813, 828, 842, 846, 847, 848, 849, 850, 853, 862, 863, 874, 875, 876, 878, 881, 887, 889, 890, 891, 892, 893, 894, 896, 897, 909, 918, 919, 921, 922, 924, 927, 940, 948, 953, 954, 957, 958, 968, 969, 970, 972, 973, 975, 980, 992, 1003, 1009, 1012, 1013, 1023, 1033, 1040, 1049, 1054, 1058, 1061, 1066, 1067, 1068, 1069, 1082, 1083, 1084, 1085, 1087, 1089, 1094, 1096, 1102, 1105, 1107, 1108, 1112, 1113, 1114, 1122, 1123, 1128, 1130, 1132, 1133, 1134, 1138, 1146, 1150, 1151, 1153, 1155, 1168, 1170, 1182, 1183, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1197, 1200, 1201, 1204, 1207, 1209, 1210, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1260, 1263, 1264, 1265, 1266, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1285, 1286, 1288, 1291, 1294, 1295, 1296, 1299, 1301, 1305, 1317, 1321, 1322, 1323, 1324, 1325, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1444, 1455, 1458, 1459, 1460, 1466, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1491, 1497, 1498, 1499, 1509, 1510, 1517, 1518, 1519, 1520, 1526, 1537, 1538, 1561, 1564, 1566, 1569, 1576, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1619, 1626, 1640, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1687, 1690, 1691, 1703, 1709, 1710, 1716, 1725, 1728, 1729, 1736, 1738, 1749, 1750, 1753, 1783, 1784, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1806, 1807, 1810, 1811, 1820, 1822, 1826, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1846, 1847, 1849, 1851, 1852, 1853, 1857, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957], "much": [0, 4, 7, 9, 15, 21, 22, 45, 139, 881, 890, 895, 1023, 1229, 1230, 1257, 1266, 1371, 1607, 1630, 1691, 1866, 1889, 1892, 1897, 1900, 1905, 1913, 1914, 1921, 1922, 1925, 1942, 1944, 1947], "faster": [0, 2, 8, 11, 21, 22, 24, 890, 896, 897, 1122, 1223, 1224, 1229, 1230, 1234, 1239, 1247, 1249, 1251, 1254, 1257, 1259, 1263, 1266, 1443, 1460, 1566, 1582, 1607, 1611, 1612, 1614, 1666, 1667, 1678, 1753, 1793, 1794, 1795, 1797, 1798, 1877, 1889, 1892, 1897, 1912, 1916, 1925, 1930, 1936, 1941, 1944, 1950], "reduct": [0, 2, 24, 47, 310, 501, 505, 940, 1239, 1271, 1324, 1343, 1344, 1350, 1361, 1363, 1371, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1507, 1509, 1510, 1518, 1523, 1534, 1535, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1593, 1607, 1710, 1788, 1867, 1882, 1893, 1897, 1913, 1916, 1948, 1954], "often": [0, 2, 4, 7, 8, 14, 21, 24, 30, 42, 47, 50, 55, 139, 881, 895, 1209, 1240, 1241, 1250, 1299, 1370, 1390, 1391, 1392, 1491, 1499, 1517, 1526, 1598, 1614, 1693, 1869, 1889, 1892, 1896, 1899, 1900, 1902, 1903, 1904, 1908, 1913, 1921, 1930, 1943, 1944, 1952, 1954], "requir": [0, 1, 5, 8, 9, 14, 15, 21, 22, 24, 25, 26, 28, 30, 32, 40, 41, 45, 47, 50, 52, 54, 55, 108, 139, 210, 324, 446, 476, 484, 501, 503, 505, 548, 781, 783, 811, 814, 868, 877, 881, 886, 889, 890, 891, 892, 893, 894, 895, 940, 967, 1022, 1066, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1107, 1108, 1134, 1135, 1207, 1233, 1264, 1266, 1280, 1363, 1370, 1371, 1470, 1471, 1472, 1473, 1474, 1476, 1518, 1576, 1598, 1607, 1608, 1617, 1619, 1621, 1669, 1679, 1697, 1795, 1807, 1846, 1857, 1864, 1866, 1869, 1871, 1876, 1877, 1881, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1908, 1909, 1910, 1913, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1932, 1935, 1936, 1939, 1940, 1941, 1943, 1944, 1950, 1952, 1955], "dynam": [0, 13, 14, 15, 21, 56, 57, 58, 61, 62, 63, 66, 67, 668, 717, 721, 748, 749, 750, 751, 752, 753, 782, 803, 814, 817, 832, 838, 839, 840, 841, 846, 847, 940, 968, 1201, 1207, 1209, 1265, 1614, 1868, 1869, 1870, 1887, 1892, 1900, 1903, 1907, 1908, 1910, 1912, 1913, 1917, 1936, 1941, 1944, 1951, 1954], "rang": [0, 1, 3, 21, 24, 25, 28, 30, 41, 42, 44, 45, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 290, 469, 672, 749, 751, 753, 783, 807, 808, 809, 810, 811, 813, 814, 815, 873, 910, 935, 1027, 1028, 1036, 1066, 1116, 1132, 1153, 1154, 1155, 1260, 1271, 1286, 1295, 1312, 1324, 1335, 1363, 1373, 1375, 1376, 1380, 1386, 1398, 1417, 1429, 1434, 1438, 1444, 1460, 1461, 1462, 1466, 1521, 1522, 1526, 1582, 1607, 1612, 1681, 1682, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1710, 1790, 1845, 1866, 1867, 1869, 1889, 1891, 1892, 1896, 1900, 1902, 1903, 1910, 1911, 1912, 1915, 1916, 1919, 1920, 1926, 1928, 1930, 1931, 1932, 1933, 1940, 1941, 1942, 1947, 1952, 1954], "tri": [0, 2, 3, 7, 21, 30, 34, 55, 76, 568, 1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1868, 1869, 1881, 1892, 1896, 1910, 1913, 1943, 1944, 1946], "match": [0, 1, 3, 13, 24, 26, 28, 30, 41, 45, 47, 55, 56, 63, 64, 73, 139, 302, 304, 310, 461, 462, 487, 488, 568, 571, 681, 687, 767, 781, 782, 783, 842, 866, 881, 895, 896, 897, 966, 969, 981, 982, 983, 1012, 1058, 1066, 1122, 1134, 1170, 1193, 1207, 1209, 1226, 1265, 1287, 1362, 1371, 1427, 1433, 1479, 1498, 1499, 1537, 1563, 1570, 1576, 1595, 1607, 1619, 1649, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1711, 1745, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1827, 1843, 1857, 1866, 1869, 1876, 1882, 1884, 1889, 1890, 1892, 1894, 1900, 1905, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1921, 1928, 1932, 1934, 1944, 1947, 1953], "each": [0, 1, 2, 5, 9, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 39, 42, 43, 44, 45, 47, 48, 50, 52, 53, 55, 69, 70, 72, 75, 86, 108, 142, 143, 387, 391, 481, 501, 503, 505, 533, 595, 605, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 674, 681, 683, 684, 687, 723, 748, 780, 828, 829, 847, 849, 850, 853, 865, 874, 875, 876, 877, 879, 880, 881, 886, 895, 908, 911, 920, 924, 928, 929, 931, 934, 938, 940, 942, 958, 978, 979, 983, 1012, 1015, 1017, 1023, 1025, 1029, 1032, 1038, 1043, 1044, 1045, 1046, 1049, 1050, 1061, 1064, 1066, 1083, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1107, 1108, 1110, 1115, 1119, 1124, 1125, 1129, 1133, 1134, 1135, 1146, 1152, 1154, 1155, 1156, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1193, 1209, 1210, 1215, 1247, 1265, 1266, 1281, 1283, 1291, 1293, 1294, 1295, 1296, 1299, 1301, 1308, 1309, 1317, 1323, 1325, 1335, 1340, 1343, 1344, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1407, 1408, 1412, 1414, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1455, 1458, 1459, 1461, 1466, 1469, 1475, 1476, 1478, 1496, 1498, 1499, 1504, 1505, 1506, 1509, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1536, 1538, 1561, 1562, 1564, 1566, 1569, 1576, 1589, 1598, 1603, 1604, 1607, 1640, 1641, 1643, 1653, 1654, 1655, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1702, 1706, 1707, 1710, 1717, 1725, 1730, 1731, 1736, 1740, 1745, 1753, 1758, 1769, 1775, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1810, 1811, 1826, 1828, 1829, 1832, 1843, 1844, 1851, 1857, 1858, 1864, 1868, 1869, 1875, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1956], "its": [0, 1, 4, 5, 7, 8, 9, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 41, 42, 43, 45, 47, 54, 55, 56, 58, 70, 71, 72, 139, 446, 475, 476, 492, 501, 503, 505, 571, 572, 573, 605, 668, 811, 814, 862, 863, 864, 866, 867, 868, 881, 884, 896, 901, 902, 932, 933, 947, 948, 954, 958, 973, 1001, 1003, 1012, 1049, 1053, 1056, 1066, 1069, 1114, 1119, 1123, 1124, 1125, 1128, 1133, 1154, 1155, 1159, 1173, 1193, 1204, 1229, 1230, 1234, 1239, 1246, 1248, 1251, 1252, 1257, 1263, 1288, 1315, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1390, 1391, 1392, 1427, 1428, 1437, 1458, 1466, 1474, 1526, 1537, 1564, 1570, 1598, 1603, 1604, 1608, 1609, 1610, 1615, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1641, 1647, 1651, 1655, 1661, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1700, 1725, 1729, 1733, 1734, 1750, 1751, 1755, 1775, 1785, 1812, 1831, 1832, 1834, 1842, 1855, 1866, 1868, 1869, 1873, 1877, 1879, 1881, 1888, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1921, 1922, 1923, 1925, 1928, 1929, 1931, 1934, 1935, 1936, 1939, 1941, 1942, 1943, 1944, 1947, 1948, 1950, 1956], "appropri": [0, 7, 8, 9, 24, 25, 30, 47, 54, 55, 882, 958, 1012, 1209, 1753, 1869, 1870, 1873, 1883, 1892, 1897, 1902, 1905, 1908, 1914, 1916, 1919, 1921, 1922, 1923, 1927, 1944, 1947, 1955], "ordinarili": [0, 1888], "train": [0, 1, 13, 15, 21, 22, 24, 25, 27, 28, 32, 39, 40, 41, 42, 47, 50, 51, 55, 700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 787, 789, 826, 827, 843, 844, 845, 847, 849, 850, 851, 1011, 1012, 1015, 1017, 1024, 1132, 1168, 1193, 1198, 1205, 1208, 1209, 1335, 1339, 1345, 1346, 1347, 1363, 1364, 1365, 1370, 1371, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1433, 1434, 1445, 1466, 1474, 1492, 1496, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1574, 1575, 1576, 1607, 1615, 1617, 1619, 1648, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1864, 1866, 1867, 1877, 1879, 1887, 1889, 1892, 1893, 1896, 1901, 1903, 1905, 1907, 1910, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1930, 1936, 1938, 1939, 1940, 1941, 1946, 1948, 1949, 1951, 1954], "gradscal": [0, 1888, 1892], "togeth": [0, 3, 9, 21, 24, 29, 30, 48, 53, 55, 748, 1009, 1066, 1122, 1124, 1128, 1132, 1133, 1138, 1233, 1379, 1397, 1442, 1537, 1607, 1611, 1832, 1877, 1888, 1894, 1895, 1896, 1899, 1900, 1916, 1921, 1922, 1923, 1925, 1930, 1940, 1943, 1944, 1950], "shown": [0, 13, 22, 33, 42, 1009, 1019, 1399, 1619, 1661, 1691, 1758, 1866, 1869, 1888, 1892, 1894, 1896, 1900, 1908, 1914, 1916, 1925, 1940, 1941, 1945], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 56, 58, 63, 64, 77, 180, 197, 222, 231, 243, 249, 278, 300, 302, 304, 306, 310, 324, 341, 390, 391, 433, 434, 435, 436, 437, 459, 469, 471, 475, 476, 481, 484, 487, 501, 503, 505, 511, 525, 532, 546, 548, 568, 569, 571, 572, 573, 574, 575, 576, 577, 595, 605, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 708, 716, 717, 722, 726, 727, 728, 729, 730, 731, 733, 734, 736, 744, 745, 746, 748, 749, 750, 751, 752, 753, 760, 761, 762, 773, 780, 781, 782, 784, 785, 798, 799, 800, 801, 802, 803, 804, 805, 812, 826, 842, 847, 848, 849, 850, 853, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 899, 901, 902, 908, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 940, 948, 951, 952, 953, 954, 955, 956, 957, 958, 966, 1009, 1010, 1015, 1017, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1130, 1132, 1134, 1135, 1136, 1137, 1140, 1146, 1149, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1163, 1167, 1168, 1170, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1528, 1561, 1563, 1564, 1567, 1568, 1576, 1595, 1598, 1607, 1614, 1615, 1617, 1619, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1700, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1745, 1747, 1748, 1749, 1750, 1751, 1754, 1755, 1758, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1783, 1785, 1786, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1806, 1808, 1810, 1811, 1813, 1814, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1873, 1875, 1876, 1878, 1879, 1882, 1883, 1884, 1887, 1889, 1890, 1891, 1892, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955], "recip": [0, 3, 28, 1427, 1607, 1621, 1888, 1900, 1943], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 24, 28, 30, 32, 38, 45, 47, 48, 49, 51, 52, 54, 55, 56, 61, 64, 70, 73, 74, 75, 469, 533, 882, 889, 969, 991, 1012, 1054, 1056, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1122, 1123, 1127, 1128, 1130, 1133, 1134, 1193, 1196, 1197, 1204, 1206, 1233, 1248, 1249, 1251, 1265, 1266, 1283, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1427, 1501, 1502, 1503, 1526, 1598, 1607, 1640, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1857, 1865, 1869, 1884, 1888, 1889, 1892, 1894, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1910, 1913, 1914, 1921, 1923, 1925, 1939, 1941, 1942, 1943, 1944, 1945], "modular": [0, 1888, 1908], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 20, 21, 22, 24, 28, 30, 31, 32, 34, 38, 40, 41, 45, 47, 48, 52, 54, 55, 73, 185, 210, 243, 302, 310, 446, 503, 505, 544, 591, 605, 668, 677, 803, 804, 805, 849, 880, 887, 889, 891, 895, 896, 905, 911, 922, 934, 940, 951, 952, 954, 956, 967, 969, 970, 978, 991, 1001, 1002, 1003, 1009, 1010, 1012, 1023, 1025, 1029, 1043, 1044, 1066, 1105, 1109, 1114, 1117, 1119, 1126, 1127, 1129, 1155, 1190, 1193, 1196, 1197, 1203, 1204, 1206, 1207, 1209, 1215, 1224, 1225, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1249, 1251, 1252, 1255, 1256, 1257, 1263, 1265, 1266, 1271, 1288, 1298, 1312, 1335, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1393, 1397, 1423, 1424, 1425, 1427, 1434, 1442, 1472, 1474, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1528, 1537, 1543, 1564, 1576, 1594, 1595, 1596, 1597, 1598, 1607, 1614, 1616, 1617, 1619, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1709, 1729, 1732, 1750, 1753, 1760, 1778, 1791, 1807, 1811, 1834, 1846, 1864, 1865, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1883, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1913, 1915, 1916, 1917, 1919, 1921, 1923, 1925, 1927, 1933, 1939, 1942, 1943, 1944, 1947, 1948, 1952, 1954, 1955, 1956], "separ": [0, 1, 3, 9, 14, 21, 24, 28, 41, 42, 47, 48, 50, 53, 54, 55, 723, 748, 878, 1066, 1083, 1085, 1091, 1092, 1095, 1096, 1101, 1103, 1122, 1204, 1239, 1254, 1382, 1390, 1391, 1392, 1433, 1435, 1545, 1655, 1864, 1867, 1869, 1875, 1888, 1889, 1891, 1892, 1895, 1905, 1908, 1912, 1913, 1922, 1925, 1926, 1930, 1939, 1954], "desir": [0, 1, 3, 21, 24, 30, 47, 55, 77, 144, 159, 161, 164, 167, 168, 169, 184, 195, 198, 229, 243, 256, 286, 314, 382, 433, 434, 435, 436, 437, 485, 487, 488, 508, 513, 532, 533, 534, 548, 568, 571, 591, 592, 605, 781, 853, 867, 909, 918, 937, 1013, 1014, 1037, 1038, 1047, 1048, 1067, 1068, 1069, 1079, 1084, 1102, 1119, 1120, 1121, 1150, 1151, 1193, 1213, 1264, 1280, 1286, 1293, 1307, 1313, 1322, 1324, 1325, 1343, 1344, 1427, 1477, 1499, 1545, 1582, 1583, 1598, 1640, 1654, 1658, 1659, 1700, 1707, 1710, 1711, 1712, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1759, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1810, 1825, 1836, 1838, 1862, 1863, 1882, 1883, 1884, 1888, 1889, 1892, 1895, 1898, 1900, 1905, 1914, 1920, 1921, 1926, 1927, 1928, 1954], "As": [0, 1, 8, 22, 24, 26, 30, 45, 47, 50, 51, 55, 243, 922, 1066, 1197, 1225, 1229, 1230, 1240, 1241, 1252, 1257, 1366, 1367, 1368, 1372, 1393, 1427, 1458, 1594, 1653, 1659, 1863, 1866, 1868, 1869, 1876, 1884, 1889, 1892, 1894, 1896, 1900, 1903, 1906, 1907, 1908, 1910, 1913, 1914, 1920, 1921, 1922, 1923, 1925, 1936, 1938, 1940, 1944, 1945, 1946, 1947, 1954], "section": [0, 1, 7, 21, 30, 32, 33, 51, 55, 75, 108, 1023, 1066, 1146, 1364, 1379, 1397, 1425, 1442, 1509, 1643, 1826, 1866, 1867, 1868, 1869, 1870, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1922, 1930, 1940, 1941, 1944, 1945, 1946, 1947, 1948, 1952, 1954], "infer": [0, 1, 2, 3, 5, 11, 13, 15, 30, 41, 47, 568, 605, 849, 850, 853, 867, 868, 983, 1119, 1120, 1155, 1168, 1177, 1191, 1194, 1203, 1208, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1433, 1479, 1537, 1563, 1598, 1652, 1680, 1691, 1725, 1732, 1750, 1751, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1842, 1865, 1866, 1868, 1869, 1873, 1882, 1884, 1892, 1900, 1910, 1915, 1916, 1917, 1919, 1925, 1936, 1938, 1939, 1942, 1944, 1946, 1951], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 45, 47, 51, 52, 54, 55, 71, 72, 73, 108, 243, 300, 310, 312, 324, 341, 433, 434, 435, 436, 437, 446, 469, 474, 476, 501, 503, 505, 545, 571, 572, 573, 575, 576, 602, 605, 668, 683, 684, 723, 726, 727, 728, 729, 731, 760, 761, 762, 767, 773, 774, 775, 779, 781, 789, 802, 805, 808, 809, 812, 816, 830, 837, 846, 866, 882, 885, 886, 887, 888, 889, 891, 896, 909, 910, 918, 940, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 972, 979, 981, 983, 1001, 1009, 1010, 1012, 1033, 1063, 1067, 1069, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1112, 1113, 1117, 1118, 1123, 1134, 1146, 1150, 1151, 1155, 1163, 1174, 1182, 1191, 1193, 1196, 1197, 1205, 1209, 1210, 1213, 1224, 1229, 1230, 1232, 1233, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1252, 1254, 1255, 1257, 1258, 1265, 1266, 1283, 1288, 1335, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1374, 1397, 1399, 1427, 1430, 1432, 1433, 1435, 1443, 1466, 1474, 1478, 1479, 1509, 1518, 1520, 1526, 1537, 1564, 1594, 1595, 1598, 1601, 1602, 1603, 1604, 1607, 1609, 1610, 1620, 1640, 1641, 1642, 1654, 1662, 1663, 1666, 1667, 1669, 1680, 1683, 1687, 1690, 1691, 1693, 1697, 1709, 1718, 1722, 1724, 1726, 1749, 1753, 1754, 1756, 1760, 1785, 1788, 1792, 1802, 1807, 1811, 1825, 1836, 1838, 1843, 1844, 1846, 1847, 1849, 1854, 1855, 1856, 1857, 1864, 1867, 1868, 1869, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1956], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 29, 30, 32, 38, 39, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 68, 69, 70, 185, 210, 243, 278, 302, 304, 310, 324, 341, 459, 469, 481, 487, 501, 503, 505, 571, 577, 591, 605, 674, 675, 676, 677, 678, 681, 687, 722, 726, 727, 728, 729, 730, 731, 748, 780, 781, 782, 802, 846, 847, 880, 896, 908, 912, 914, 915, 917, 920, 929, 940, 1001, 1015, 1017, 1023, 1047, 1048, 1049, 1066, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1110, 1132, 1134, 1135, 1146, 1155, 1170, 1193, 1204, 1205, 1207, 1209, 1210, 1225, 1229, 1230, 1233, 1236, 1237, 1238, 1239, 1241, 1250, 1251, 1253, 1257, 1266, 1273, 1281, 1288, 1294, 1298, 1335, 1339, 1343, 1344, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1373, 1374, 1379, 1381, 1388, 1393, 1397, 1399, 1427, 1430, 1431, 1432, 1433, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1463, 1477, 1478, 1482, 1483, 1484, 1499, 1501, 1502, 1503, 1526, 1537, 1562, 1564, 1576, 1584, 1598, 1603, 1604, 1607, 1617, 1640, 1641, 1642, 1644, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1693, 1738, 1747, 1785, 1786, 1796, 1802, 1811, 1826, 1828, 1832, 1840, 1843, 1847, 1849, 1855, 1856, 1857, 1864, 1865, 1866, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1951, 1953, 1954, 1955], "api": [0, 2, 3, 5, 8, 9, 22, 24, 25, 29, 32, 33, 34, 38, 39, 40, 41, 42, 47, 48, 51, 54, 56, 61, 64, 65, 66, 222, 788, 812, 849, 882, 883, 884, 892, 929, 967, 1001, 1002, 1003, 1009, 1010, 1012, 1039, 1070, 1110, 1123, 1126, 1127, 1129, 1134, 1204, 1205, 1207, 1312, 1607, 1649, 1651, 1652, 1660, 1738, 1749, 1755, 1840, 1849, 1857, 1864, 1873, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1889, 1893, 1905, 1907, 1917, 1921, 1922, 1925, 1928, 1930, 1933, 1936, 1939, 1941, 1946, 1955], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24, 28, 29, 30, 31, 38, 41, 45, 47, 51, 52, 53, 54, 55, 56, 63, 64, 76, 143, 207, 210, 211, 243, 312, 501, 503, 505, 511, 531, 602, 729, 730, 731, 748, 788, 802, 849, 868, 877, 878, 887, 909, 918, 932, 933, 940, 945, 966, 1009, 1012, 1023, 1047, 1048, 1066, 1070, 1086, 1117, 1123, 1129, 1133, 1134, 1135, 1138, 1140, 1150, 1151, 1155, 1168, 1193, 1196, 1197, 1200, 1203, 1207, 1209, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1295, 1301, 1315, 1323, 1335, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1371, 1374, 1379, 1393, 1397, 1427, 1434, 1442, 1456, 1458, 1466, 1475, 1476, 1478, 1504, 1505, 1506, 1526, 1563, 1579, 1598, 1607, 1617, 1619, 1629, 1631, 1633, 1634, 1635, 1636, 1652, 1666, 1667, 1681, 1687, 1691, 1694, 1697, 1722, 1729, 1741, 1751, 1766, 1767, 1784, 1788, 1802, 1811, 1820, 1822, 1825, 1831, 1832, 1843, 1844, 1857, 1860, 1864, 1865, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956], "arg": [0, 1, 3, 4, 5, 14, 21, 22, 24, 28, 30, 32, 33, 39, 40, 42, 43, 44, 45, 47, 54, 55, 56, 61, 62, 63, 64, 568, 591, 668, 720, 735, 737, 739, 740, 741, 742, 748, 750, 751, 812, 849, 878, 880, 885, 886, 944, 1012, 1122, 1126, 1127, 1128, 1134, 1193, 1196, 1283, 1343, 1344, 1361, 1363, 1387, 1389, 1394, 1416, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1455, 1457, 1458, 1459, 1461, 1465, 1466, 1467, 1468, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1598, 1607, 1621, 1626, 1640, 1647, 1649, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1812, 1844, 1854, 1857, 1864, 1867, 1869, 1870, 1881, 1883, 1889, 1892, 1893, 1894, 1895, 1902, 1908, 1910, 1913, 1914, 1921, 1922, 1923, 1927, 1935, 1940, 1941, 1943, 1944, 1947, 1953, 1954, 1955], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 86, 139, 142, 143, 144, 159, 161, 164, 167, 168, 169, 179, 180, 184, 185, 195, 197, 198, 207, 212, 222, 229, 243, 244, 256, 279, 286, 300, 302, 304, 308, 310, 312, 314, 317, 318, 319, 320, 321, 322, 324, 325, 327, 329, 330, 331, 332, 341, 382, 389, 391, 395, 436, 446, 459, 460, 469, 471, 474, 475, 476, 481, 483, 484, 485, 486, 487, 488, 491, 492, 501, 503, 505, 508, 512, 513, 525, 531, 532, 533, 545, 548, 568, 569, 571, 572, 573, 575, 576, 577, 591, 592, 595, 602, 605, 606, 608, 612, 668, 669, 671, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 756, 757, 760, 761, 762, 763, 764, 765, 766, 767, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 789, 790, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 812, 814, 815, 821, 826, 827, 828, 845, 846, 847, 849, 850, 853, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 905, 908, 909, 910, 911, 913, 916, 918, 920, 921, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 947, 951, 952, 953, 954, 955, 956, 957, 958, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 981, 983, 986, 987, 988, 990, 994, 995, 998, 1001, 1002, 1003, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1146, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1163, 1167, 1168, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1315, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1458, 1459, 1460, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1537, 1538, 1543, 1545, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1579, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1716, 1718, 1719, 1720, 1722, 1723, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1740, 1741, 1745, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1778, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1814, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1842, 1843, 1844, 1846, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1942, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957], "equival": [0, 3, 5, 13, 21, 22, 28, 30, 34, 41, 42, 45, 47, 51, 52, 55, 71, 144, 159, 161, 164, 167, 168, 169, 229, 244, 256, 286, 308, 314, 382, 436, 446, 486, 488, 513, 592, 598, 605, 606, 608, 680, 732, 736, 743, 745, 747, 773, 774, 775, 864, 878, 921, 923, 926, 928, 931, 938, 939, 1054, 1058, 1061, 1064, 1065, 1066, 1068, 1083, 1085, 1088, 1091, 1092, 1095, 1096, 1098, 1101, 1103, 1121, 1123, 1126, 1128, 1134, 1156, 1158, 1170, 1192, 1193, 1204, 1209, 1210, 1213, 1225, 1246, 1250, 1258, 1263, 1295, 1300, 1315, 1322, 1335, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1382, 1388, 1390, 1391, 1392, 1393, 1397, 1399, 1427, 1458, 1466, 1478, 1480, 1545, 1566, 1576, 1595, 1596, 1597, 1607, 1659, 1680, 1716, 1719, 1723, 1747, 1753, 1761, 1783, 1790, 1803, 1813, 1814, 1820, 1825, 1844, 1857, 1858, 1859, 1863, 1866, 1868, 1869, 1889, 1908, 1910, 1913, 1917, 1925, 1926, 1928, 1931, 1932, 1940, 1941, 1947, 1955, 1957], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 41, 42, 45, 47, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 75, 76, 300, 310, 446, 571, 605, 673, 674, 675, 677, 681, 683, 684, 687, 717, 726, 727, 728, 760, 761, 762, 767, 773, 774, 775, 780, 781, 782, 783, 789, 805, 821, 847, 849, 850, 880, 882, 887, 896, 897, 908, 909, 913, 916, 918, 920, 932, 933, 940, 953, 966, 968, 1009, 1010, 1012, 1029, 1061, 1063, 1066, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1129, 1133, 1150, 1151, 1163, 1190, 1197, 1205, 1209, 1213, 1214, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1284, 1288, 1292, 1297, 1298, 1316, 1355, 1356, 1357, 1358, 1359, 1360, 1367, 1370, 1371, 1374, 1394, 1414, 1432, 1433, 1466, 1474, 1476, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1518, 1520, 1526, 1537, 1543, 1576, 1594, 1595, 1597, 1607, 1654, 1659, 1663, 1666, 1667, 1669, 1697, 1709, 1728, 1729, 1750, 1753, 1754, 1784, 1785, 1788, 1791, 1808, 1811, 1834, 1836, 1838, 1847, 1849, 1854, 1855, 1856, 1863, 1864, 1865, 1866, 1868, 1870, 1871, 1873, 1877, 1879, 1881, 1885, 1889, 1890, 1891, 1892, 1893, 1894, 1898, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1953, 1954, 1955], "now": [0, 1, 13, 24, 29, 31, 38, 42, 43, 45, 47, 52, 55, 210, 484, 888, 895, 981, 1009, 1030, 1031, 1117, 1140, 1190, 1191, 1197, 1209, 1243, 1424, 1443, 1479, 1598, 1619, 1630, 1651, 1669, 1750, 1802, 1807, 1849, 1866, 1876, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1900, 1901, 1910, 1913, 1916, 1922, 1923, 1925, 1939, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1953, 1954, 1955, 1956], "new": [0, 1, 5, 8, 14, 18, 21, 23, 24, 26, 30, 32, 41, 42, 45, 47, 48, 51, 52, 53, 54, 55, 75, 210, 243, 300, 436, 471, 475, 484, 487, 532, 568, 571, 605, 668, 672, 748, 779, 802, 807, 842, 867, 869, 870, 871, 872, 873, 883, 901, 902, 923, 924, 927, 929, 938, 942, 953, 955, 956, 970, 972, 1050, 1054, 1076, 1080, 1081, 1107, 1108, 1110, 1123, 1132, 1134, 1163, 1167, 1168, 1182, 1183, 1186, 1189, 1193, 1200, 1205, 1207, 1267, 1268, 1269, 1270, 1287, 1326, 1329, 1345, 1346, 1347, 1379, 1390, 1391, 1392, 1427, 1428, 1433, 1437, 1466, 1477, 1479, 1537, 1600, 1603, 1604, 1605, 1606, 1607, 1615, 1619, 1621, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1644, 1648, 1651, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1693, 1717, 1727, 1728, 1732, 1733, 1734, 1740, 1741, 1745, 1750, 1751, 1761, 1763, 1774, 1776, 1778, 1800, 1801, 1804, 1821, 1823, 1824, 1840, 1842, 1845, 1846, 1855, 1856, 1857, 1864, 1866, 1868, 1869, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1889, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1915, 1916, 1919, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1935, 1939, 1941, 1942, 1944, 1947, 1953, 1954], "version": [0, 1, 2, 5, 8, 13, 14, 20, 22, 24, 26, 30, 42, 45, 47, 50, 51, 55, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 110, 112, 114, 116, 119, 120, 122, 130, 132, 135, 136, 138, 141, 147, 149, 151, 153, 155, 157, 166, 175, 183, 187, 190, 192, 202, 204, 220, 225, 227, 233, 236, 238, 240, 242, 246, 251, 258, 260, 262, 266, 268, 272, 274, 281, 283, 285, 293, 295, 297, 299, 301, 303, 305, 307, 345, 347, 349, 351, 353, 355, 357, 360, 362, 364, 365, 372, 374, 376, 378, 380, 384, 388, 390, 408, 411, 414, 416, 427, 429, 431, 439, 444, 454, 457, 473, 478, 480, 496, 499, 500, 502, 504, 510, 515, 517, 520, 522, 524, 537, 539, 541, 544, 550, 552, 559, 563, 565, 581, 584, 586, 588, 590, 600, 610, 723, 724, 725, 737, 738, 739, 740, 741, 742, 763, 764, 765, 766, 768, 772, 773, 792, 793, 794, 827, 835, 843, 844, 846, 1012, 1122, 1150, 1168, 1190, 1193, 1196, 1197, 1201, 1204, 1223, 1230, 1236, 1237, 1241, 1242, 1255, 1288, 1326, 1344, 1397, 1427, 1428, 1442, 1479, 1491, 1516, 1526, 1533, 1542, 1573, 1575, 1590, 1591, 1595, 1599, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1648, 1649, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1742, 1743, 1744, 1802, 1805, 1806, 1807, 1811, 1831, 1846, 1852, 1853, 1864, 1882, 1883, 1889, 1890, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1908, 1910, 1912, 1913, 1915, 1919, 1925, 1932, 1933, 1942, 1944, 1945, 1952, 1954, 1956], "1": [0, 1, 2, 3, 11, 13, 14, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 125, 140, 141, 162, 180, 194, 197, 214, 216, 217, 218, 222, 231, 243, 247, 252, 275, 278, 300, 301, 302, 304, 306, 310, 341, 366, 390, 391, 433, 435, 436, 442, 459, 469, 471, 475, 476, 481, 484, 487, 501, 503, 505, 525, 526, 530, 532, 542, 543, 544, 546, 548, 549, 550, 551, 552, 569, 571, 572, 573, 575, 576, 595, 596, 603, 605, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 718, 719, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 739, 740, 741, 744, 745, 746, 748, 758, 760, 761, 762, 763, 766, 770, 771, 773, 784, 796, 797, 807, 808, 809, 810, 813, 815, 843, 849, 850, 853, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 882, 885, 887, 888, 889, 890, 891, 892, 893, 894, 901, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 941, 948, 951, 952, 953, 954, 955, 956, 957, 958, 962, 966, 978, 1009, 1010, 1025, 1029, 1036, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1164, 1167, 1168, 1170, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1197, 1199, 1204, 1205, 1209, 1210, 1213, 1214, 1215, 1217, 1218, 1219, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1530, 1532, 1533, 1534, 1535, 1536, 1544, 1546, 1550, 1551, 1552, 1558, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1570, 1574, 1575, 1576, 1577, 1578, 1580, 1582, 1583, 1584, 1586, 1591, 1592, 1593, 1594, 1595, 1598, 1607, 1614, 1615, 1619, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1700, 1702, 1703, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1745, 1748, 1749, 1750, 1751, 1752, 1754, 1755, 1758, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1778, 1779, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1846, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1867, 1868, 1869, 1870, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1957], "10": [0, 1, 13, 20, 21, 22, 24, 25, 30, 31, 41, 43, 45, 56, 61, 63, 64, 302, 310, 324, 459, 501, 548, 569, 571, 572, 573, 673, 674, 685, 722, 733, 734, 748, 749, 750, 751, 753, 908, 920, 930, 933, 934, 938, 958, 1045, 1046, 1047, 1048, 1049, 1064, 1066, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1109, 1117, 1136, 1146, 1156, 1182, 1198, 1204, 1205, 1211, 1216, 1219, 1246, 1248, 1249, 1264, 1266, 1268, 1273, 1275, 1276, 1277, 1278, 1280, 1288, 1299, 1317, 1333, 1334, 1335, 1337, 1338, 1344, 1347, 1350, 1351, 1354, 1357, 1360, 1370, 1371, 1379, 1380, 1381, 1382, 1392, 1397, 1398, 1399, 1424, 1428, 1429, 1434, 1437, 1438, 1442, 1444, 1466, 1470, 1471, 1472, 1473, 1474, 1478, 1484, 1503, 1506, 1510, 1517, 1518, 1528, 1598, 1607, 1630, 1638, 1652, 1655, 1661, 1665, 1685, 1691, 1693, 1711, 1712, 1720, 1745, 1753, 1758, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1783, 1799, 1811, 1812, 1822, 1826, 1827, 1830, 1832, 1846, 1858, 1864, 1866, 1867, 1868, 1869, 1870, 1876, 1889, 1892, 1893, 1900, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1916, 1925, 1926, 1928, 1930, 1931, 1932, 1939, 1940, 1941, 1944, 1946, 1947, 1952, 1954, 1957], "class": [0, 1, 2, 3, 13, 15, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 35, 38, 39, 41, 43, 45, 47, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 545, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 824, 825, 826, 827, 828, 829, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 882, 885, 886, 887, 888, 959, 960, 967, 968, 969, 970, 972, 973, 988, 990, 1001, 1041, 1070, 1132, 1168, 1191, 1192, 1193, 1196, 1198, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1305, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1499, 1509, 1517, 1561, 1563, 1598, 1607, 1608, 1609, 1610, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1647, 1652, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1716, 1755, 1786, 1847, 1865, 1867, 1870, 1873, 1876, 1879, 1881, 1883, 1888, 1889, 1892, 1894, 1895, 1896, 1900, 1902, 1905, 1908, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1957], "device_typ": [0, 1, 24, 1888, 1920], "dtype": [0, 1, 5, 11, 13, 18, 19, 21, 24, 26, 45, 47, 55, 56, 61, 63, 64, 65, 66, 74, 142, 143, 180, 197, 201, 202, 203, 204, 231, 300, 302, 304, 306, 308, 310, 398, 417, 420, 433, 434, 435, 436, 437, 441, 446, 458, 469, 471, 501, 503, 553, 568, 569, 591, 605, 675, 677, 680, 681, 685, 687, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 752, 753, 760, 761, 762, 782, 783, 787, 807, 808, 809, 810, 811, 812, 813, 814, 815, 829, 846, 847, 849, 850, 853, 867, 868, 885, 887, 889, 891, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 925, 932, 933, 948, 951, 952, 958, 966, 982, 1047, 1048, 1067, 1068, 1069, 1079, 1083, 1084, 1085, 1091, 1092, 1102, 1109, 1114, 1116, 1118, 1119, 1120, 1121, 1140, 1150, 1151, 1163, 1193, 1197, 1207, 1213, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1275, 1276, 1277, 1278, 1280, 1283, 1284, 1288, 1292, 1293, 1294, 1297, 1298, 1317, 1321, 1322, 1323, 1325, 1335, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1374, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1434, 1435, 1442, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1466, 1470, 1472, 1474, 1478, 1479, 1480, 1481, 1493, 1509, 1510, 1537, 1543, 1545, 1576, 1582, 1583, 1598, 1609, 1610, 1616, 1619, 1620, 1640, 1654, 1658, 1659, 1660, 1662, 1697, 1703, 1707, 1708, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1735, 1738, 1750, 1751, 1753, 1754, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1782, 1785, 1787, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1810, 1811, 1822, 1825, 1836, 1838, 1843, 1846, 1847, 1849, 1855, 1856, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1871, 1876, 1883, 1884, 1892, 1894, 1900, 1903, 1908, 1910, 1911, 1916, 1917, 1918, 1925, 1926, 1927, 1930, 1931, 1932, 1941, 1943, 1944, 1949, 1954, 1957], "none": [0, 1, 2, 3, 5, 13, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 39, 41, 43, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 101, 103, 104, 105, 107, 123, 124, 127, 139, 142, 143, 145, 162, 174, 175, 176, 177, 193, 194, 196, 198, 201, 202, 203, 204, 218, 222, 224, 225, 226, 227, 247, 275, 279, 290, 324, 340, 343, 366, 396, 398, 399, 400, 403, 409, 415, 416, 417, 418, 419, 420, 433, 434, 435, 436, 437, 441, 442, 458, 467, 469, 475, 476, 482, 491, 501, 508, 525, 526, 540, 541, 543, 544, 553, 568, 569, 571, 576, 578, 591, 596, 597, 598, 603, 614, 616, 618, 620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 643, 645, 647, 648, 650, 652, 654, 656, 658, 660, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 737, 738, 739, 740, 741, 742, 743, 754, 755, 756, 757, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 781, 782, 783, 785, 787, 802, 805, 807, 808, 809, 810, 813, 814, 826, 827, 828, 845, 846, 847, 848, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 890, 892, 893, 894, 895, 896, 897, 901, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 924, 927, 929, 930, 931, 932, 933, 935, 936, 938, 940, 945, 948, 949, 950, 952, 953, 955, 956, 957, 958, 961, 965, 966, 967, 969, 970, 972, 973, 974, 978, 979, 981, 982, 983, 986, 987, 988, 994, 995, 1001, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1036, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1058, 1059, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1128, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1170, 1171, 1187, 1188, 1190, 1192, 1193, 1197, 1201, 1203, 1204, 1205, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1373, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1441, 1442, 1443, 1444, 1458, 1459, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1486, 1487, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1517, 1518, 1521, 1522, 1523, 1524, 1526, 1527, 1534, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1566, 1569, 1576, 1580, 1581, 1582, 1583, 1591, 1592, 1593, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1642, 1643, 1644, 1645, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1736, 1738, 1739, 1740, 1745, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1822, 1823, 1824, 1825, 1827, 1829, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1843, 1844, 1847, 1849, 1851, 1852, 1853, 1854, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1895, 1900, 1902, 1905, 1908, 1910, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1926, 1927, 1928, 1930, 1932, 1934, 1935, 1940, 1941, 1944, 1947, 1949, 1954, 1955, 1956], "enabl": [0, 1, 2, 5, 8, 13, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 32, 42, 47, 68, 74, 76, 476, 491, 492, 668, 748, 800, 801, 882, 887, 940, 967, 1012, 1066, 1070, 1168, 1176, 1177, 1195, 1202, 1308, 1309, 1379, 1397, 1442, 1443, 1473, 1576, 1607, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1652, 1679, 1754, 1755, 1758, 1786, 1846, 1849, 1869, 1875, 1876, 1877, 1880, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1899, 1901, 1903, 1904, 1908, 1910, 1914, 1915, 1920, 1921, 1922, 1925, 1933, 1935, 1936, 1938, 1940, 1941, 1943, 1944, 1947, 1948, 1952, 1954, 1955, 1956], "true": [0, 1, 2, 3, 5, 13, 14, 21, 22, 24, 25, 26, 28, 30, 32, 43, 45, 47, 52, 53, 54, 55, 56, 63, 64, 139, 185, 198, 249, 308, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 340, 385, 389, 391, 436, 446, 448, 459, 465, 475, 476, 483, 484, 487, 492, 504, 505, 544, 555, 568, 569, 578, 582, 591, 597, 605, 668, 675, 680, 681, 682, 683, 684, 685, 687, 706, 707, 708, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 734, 737, 742, 744, 748, 749, 752, 753, 756, 757, 767, 773, 774, 785, 802, 814, 847, 861, 863, 864, 868, 877, 880, 881, 882, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 901, 902, 909, 912, 915, 917, 918, 924, 925, 931, 939, 940, 943, 945, 951, 969, 1007, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1088, 1089, 1095, 1096, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1135, 1137, 1149, 1150, 1151, 1154, 1155, 1166, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1197, 1198, 1200, 1203, 1209, 1210, 1211, 1213, 1215, 1218, 1223, 1224, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1263, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1287, 1291, 1293, 1294, 1295, 1296, 1299, 1305, 1317, 1322, 1325, 1328, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1375, 1376, 1379, 1380, 1381, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1442, 1443, 1444, 1458, 1459, 1466, 1470, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1536, 1537, 1538, 1550, 1551, 1552, 1561, 1569, 1576, 1595, 1596, 1598, 1601, 1607, 1608, 1610, 1611, 1614, 1615, 1618, 1619, 1620, 1632, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1697, 1699, 1707, 1709, 1710, 1714, 1715, 1716, 1733, 1734, 1741, 1744, 1745, 1753, 1754, 1755, 1758, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1783, 1785, 1786, 1788, 1796, 1805, 1806, 1807, 1810, 1811, 1825, 1829, 1834, 1843, 1844, 1846, 1849, 1851, 1852, 1853, 1857, 1860, 1864, 1867, 1868, 1869, 1876, 1878, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1941, 1942, 1944, 1946, 1947, 1949, 1952, 1953, 1954, 1955], "cache_en": [0, 1012], "sourc": [0, 1, 2, 3, 4, 5, 9, 12, 13, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 43, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 139, 185, 198, 222, 301, 302, 310, 329, 340, 385, 390, 391, 404, 405, 441, 459, 475, 476, 501, 503, 505, 508, 512, 535, 544, 545, 547, 574, 591, 594, 597, 598, 612, 668, 683, 684, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 824, 825, 826, 827, 828, 829, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 874, 875, 876, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 907, 919, 921, 922, 926, 928, 930, 940, 941, 942, 943, 944, 945, 946, 947, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1066, 1070, 1117, 1119, 1135, 1141, 1142, 1145, 1164, 1165, 1166, 1168, 1169, 1174, 1179, 1180, 1181, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1265, 1266, 1286, 1295, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1491, 1492, 1496, 1498, 1499, 1500, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1699, 1716, 1741, 1746, 1749, 1750, 1751, 1752, 1753, 1755, 1758, 1759, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1785, 1786, 1792, 1799, 1807, 1812, 1815, 1816, 1817, 1818, 1819, 1827, 1846, 1847, 1848, 1849, 1850, 1864, 1866, 1867, 1868, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1896, 1898, 1899, 1903, 1905, 1908, 1910, 1912, 1914, 1915, 1916, 1920, 1921, 1922, 1927, 1930, 1932, 1933, 1934, 1935, 1941, 1944, 1945, 1947, 1954, 1955, 1956], "instanc": [0, 3, 21, 24, 25, 26, 28, 30, 31, 32, 38, 41, 42, 43, 47, 52, 55, 128, 605, 668, 722, 736, 745, 781, 784, 812, 814, 829, 846, 967, 1066, 1117, 1191, 1193, 1205, 1209, 1266, 1370, 1371, 1374, 1390, 1391, 1392, 1399, 1427, 1437, 1471, 1473, 1474, 1478, 1536, 1607, 1615, 1626, 1640, 1648, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1796, 1826, 1866, 1868, 1870, 1875, 1877, 1881, 1883, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1904, 1908, 1913, 1916, 1921, 1922, 1923, 1925, 1927, 1932, 1939, 1947, 1953, 1955], "serv": [0, 7, 8, 15, 24, 76, 1876, 1908, 1912, 1921, 1922, 1940, 1944, 1949], "context": [0, 2, 5, 21, 28, 32, 41, 42, 47, 55, 56, 139, 780, 877, 878, 879, 881, 882, 895, 896, 945, 960, 964, 973, 988, 990, 1001, 1007, 1012, 1019, 1039, 1041, 1070, 1124, 1128, 1133, 1168, 1193, 1308, 1427, 1576, 1598, 1607, 1608, 1617, 1619, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1755, 1786, 1865, 1869, 1870, 1881, 1888, 1889, 1892, 1894, 1898, 1899, 1902, 1908, 1910, 1913, 1915, 1920, 1921, 1923, 1925, 1928, 1933, 1942, 1943, 1944, 1947, 1952, 1956], "manag": [0, 1, 2, 5, 7, 24, 28, 30, 32, 39, 41, 42, 43, 47, 55, 56, 77, 474, 882, 945, 960, 964, 967, 968, 970, 973, 974, 975, 977, 988, 990, 991, 992, 1001, 1002, 1012, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1039, 1041, 1070, 1124, 1128, 1133, 1168, 1308, 1443, 1576, 1607, 1616, 1617, 1619, 1652, 1755, 1786, 1865, 1869, 1870, 1889, 1896, 1899, 1908, 1910, 1914, 1915, 1920, 1921, 1922, 1925, 1928, 1933, 1942, 1943, 1944, 1947], "decor": [0, 1, 30, 34, 38, 42, 55, 66, 887, 942, 945, 1070, 1168, 1198, 1199, 1205, 1211, 1652, 1785, 1786, 1866, 1868, 1869, 1873, 1888, 1889, 1894, 1914, 1921, 1940, 1941, 1945, 1955], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 21, 22, 24, 25, 30, 32, 33, 41, 42, 45, 47, 48, 50, 51, 52, 53, 55, 56, 58, 139, 501, 668, 723, 781, 785, 787, 812, 881, 883, 895, 896, 925, 939, 943, 1009, 1012, 1036, 1066, 1127, 1193, 1198, 1211, 1249, 1271, 1312, 1326, 1340, 1341, 1342, 1363, 1364, 1381, 1420, 1421, 1422, 1427, 1430, 1433, 1455, 1470, 1607, 1612, 1653, 1662, 1678, 1788, 1846, 1864, 1868, 1869, 1876, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1925, 1928, 1929, 1930, 1932, 1941, 1942, 1943, 1944, 1947, 1950, 1953, 1954], "region": [0, 3, 5, 30, 38, 756, 757, 940, 1340, 1341, 1342, 1375, 1376, 1386, 1388, 1420, 1421, 1422, 1494, 1495, 1521, 1522, 1551, 1552, 1866, 1881, 1888, 1892, 1943, 1944, 1952], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 21, 24, 28, 29, 30, 33, 34, 38, 40, 41, 42, 43, 44, 45, 47, 51, 52, 54, 55, 881, 887, 889, 890, 895, 940, 943, 1168, 1193, 1197, 1198, 1203, 1206, 1209, 1210, 1211, 1427, 1434, 1474, 1607, 1616, 1619, 1652, 1680, 1754, 1843, 1847, 1849, 1866, 1868, 1869, 1873, 1875, 1881, 1882, 1883, 1885, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1910, 1912, 1914, 1917, 1920, 1922, 1925, 1930, 1931, 1933, 1936, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1948, 1951, 1952, 1954, 1955, 1956], "script": [0, 2, 4, 18, 21, 24, 27, 32, 34, 40, 42, 43, 45, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1206, 1208, 1209, 1211, 1864, 1865, 1868, 1869, 1877, 1891, 1899, 1901, 1905, 1907, 1908, 1913, 1916, 1921, 1938, 1940, 1946, 1948, 1951], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 15, 18, 21, 22, 24, 25, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 139, 476, 780, 786, 805, 807, 808, 809, 810, 813, 845, 849, 850, 851, 881, 895, 896, 897, 940, 1011, 1012, 1123, 1128, 1134, 1168, 1193, 1194, 1196, 1197, 1199, 1201, 1203, 1205, 1207, 1209, 1210, 1230, 1239, 1265, 1266, 1294, 1345, 1346, 1347, 1364, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1455, 1466, 1576, 1598, 1601, 1607, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1753, 1757, 1790, 1836, 1838, 1846, 1857, 1865, 1866, 1869, 1877, 1879, 1880, 1881, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1922, 1923, 1925, 1930, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956], "In": [0, 2, 3, 4, 7, 9, 15, 18, 21, 24, 26, 28, 30, 34, 41, 42, 43, 45, 47, 49, 50, 51, 52, 54, 55, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 110, 112, 114, 116, 119, 120, 122, 130, 132, 135, 136, 138, 141, 143, 147, 149, 151, 153, 155, 157, 166, 175, 183, 187, 190, 192, 202, 204, 210, 220, 225, 227, 233, 236, 238, 240, 242, 246, 251, 258, 260, 262, 266, 268, 272, 274, 281, 283, 285, 293, 295, 297, 299, 345, 347, 349, 351, 353, 355, 357, 360, 362, 364, 365, 372, 374, 376, 378, 380, 384, 408, 411, 414, 416, 427, 429, 431, 439, 444, 454, 457, 473, 478, 480, 496, 499, 510, 515, 517, 520, 522, 524, 537, 539, 541, 550, 552, 559, 563, 565, 581, 584, 586, 588, 590, 600, 610, 668, 748, 788, 812, 842, 887, 916, 924, 951, 952, 966, 1012, 1023, 1035, 1036, 1040, 1041, 1066, 1087, 1089, 1097, 1098, 1099, 1114, 1124, 1128, 1131, 1133, 1191, 1193, 1203, 1206, 1207, 1209, 1225, 1234, 1239, 1240, 1241, 1249, 1252, 1257, 1262, 1266, 1271, 1274, 1283, 1288, 1294, 1295, 1322, 1340, 1341, 1342, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1388, 1397, 1412, 1420, 1421, 1422, 1427, 1433, 1470, 1472, 1474, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1516, 1526, 1533, 1542, 1570, 1573, 1575, 1576, 1590, 1607, 1614, 1619, 1620, 1652, 1680, 1691, 1693, 1729, 1745, 1747, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1811, 1812, 1834, 1846, 1847, 1849, 1854, 1855, 1864, 1865, 1866, 1868, 1869, 1875, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1932, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1956], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 68, 69, 70, 72, 74, 75, 77, 139, 143, 179, 210, 231, 243, 302, 304, 310, 312, 317, 324, 487, 501, 503, 505, 525, 533, 548, 595, 602, 605, 668, 675, 676, 723, 729, 730, 731, 744, 748, 753, 767, 773, 775, 777, 780, 784, 803, 805, 811, 814, 842, 849, 850, 852, 866, 867, 868, 877, 879, 880, 881, 883, 885, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 903, 904, 905, 911, 927, 937, 940, 951, 952, 954, 967, 969, 970, 972, 979, 980, 981, 982, 983, 1001, 1002, 1009, 1010, 1012, 1024, 1026, 1036, 1040, 1041, 1051, 1064, 1066, 1067, 1068, 1069, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1109, 1117, 1119, 1122, 1123, 1126, 1127, 1128, 1130, 1132, 1134, 1135, 1138, 1146, 1154, 1155, 1156, 1190, 1191, 1193, 1196, 1197, 1199, 1201, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1223, 1224, 1229, 1230, 1235, 1237, 1239, 1242, 1243, 1247, 1250, 1252, 1255, 1256, 1263, 1265, 1266, 1283, 1285, 1288, 1294, 1305, 1312, 1317, 1326, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1387, 1391, 1392, 1395, 1396, 1397, 1399, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1444, 1446, 1455, 1458, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1511, 1517, 1518, 1520, 1521, 1522, 1526, 1537, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1576, 1580, 1595, 1597, 1598, 1601, 1607, 1611, 1612, 1613, 1614, 1617, 1618, 1619, 1626, 1643, 1650, 1652, 1654, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1709, 1714, 1715, 1716, 1735, 1737, 1741, 1749, 1752, 1761, 1767, 1788, 1791, 1792, 1796, 1799, 1804, 1807, 1811, 1825, 1826, 1842, 1843, 1844, 1846, 1849, 1855, 1856, 1857, 1858, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1957], "chosen": [0, 52, 1054, 1215, 1576, 1758, 1783, 1829, 1884, 1888, 1892, 1894, 1902, 1910, 1916, 1954], "improv": [0, 1, 3, 9, 14, 19, 22, 24, 45, 47, 55, 748, 792, 793, 794, 889, 891, 895, 954, 1146, 1365, 1379, 1397, 1442, 1473, 1576, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1693, 1865, 1866, 1888, 1893, 1894, 1895, 1903, 1904, 1908, 1916, 1917, 1921, 1944, 1948, 1950, 1952, 1954, 1956], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 41, 42, 45, 47, 51, 54, 55, 70, 108, 195, 198, 446, 568, 591, 605, 674, 675, 676, 677, 678, 679, 748, 769, 792, 793, 794, 835, 846, 849, 882, 887, 889, 891, 892, 895, 896, 908, 920, 940, 951, 952, 968, 974, 1023, 1047, 1048, 1061, 1086, 1109, 1111, 1122, 1123, 1126, 1157, 1168, 1193, 1203, 1204, 1209, 1237, 1239, 1242, 1246, 1249, 1250, 1254, 1255, 1263, 1264, 1266, 1271, 1280, 1293, 1298, 1308, 1309, 1319, 1322, 1325, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1367, 1370, 1371, 1379, 1397, 1427, 1433, 1435, 1442, 1455, 1470, 1473, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1545, 1562, 1576, 1582, 1583, 1598, 1607, 1609, 1610, 1615, 1619, 1640, 1647, 1649, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1699, 1707, 1735, 1749, 1753, 1781, 1787, 1788, 1789, 1790, 1810, 1812, 1846, 1865, 1866, 1869, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1910, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1936, 1938, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1955, 1956], "while": [0, 2, 3, 5, 7, 8, 11, 14, 21, 22, 24, 25, 26, 30, 43, 45, 47, 52, 54, 55, 74, 683, 684, 723, 842, 872, 880, 970, 1041, 1123, 1155, 1193, 1196, 1209, 1210, 1266, 1323, 1335, 1351, 1388, 1390, 1391, 1392, 1397, 1427, 1433, 1445, 1458, 1466, 1470, 1474, 1545, 1601, 1607, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1654, 1745, 1753, 1870, 1875, 1876, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1905, 1910, 1912, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1929, 1930, 1931, 1943, 1944, 1945, 1947, 1948, 1954], "maintain": [0, 7, 8, 21, 22, 24, 30, 45, 47, 51, 55, 1339, 1367, 1372, 1519, 1607, 1640, 1654, 1865, 1884, 1888, 1889, 1892, 1894, 1900, 1908, 1916, 1942, 1943, 1947], "accuraci": [0, 22, 940, 1257, 1576, 1753, 1865, 1879, 1888, 1900, 1930, 1934, 1944], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 17, 20, 21, 24, 25, 30, 33, 41, 42, 44, 45, 47, 52, 53, 54, 55, 78, 82, 84, 86, 88, 90, 92, 94, 96, 98, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 121, 123, 124, 125, 126, 127, 129, 131, 133, 134, 137, 139, 140, 142, 143, 144, 145, 146, 148, 150, 152, 154, 156, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 181, 182, 186, 188, 189, 191, 193, 194, 196, 199, 200, 201, 203, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 239, 241, 244, 245, 250, 252, 253, 254, 255, 256, 257, 259, 261, 263, 264, 265, 267, 269, 270, 271, 273, 276, 277, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 294, 296, 298, 302, 310, 311, 312, 313, 314, 316, 317, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 348, 350, 352, 354, 356, 358, 359, 361, 363, 367, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 385, 386, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 415, 417, 418, 419, 420, 421, 422, 426, 428, 430, 438, 440, 441, 443, 445, 447, 448, 449, 450, 452, 453, 455, 456, 458, 465, 467, 468, 470, 472, 475, 476, 477, 479, 481, 482, 483, 485, 486, 487, 489, 490, 493, 494, 495, 498, 503, 505, 506, 507, 509, 511, 513, 514, 516, 518, 519, 521, 523, 526, 527, 528, 530, 531, 535, 536, 538, 540, 542, 543, 544, 549, 551, 553, 555, 556, 557, 558, 560, 561, 562, 564, 566, 567, 578, 579, 580, 582, 583, 585, 587, 589, 593, 594, 597, 598, 599, 602, 603, 604, 606, 607, 608, 609, 668, 681, 683, 684, 687, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 733, 734, 736, 744, 745, 748, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 767, 768, 769, 770, 771, 772, 773, 781, 828, 847, 848, 849, 850, 853, 862, 863, 864, 867, 878, 880, 881, 882, 883, 884, 886, 887, 891, 895, 896, 901, 902, 905, 909, 911, 918, 920, 923, 937, 940, 944, 956, 967, 968, 969, 970, 972, 974, 975, 977, 991, 992, 1001, 1002, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1061, 1064, 1066, 1067, 1069, 1070, 1079, 1084, 1102, 1105, 1120, 1125, 1126, 1127, 1129, 1138, 1146, 1150, 1151, 1155, 1156, 1164, 1165, 1166, 1168, 1193, 1197, 1205, 1209, 1210, 1212, 1213, 1215, 1225, 1230, 1233, 1236, 1239, 1241, 1248, 1250, 1251, 1259, 1263, 1264, 1266, 1272, 1274, 1280, 1281, 1283, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1308, 1309, 1315, 1322, 1324, 1325, 1335, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1373, 1379, 1381, 1387, 1388, 1393, 1394, 1397, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1441, 1442, 1445, 1454, 1456, 1458, 1459, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1607, 1608, 1614, 1615, 1616, 1619, 1625, 1634, 1643, 1648, 1651, 1652, 1653, 1654, 1658, 1697, 1707, 1708, 1718, 1720, 1722, 1724, 1725, 1729, 1732, 1735, 1741, 1750, 1753, 1755, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1778, 1786, 1787, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1805, 1806, 1807, 1810, 1820, 1822, 1825, 1831, 1832, 1836, 1838, 1843, 1846, 1849, 1852, 1853, 1858, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1936, 1937, 1940, 1941, 1942, 1945, 1946, 1947, 1948, 1952, 1953, 1954, 1955, 1956, 1957], "detail": [0, 1, 2, 3, 7, 8, 11, 12, 14, 15, 17, 18, 21, 24, 25, 26, 30, 32, 42, 47, 53, 55, 68, 69, 70, 139, 312, 483, 602, 668, 723, 726, 727, 728, 729, 730, 731, 748, 754, 755, 756, 759, 760, 761, 762, 767, 768, 770, 771, 772, 773, 781, 847, 848, 849, 850, 861, 878, 880, 881, 882, 883, 884, 887, 896, 923, 944, 956, 968, 972, 974, 975, 977, 991, 992, 1001, 1012, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1049, 1066, 1105, 1127, 1138, 1141, 1142, 1146, 1174, 1181, 1193, 1197, 1209, 1230, 1233, 1251, 1258, 1266, 1272, 1274, 1294, 1335, 1339, 1349, 1358, 1359, 1360, 1364, 1370, 1371, 1372, 1373, 1375, 1376, 1379, 1397, 1427, 1433, 1439, 1440, 1442, 1454, 1475, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1598, 1607, 1608, 1643, 1653, 1661, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1680, 1685, 1697, 1709, 1741, 1752, 1778, 1787, 1832, 1843, 1846, 1849, 1864, 1866, 1867, 1868, 1869, 1876, 1878, 1880, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1910, 1913, 1914, 1916, 1918, 1920, 1921, 1922, 1923, 1925, 1929, 1930, 1932, 1933, 1947, 1951, 1954, 1955, 1956], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 71, 73, 74, 86, 139, 180, 197, 249, 302, 310, 436, 475, 476, 485, 486, 501, 503, 505, 532, 548, 568, 605, 668, 674, 677, 723, 756, 757, 767, 773, 779, 781, 812, 828, 846, 853, 865, 868, 881, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 908, 911, 920, 928, 931, 932, 933, 939, 940, 951, 952, 956, 969, 971, 981, 983, 1005, 1011, 1012, 1024, 1049, 1066, 1105, 1109, 1114, 1119, 1123, 1124, 1129, 1132, 1133, 1134, 1146, 1168, 1182, 1183, 1185, 1186, 1189, 1193, 1194, 1196, 1205, 1206, 1207, 1209, 1210, 1214, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1274, 1280, 1283, 1288, 1294, 1295, 1298, 1317, 1322, 1323, 1324, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1374, 1377, 1379, 1380, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1454, 1455, 1458, 1459, 1460, 1461, 1463, 1466, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1518, 1524, 1526, 1537, 1538, 1561, 1564, 1566, 1569, 1570, 1576, 1584, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1610, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1643, 1648, 1652, 1653, 1654, 1655, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1697, 1699, 1706, 1709, 1710, 1732, 1738, 1745, 1750, 1753, 1760, 1778, 1784, 1788, 1790, 1791, 1792, 1796, 1802, 1807, 1811, 1820, 1825, 1827, 1832, 1836, 1838, 1843, 1846, 1847, 1857, 1860, 1864, 1865, 1866, 1868, 1875, 1877, 1879, 1881, 1882, 1883, 1887, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1912, 1913, 1914, 1915, 1920, 1921, 1922, 1923, 1926, 1928, 1929, 1930, 1931, 1932, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1950, 1952, 1953, 1954, 1956], "enter": [0, 24, 882, 1168, 1894], "tensor": [0, 2, 5, 7, 8, 13, 14, 17, 18, 21, 22, 24, 25, 26, 28, 30, 31, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 77, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 708, 720, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 738, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 782, 786, 787, 788, 789, 790, 807, 808, 809, 810, 812, 813, 815, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 901, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 966, 979, 980, 981, 982, 983, 990, 998, 999, 1005, 1009, 1012, 1015, 1019, 1030, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1199, 1200, 1201, 1204, 1205, 1207, 1209, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1306, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1335, 1339, 1340, 1343, 1344, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1379, 1380, 1381, 1387, 1393, 1394, 1397, 1398, 1414, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1754, 1755, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1865, 1866, 1868, 1869, 1873, 1876, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1906, 1908, 1911, 1912, 1913, 1914, 1915, 1917, 1920, 1921, 1922, 1926, 1927, 1930, 1932, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1949, 1953, 1954, 1955, 1956], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 35, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 77, 139, 243, 487, 533, 605, 685, 746, 769, 780, 781, 782, 788, 798, 799, 800, 801, 803, 804, 805, 806, 811, 812, 814, 842, 853, 877, 878, 879, 881, 887, 889, 895, 896, 897, 916, 922, 926, 927, 951, 969, 1005, 1012, 1023, 1067, 1068, 1069, 1082, 1083, 1085, 1086, 1087, 1089, 1093, 1097, 1098, 1099, 1114, 1122, 1123, 1130, 1131, 1132, 1134, 1155, 1192, 1193, 1197, 1200, 1204, 1205, 1207, 1209, 1215, 1223, 1225, 1229, 1230, 1234, 1239, 1240, 1241, 1246, 1247, 1250, 1254, 1257, 1263, 1265, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1343, 1344, 1348, 1349, 1355, 1356, 1357, 1364, 1365, 1369, 1373, 1374, 1377, 1378, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1393, 1394, 1413, 1414, 1416, 1417, 1418, 1426, 1427, 1435, 1437, 1438, 1441, 1445, 1446, 1447, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1497, 1501, 1502, 1503, 1543, 1562, 1563, 1576, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1641, 1642, 1644, 1647, 1649, 1654, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1725, 1741, 1756, 1758, 1811, 1857, 1864, 1866, 1867, 1868, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1927, 1930, 1932, 1934, 1935, 1938, 1939, 1940, 1941, 1942, 1943, 1946, 1947, 1949, 1952, 1953, 1954, 1955, 1956], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 24, 28, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 64, 65, 66, 71, 72, 139, 243, 324, 436, 476, 487, 668, 677, 722, 723, 736, 745, 769, 877, 878, 879, 880, 881, 886, 887, 889, 890, 891, 895, 922, 940, 967, 990, 1001, 1003, 1012, 1013, 1033, 1066, 1122, 1123, 1126, 1127, 1128, 1129, 1134, 1168, 1193, 1197, 1198, 1206, 1209, 1210, 1211, 1239, 1257, 1265, 1288, 1295, 1298, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1397, 1423, 1424, 1425, 1427, 1432, 1433, 1434, 1442, 1461, 1470, 1472, 1474, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1537, 1543, 1576, 1594, 1595, 1598, 1607, 1615, 1641, 1649, 1651, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1691, 1709, 1732, 1741, 1749, 1793, 1794, 1795, 1797, 1798, 1802, 1847, 1849, 1857, 1864, 1866, 1868, 1869, 1871, 1873, 1876, 1877, 1879, 1881, 1882, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 47, 51, 52, 54, 55, 56, 61, 62, 64, 73, 108, 139, 143, 302, 310, 387, 391, 433, 434, 435, 436, 437, 475, 476, 484, 501, 503, 505, 571, 572, 573, 575, 576, 674, 677, 678, 723, 748, 760, 761, 762, 781, 784, 788, 805, 812, 826, 827, 842, 843, 844, 847, 853, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 890, 891, 895, 901, 902, 908, 909, 910, 911, 918, 931, 945, 958, 969, 972, 982, 983, 1001, 1003, 1012, 1057, 1067, 1068, 1069, 1079, 1084, 1087, 1088, 1089, 1097, 1098, 1099, 1102, 1117, 1119, 1120, 1121, 1123, 1124, 1128, 1132, 1133, 1134, 1150, 1151, 1154, 1155, 1190, 1191, 1193, 1194, 1198, 1203, 1205, 1206, 1209, 1210, 1211, 1213, 1238, 1263, 1264, 1265, 1271, 1280, 1283, 1284, 1285, 1305, 1335, 1343, 1344, 1348, 1361, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1393, 1397, 1419, 1427, 1433, 1434, 1435, 1454, 1475, 1479, 1491, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1518, 1526, 1576, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1658, 1659, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1709, 1711, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1732, 1748, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1811, 1825, 1834, 1849, 1857, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1902, 1903, 1904, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1929, 1930, 1932, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1952, 1953, 1954, 1955], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 41, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 64, 69, 75, 139, 279, 312, 324, 446, 474, 475, 476, 544, 568, 602, 605, 668, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 769, 778, 785, 812, 845, 849, 850, 881, 885, 886, 887, 888, 889, 891, 892, 895, 901, 902, 923, 940, 945, 947, 967, 970, 972, 1001, 1003, 1013, 1014, 1023, 1030, 1031, 1033, 1034, 1064, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1122, 1123, 1134, 1138, 1156, 1168, 1178, 1193, 1196, 1198, 1204, 1205, 1206, 1213, 1249, 1257, 1261, 1263, 1265, 1266, 1295, 1339, 1345, 1346, 1347, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1374, 1412, 1423, 1424, 1425, 1427, 1434, 1435, 1455, 1466, 1478, 1504, 1505, 1506, 1512, 1513, 1514, 1519, 1537, 1576, 1595, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1616, 1619, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1642, 1648, 1649, 1651, 1652, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1722, 1749, 1756, 1757, 1786, 1805, 1806, 1807, 1827, 1843, 1846, 1847, 1849, 1852, 1853, 1857, 1858, 1864, 1866, 1870, 1873, 1879, 1881, 1883, 1884, 1885, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1953, 1954, 1955, 1956, 1957], "model": [0, 1, 2, 3, 4, 5, 8, 9, 13, 22, 24, 25, 26, 28, 29, 30, 40, 42, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 71, 72, 780, 781, 782, 785, 786, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 812, 813, 814, 824, 825, 826, 827, 842, 845, 846, 847, 848, 849, 850, 851, 940, 1013, 1033, 1122, 1123, 1124, 1132, 1134, 1168, 1193, 1197, 1198, 1203, 1205, 1209, 1211, 1265, 1335, 1364, 1381, 1392, 1393, 1427, 1433, 1455, 1466, 1470, 1472, 1473, 1474, 1525, 1607, 1608, 1613, 1615, 1617, 1630, 1649, 1650, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1693, 1807, 1857, 1865, 1866, 1868, 1869, 1870, 1877, 1878, 1884, 1889, 1891, 1892, 1893, 1894, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1915, 1917, 1921, 1922, 1924, 1925, 1926, 1930, 1934, 1935, 1938, 1939, 1940, 1943, 1944, 1945, 1947, 1950, 1952, 1954], "": [0, 1, 2, 3, 4, 7, 8, 9, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 39, 41, 42, 45, 47, 49, 51, 52, 54, 55, 69, 70, 75, 76, 451, 469, 481, 484, 501, 532, 546, 569, 612, 668, 677, 682, 683, 684, 723, 748, 781, 782, 783, 803, 804, 805, 808, 811, 814, 842, 849, 850, 863, 865, 866, 867, 868, 884, 885, 886, 890, 891, 893, 897, 924, 926, 939, 951, 952, 953, 958, 965, 967, 969, 973, 988, 992, 1001, 1003, 1008, 1009, 1012, 1013, 1014, 1033, 1034, 1035, 1041, 1058, 1061, 1063, 1064, 1066, 1080, 1081, 1083, 1084, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1134, 1138, 1146, 1154, 1155, 1156, 1180, 1182, 1190, 1191, 1193, 1197, 1204, 1205, 1209, 1224, 1225, 1235, 1236, 1237, 1239, 1242, 1246, 1248, 1250, 1251, 1255, 1256, 1257, 1258, 1263, 1265, 1266, 1281, 1288, 1293, 1295, 1298, 1300, 1301, 1305, 1308, 1309, 1312, 1321, 1322, 1325, 1327, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1350, 1364, 1370, 1381, 1427, 1428, 1433, 1437, 1443, 1455, 1458, 1460, 1466, 1470, 1472, 1474, 1480, 1481, 1498, 1499, 1510, 1523, 1526, 1537, 1538, 1543, 1576, 1582, 1595, 1598, 1603, 1604, 1607, 1608, 1619, 1630, 1643, 1647, 1654, 1655, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1685, 1697, 1699, 1703, 1710, 1725, 1728, 1729, 1732, 1733, 1734, 1736, 1738, 1745, 1752, 1753, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1814, 1822, 1826, 1828, 1834, 1849, 1852, 1853, 1854, 1857, 1858, 1864, 1866, 1867, 1868, 1869, 1870, 1873, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955], "wrap": [0, 1, 15, 21, 22, 24, 28, 29, 34, 43, 47, 51, 52, 55, 56, 249, 778, 779, 970, 1123, 1193, 1209, 1364, 1427, 1466, 1602, 1607, 1617, 1643, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1866, 1867, 1869, 1876, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1906, 1910, 1914, 1915, 1916, 1921, 1922, 1933, 1935, 1940, 1941, 1944, 1947, 1954, 1955], "forward": [0, 5, 7, 8, 13, 14, 22, 24, 25, 28, 29, 30, 45, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 139, 210, 211, 668, 723, 736, 745, 748, 788, 803, 804, 805, 808, 812, 849, 850, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 895, 896, 1012, 1058, 1070, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1123, 1125, 1126, 1127, 1129, 1132, 1168, 1193, 1196, 1197, 1198, 1200, 1204, 1205, 1209, 1210, 1211, 1339, 1343, 1345, 1346, 1347, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1379, 1397, 1412, 1423, 1424, 1425, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1442, 1443, 1455, 1470, 1471, 1472, 1473, 1474, 1512, 1513, 1514, 1519, 1564, 1598, 1601, 1602, 1603, 1604, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1648, 1651, 1652, 1716, 1755, 1784, 1846, 1865, 1866, 1868, 1869, 1875, 1877, 1881, 1883, 1887, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1903, 1905, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1944, 1947, 1948, 1949, 1950, 1952, 1953, 1954], "pass": [0, 1, 3, 5, 6, 7, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 54, 55, 56, 63, 64, 68, 75, 139, 243, 436, 476, 501, 503, 505, 532, 548, 781, 782, 811, 814, 847, 849, 868, 877, 878, 879, 880, 881, 887, 895, 924, 940, 946, 967, 1001, 1012, 1056, 1087, 1088, 1089, 1097, 1098, 1099, 1105, 1119, 1122, 1123, 1127, 1128, 1129, 1132, 1133, 1155, 1191, 1193, 1194, 1197, 1199, 1203, 1205, 1209, 1210, 1238, 1254, 1256, 1265, 1312, 1335, 1336, 1337, 1338, 1345, 1346, 1347, 1364, 1370, 1371, 1375, 1376, 1427, 1432, 1433, 1455, 1471, 1472, 1473, 1474, 1479, 1491, 1521, 1522, 1526, 1537, 1538, 1564, 1576, 1598, 1601, 1602, 1603, 1604, 1607, 1617, 1619, 1621, 1626, 1640, 1643, 1647, 1649, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1741, 1745, 1749, 1811, 1864, 1866, 1870, 1873, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1908, 1910, 1912, 1913, 1914, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1947, 1951, 1954, 1955], "e": [0, 1, 2, 3, 5, 7, 11, 13, 14, 15, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 47, 50, 52, 54, 55, 56, 63, 64, 139, 247, 324, 366, 568, 605, 723, 736, 745, 748, 781, 782, 803, 805, 842, 846, 847, 849, 850, 868, 877, 881, 886, 896, 897, 919, 921, 924, 998, 1012, 1037, 1066, 1076, 1117, 1123, 1128, 1132, 1143, 1168, 1172, 1173, 1175, 1178, 1190, 1193, 1200, 1201, 1209, 1229, 1230, 1245, 1257, 1265, 1266, 1267, 1269, 1271, 1288, 1299, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1418, 1427, 1428, 1433, 1434, 1436, 1437, 1441, 1442, 1458, 1466, 1470, 1474, 1475, 1476, 1478, 1501, 1502, 1503, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1526, 1537, 1569, 1576, 1595, 1597, 1598, 1603, 1607, 1608, 1609, 1610, 1615, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1647, 1651, 1654, 1666, 1667, 1702, 1713, 1731, 1738, 1745, 1749, 1753, 1756, 1761, 1796, 1807, 1811, 1864, 1866, 1868, 1869, 1870, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1939, 1942, 1943, 1944, 1947, 1952, 1954, 1955, 1957], "network": [0, 1, 7, 8, 15, 28, 30, 41, 829, 1012, 1193, 1209, 1210, 1339, 1345, 1346, 1347, 1350, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1372, 1381, 1393, 1397, 1427, 1434, 1439, 1440, 1445, 1454, 1456, 1466, 1470, 1472, 1474, 1491, 1525, 1526, 1579, 1598, 1615, 1617, 1643, 1648, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1866, 1868, 1869, 1887, 1888, 1894, 1903, 1904, 1907, 1910, 1912, 1916, 1921, 1922, 1923, 1942], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 24, 26, 38, 41, 42, 45, 47, 55, 70, 72, 310, 476, 505, 571, 756, 757, 847, 849, 942, 1094, 1096, 1154, 1191, 1193, 1194, 1223, 1302, 1303, 1340, 1341, 1342, 1348, 1350, 1364, 1373, 1381, 1414, 1423, 1424, 1425, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1477, 1493, 1494, 1495, 1510, 1523, 1543, 1607, 1641, 1642, 1644, 1774, 1835, 1836, 1837, 1838, 1864, 1866, 1868, 1869, 1876, 1877, 1879, 1881, 1889, 1891, 1892, 1896, 1899, 1900, 1905, 1907, 1910, 1915, 1916, 1921, 1923, 1930, 1933, 1936, 1938, 1940, 1941, 1943, 1944, 1945, 1950, 1951, 1952, 1954, 1955, 1956], "loss": [0, 1, 22, 24, 25, 28, 30, 47, 1124, 1190, 1229, 1230, 1239, 1257, 1335, 1343, 1344, 1350, 1361, 1363, 1370, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1509, 1510, 1523, 1538, 1561, 1569, 1607, 1641, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1684, 1693, 1753, 1864, 1865, 1879, 1883, 1889, 1892, 1893, 1896, 1897, 1900, 1912, 1916, 1917, 1921, 1922, 1930], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 21, 22, 24, 26, 30, 32, 34, 45, 47, 48, 49, 51, 139, 279, 475, 483, 669, 671, 685, 686, 748, 756, 757, 788, 790, 807, 808, 809, 810, 812, 813, 877, 881, 882, 883, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 912, 913, 914, 915, 916, 917, 928, 930, 931, 932, 933, 939, 952, 954, 966, 1009, 1012, 1049, 1058, 1060, 1063, 1066, 1070, 1071, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1111, 1112, 1113, 1115, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1146, 1149, 1152, 1153, 1154, 1155, 1168, 1170, 1193, 1196, 1205, 1213, 1214, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1266, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1292, 1293, 1294, 1297, 1322, 1324, 1328, 1335, 1339, 1340, 1341, 1342, 1345, 1346, 1347, 1358, 1359, 1360, 1362, 1363, 1365, 1370, 1371, 1379, 1382, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1434, 1436, 1441, 1442, 1460, 1462, 1466, 1475, 1476, 1479, 1493, 1494, 1495, 1508, 1509, 1517, 1518, 1525, 1526, 1528, 1537, 1545, 1550, 1551, 1552, 1553, 1554, 1555, 1566, 1569, 1576, 1582, 1583, 1598, 1601, 1603, 1604, 1607, 1608, 1611, 1614, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1634, 1641, 1647, 1651, 1652, 1654, 1664, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1703, 1709, 1710, 1714, 1715, 1729, 1730, 1753, 1755, 1761, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1784, 1787, 1788, 1789, 1790, 1807, 1811, 1812, 1827, 1832, 1854, 1857, 1865, 1866, 1869, 1876, 1879, 1882, 1883, 1885, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1907, 1908, 1910, 1912, 1916, 1919, 1921, 1925, 1926, 1931, 1934, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1953, 1956], "backward": [0, 1, 5, 9, 24, 25, 26, 28, 30, 45, 47, 51, 52, 55, 56, 279, 324, 475, 476, 484, 491, 492, 501, 503, 505, 569, 668, 674, 677, 748, 803, 804, 805, 878, 883, 884, 885, 886, 887, 888, 890, 892, 895, 896, 901, 902, 908, 920, 1012, 1070, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1122, 1123, 1193, 1266, 1274, 1288, 1298, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1379, 1380, 1381, 1394, 1397, 1398, 1414, 1418, 1419, 1427, 1433, 1434, 1441, 1442, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1498, 1499, 1509, 1510, 1526, 1537, 1561, 1564, 1599, 1603, 1604, 1607, 1619, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1697, 1709, 1784, 1788, 1792, 1811, 1846, 1864, 1865, 1867, 1869, 1875, 1883, 1884, 1887, 1888, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1908, 1912, 1913, 1915, 1916, 1921, 1925, 1926, 1931, 1936, 1939, 1940, 1944, 1948, 1950, 1952, 1953, 1954], "under": [0, 1, 3, 4, 5, 9, 21, 24, 41, 45, 47, 48, 50, 52, 54, 70, 896, 904, 925, 1168, 1193, 1350, 1427, 1491, 1517, 1518, 1614, 1616, 1619, 1661, 1730, 1881, 1888, 1889, 1892, 1893, 1895, 1897, 1902, 1908, 1913, 1914, 1916, 1919, 1920, 1923, 1926, 1930, 1933, 1935, 1941, 1942, 1943, 1947, 1949, 1952, 1954], "recommend": [0, 1, 5, 21, 22, 24, 26, 29, 30, 32, 41, 42, 47, 51, 54, 55, 56, 73, 74, 76, 436, 881, 947, 951, 952, 1087, 1088, 1089, 1097, 1098, 1099, 1180, 1196, 1239, 1266, 1312, 1335, 1364, 1538, 1607, 1716, 1843, 1847, 1864, 1866, 1878, 1881, 1883, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1900, 1902, 1903, 1905, 1908, 1910, 1913, 1916, 1945], "same": [0, 1, 3, 7, 13, 14, 15, 17, 18, 21, 22, 24, 25, 26, 28, 30, 32, 38, 39, 41, 42, 43, 44, 45, 47, 50, 52, 54, 55, 56, 63, 64, 128, 142, 184, 210, 244, 300, 302, 304, 308, 310, 328, 433, 434, 435, 436, 437, 459, 471, 485, 486, 488, 501, 503, 505, 508, 532, 568, 605, 606, 674, 677, 681, 683, 684, 685, 687, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 733, 734, 744, 746, 749, 750, 751, 752, 753, 767, 773, 776, 777, 781, 782, 784, 788, 790, 802, 807, 810, 812, 813, 847, 849, 866, 867, 868, 880, 883, 886, 889, 890, 891, 892, 893, 894, 896, 897, 908, 910, 911, 920, 922, 924, 927, 932, 933, 934, 940, 943, 948, 966, 967, 969, 980, 982, 1001, 1012, 1049, 1054, 1056, 1057, 1063, 1066, 1068, 1069, 1072, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1114, 1118, 1119, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1138, 1146, 1154, 1155, 1163, 1167, 1184, 1190, 1193, 1199, 1204, 1205, 1209, 1210, 1214, 1215, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1261, 1281, 1285, 1287, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1322, 1325, 1326, 1327, 1333, 1334, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1399, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1435, 1436, 1441, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1479, 1482, 1483, 1484, 1491, 1497, 1498, 1499, 1501, 1502, 1503, 1509, 1518, 1526, 1528, 1537, 1538, 1576, 1595, 1607, 1614, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1644, 1649, 1654, 1655, 1659, 1662, 1697, 1702, 1703, 1706, 1707, 1719, 1721, 1723, 1727, 1729, 1731, 1732, 1736, 1738, 1745, 1748, 1753, 1761, 1784, 1793, 1794, 1795, 1797, 1798, 1804, 1805, 1806, 1810, 1811, 1821, 1832, 1843, 1844, 1845, 1846, 1852, 1853, 1854, 1857, 1863, 1864, 1866, 1868, 1869, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1938, 1939, 1940, 1942, 1943, 1944, 1947, 1950, 1952, 1953, 1954, 1955], "correspond": [0, 1, 7, 18, 21, 22, 24, 26, 28, 29, 30, 41, 45, 47, 55, 71, 461, 462, 501, 503, 505, 532, 533, 668, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 723, 781, 785, 824, 826, 845, 846, 847, 852, 868, 877, 879, 880, 881, 886, 889, 891, 896, 953, 1012, 1032, 1061, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1146, 1155, 1182, 1193, 1210, 1224, 1229, 1230, 1235, 1238, 1257, 1264, 1266, 1280, 1295, 1317, 1364, 1370, 1397, 1427, 1433, 1473, 1517, 1526, 1563, 1603, 1607, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1648, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1702, 1703, 1713, 1736, 1745, 1761, 1796, 1805, 1806, 1811, 1842, 1845, 1852, 1853, 1864, 1866, 1867, 1869, 1873, 1879, 1882, 1883, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1904, 1908, 1910, 1913, 1915, 1916, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1934, 1935, 1945, 1951, 1952, 1954], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 21, 22, 24, 25, 26, 29, 42, 43, 45, 47, 51, 54, 55, 56, 61, 64, 65, 66, 77, 185, 195, 198, 278, 302, 310, 324, 433, 434, 435, 436, 437, 503, 505, 568, 674, 677, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 737, 738, 739, 740, 741, 742, 743, 853, 865, 867, 868, 889, 891, 908, 909, 911, 918, 920, 959, 960, 961, 962, 963, 964, 965, 968, 969, 970, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 985, 986, 987, 990, 994, 995, 996, 998, 999, 1007, 1009, 1010, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1042, 1043, 1044, 1067, 1068, 1069, 1079, 1084, 1102, 1120, 1121, 1150, 1151, 1193, 1197, 1201, 1204, 1207, 1213, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1248, 1251, 1252, 1254, 1255, 1257, 1258, 1264, 1265, 1280, 1283, 1288, 1294, 1298, 1305, 1312, 1314, 1335, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1435, 1442, 1443, 1444, 1466, 1470, 1472, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1537, 1543, 1576, 1591, 1595, 1596, 1597, 1598, 1607, 1609, 1610, 1611, 1612, 1640, 1647, 1653, 1655, 1658, 1659, 1669, 1709, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1749, 1753, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1788, 1789, 1793, 1794, 1795, 1796, 1797, 1798, 1811, 1825, 1827, 1836, 1838, 1846, 1847, 1849, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1871, 1877, 1882, 1884, 1888, 1893, 1895, 1896, 1898, 1900, 1901, 1902, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1927, 1931, 1932, 1939, 1941, 1943, 1944, 1946, 1949, 1951, 1952, 1954, 1956], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 21, 22, 24, 26, 28, 30, 32, 33, 39, 41, 42, 43, 44, 45, 47, 54, 55, 56, 73, 74, 76, 77, 139, 211, 243, 324, 568, 569, 571, 572, 573, 575, 576, 668, 720, 726, 727, 728, 733, 734, 744, 752, 780, 781, 782, 802, 803, 804, 805, 807, 812, 842, 866, 867, 868, 881, 883, 895, 919, 921, 932, 933, 937, 938, 940, 953, 968, 977, 1009, 1010, 1019, 1054, 1069, 1118, 1119, 1120, 1190, 1193, 1196, 1206, 1212, 1217, 1223, 1224, 1230, 1232, 1251, 1264, 1280, 1295, 1317, 1343, 1361, 1370, 1371, 1374, 1388, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1455, 1458, 1459, 1466, 1475, 1476, 1478, 1607, 1619, 1640, 1647, 1652, 1660, 1661, 1680, 1748, 1779, 1791, 1796, 1825, 1832, 1865, 1869, 1870, 1873, 1877, 1881, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1902, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1953, 1954, 1956, 1957], "optim": [0, 1, 2, 7, 8, 11, 14, 15, 22, 24, 25, 26, 30, 47, 55, 807, 896, 905, 940, 943, 1066, 1132, 1193, 1197, 1203, 1205, 1209, 1210, 1249, 1266, 1345, 1346, 1347, 1363, 1370, 1390, 1391, 1392, 1427, 1430, 1431, 1432, 1433, 1459, 1466, 1474, 1576, 1598, 1607, 1614, 1619, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1699, 1865, 1866, 1868, 1877, 1883, 1887, 1891, 1892, 1893, 1894, 1896, 1897, 1900, 1902, 1910, 1915, 1916, 1925, 1936, 1938, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1954], "default": [0, 2, 3, 5, 9, 11, 13, 14, 18, 24, 25, 26, 28, 29, 30, 32, 33, 38, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 60, 61, 63, 64, 65, 66, 70, 73, 74, 76, 139, 144, 159, 161, 164, 167, 168, 169, 184, 195, 198, 229, 256, 279, 286, 314, 320, 382, 433, 434, 435, 436, 437, 446, 484, 487, 488, 508, 513, 568, 569, 571, 668, 682, 685, 700, 701, 702, 703, 704, 705, 708, 718, 719, 720, 721, 723, 743, 746, 748, 756, 757, 758, 760, 761, 762, 767, 773, 781, 786, 791, 796, 797, 802, 805, 807, 808, 809, 810, 813, 816, 817, 818, 819, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 836, 837, 842, 843, 844, 846, 853, 867, 868, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 909, 918, 924, 928, 931, 932, 933, 937, 940, 958, 966, 969, 972, 974, 978, 981, 982, 983, 986, 987, 994, 995, 998, 1009, 1011, 1012, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1036, 1037, 1040, 1042, 1043, 1044, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1061, 1066, 1067, 1068, 1069, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1140, 1146, 1150, 1151, 1154, 1155, 1182, 1184, 1190, 1193, 1194, 1197, 1205, 1209, 1210, 1213, 1214, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1280, 1283, 1285, 1291, 1293, 1294, 1295, 1299, 1305, 1321, 1322, 1324, 1325, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1458, 1459, 1463, 1464, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1525, 1526, 1528, 1530, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1564, 1569, 1576, 1582, 1583, 1591, 1595, 1601, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1707, 1709, 1710, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1731, 1737, 1738, 1741, 1745, 1749, 1750, 1751, 1752, 1753, 1758, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1805, 1806, 1807, 1810, 1811, 1812, 1825, 1826, 1832, 1834, 1836, 1838, 1843, 1844, 1846, 1847, 1849, 1851, 1852, 1853, 1857, 1862, 1863, 1864, 1865, 1866, 1869, 1873, 1875, 1877, 1878, 1881, 1884, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1898, 1900, 1903, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1940, 1942, 1943, 1944, 1948, 1950, 1951, 1953, 1954, 1956, 1957], "net": [0, 6, 15, 32, 50, 55, 1193, 1209, 1210, 1364, 1427, 1607, 1630, 1684, 1868, 1869, 1888, 1889, 1892, 1900, 1930], "sgd": [0, 21, 22, 28, 476, 1370, 1598, 1607, 1685, 1691, 1693, 1888, 1892, 1893, 1900, 1902, 1912, 1921, 1922], "paramet": [0, 1, 2, 3, 5, 11, 13, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 39, 41, 43, 45, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 139, 144, 159, 161, 164, 167, 168, 169, 184, 185, 195, 198, 222, 229, 243, 244, 249, 256, 286, 302, 304, 306, 308, 310, 314, 320, 382, 389, 391, 433, 434, 435, 436, 437, 446, 459, 481, 484, 485, 486, 487, 488, 501, 503, 505, 508, 513, 525, 532, 533, 534, 548, 554, 571, 572, 573, 575, 576, 591, 592, 595, 605, 606, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 738, 743, 744, 746, 747, 748, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 779, 781, 783, 785, 787, 788, 789, 802, 807, 808, 809, 810, 811, 812, 813, 814, 815, 826, 827, 828, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 881, 889, 890, 891, 892, 893, 894, 895, 896, 897, 903, 904, 905, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 965, 966, 967, 968, 969, 970, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 986, 987, 988, 990, 994, 995, 996, 998, 1001, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1163, 1167, 1168, 1170, 1172, 1173, 1175, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1200, 1201, 1204, 1205, 1206, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1305, 1307, 1308, 1309, 1312, 1313, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1528, 1530, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1601, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1700, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1781, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1815, 1816, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1873, 1877, 1878, 1881, 1883, 1884, 1885, 1887, 1888, 1889, 1892, 1893, 1894, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1910, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1934, 1935, 1944, 1953, 1955, 1956], "target": [0, 14, 28, 45, 47, 51, 53, 54, 55, 56, 69, 487, 723, 754, 755, 780, 785, 847, 849, 850, 925, 1124, 1193, 1203, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1343, 1344, 1350, 1361, 1363, 1375, 1376, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1470, 1479, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1499, 1507, 1509, 1510, 1521, 1522, 1523, 1534, 1535, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1576, 1580, 1581, 1607, 1679, 1846, 1867, 1869, 1888, 1889, 1892, 1902, 1908, 1910, 1912, 1913, 1916, 1917, 1921, 1930, 1934, 1940, 1941, 1942, 1947, 1953, 1954], "data": [0, 1, 2, 3, 7, 11, 13, 18, 19, 22, 24, 26, 28, 29, 30, 31, 32, 35, 38, 41, 43, 47, 51, 55, 56, 57, 61, 64, 128, 139, 184, 185, 315, 318, 322, 325, 330, 433, 436, 469, 481, 485, 487, 605, 726, 727, 728, 748, 760, 761, 762, 769, 780, 781, 782, 786, 807, 808, 809, 810, 811, 813, 815, 853, 867, 868, 878, 881, 909, 918, 924, 970, 1047, 1048, 1067, 1068, 1069, 1079, 1080, 1081, 1084, 1086, 1087, 1089, 1097, 1098, 1099, 1102, 1105, 1106, 1107, 1108, 1117, 1119, 1120, 1121, 1123, 1132, 1150, 1151, 1153, 1172, 1175, 1201, 1205, 1209, 1213, 1264, 1265, 1266, 1280, 1285, 1293, 1295, 1308, 1309, 1322, 1324, 1325, 1348, 1350, 1355, 1356, 1357, 1364, 1379, 1382, 1390, 1391, 1392, 1397, 1399, 1414, 1434, 1442, 1443, 1479, 1491, 1496, 1497, 1501, 1502, 1503, 1536, 1543, 1545, 1582, 1583, 1607, 1608, 1609, 1610, 1640, 1641, 1642, 1643, 1645, 1654, 1658, 1659, 1660, 1661, 1685, 1691, 1699, 1707, 1710, 1711, 1712, 1716, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1732, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1787, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1810, 1811, 1825, 1834, 1836, 1838, 1845, 1846, 1847, 1862, 1863, 1865, 1866, 1867, 1870, 1876, 1877, 1879, 1881, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1899, 1902, 1904, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1938, 1942, 1943, 1944, 1946, 1947, 1952, 1956], "zero_grad": [0, 1, 28, 1193, 1427, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1684, 1888, 1892, 1896, 1900, 1902, 1912], "output": [0, 1, 4, 5, 7, 13, 18, 21, 22, 24, 28, 29, 30, 32, 38, 39, 45, 51, 52, 53, 55, 56, 64, 69, 128, 302, 310, 433, 434, 435, 437, 501, 505, 554, 605, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 708, 716, 717, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 765, 767, 768, 769, 770, 771, 773, 774, 775, 780, 781, 782, 784, 787, 790, 802, 805, 846, 849, 850, 851, 853, 862, 863, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 908, 910, 911, 912, 913, 914, 915, 916, 917, 920, 924, 927, 928, 929, 930, 931, 932, 933, 935, 938, 952, 953, 955, 956, 966, 979, 981, 982, 983, 1009, 1010, 1012, 1022, 1023, 1045, 1046, 1047, 1048, 1050, 1053, 1054, 1056, 1058, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1146, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1167, 1170, 1187, 1188, 1190, 1193, 1197, 1205, 1209, 1210, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1520, 1521, 1522, 1523, 1526, 1528, 1537, 1538, 1543, 1545, 1550, 1551, 1552, 1561, 1562, 1566, 1567, 1568, 1569, 1576, 1591, 1595, 1596, 1597, 1601, 1603, 1604, 1607, 1615, 1616, 1617, 1620, 1641, 1643, 1644, 1648, 1651, 1653, 1654, 1655, 1658, 1659, 1661, 1662, 1680, 1684, 1697, 1698, 1706, 1707, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1733, 1734, 1738, 1740, 1745, 1753, 1758, 1761, 1763, 1775, 1776, 1778, 1783, 1788, 1789, 1791, 1792, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1822, 1823, 1824, 1829, 1832, 1834, 1835, 1837, 1840, 1842, 1843, 1844, 1846, 1851, 1852, 1853, 1854, 1857, 1859, 1860, 1862, 1863, 1864, 1866, 1867, 1869, 1875, 1877, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1903, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1922, 1925, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1953, 1954], "loss_fn": [0, 28, 1679, 1888, 1892, 1893, 1902, 1912], "exit": [0, 1, 2, 4, 18, 24, 32, 41, 47, 54, 55, 882, 1607, 1869, 1881, 1889, 1894, 1902, 1910, 1923, 1947], "befor": [0, 1, 3, 6, 7, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 33, 38, 40, 41, 42, 43, 45, 47, 55, 86, 139, 735, 748, 776, 777, 778, 881, 885, 887, 938, 947, 969, 1047, 1048, 1049, 1058, 1066, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1107, 1108, 1111, 1119, 1122, 1193, 1205, 1207, 1230, 1246, 1250, 1263, 1293, 1305, 1322, 1325, 1364, 1370, 1371, 1374, 1379, 1427, 1428, 1429, 1466, 1470, 1478, 1526, 1545, 1582, 1583, 1598, 1601, 1602, 1603, 1604, 1607, 1615, 1648, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1693, 1707, 1710, 1736, 1745, 1756, 1757, 1787, 1790, 1793, 1794, 1795, 1797, 1798, 1807, 1810, 1832, 1843, 1866, 1868, 1869, 1881, 1888, 1889, 1892, 1893, 1894, 1897, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1930, 1932, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947], "step": [0, 1, 2, 4, 9, 14, 21, 22, 24, 25, 26, 28, 30, 42, 45, 47, 51, 55, 68, 526, 595, 674, 756, 757, 845, 853, 882, 883, 884, 911, 935, 1152, 1241, 1264, 1265, 1266, 1280, 1283, 1295, 1375, 1376, 1397, 1494, 1495, 1521, 1522, 1607, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1716, 1725, 1753, 1779, 1849, 1866, 1867, 1883, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1902, 1904, 1906, 1908, 1910, 1913, 1915, 1916, 1921, 1922, 1925, 1930, 1944, 1947, 1948, 1949, 1952, 1954], "usag": [0, 1, 4, 7, 9, 13, 15, 21, 24, 28, 30, 31, 32, 35, 38, 39, 41, 43, 47, 55, 56, 57, 736, 745, 780, 781, 782, 798, 799, 800, 801, 803, 804, 805, 842, 846, 878, 940, 1015, 1035, 1039, 1066, 1117, 1122, 1126, 1127, 1128, 1207, 1266, 1607, 1865, 1866, 1869, 1879, 1883, 1888, 1889, 1894, 1896, 1908, 1910, 1915, 1923, 1930, 1931, 1933, 1934, 1935, 1942, 1943, 1944, 1945, 1954], "along": [0, 14, 18, 21, 24, 30, 34, 41, 45, 56, 62, 302, 304, 306, 310, 481, 501, 503, 505, 674, 685, 807, 863, 864, 927, 934, 957, 966, 981, 983, 1049, 1057, 1058, 1065, 1066, 1082, 1087, 1090, 1094, 1097, 1100, 1106, 1134, 1135, 1158, 1167, 1170, 1215, 1226, 1262, 1315, 1322, 1326, 1327, 1336, 1337, 1338, 1344, 1362, 1375, 1376, 1417, 1420, 1421, 1422, 1460, 1462, 1491, 1499, 1508, 1521, 1522, 1525, 1528, 1545, 1550, 1551, 1552, 1562, 1582, 1583, 1625, 1627, 1634, 1635, 1644, 1653, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1691, 1710, 1730, 1731, 1736, 1747, 1783, 1787, 1790, 1791, 1799, 1804, 1822, 1826, 1829, 1832, 1841, 1854, 1857, 1859, 1864, 1868, 1873, 1884, 1890, 1894, 1896, 1899, 1900, 1908, 1913, 1916, 1926], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 15, 17, 20, 21, 22, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 47, 50, 51, 52, 53, 55, 70, 72, 74, 75, 139, 243, 244, 302, 310, 475, 476, 481, 483, 486, 501, 503, 505, 533, 606, 668, 723, 759, 768, 772, 781, 842, 847, 848, 849, 861, 874, 875, 876, 878, 880, 881, 887, 889, 891, 895, 896, 897, 901, 902, 911, 919, 922, 924, 930, 931, 932, 933, 940, 969, 970, 972, 974, 975, 991, 1010, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1036, 1044, 1049, 1055, 1064, 1066, 1070, 1082, 1083, 1085, 1087, 1106, 1107, 1108, 1109, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1141, 1142, 1146, 1155, 1156, 1168, 1174, 1178, 1180, 1181, 1193, 1207, 1210, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1266, 1269, 1272, 1274, 1284, 1285, 1308, 1309, 1312, 1323, 1335, 1339, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1372, 1388, 1397, 1423, 1424, 1425, 1427, 1433, 1439, 1440, 1441, 1442, 1454, 1466, 1474, 1491, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1515, 1517, 1518, 1526, 1529, 1530, 1531, 1532, 1537, 1541, 1545, 1546, 1556, 1563, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1594, 1595, 1596, 1597, 1598, 1607, 1608, 1614, 1616, 1617, 1652, 1653, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1697, 1708, 1709, 1735, 1741, 1745, 1753, 1755, 1786, 1787, 1811, 1832, 1834, 1843, 1846, 1849, 1857, 1858, 1864, 1865, 1866, 1868, 1869, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1954, 1955, 1956, 1957], "complex": [0, 1, 3, 7, 8, 21, 22, 24, 55, 300, 318, 471, 487, 673, 680, 896, 897, 932, 933, 951, 952, 1061, 1067, 1068, 1069, 1087, 1109, 1114, 1146, 1163, 1172, 1183, 1185, 1186, 1189, 1190, 1193, 1214, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1243, 1246, 1248, 1250, 1251, 1252, 1253, 1257, 1258, 1262, 1263, 1264, 1266, 1274, 1280, 1292, 1297, 1316, 1355, 1356, 1357, 1394, 1427, 1501, 1502, 1503, 1614, 1654, 1703, 1716, 1729, 1750, 1761, 1807, 1808, 1811, 1846, 1854, 1855, 1856, 1864, 1865, 1867, 1869, 1870, 1878, 1902, 1908, 1911, 1927, 1928, 1931, 1932, 1944, 1945, 1946], "scenario": [0, 21, 24, 41, 1660, 1847, 1892, 1897, 1902, 1908, 1910, 1915, 1921, 1944, 1945], "g": [0, 1, 2, 3, 5, 7, 11, 13, 14, 15, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 47, 50, 52, 54, 55, 56, 63, 64, 568, 605, 736, 745, 748, 781, 782, 803, 805, 842, 847, 849, 850, 877, 886, 896, 897, 921, 1012, 1066, 1117, 1123, 1127, 1128, 1143, 1146, 1168, 1190, 1193, 1200, 1201, 1209, 1265, 1350, 1351, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1387, 1393, 1397, 1398, 1427, 1428, 1437, 1442, 1458, 1510, 1512, 1513, 1514, 1519, 1526, 1607, 1608, 1609, 1610, 1651, 1654, 1664, 1665, 1666, 1667, 1670, 1676, 1677, 1678, 1679, 1731, 1738, 1749, 1753, 1756, 1774, 1796, 1807, 1864, 1866, 1868, 1869, 1870, 1873, 1876, 1881, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1908, 1910, 1912, 1913, 1915, 1916, 1921, 1925, 1928, 1929, 1930, 1940, 1942, 1943, 1944, 1952, 1954, 1955], "penalti": [0, 769, 1023, 1663, 1664, 1665, 1666, 1668, 1670, 1676, 1677, 1679, 1917], "multipl": [0, 1, 2, 3, 5, 21, 22, 24, 25, 26, 30, 31, 34, 41, 42, 43, 45, 47, 52, 54, 55, 68, 180, 197, 304, 501, 674, 676, 677, 683, 684, 748, 829, 862, 863, 866, 895, 928, 930, 940, 954, 958, 981, 982, 983, 1009, 1064, 1066, 1069, 1119, 1127, 1128, 1129, 1130, 1133, 1134, 1138, 1142, 1156, 1157, 1207, 1210, 1215, 1216, 1231, 1232, 1233, 1249, 1254, 1259, 1260, 1288, 1291, 1296, 1298, 1343, 1344, 1358, 1359, 1360, 1361, 1363, 1371, 1374, 1379, 1387, 1393, 1394, 1415, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1478, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1678, 1686, 1687, 1688, 1689, 1690, 1695, 1697, 1753, 1781, 1788, 1789, 1793, 1794, 1795, 1797, 1798, 1826, 1827, 1834, 1842, 1846, 1857, 1858, 1864, 1865, 1868, 1869, 1881, 1882, 1883, 1884, 1889, 1891, 1893, 1895, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1913, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1935, 1936, 1938, 1939, 1943, 1944, 1953], "custom": [0, 1, 3, 5, 14, 15, 21, 24, 25, 26, 27, 28, 34, 37, 38, 40, 45, 47, 56, 58, 69, 71, 72, 73, 74, 76, 487, 781, 785, 802, 803, 804, 805, 826, 828, 847, 848, 849, 850, 887, 940, 942, 968, 977, 1041, 1193, 1427, 1470, 1474, 1475, 1476, 1621, 1630, 1647, 1685, 1847, 1849, 1865, 1870, 1873, 1875, 1881, 1882, 1889, 1899, 1904, 1905, 1906, 1908, 1919, 1920, 1934, 1936, 1943, 1945, 1947], "autograd": [0, 4, 5, 7, 8, 13, 24, 28, 30, 45, 47, 48, 51, 56, 128, 324, 433, 434, 435, 436, 437, 476, 484, 677, 853, 867, 868, 882, 909, 918, 937, 942, 1012, 1067, 1068, 1069, 1079, 1084, 1102, 1119, 1120, 1121, 1122, 1123, 1132, 1134, 1150, 1151, 1168, 1193, 1213, 1233, 1264, 1280, 1288, 1298, 1381, 1427, 1433, 1474, 1528, 1543, 1607, 1658, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1857, 1862, 1863, 1865, 1867, 1871, 1876, 1884, 1887, 1892, 1893, 1896, 1897, 1899, 1900, 1915, 1931, 1932, 1936, 1944, 1945, 1950, 1954, 1955], "function": [0, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 17, 18, 20, 21, 25, 26, 28, 29, 31, 32, 34, 38, 39, 41, 42, 45, 47, 50, 52, 54, 56, 58, 59, 63, 64, 67, 69, 70, 72, 73, 76, 77, 108, 139, 184, 249, 278, 287, 310, 475, 476, 481, 484, 505, 529, 544, 668, 677, 681, 682, 686, 687, 736, 745, 746, 748, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 785, 786, 788, 802, 803, 804, 805, 812, 814, 826, 829, 842, 845, 847, 849, 850, 851, 865, 866, 881, 882, 883, 884, 895, 896, 897, 901, 902, 905, 909, 918, 920, 928, 930, 934, 937, 940, 942, 943, 944, 945, 947, 951, 952, 961, 962, 963, 964, 965, 967, 968, 970, 972, 974, 977, 994, 995, 998, 1003, 1004, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1022, 1023, 1030, 1031, 1033, 1034, 1035, 1039, 1049, 1054, 1056, 1057, 1064, 1066, 1070, 1082, 1083, 1085, 1105, 1109, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1138, 1139, 1146, 1150, 1151, 1152, 1154, 1156, 1164, 1165, 1166, 1168, 1180, 1190, 1191, 1192, 1193, 1194, 1196, 1198, 1199, 1200, 1204, 1205, 1206, 1207, 1209, 1211, 1213, 1214, 1215, 1217, 1222, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1245, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1280, 1283, 1284, 1288, 1291, 1294, 1296, 1298, 1299, 1300, 1319, 1322, 1323, 1339, 1343, 1349, 1350, 1352, 1353, 1354, 1361, 1365, 1369, 1372, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1393, 1395, 1396, 1397, 1398, 1413, 1416, 1417, 1419, 1426, 1427, 1432, 1433, 1435, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1474, 1475, 1476, 1478, 1480, 1482, 1483, 1484, 1599, 1603, 1604, 1607, 1614, 1615, 1619, 1630, 1640, 1641, 1642, 1644, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1687, 1690, 1691, 1692, 1697, 1698, 1699, 1703, 1709, 1716, 1720, 1725, 1738, 1747, 1748, 1749, 1752, 1755, 1761, 1769, 1773, 1774, 1779, 1782, 1784, 1785, 1786, 1787, 1788, 1790, 1796, 1803, 1807, 1813, 1814, 1822, 1826, 1828, 1832, 1842, 1843, 1844, 1846, 1847, 1854, 1855, 1856, 1857, 1858, 1863, 1864, 1865, 1870, 1873, 1875, 1878, 1879, 1881, 1883, 1887, 1890, 1892, 1893, 1894, 1896, 1899, 1900, 1902, 1903, 1908, 1912, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1947, 1949, 1950, 1951, 1953, 1954], "autocastmodel": 0, "nn": [0, 3, 5, 13, 15, 21, 22, 24, 25, 28, 29, 42, 45, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 287, 529, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 780, 781, 802, 842, 847, 848, 849, 850, 852, 1009, 1012, 1066, 1122, 1131, 1132, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1209, 1210, 1211, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1598, 1607, 1608, 1609, 1610, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1782, 1807, 1846, 1847, 1864, 1865, 1866, 1867, 1871, 1883, 1884, 1888, 1893, 1896, 1900, 1902, 1903, 1904, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1918, 1921, 1930, 1932, 1935, 1936, 1940, 1943, 1944, 1947, 1952, 1953, 1954], "modul": [0, 1, 3, 5, 6, 8, 11, 13, 14, 18, 22, 24, 26, 28, 29, 33, 35, 38, 41, 42, 45, 47, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 475, 476, 668, 674, 677, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 726, 727, 728, 733, 734, 735, 744, 749, 750, 751, 752, 753, 776, 777, 778, 779, 780, 781, 785, 787, 788, 790, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 826, 827, 828, 842, 845, 846, 847, 848, 849, 850, 852, 901, 902, 908, 920, 940, 1012, 1122, 1131, 1132, 1134, 1168, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1265, 1288, 1298, 1335, 1339, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1380, 1382, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1428, 1429, 1437, 1438, 1443, 1455, 1460, 1466, 1470, 1474, 1517, 1518, 1591, 1598, 1607, 1608, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1647, 1648, 1649, 1651, 1680, 1741, 1786, 1847, 1849, 1850, 1857, 1864, 1865, 1870, 1875, 1877, 1879, 1881, 1883, 1884, 1887, 1891, 1892, 1893, 1896, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1918, 1919, 1921, 1924, 1925, 1926, 1930, 1933, 1934, 1935, 1936, 1940, 1941, 1943, 1944, 1948, 1952, 1953, 1954, 1955], "def": [0, 1, 13, 21, 22, 24, 25, 26, 30, 32, 33, 34, 38, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 387, 780, 781, 849, 850, 878, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 940, 1070, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1132, 1133, 1134, 1168, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1476, 1576, 1598, 1607, 1619, 1652, 1786, 1857, 1864, 1866, 1868, 1869, 1873, 1883, 1888, 1889, 1891, 1893, 1894, 1895, 1896, 1900, 1902, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1952, 1953, 1954, 1955], "self": [0, 1, 9, 13, 18, 21, 22, 24, 26, 32, 33, 38, 43, 45, 47, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 86, 128, 139, 142, 143, 144, 159, 161, 164, 167, 168, 169, 179, 180, 184, 185, 197, 205, 207, 221, 222, 229, 243, 244, 247, 248, 256, 275, 279, 286, 300, 302, 304, 306, 308, 310, 312, 314, 315, 317, 318, 319, 320, 322, 330, 366, 382, 387, 389, 390, 391, 442, 459, 469, 471, 485, 486, 487, 488, 501, 503, 505, 508, 511, 513, 525, 531, 532, 533, 534, 546, 548, 568, 569, 571, 572, 573, 575, 576, 592, 595, 596, 602, 605, 606, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 849, 850, 906, 1122, 1123, 1132, 1163, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1204, 1205, 1209, 1210, 1211, 1335, 1339, 1372, 1379, 1397, 1426, 1427, 1428, 1429, 1433, 1437, 1438, 1442, 1454, 1456, 1466, 1472, 1474, 1556, 1579, 1598, 1616, 1617, 1619, 1625, 1627, 1640, 1649, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1706, 1727, 1866, 1867, 1868, 1869, 1873, 1879, 1882, 1883, 1887, 1889, 1890, 1891, 1894, 1896, 1900, 1905, 1908, 1910, 1913, 1914, 1916, 1921, 1927, 1940, 1941, 1947, 1949, 1952, 1953, 1954], "produc": [0, 7, 14, 21, 24, 26, 31, 33, 35, 38, 43, 45, 52, 53, 54, 55, 68, 77, 720, 726, 727, 728, 733, 734, 744, 752, 780, 781, 911, 931, 1005, 1097, 1098, 1099, 1117, 1127, 1128, 1134, 1146, 1205, 1209, 1210, 1213, 1229, 1230, 1233, 1240, 1241, 1252, 1257, 1291, 1294, 1295, 1296, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1433, 1510, 1518, 1526, 1537, 1595, 1596, 1597, 1654, 1680, 1709, 1716, 1725, 1811, 1846, 1857, 1866, 1868, 1869, 1881, 1882, 1888, 1889, 1890, 1892, 1894, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1910, 1925, 1929, 1940, 1942, 1944, 1947, 1950, 1954], "after": [0, 1, 7, 9, 13, 14, 21, 22, 24, 25, 26, 28, 29, 41, 43, 47, 54, 55, 56, 61, 62, 249, 476, 748, 778, 845, 847, 849, 850, 881, 882, 885, 940, 947, 967, 969, 1005, 1012, 1065, 1123, 1178, 1193, 1197, 1249, 1265, 1288, 1305, 1331, 1364, 1379, 1412, 1427, 1430, 1470, 1472, 1474, 1491, 1526, 1598, 1601, 1607, 1619, 1621, 1625, 1627, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1691, 1693, 1749, 1807, 1832, 1847, 1849, 1859, 1864, 1868, 1869, 1879, 1881, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1903, 1910, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1924, 1926, 1928, 1930, 1939, 1941, 1944, 1945, 1947, 1948, 1950, 1952, 1953, 1954], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 108, 142, 144, 159, 161, 164, 167, 168, 169, 179, 180, 184, 185, 195, 197, 198, 205, 207, 208, 210, 221, 222, 229, 231, 243, 249, 256, 278, 286, 300, 308, 312, 314, 315, 317, 318, 319, 320, 322, 326, 328, 330, 341, 366, 382, 423, 433, 434, 435, 436, 437, 446, 460, 461, 462, 463, 464, 466, 471, 475, 476, 484, 485, 486, 501, 503, 511, 513, 525, 531, 532, 544, 545, 546, 547, 548, 568, 569, 570, 571, 577, 591, 592, 595, 597, 601, 602, 605, 672, 680, 681, 683, 684, 685, 686, 687, 723, 754, 755, 758, 759, 763, 764, 765, 766, 769, 772, 779, 780, 781, 782, 802, 803, 804, 805, 824, 828, 829, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 905, 906, 907, 909, 910, 911, 918, 919, 921, 924, 926, 928, 929, 930, 931, 933, 934, 935, 937, 939, 940, 941, 942, 943, 946, 951, 952, 954, 955, 956, 958, 961, 962, 963, 964, 966, 967, 969, 970, 972, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1060, 1066, 1067, 1068, 1069, 1070, 1071, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1149, 1150, 1151, 1153, 1154, 1155, 1159, 1163, 1167, 1168, 1169, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1218, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1302, 1303, 1305, 1306, 1312, 1317, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1331, 1335, 1336, 1337, 1338, 1343, 1344, 1361, 1362, 1363, 1364, 1371, 1375, 1376, 1387, 1393, 1394, 1417, 1418, 1419, 1420, 1421, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1441, 1455, 1458, 1459, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1496, 1498, 1499, 1500, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1569, 1571, 1572, 1574, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1589, 1591, 1592, 1593, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1699, 1700, 1702, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1738, 1740, 1745, 1746, 1747, 1748, 1754, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1783, 1785, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1807, 1810, 1811, 1812, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1829, 1830, 1831, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1851, 1853, 1855, 1856, 1857, 1860, 1862, 1863, 1864, 1866, 1870, 1873, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1952, 1953, 1954, 1955, 1956, 1957], "disabl": [0, 2, 5, 25, 30, 47, 55, 798, 799, 940, 1012, 1066, 1070, 1122, 1168, 1193, 1195, 1209, 1210, 1427, 1433, 1466, 1474, 1576, 1607, 1608, 1649, 1652, 1754, 1755, 1758, 1786, 1865, 1868, 1875, 1888, 1891, 1892, 1893, 1894, 1898, 1903, 1904, 1910, 1914, 1920, 1925, 1932, 1943, 1948, 1951, 1954, 1956], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 21, 24, 26, 32, 33, 38, 41, 43, 45, 47, 51, 52, 54, 55, 139, 210, 243, 722, 881, 887, 891, 922, 1012, 1051, 1054, 1066, 1193, 1215, 1224, 1235, 1249, 1261, 1265, 1293, 1325, 1351, 1370, 1427, 1460, 1462, 1582, 1626, 1641, 1644, 1681, 1790, 1792, 1810, 1843, 1847, 1849, 1864, 1868, 1869, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1904, 1906, 1912, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1934, 1941, 1942, 1943, 1944, 1947, 1950, 1951, 1953, 1954], "differ": [0, 1, 3, 5, 8, 14, 18, 21, 24, 26, 28, 29, 30, 32, 33, 34, 38, 39, 41, 42, 44, 45, 47, 48, 51, 52, 53, 55, 185, 474, 481, 605, 668, 674, 677, 683, 684, 723, 748, 781, 784, 785, 810, 812, 813, 849, 850, 853, 867, 868, 896, 897, 908, 920, 921, 958, 1049, 1054, 1056, 1058, 1066, 1106, 1107, 1108, 1112, 1113, 1119, 1122, 1127, 1128, 1134, 1146, 1167, 1193, 1199, 1204, 1209, 1223, 1229, 1230, 1240, 1241, 1249, 1252, 1257, 1261, 1288, 1298, 1335, 1344, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1379, 1380, 1388, 1390, 1391, 1392, 1393, 1397, 1398, 1414, 1427, 1430, 1433, 1448, 1449, 1451, 1452, 1453, 1455, 1458, 1466, 1472, 1474, 1476, 1479, 1482, 1483, 1484, 1491, 1499, 1517, 1526, 1537, 1539, 1550, 1551, 1552, 1576, 1598, 1607, 1609, 1610, 1614, 1649, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1685, 1693, 1699, 1709, 1731, 1805, 1806, 1811, 1832, 1843, 1844, 1846, 1852, 1853, 1857, 1864, 1866, 1868, 1869, 1871, 1875, 1876, 1881, 1882, 1884, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1906, 1908, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1928, 1930, 1931, 1932, 1935, 1936, 1938, 1941, 1943, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1954], "caus": [0, 1, 2, 3, 5, 14, 18, 21, 24, 28, 34, 40, 41, 42, 45, 52, 55, 73, 544, 605, 865, 868, 881, 943, 1119, 1205, 1209, 1229, 1230, 1257, 1312, 1537, 1538, 1595, 1598, 1607, 1653, 1662, 1749, 1760, 1807, 1846, 1866, 1869, 1881, 1890, 1892, 1894, 1896, 1902, 1904, 1906, 1910, 1913, 1916, 1917, 1923, 1925, 1928, 1943, 1945], "mismatch": [0, 24, 55, 74, 76, 868, 1194, 1661, 1662, 1868, 1888, 1893, 1894, 1896, 1910, 1932], "error": [0, 1, 5, 8, 14, 17, 18, 21, 22, 24, 25, 27, 30, 39, 41, 42, 45, 47, 50, 52, 54, 55, 56, 57, 71, 72, 73, 74, 76, 179, 210, 302, 304, 310, 312, 317, 476, 533, 544, 602, 605, 668, 807, 853, 866, 868, 887, 889, 890, 891, 892, 893, 894, 895, 967, 977, 1001, 1012, 1023, 1036, 1040, 1064, 1122, 1126, 1127, 1129, 1134, 1156, 1193, 1198, 1208, 1223, 1224, 1233, 1235, 1237, 1240, 1241, 1242, 1252, 1255, 1265, 1283, 1312, 1317, 1343, 1344, 1377, 1388, 1394, 1418, 1427, 1456, 1458, 1524, 1535, 1557, 1576, 1579, 1580, 1607, 1609, 1610, 1611, 1649, 1654, 1661, 1662, 1705, 1745, 1752, 1796, 1802, 1807, 1846, 1849, 1857, 1858, 1864, 1865, 1866, 1868, 1869, 1875, 1876, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1897, 1898, 1904, 1908, 1910, 1913, 1919, 1921, 1926, 1931, 1932, 1934, 1935, 1939, 1942, 1943, 1944, 1956], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 63, 64, 65, 66, 71, 72, 73, 74, 76, 86, 139, 143, 184, 195, 198, 243, 304, 308, 310, 433, 434, 435, 436, 437, 446, 459, 469, 484, 487, 505, 508, 525, 533, 568, 569, 571, 572, 573, 575, 576, 591, 595, 605, 668, 674, 677, 678, 679, 681, 683, 684, 685, 687, 723, 744, 748, 752, 767, 769, 773, 782, 783, 805, 808, 809, 810, 813, 842, 846, 849, 853, 862, 863, 864, 865, 866, 867, 868, 877, 879, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 908, 909, 911, 918, 920, 921, 922, 924, 928, 930, 931, 934, 935, 942, 948, 951, 952, 953, 957, 958, 966, 969, 970, 972, 974, 977, 979, 981, 983, 990, 1001, 1007, 1012, 1013, 1033, 1036, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1066, 1067, 1068, 1069, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1109, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1135, 1146, 1150, 1151, 1153, 1154, 1155, 1156, 1167, 1170, 1184, 1190, 1193, 1196, 1197, 1198, 1201, 1203, 1205, 1206, 1209, 1210, 1213, 1214, 1215, 1219, 1223, 1224, 1229, 1230, 1232, 1233, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1276, 1280, 1281, 1283, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1312, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1381, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1482, 1483, 1484, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1537, 1538, 1543, 1545, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1563, 1566, 1569, 1570, 1576, 1582, 1583, 1594, 1595, 1601, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1697, 1698, 1703, 1707, 1709, 1710, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1730, 1731, 1736, 1738, 1741, 1745, 1747, 1749, 1752, 1753, 1758, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1783, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1805, 1806, 1807, 1810, 1811, 1822, 1825, 1826, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1846, 1849, 1851, 1852, 1853, 1857, 1862, 1863, 1864, 1866, 1869, 1871, 1873, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1955, 1956], "so": [0, 1, 2, 3, 7, 9, 14, 17, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 41, 42, 44, 45, 47, 50, 51, 52, 54, 55, 56, 65, 66, 324, 446, 484, 668, 847, 882, 887, 889, 890, 895, 937, 940, 968, 991, 1054, 1056, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1117, 1119, 1122, 1126, 1127, 1129, 1130, 1180, 1190, 1193, 1196, 1197, 1203, 1205, 1207, 1249, 1251, 1261, 1266, 1271, 1283, 1304, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1374, 1381, 1427, 1443, 1460, 1462, 1478, 1491, 1501, 1502, 1503, 1526, 1582, 1583, 1598, 1607, 1653, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1775, 1790, 1802, 1807, 1811, 1831, 1843, 1847, 1851, 1866, 1868, 1869, 1875, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1916, 1920, 1921, 1925, 1926, 1928, 1930, 1931, 1933, 1939, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1953, 1954, 1956], "cast": [0, 6, 22, 39, 47, 75, 324, 591, 592, 925, 1047, 1048, 1193, 1246, 1250, 1263, 1293, 1322, 1325, 1427, 1545, 1582, 1583, 1654, 1707, 1787, 1790, 1796, 1810, 1815, 1816, 1866, 1888, 1903, 1910, 1926, 1927, 1928, 1944], "back": [0, 1, 2, 14, 21, 22, 24, 26, 29, 30, 41, 45, 47, 52, 55, 56, 61, 64, 723, 825, 896, 937, 940, 1086, 1123, 1194, 1207, 1259, 1265, 1473, 1611, 1612, 1792, 1864, 1866, 1869, 1889, 1894, 1895, 1902, 1903, 1904, 1910, 1912, 1913, 1916, 1921, 1925, 1939, 1944, 1946, 1947, 1955], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 43, 44, 45, 47, 48, 50, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 77, 142, 143, 162, 185, 210, 211, 222, 247, 275, 302, 304, 308, 310, 366, 391, 436, 442, 459, 461, 462, 469, 474, 475, 476, 481, 487, 501, 503, 505, 532, 534, 548, 568, 595, 596, 598, 605, 668, 700, 701, 702, 703, 704, 705, 708, 716, 717, 720, 723, 726, 727, 728, 729, 730, 731, 733, 734, 744, 748, 752, 760, 761, 762, 769, 776, 777, 780, 781, 782, 785, 788, 803, 804, 805, 812, 814, 828, 842, 846, 848, 849, 850, 852, 853, 867, 868, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 901, 902, 909, 910, 918, 919, 924, 925, 937, 968, 969, 972, 981, 982, 983, 1001, 1005, 1023, 1050, 1066, 1067, 1068, 1069, 1086, 1088, 1089, 1094, 1095, 1096, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1150, 1151, 1155, 1170, 1190, 1191, 1193, 1194, 1196, 1198, 1199, 1200, 1201, 1204, 1205, 1217, 1233, 1237, 1246, 1249, 1250, 1263, 1264, 1265, 1266, 1280, 1284, 1285, 1298, 1303, 1305, 1308, 1309, 1310, 1312, 1317, 1326, 1327, 1335, 1339, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1388, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1428, 1429, 1433, 1437, 1438, 1442, 1444, 1445, 1466, 1471, 1472, 1474, 1476, 1478, 1479, 1491, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1537, 1550, 1551, 1552, 1564, 1594, 1598, 1607, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1651, 1655, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1702, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1731, 1732, 1735, 1737, 1738, 1745, 1758, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1808, 1812, 1822, 1825, 1834, 1836, 1838, 1843, 1844, 1846, 1848, 1849, 1851, 1860, 1865, 1866, 1867, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1887, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1912, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1953, 1954, 1955, 1956], "alreadi": [0, 1, 11, 21, 22, 24, 25, 41, 42, 47, 54, 55, 184, 195, 198, 451, 474, 512, 568, 591, 592, 780, 828, 842, 846, 867, 977, 1003, 1193, 1203, 1265, 1427, 1602, 1607, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1841, 1843, 1849, 1864, 1866, 1876, 1878, 1882, 1883, 1888, 1889, 1892, 1894, 1897, 1902, 1910, 1912, 1913, 1916, 1922, 1923, 1925, 1927, 1929, 1939, 1941, 1943], "incur": [0, 5, 22, 24, 47, 930, 1902, 1921], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 21, 24, 25, 26, 30, 35, 41, 42, 47, 54, 55, 56, 64, 324, 501, 595, 737, 739, 740, 741, 742, 746, 748, 769, 783, 802, 847, 1023, 1190, 1193, 1197, 1203, 1208, 1335, 1346, 1347, 1348, 1358, 1359, 1360, 1371, 1378, 1379, 1381, 1388, 1391, 1392, 1399, 1406, 1407, 1408, 1412, 1413, 1414, 1415, 1417, 1423, 1424, 1425, 1427, 1433, 1435, 1460, 1462, 1466, 1470, 1472, 1474, 1476, 1497, 1504, 1505, 1506, 1543, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1753, 1843, 1844, 1855, 1866, 1868, 1869, 1875, 1879, 1882, 1883, 1884, 1889, 1891, 1892, 1894, 1895, 1899, 1902, 1903, 1906, 1910, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1929, 1932, 1939, 1942, 1944, 1950, 1951, 1954, 1956], "overhead": [0, 1, 3, 4, 8, 22, 24, 47, 769, 940, 1023, 1205, 1607, 1889, 1891, 1892, 1893, 1898, 1899, 1902, 1914, 1915, 1922, 1925, 1931, 1939, 1943, 1944, 1946, 1947, 1948], "here": [0, 1, 7, 8, 9, 13, 15, 18, 21, 22, 24, 25, 30, 40, 42, 45, 49, 50, 51, 52, 54, 55, 74, 76, 568, 781, 782, 956, 975, 1066, 1083, 1085, 1086, 1091, 1092, 1093, 1095, 1096, 1101, 1103, 1122, 1132, 1191, 1205, 1345, 1346, 1347, 1358, 1359, 1360, 1390, 1391, 1392, 1435, 1466, 1526, 1528, 1616, 1677, 1680, 1691, 1753, 1778, 1864, 1866, 1868, 1869, 1871, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1910, 1912, 1913, 1914, 1916, 1919, 1925, 1929, 1930, 1932, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1954], "assum": [0, 11, 13, 21, 24, 29, 30, 32, 34, 41, 42, 45, 47, 50, 53, 55, 805, 1049, 1084, 1087, 1089, 1097, 1098, 1099, 1102, 1184, 1190, 1191, 1194, 1209, 1229, 1230, 1232, 1239, 1248, 1251, 1254, 1256, 1266, 1350, 1419, 1479, 1510, 1576, 1607, 1616, 1619, 1644, 1681, 1682, 1687, 1688, 1689, 1692, 1694, 1695, 1699, 1812, 1832, 1834, 1849, 1864, 1866, 1868, 1869, 1882, 1889, 1892, 1894, 1895, 1897, 1899, 1902, 1903, 1910, 1912, 1913, 1914, 1921, 1922, 1923, 1925, 1941, 1942, 1950], "a_float32": 0, "rand": [0, 1, 18, 30, 45, 55, 324, 681, 687, 889, 890, 891, 892, 893, 894, 958, 1009, 1010, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1124, 1199, 1200, 1205, 1209, 1210, 1211, 1267, 1268, 1270, 1343, 1393, 1470, 1471, 1472, 1473, 1474, 1498, 1517, 1518, 1576, 1607, 1619, 1652, 1702, 1713, 1714, 1715, 1719, 1866, 1867, 1868, 1869, 1871, 1882, 1883, 1908, 1910, 1911, 1914, 1916, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 1949, 1952], "8": [0, 1, 14, 20, 21, 22, 24, 30, 32, 45, 56, 61, 302, 304, 306, 310, 390, 391, 459, 501, 505, 548, 595, 605, 673, 674, 685, 686, 733, 734, 749, 751, 753, 761, 762, 808, 809, 810, 813, 892, 911, 919, 930, 933, 934, 938, 1009, 1010, 1045, 1049, 1064, 1069, 1082, 1098, 1099, 1105, 1106, 1109, 1116, 1146, 1155, 1156, 1217, 1246, 1249, 1250, 1251, 1259, 1261, 1264, 1265, 1326, 1327, 1332, 1333, 1334, 1336, 1337, 1338, 1351, 1362, 1397, 1423, 1424, 1430, 1432, 1434, 1441, 1442, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1466, 1470, 1471, 1472, 1473, 1474, 1478, 1502, 1505, 1508, 1564, 1569, 1574, 1575, 1576, 1654, 1655, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1685, 1693, 1698, 1702, 1706, 1726, 1736, 1737, 1738, 1745, 1753, 1758, 1765, 1768, 1773, 1779, 1783, 1791, 1793, 1794, 1799, 1807, 1811, 1821, 1826, 1827, 1828, 1830, 1832, 1841, 1846, 1851, 1858, 1866, 1870, 1876, 1892, 1894, 1905, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1919, 1921, 1925, 1926, 1928, 1929, 1931, 1941, 1947, 1954], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1197, 1249, 1288, 1437, 1438, 1709, 1811, 1846, 1867, 1868, 1882, 1888, 1891, 1894, 1903, 1911, 1925, 1948, 1949], "list": [0, 1, 3, 5, 6, 7, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 32, 41, 43, 45, 47, 52, 54, 55, 56, 57, 61, 62, 63, 64, 72, 173, 230, 291, 433, 435, 437, 566, 571, 572, 573, 577, 607, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 780, 781, 786, 802, 803, 804, 805, 826, 842, 849, 867, 874, 875, 876, 922, 923, 926, 930, 934, 939, 940, 942, 946, 993, 999, 1051, 1064, 1066, 1067, 1106, 1120, 1132, 1146, 1156, 1193, 1197, 1199, 1200, 1205, 1207, 1209, 1210, 1293, 1295, 1325, 1364, 1370, 1399, 1427, 1429, 1438, 1455, 1466, 1477, 1517, 1591, 1607, 1608, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1658, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1685, 1687, 1689, 1690, 1691, 1693, 1694, 1712, 1714, 1715, 1718, 1722, 1737, 1774, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1805, 1806, 1810, 1825, 1826, 1827, 1843, 1844, 1846, 1847, 1849, 1852, 1853, 1858, 1862, 1864, 1866, 1867, 1870, 1871, 1875, 1877, 1879, 1882, 1883, 1884, 1894, 1898, 1900, 1903, 1904, 1905, 1907, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1954, 1955, 1956], "No": [0, 9, 13, 44, 54, 56, 64, 888, 1607, 1652, 1868, 1892, 1910, 1919, 1929, 1932, 1939], "manual": [0, 21, 24, 39, 41, 42, 44, 47, 55, 785, 826, 866, 895, 1155, 1197, 1343, 1344, 1363, 1431, 1432, 1434, 1455, 1474, 1498, 1499, 1509, 1561, 1619, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1866, 1869, 1881, 1888, 1892, 1894, 1895, 1896, 1897, 1900, 1906, 1910, 1916, 1917, 1930, 1939, 1942, 1951], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 41, 42, 47, 54, 55, 475, 476, 828, 878, 888, 901, 902, 942, 953, 969, 984, 1011, 1024, 1066, 1112, 1113, 1134, 1193, 1224, 1364, 1427, 1474, 1476, 1526, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1729, 1775, 1812, 1857, 1864, 1879, 1881, 1883, 1892, 1894, 1895, 1896, 1897, 1902, 1907, 1908, 1910, 1913, 1916, 1921, 1923, 1932, 1933, 1939, 1943, 1945, 1947, 1950], "f_float16": 0, "g_float32": 0, "epoch": [0, 21, 34, 44, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1879, 1888, 1902, 1912, 1930], "eval": [0, 55, 802, 848, 849, 1132, 1193, 1197, 1203, 1209, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1433, 1466, 1474, 1615, 1869, 1877, 1900, 1907, 1910, 1916, 1935, 1942, 1955], "jit": [0, 11, 14, 45, 1009, 1010, 1041, 1143, 1191, 1192, 1193, 1208, 1660, 1661, 1756, 1757, 1865, 1868, 1871, 1877, 1883, 1891, 1899, 1905, 1907, 1910, 1916, 1921, 1930, 1940, 1941, 1942, 1944, 1946], "trace": [0, 1, 5, 13, 15, 18, 21, 22, 24, 34, 45, 56, 59, 60, 61, 62, 65, 66, 68, 668, 903, 904, 905, 940, 1066, 1196, 1205, 1206, 1210, 1266, 1308, 1309, 1310, 1662, 1848, 1865, 1867, 1868, 1869, 1871, 1875, 1889, 1892, 1893, 1905, 1907, 1908, 1911, 1913, 1930, 1936, 1940, 1942, 1943, 1946, 1947, 1948, 1950, 1954, 1956], "testmodel": 0, "__init__": [0, 1, 13, 21, 22, 24, 30, 45, 55, 56, 61, 63, 64, 66, 849, 850, 1132, 1191, 1194, 1196, 1199, 1200, 1205, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1598, 1866, 1868, 1869, 1879, 1889, 1894, 1896, 1900, 1905, 1908, 1910, 1913, 1916, 1930, 1940, 1942, 1952, 1953, 1954], "input_s": [0, 722, 748, 749, 753, 1379, 1380, 1397, 1398, 1442, 1443, 1444, 1867], "num_class": [0, 1563, 1867, 1946], "super": [0, 9, 13, 21, 22, 24, 26, 45, 55, 56, 61, 63, 64, 66, 849, 850, 1132, 1191, 1196, 1199, 1200, 1205, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1439, 1440, 1598, 1691, 1866, 1868, 1869, 1870, 1889, 1894, 1900, 1905, 1908, 1910, 1913, 1916, 1940, 1952, 1953, 1954], "fc1": [0, 22, 1598, 1908, 1914], "x": [0, 1, 3, 11, 13, 14, 21, 22, 24, 30, 32, 38, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 162, 243, 247, 275, 278, 300, 302, 304, 306, 310, 341, 366, 436, 471, 481, 487, 546, 548, 571, 595, 596, 605, 680, 746, 748, 758, 767, 768, 772, 773, 784, 787, 790, 808, 809, 849, 850, 866, 872, 874, 875, 876, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 922, 923, 924, 927, 928, 933, 940, 951, 954, 957, 958, 1009, 1010, 1049, 1056, 1060, 1061, 1066, 1070, 1080, 1081, 1082, 1083, 1085, 1086, 1091, 1092, 1094, 1096, 1100, 1101, 1103, 1106, 1107, 1108, 1116, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1146, 1163, 1167, 1168, 1180, 1198, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1215, 1225, 1238, 1239, 1243, 1246, 1250, 1254, 1256, 1259, 1260, 1261, 1262, 1263, 1266, 1271, 1272, 1273, 1281, 1284, 1287, 1288, 1295, 1321, 1322, 1326, 1327, 1333, 1334, 1343, 1344, 1345, 1346, 1347, 1349, 1361, 1363, 1369, 1375, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1416, 1417, 1418, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1476, 1479, 1500, 1524, 1526, 1530, 1531, 1537, 1541, 1545, 1556, 1561, 1566, 1570, 1572, 1577, 1578, 1579, 1583, 1584, 1586, 1587, 1588, 1595, 1598, 1615, 1617, 1619, 1640, 1641, 1642, 1643, 1644, 1649, 1652, 1653, 1654, 1661, 1664, 1685, 1699, 1700, 1711, 1713, 1727, 1730, 1731, 1733, 1734, 1736, 1737, 1741, 1745, 1755, 1783, 1785, 1788, 1802, 1805, 1806, 1807, 1813, 1814, 1820, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1844, 1845, 1851, 1852, 1853, 1855, 1856, 1857, 1860, 1864, 1866, 1867, 1868, 1869, 1870, 1881, 1882, 1883, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1906, 1908, 1909, 1910, 1913, 1916, 1921, 1925, 1926, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1952, 1954], "2": [0, 1, 3, 11, 13, 14, 18, 19, 20, 21, 22, 24, 25, 28, 30, 31, 32, 34, 39, 41, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 162, 180, 197, 214, 222, 223, 243, 249, 302, 304, 306, 310, 324, 366, 390, 391, 433, 434, 435, 436, 437, 469, 475, 476, 481, 484, 487, 501, 503, 505, 532, 546, 548, 568, 569, 571, 572, 573, 575, 576, 577, 595, 605, 668, 669, 671, 672, 673, 674, 677, 678, 679, 680, 681, 683, 685, 686, 687, 722, 726, 727, 728, 729, 730, 731, 733, 734, 743, 746, 748, 750, 781, 784, 808, 853, 862, 863, 864, 865, 866, 867, 868, 872, 874, 875, 876, 878, 887, 889, 890, 891, 892, 893, 894, 901, 902, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 930, 931, 932, 933, 934, 938, 939, 948, 951, 952, 953, 954, 957, 958, 966, 1040, 1045, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1137, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1167, 1168, 1170, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1196, 1197, 1203, 1205, 1207, 1209, 1213, 1214, 1215, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1381, 1383, 1384, 1385, 1386, 1388, 1395, 1396, 1397, 1398, 1399, 1413, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1491, 1493, 1498, 1499, 1510, 1517, 1518, 1524, 1526, 1528, 1530, 1537, 1543, 1550, 1551, 1552, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1576, 1592, 1598, 1607, 1611, 1614, 1615, 1619, 1631, 1632, 1633, 1634, 1636, 1637, 1640, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1692, 1693, 1694, 1698, 1699, 1700, 1702, 1703, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1720, 1722, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1758, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1783, 1784, 1785, 1786, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1820, 1821, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1867, 1868, 1869, 1870, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1952, 1953], "we": [0, 1, 2, 5, 7, 8, 9, 11, 13, 14, 15, 21, 22, 24, 26, 28, 29, 30, 31, 32, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 65, 66, 75, 484, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 767, 773, 776, 777, 779, 781, 782, 826, 845, 847, 849, 850, 853, 881, 882, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 909, 918, 940, 1023, 1066, 1084, 1086, 1087, 1088, 1089, 1096, 1101, 1102, 1103, 1117, 1126, 1127, 1129, 1134, 1146, 1150, 1151, 1167, 1191, 1193, 1196, 1197, 1205, 1207, 1209, 1249, 1252, 1257, 1265, 1266, 1285, 1317, 1335, 1343, 1344, 1393, 1427, 1479, 1526, 1528, 1537, 1595, 1602, 1607, 1614, 1616, 1625, 1627, 1630, 1634, 1635, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1693, 1710, 1753, 1843, 1847, 1857, 1864, 1865, 1866, 1868, 1869, 1871, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1889, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1928, 1930, 1934, 1935, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954], "suggest": [0, 9, 22, 45, 48, 71, 72, 74, 76, 1361, 1864, 1871, 1888, 1889, 1896, 1925, 1948, 1954], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 20, 21, 24, 31, 45, 47, 48, 50, 52, 55, 56, 73, 74, 889, 895, 940, 942, 943, 1117, 1128, 1130, 1134, 1239, 1283, 1295, 1393, 1397, 1423, 1424, 1425, 1442, 1479, 1537, 1538, 1651, 1749, 1857, 1864, 1865, 1869, 1871, 1876, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1902, 1903, 1904, 1906, 1910, 1913, 1916, 1917, 1921, 1925, 1926, 1928, 1939, 1944, 1945, 1954, 1956], "http": [0, 2, 3, 4, 7, 9, 13, 14, 15, 22, 23, 24, 29, 30, 41, 42, 47, 139, 668, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 780, 781, 881, 940, 1066, 1123, 1266, 1295, 1350, 1397, 1423, 1424, 1425, 1445, 1446, 1470, 1473, 1476, 1651, 1699, 1716, 1749, 1753, 1774, 1846, 1849, 1864, 1870, 1878, 1880, 1889, 1890, 1894, 1897, 1898, 1900, 1904, 1906, 1910, 1913, 1915, 1928, 1930, 1946, 1948, 1953, 1957], "github": [0, 7, 9, 14, 23, 24, 37, 47, 48, 52, 139, 780, 781, 881, 895, 1123, 1295, 1423, 1424, 1425, 1470, 1651, 1685, 1749, 1849, 1864, 1871, 1876, 1894, 1897, 1904, 1910, 1915, 1916, 1925, 1926, 1928, 1944, 1948, 1953], "com": [0, 7, 14, 23, 24, 40, 42, 47, 139, 780, 781, 881, 1123, 1295, 1423, 1424, 1425, 1470, 1651, 1749, 1846, 1849, 1864, 1878, 1880, 1894, 1897, 1898, 1904, 1906, 1910, 1915, 1928, 1948, 1953], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 47, 48, 51, 53, 55, 56, 71, 72, 73, 74, 75, 76, 139, 501, 571, 668, 686, 718, 719, 720, 721, 733, 734, 744, 748, 749, 750, 751, 752, 753, 780, 781, 798, 799, 800, 801, 868, 881, 925, 930, 931, 940, 941, 991, 992, 1003, 1008, 1066, 1111, 1117, 1123, 1124, 1128, 1133, 1134, 1139, 1179, 1180, 1204, 1224, 1230, 1235, 1237, 1238, 1239, 1242, 1255, 1264, 1280, 1283, 1284, 1295, 1343, 1344, 1350, 1379, 1393, 1423, 1424, 1425, 1470, 1499, 1576, 1607, 1640, 1648, 1649, 1651, 1654, 1662, 1709, 1741, 1749, 1750, 1760, 1807, 1811, 1834, 1846, 1849, 1857, 1864, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1883, 1884, 1885, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1912, 1913, 1915, 1917, 1918, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1955, 1956, 1957], "75956": 0, "_c": [0, 21, 22, 24, 54, 889, 895, 1192, 1205, 1660, 1867, 1869, 1879, 1892, 1899, 1903, 1906, 1910, 1921], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 13, 14, 21, 22, 24, 25, 26, 28, 30, 32, 45, 47, 50, 55, 56, 61, 63, 64, 65, 66, 101, 102, 103, 104, 105, 107, 123, 124, 125, 139, 170, 171, 172, 185, 198, 249, 290, 307, 308, 310, 317, 321, 324, 325, 327, 331, 332, 333, 340, 343, 381, 385, 396, 398, 399, 400, 403, 409, 417, 418, 419, 420, 433, 434, 435, 436, 437, 441, 446, 448, 458, 459, 467, 483, 484, 492, 505, 530, 543, 544, 553, 568, 582, 591, 597, 598, 603, 605, 668, 681, 682, 683, 684, 685, 687, 700, 701, 702, 703, 704, 705, 722, 723, 733, 734, 739, 740, 741, 743, 746, 748, 756, 757, 764, 766, 767, 768, 770, 771, 773, 785, 802, 807, 808, 809, 810, 812, 813, 814, 826, 827, 845, 846, 851, 853, 862, 863, 864, 868, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 905, 909, 912, 915, 917, 918, 924, 925, 931, 932, 933, 939, 940, 951, 969, 1007, 1012, 1024, 1066, 1067, 1068, 1069, 1071, 1072, 1079, 1083, 1084, 1085, 1086, 1091, 1092, 1097, 1098, 1099, 1101, 1102, 1103, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1131, 1133, 1135, 1137, 1149, 1150, 1151, 1154, 1155, 1168, 1178, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1198, 1200, 1201, 1209, 1210, 1211, 1213, 1215, 1218, 1223, 1224, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1263, 1264, 1265, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1287, 1291, 1293, 1294, 1296, 1299, 1305, 1308, 1309, 1317, 1322, 1323, 1324, 1325, 1328, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1456, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1479, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1526, 1528, 1530, 1531, 1532, 1537, 1538, 1541, 1547, 1548, 1550, 1551, 1552, 1556, 1561, 1565, 1569, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1589, 1592, 1593, 1595, 1601, 1607, 1609, 1611, 1614, 1616, 1619, 1620, 1632, 1641, 1642, 1643, 1644, 1646, 1649, 1652, 1653, 1654, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1707, 1709, 1710, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1733, 1734, 1741, 1745, 1753, 1754, 1755, 1758, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1783, 1793, 1794, 1795, 1796, 1797, 1798, 1805, 1806, 1807, 1810, 1811, 1825, 1829, 1834, 1843, 1846, 1849, 1851, 1852, 1853, 1860, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1875, 1876, 1877, 1878, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1903, 1904, 1908, 1909, 1910, 1913, 1914, 1915, 1917, 1920, 1921, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1935, 1939, 1941, 1942, 1944, 1947, 1949, 1953, 1954, 1955], "randn": [0, 1, 11, 13, 24, 30, 45, 49, 51, 52, 53, 55, 56, 58, 63, 64, 278, 300, 471, 532, 568, 572, 573, 574, 575, 576, 577, 605, 671, 672, 673, 674, 675, 676, 677, 678, 683, 684, 687, 708, 716, 717, 722, 726, 727, 728, 729, 730, 731, 744, 746, 748, 749, 750, 751, 752, 753, 760, 761, 762, 849, 850, 862, 863, 864, 866, 869, 870, 871, 872, 873, 908, 920, 927, 929, 930, 931, 932, 933, 935, 953, 954, 955, 956, 957, 966, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1060, 1066, 1080, 1081, 1110, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1163, 1167, 1170, 1205, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1269, 1273, 1274, 1281, 1283, 1284, 1285, 1287, 1288, 1291, 1293, 1294, 1296, 1298, 1299, 1300, 1301, 1315, 1316, 1319, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1453, 1454, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1477, 1478, 1482, 1483, 1484, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1521, 1522, 1528, 1561, 1567, 1568, 1657, 1700, 1705, 1706, 1707, 1709, 1710, 1723, 1727, 1728, 1740, 1776, 1778, 1783, 1789, 1792, 1800, 1801, 1810, 1811, 1820, 1823, 1824, 1827, 1831, 1834, 1835, 1837, 1840, 1842, 1846, 1855, 1856, 1857, 1860, 1867, 1868, 1869, 1871, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1900, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1916, 1921, 1925, 1926, 1928, 1930, 1933, 1935, 1939, 1940, 1941, 1944, 1946, 1947, 1949, 1952, 1954], "freez": [0, 47, 1193, 1203, 1370, 1371, 1427, 1889], "_": [0, 1, 3, 21, 22, 24, 25, 28, 34, 53, 55, 669, 671, 672, 686, 853, 869, 870, 871, 872, 873, 882, 888, 910, 929, 952, 953, 955, 956, 958, 1110, 1115, 1129, 1133, 1159, 1214, 1222, 1273, 1281, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1607, 1615, 1648, 1677, 1679, 1699, 1722, 1725, 1728, 1740, 1755, 1761, 1763, 1769, 1776, 1778, 1800, 1811, 1823, 1824, 1889, 1892, 1895, 1896, 1900, 1906, 1912, 1913, 1915, 1926, 1940, 1941, 1947, 1948, 1952, 1954], "3": [0, 1, 3, 4, 6, 9, 11, 13, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 34, 39, 41, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 180, 197, 222, 243, 249, 278, 302, 304, 306, 310, 390, 391, 433, 434, 435, 436, 437, 459, 475, 476, 481, 484, 487, 501, 503, 505, 511, 525, 532, 546, 548, 569, 571, 572, 573, 575, 576, 595, 605, 668, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 685, 686, 687, 722, 726, 727, 728, 729, 730, 731, 734, 736, 745, 748, 749, 750, 751, 753, 760, 761, 762, 773, 781, 812, 849, 850, 853, 863, 864, 866, 867, 868, 875, 876, 889, 890, 891, 892, 893, 894, 908, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 928, 930, 931, 932, 933, 934, 938, 939, 948, 951, 952, 957, 958, 966, 1009, 1010, 1012, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1079, 1082, 1087, 1090, 1094, 1100, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1129, 1130, 1132, 1134, 1135, 1136, 1137, 1146, 1149, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1167, 1168, 1170, 1178, 1180, 1182, 1184, 1193, 1197, 1200, 1203, 1205, 1209, 1210, 1214, 1215, 1216, 1217, 1218, 1219, 1223, 1225, 1226, 1227, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1271, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1340, 1341, 1342, 1343, 1344, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1370, 1371, 1374, 1375, 1376, 1377, 1379, 1380, 1382, 1384, 1385, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1430, 1432, 1434, 1439, 1440, 1442, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1461, 1462, 1466, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1498, 1499, 1502, 1503, 1505, 1506, 1509, 1517, 1518, 1521, 1522, 1524, 1526, 1530, 1531, 1537, 1545, 1561, 1563, 1564, 1567, 1568, 1574, 1575, 1582, 1583, 1595, 1607, 1615, 1629, 1631, 1633, 1634, 1635, 1636, 1640, 1642, 1643, 1644, 1645, 1648, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1691, 1692, 1694, 1698, 1700, 1702, 1706, 1707, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1741, 1745, 1749, 1750, 1751, 1758, 1761, 1763, 1765, 1767, 1768, 1769, 1773, 1774, 1775, 1783, 1785, 1786, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1810, 1811, 1813, 1814, 1820, 1821, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1851, 1854, 1857, 1858, 1859, 1860, 1862, 1863, 1866, 1867, 1868, 1869, 1870, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1905, 1906, 1908, 1910, 1912, 1913, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1939, 1941, 1944, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1954], "bug": [0, 14, 18, 24, 45, 55, 1126, 1127, 1129, 1283, 1888, 1902, 1925, 1944, 1954], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 58, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 108, 139, 143, 184, 185, 195, 198, 210, 211, 212, 244, 249, 278, 279, 302, 310, 312, 324, 326, 329, 341, 433, 434, 435, 436, 437, 446, 474, 475, 476, 481, 483, 484, 485, 486, 487, 488, 491, 492, 501, 503, 505, 512, 544, 554, 571, 572, 573, 575, 576, 577, 591, 592, 602, 605, 606, 668, 672, 674, 677, 681, 682, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 723, 724, 725, 732, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 763, 764, 765, 766, 767, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 790, 798, 799, 800, 801, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 842, 847, 849, 850, 862, 863, 864, 865, 866, 873, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 905, 908, 911, 913, 916, 920, 921, 924, 928, 930, 931, 934, 935, 937, 940, 942, 943, 944, 945, 947, 951, 952, 954, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 972, 973, 974, 977, 988, 990, 993, 994, 995, 997, 998, 1001, 1002, 1003, 1004, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1019, 1022, 1023, 1024, 1030, 1031, 1033, 1034, 1035, 1039, 1040, 1041, 1047, 1048, 1049, 1054, 1056, 1057, 1061, 1064, 1065, 1066, 1070, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1117, 1119, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1139, 1140, 1146, 1150, 1156, 1158, 1168, 1180, 1190, 1191, 1193, 1194, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1274, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1305, 1308, 1309, 1319, 1322, 1323, 1324, 1325, 1327, 1335, 1339, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1414, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1433, 1434, 1437, 1439, 1442, 1443, 1455, 1458, 1460, 1463, 1466, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1481, 1491, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1537, 1543, 1545, 1550, 1551, 1552, 1562, 1564, 1566, 1576, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1688, 1689, 1691, 1693, 1695, 1697, 1698, 1699, 1703, 1707, 1709, 1716, 1720, 1725, 1729, 1731, 1738, 1745, 1747, 1748, 1749, 1751, 1752, 1753, 1755, 1758, 1760, 1761, 1779, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1805, 1806, 1807, 1810, 1811, 1813, 1814, 1820, 1822, 1826, 1828, 1832, 1834, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957], "what": [0, 1, 3, 5, 7, 8, 9, 24, 29, 30, 34, 38, 39, 45, 47, 49, 51, 52, 55, 56, 880, 1127, 1209, 1210, 1283, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1421, 1422, 1455, 1478, 1550, 1551, 1552, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1710, 1864, 1865, 1866, 1868, 1869, 1882, 1892, 1894, 1895, 1897, 1900, 1902, 1910, 1912, 1915, 1916, 1921, 1922, 1925, 1939, 1940, 1942, 1943, 1945, 1946, 1947, 1954, 1956], "observ": [0, 22, 32, 41, 744, 777, 778, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 796, 797, 799, 801, 803, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 847, 849, 850, 852, 954, 958, 1207, 1295, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1387, 1390, 1391, 1392, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1888, 1889, 1892, 1893, 1899, 1902, 1917, 1935, 1938, 1939, 1944, 1952, 1954, 1956], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 15, 22, 24, 30, 33, 36, 37, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 65, 66, 70, 75, 243, 244, 486, 501, 606, 677, 718, 719, 720, 721, 722, 723, 729, 730, 731, 733, 734, 744, 749, 750, 751, 752, 753, 849, 850, 880, 882, 883, 884, 889, 891, 892, 895, 922, 1049, 1122, 1126, 1127, 1128, 1129, 1130, 1134, 1193, 1257, 1288, 1298, 1350, 1358, 1393, 1427, 1526, 1537, 1538, 1543, 1564, 1576, 1594, 1607, 1648, 1649, 1651, 1666, 1667, 1687, 1749, 1796, 1857, 1871, 1876, 1882, 1883, 1884, 1885, 1888, 1889, 1894, 1895, 1898, 1903, 1904, 1906, 1910, 1912, 1913, 1916, 1919, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1932, 1940, 1941, 1943, 1944, 1951, 1954], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 21, 26, 32, 34, 39, 41, 43, 45, 50, 52, 55, 889, 895, 903, 904, 968, 1005, 1126, 1127, 1129, 1130, 1168, 1193, 1201, 1204, 1265, 1661, 1741, 1786, 1864, 1866, 1869, 1870, 1871, 1878, 1882, 1883, 1884, 1889, 1892, 1894, 1899, 1902, 1904, 1905, 1906, 1908, 1910, 1915, 1919, 1922, 1925, 1927, 1930, 1940, 1942, 1944, 1946, 1948, 1951, 1952, 1954, 1956], "subregion": 0, "nest": [0, 1, 5, 13, 14, 26, 45, 47, 55, 56, 59, 63, 64, 577, 781, 803, 805, 882, 891, 1027, 1028, 1124, 1134, 1193, 1196, 1209, 1427, 1433, 1473, 1474, 1662, 1857, 1865, 1895, 1908, 1910, 1915, 1921], "local": [0, 24, 26, 28, 29, 32, 39, 41, 42, 43, 44, 47, 55, 1009, 1070, 1123, 1168, 1193, 1266, 1366, 1367, 1368, 1372, 1374, 1415, 1427, 1478, 1520, 1544, 1594, 1607, 1608, 1652, 1755, 1786, 1864, 1865, 1868, 1881, 1888, 1892, 1893, 1896, 1910, 1913, 1914, 1918, 1921, 1922, 1923, 1930, 1941, 1944, 1947, 1954, 1956], "want": [0, 1, 7, 8, 9, 14, 21, 24, 29, 30, 38, 47, 49, 50, 51, 52, 54, 55, 56, 436, 484, 487, 769, 779, 826, 1005, 1122, 1123, 1206, 1209, 1210, 1295, 1375, 1376, 1479, 1521, 1522, 1537, 1595, 1607, 1608, 1649, 1652, 1666, 1667, 1680, 1741, 1849, 1864, 1873, 1876, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1910, 1912, 1913, 1916, 1925, 1930, 1931, 1934, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1953], "forc": [0, 1, 14, 18, 47, 446, 868, 940, 1005, 1196, 1208, 1212, 1760, 1796, 1864, 1866, 1869, 1888, 1892, 1930, 1933, 1939, 1941, 1944], "particular": [0, 3, 7, 21, 26, 32, 38, 41, 42, 45, 47, 55, 56, 61, 64, 548, 668, 849, 850, 1040, 1134, 1193, 1288, 1364, 1427, 1857, 1866, 1868, 1876, 1884, 1892, 1894, 1896, 1899, 1900, 1903, 1908, 1910, 1912, 1925, 1927, 1933, 1939, 1943, 1944, 1945, 1954, 1955, 1956], "give": [0, 3, 4, 7, 9, 13, 18, 21, 22, 26, 28, 40, 45, 47, 55, 896, 897, 958, 1084, 1086, 1087, 1089, 1093, 1102, 1126, 1127, 1128, 1207, 1223, 1230, 1355, 1356, 1357, 1432, 1478, 1479, 1614, 1653, 1666, 1667, 1807, 1846, 1864, 1866, 1881, 1883, 1887, 1889, 1892, 1894, 1895, 1897, 1898, 1900, 1904, 1910, 1912, 1914, 1925, 1939, 1942, 1943, 1951, 1954, 1955], "explicit": [0, 8, 13, 24, 45, 47, 51, 55, 1001, 1146, 1180, 1538, 1749, 1827, 1864, 1865, 1869, 1870, 1882, 1888, 1892, 1894, 1913, 1928, 1929, 1949], "control": [0, 1, 2, 14, 21, 22, 24, 25, 26, 30, 32, 37, 40, 41, 56, 62, 64, 743, 787, 846, 849, 864, 868, 882, 909, 918, 1053, 1054, 1055, 1056, 1057, 1150, 1151, 1205, 1206, 1207, 1209, 1224, 1230, 1232, 1235, 1237, 1240, 1242, 1246, 1252, 1255, 1257, 1263, 1283, 1335, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1413, 1421, 1422, 1478, 1576, 1607, 1697, 1753, 1754, 1768, 1783, 1786, 1791, 1807, 1811, 1829, 1835, 1836, 1837, 1838, 1866, 1875, 1889, 1891, 1892, 1893, 1900, 1902, 1903, 1905, 1907, 1908, 1910, 1912, 1916, 1923, 1925, 1939, 1940, 1942, 1944, 1947], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 21, 24, 26, 28, 32, 33, 35, 42, 45, 47, 52, 54, 55, 70, 475, 476, 901, 902, 940, 972, 983, 1044, 1123, 1193, 1194, 1196, 1209, 1210, 1265, 1308, 1309, 1364, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1601, 1603, 1607, 1756, 1865, 1866, 1868, 1870, 1877, 1888, 1890, 1891, 1896, 1899, 1900, 1902, 1904, 1906, 1908, 1910, 1915, 1916, 1921, 1922, 1925, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1953, 1954], "surround": [0, 55, 778, 1868, 1888, 1892], "ensur": [0, 1, 4, 6, 7, 9, 21, 24, 25, 26, 28, 32, 41, 42, 44, 45, 47, 54, 55, 469, 474, 723, 807, 885, 887, 947, 1123, 1193, 1339, 1420, 1427, 1430, 1470, 1526, 1550, 1551, 1552, 1576, 1607, 1757, 1864, 1866, 1868, 1876, 1878, 1881, 1888, 1889, 1892, 1894, 1895, 1897, 1902, 1904, 1913, 1916, 1917, 1921, 1922, 1939, 1943, 1944, 1954], "necessari": [0, 1, 3, 9, 14, 21, 26, 32, 41, 42, 45, 47, 54, 77, 180, 197, 548, 577, 888, 1123, 1167, 1205, 1433, 1641, 1642, 1866, 1869, 1883, 1887, 1889, 1890, 1892, 1893, 1898, 1900, 1903, 1906, 1913, 1916, 1921, 1922, 1923, 1928, 1944, 1954], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 21, 22, 24, 28, 30, 34, 45, 47, 51, 52, 54, 55, 56, 63, 64, 484, 891, 896, 897, 1087, 1088, 1089, 1097, 1098, 1099, 1124, 1128, 1133, 1134, 1190, 1194, 1197, 1201, 1240, 1241, 1265, 1283, 1345, 1346, 1347, 1364, 1466, 1598, 1607, 1608, 1683, 1725, 1753, 1807, 1857, 1865, 1866, 1869, 1871, 1881, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1908, 1910, 1913, 1916, 1917, 1921, 1923, 1925, 1930, 1932, 1935, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1952, 1954, 1955, 1956], "wa": [0, 1, 3, 7, 18, 22, 24, 39, 40, 41, 42, 45, 47, 54, 55, 324, 474, 484, 668, 773, 780, 842, 930, 941, 969, 970, 993, 997, 1012, 1025, 1044, 1086, 1134, 1190, 1200, 1209, 1224, 1235, 1237, 1241, 1265, 1283, 1305, 1317, 1397, 1423, 1424, 1425, 1456, 1479, 1491, 1526, 1579, 1595, 1607, 1608, 1643, 1685, 1691, 1805, 1806, 1843, 1844, 1852, 1853, 1857, 1864, 1866, 1868, 1869, 1870, 1873, 1875, 1876, 1879, 1881, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1899, 1901, 1910, 1912, 1914, 1916, 1920, 1921, 1925, 1932, 1942, 1943, 1944, 1947, 1953, 1956], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 21, 24, 28, 31, 38, 41, 45, 47, 48, 49, 50, 51, 52, 54, 55, 476, 920, 967, 1001, 1117, 1193, 1197, 1427, 1582, 1608, 1643, 1736, 1790, 1866, 1869, 1876, 1881, 1888, 1889, 1892, 1894, 1895, 1897, 1902, 1916, 1922, 1923, 1926, 1939, 1941, 1942, 1943, 1944, 1953, 1954, 1955], "again": [0, 18, 21, 24, 28, 32, 45, 50, 1317, 1889, 1894, 1895, 1900, 1939, 1943, 1947, 1948], "regardless": [0, 21, 40, 47, 952, 1193, 1197, 1203, 1427, 1601, 1843, 1888, 1892, 1905, 1921, 1932, 1944], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 56, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 139, 180, 185, 197, 198, 210, 222, 244, 279, 300, 302, 304, 308, 310, 387, 389, 390, 391, 436, 446, 471, 474, 475, 476, 481, 483, 486, 487, 501, 503, 505, 525, 532, 571, 591, 605, 606, 668, 672, 675, 676, 677, 678, 682, 683, 684, 685, 723, 736, 745, 748, 754, 755, 756, 757, 760, 761, 762, 767, 768, 770, 771, 773, 774, 775, 780, 781, 782, 783, 787, 790, 803, 805, 807, 808, 809, 810, 813, 815, 825, 826, 842, 847, 852, 865, 866, 868, 872, 873, 877, 878, 880, 881, 882, 883, 884, 889, 890, 892, 893, 894, 895, 896, 897, 901, 902, 904, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 925, 926, 939, 943, 945, 948, 954, 958, 968, 969, 975, 982, 998, 1009, 1010, 1012, 1013, 1014, 1023, 1036, 1037, 1038, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1066, 1067, 1071, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1114, 1116, 1117, 1118, 1119, 1120, 1123, 1126, 1129, 1132, 1133, 1134, 1137, 1138, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1163, 1167, 1170, 1190, 1193, 1196, 1198, 1201, 1204, 1205, 1207, 1209, 1210, 1213, 1214, 1218, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1260, 1263, 1265, 1266, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1294, 1302, 1303, 1307, 1308, 1309, 1312, 1313, 1317, 1323, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1432, 1434, 1441, 1442, 1443, 1444, 1445, 1455, 1456, 1458, 1466, 1469, 1470, 1475, 1476, 1478, 1479, 1491, 1494, 1495, 1509, 1510, 1517, 1518, 1519, 1521, 1522, 1525, 1526, 1528, 1537, 1538, 1550, 1551, 1552, 1561, 1564, 1576, 1579, 1595, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1633, 1634, 1637, 1643, 1647, 1648, 1651, 1653, 1654, 1655, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1699, 1700, 1703, 1706, 1709, 1714, 1715, 1716, 1718, 1720, 1722, 1727, 1729, 1731, 1733, 1734, 1736, 1738, 1741, 1748, 1749, 1750, 1751, 1753, 1758, 1759, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1779, 1785, 1786, 1788, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1805, 1806, 1807, 1811, 1812, 1821, 1827, 1828, 1829, 1831, 1832, 1835, 1836, 1837, 1838, 1845, 1846, 1849, 1851, 1852, 1853, 1855, 1857, 1860, 1864, 1866, 1867, 1868, 1870, 1871, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1956, 1957], "state": [0, 1, 2, 5, 9, 21, 24, 26, 28, 30, 32, 34, 41, 44, 45, 47, 55, 77, 736, 748, 824, 947, 998, 999, 1003, 1008, 1012, 1022, 1037, 1038, 1123, 1132, 1145, 1193, 1196, 1209, 1266, 1306, 1313, 1379, 1380, 1397, 1398, 1427, 1442, 1444, 1474, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1716, 1759, 1786, 1849, 1865, 1877, 1888, 1889, 1892, 1893, 1894, 1898, 1902, 1905, 1908, 1910, 1912, 1920, 1934, 1939, 1941, 1942, 1943, 1944, 1950], "thread": [0, 1, 3, 21, 24, 26, 32, 43, 47, 54, 967, 969, 1001, 1070, 1143, 1144, 1168, 1305, 1364, 1652, 1755, 1756, 1757, 1848, 1865, 1866, 1879, 1888, 1892, 1899, 1902, 1921, 1923, 1933, 1941], "must": [0, 3, 5, 6, 9, 13, 14, 21, 24, 26, 28, 30, 31, 32, 39, 42, 43, 45, 47, 50, 52, 54, 55, 56, 63, 64, 77, 86, 128, 142, 143, 185, 249, 302, 304, 310, 387, 389, 391, 501, 532, 533, 554, 571, 572, 573, 575, 576, 605, 674, 675, 676, 677, 678, 679, 685, 736, 745, 760, 761, 762, 781, 803, 805, 847, 848, 866, 872, 877, 878, 879, 880, 882, 888, 890, 892, 893, 894, 896, 897, 908, 910, 912, 913, 914, 915, 916, 917, 920, 924, 927, 948, 958, 968, 969, 979, 980, 981, 983, 1009, 1010, 1012, 1054, 1056, 1057, 1058, 1060, 1063, 1064, 1066, 1087, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1146, 1155, 1156, 1159, 1170, 1190, 1193, 1204, 1209, 1216, 1219, 1248, 1249, 1250, 1251, 1257, 1259, 1260, 1263, 1264, 1266, 1280, 1284, 1286, 1287, 1288, 1294, 1301, 1317, 1323, 1326, 1327, 1331, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1374, 1375, 1376, 1381, 1382, 1388, 1420, 1427, 1430, 1431, 1433, 1458, 1464, 1479, 1499, 1508, 1510, 1518, 1537, 1550, 1551, 1552, 1570, 1607, 1630, 1640, 1641, 1647, 1649, 1654, 1689, 1691, 1698, 1699, 1702, 1703, 1706, 1714, 1715, 1736, 1745, 1748, 1757, 1773, 1784, 1788, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1812, 1822, 1826, 1827, 1831, 1836, 1838, 1842, 1846, 1849, 1854, 1855, 1857, 1858, 1860, 1866, 1867, 1868, 1869, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1902, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1932, 1939, 1940, 1942, 1944, 1945, 1947, 1953, 1954, 1955], "invok": [0, 2, 8, 15, 18, 21, 24, 39, 41, 42, 54, 55, 889, 891, 1009, 1010, 1193, 1196, 1203, 1364, 1427, 1600, 1602, 1605, 1606, 1651, 1685, 1691, 1866, 1869, 1870, 1877, 1888, 1891, 1892, 1893, 1894, 1895, 1899, 1900, 1913, 1921, 1922, 1939, 1943, 1944, 1945, 1947], "affect": [0, 1, 2, 7, 9, 18, 20, 31, 47, 210, 211, 773, 970, 972, 1070, 1117, 1140, 1168, 1193, 1308, 1309, 1397, 1427, 1442, 1479, 1595, 1608, 1652, 1749, 1752, 1753, 1755, 1888, 1889, 1892, 1897, 1900, 1903, 1904, 1927, 1950, 1952], "dataparallel": [0, 24, 1591, 1607, 1643, 1865, 1889, 1896, 1902, 1921], "parallel": [0, 12, 14, 21, 22, 24, 25, 26, 28, 41, 42, 47, 1143, 1144, 1196, 1364, 1433, 1466, 1526, 1607, 1756, 1757, 1865, 1869, 1888, 1889, 1891, 1902, 1906, 1921, 1923, 1938, 1944], "distributeddataparallel": [0, 21, 22, 24, 25, 28, 29, 42, 47, 1364, 1466, 1902, 1914, 1921, 1944], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 21, 22, 24, 25, 26, 30, 31, 32, 34, 38, 41, 42, 43, 45, 47, 52, 55, 56, 57, 64, 139, 243, 487, 533, 605, 668, 681, 687, 767, 773, 881, 890, 891, 905, 911, 922, 929, 930, 934, 935, 981, 1019, 1023, 1036, 1054, 1055, 1106, 1107, 1108, 1110, 1114, 1119, 1130, 1137, 1149, 1153, 1167, 1178, 1190, 1191, 1194, 1205, 1214, 1215, 1218, 1223, 1224, 1230, 1234, 1239, 1247, 1248, 1250, 1251, 1254, 1259, 1265, 1269, 1282, 1285, 1291, 1294, 1296, 1299, 1312, 1317, 1327, 1343, 1344, 1355, 1356, 1357, 1364, 1370, 1371, 1388, 1397, 1419, 1433, 1441, 1458, 1464, 1474, 1475, 1476, 1491, 1501, 1502, 1503, 1517, 1518, 1526, 1537, 1563, 1576, 1594, 1595, 1598, 1607, 1614, 1615, 1616, 1617, 1643, 1648, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1691, 1693, 1707, 1708, 1729, 1730, 1753, 1758, 1792, 1793, 1794, 1795, 1797, 1798, 1828, 1836, 1838, 1846, 1864, 1866, 1868, 1869, 1871, 1883, 1884, 1885, 1887, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1910, 1912, 1913, 1914, 1916, 1917, 1921, 1925, 1926, 1928, 1930, 1931, 1932, 1939, 1940, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1952, 1954, 1956], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 41, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 61, 63, 64, 71, 72, 73, 74, 76, 139, 210, 243, 341, 391, 474, 501, 508, 533, 548, 685, 736, 745, 781, 842, 843, 844, 868, 874, 880, 881, 882, 883, 885, 891, 911, 922, 924, 934, 938, 942, 965, 970, 972, 977, 979, 983, 1010, 1033, 1044, 1055, 1066, 1070, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1109, 1112, 1113, 1114, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1146, 1155, 1156, 1168, 1172, 1175, 1178, 1197, 1203, 1207, 1213, 1214, 1224, 1225, 1235, 1238, 1239, 1241, 1246, 1250, 1252, 1254, 1257, 1263, 1264, 1280, 1288, 1292, 1297, 1317, 1323, 1335, 1340, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1358, 1359, 1360, 1371, 1375, 1376, 1381, 1390, 1391, 1392, 1394, 1395, 1396, 1406, 1407, 1408, 1418, 1427, 1431, 1433, 1466, 1474, 1479, 1491, 1501, 1504, 1505, 1506, 1521, 1522, 1523, 1528, 1563, 1576, 1594, 1598, 1607, 1608, 1613, 1615, 1616, 1620, 1630, 1641, 1650, 1651, 1652, 1653, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1687, 1689, 1690, 1691, 1711, 1712, 1729, 1745, 1753, 1755, 1758, 1761, 1802, 1811, 1826, 1831, 1832, 1834, 1842, 1843, 1845, 1846, 1849, 1857, 1865, 1866, 1869, 1873, 1875, 1877, 1879, 1881, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1902, 1904, 1905, 1906, 1910, 1912, 1913, 1914, 1916, 1917, 1921, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1951, 1953, 1954, 1956], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 21, 22, 26, 32, 42, 43, 47, 54, 185, 198, 278, 321, 591, 748, 940, 974, 975, 978, 979, 980, 981, 982, 983, 989, 990, 991, 998, 1004, 1005, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1029, 1030, 1031, 1032, 1033, 1034, 1037, 1043, 1044, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1114, 1193, 1203, 1240, 1265, 1294, 1302, 1303, 1304, 1308, 1309, 1335, 1364, 1379, 1397, 1427, 1442, 1443, 1466, 1591, 1607, 1640, 1811, 1865, 1866, 1877, 1880, 1892, 1894, 1898, 1900, 1901, 1903, 1904, 1906, 1916, 1921, 1925, 1927, 1931, 1933, 1936, 1939, 1941, 1943, 1946, 1951, 1952, 1954, 1956], "per": [0, 14, 21, 22, 24, 25, 26, 28, 29, 31, 32, 34, 40, 42, 43, 47, 48, 53, 460, 461, 462, 722, 723, 789, 796, 807, 810, 813, 821, 833, 841, 880, 889, 891, 940, 973, 1049, 1080, 1124, 1134, 1266, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1364, 1371, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1399, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1607, 1651, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1699, 1711, 1758, 1760, 1812, 1828, 1832, 1849, 1857, 1879, 1883, 1885, 1891, 1892, 1893, 1895, 1899, 1914, 1916, 1917, 1919, 1922, 1925, 1930, 1942, 1956], "process": [0, 1, 3, 11, 14, 22, 24, 25, 26, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 47, 55, 68, 69, 70, 73, 75, 969, 1005, 1011, 1036, 1193, 1204, 1266, 1303, 1312, 1343, 1344, 1361, 1363, 1370, 1371, 1387, 1394, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1470, 1472, 1474, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1688, 1694, 1760, 1774, 1849, 1864, 1865, 1866, 1879, 1881, 1882, 1883, 1889, 1891, 1892, 1893, 1894, 1899, 1900, 1902, 1904, 1906, 1908, 1910, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1925, 1927, 1934, 1938, 1942, 1944, 1947, 1952, 1954], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 24, 25, 26, 28, 29, 30, 31, 32, 41, 42, 43, 44, 45, 47, 48, 52, 55, 56, 63, 64, 70, 108, 139, 341, 433, 434, 435, 436, 437, 474, 575, 576, 809, 849, 850, 881, 895, 940, 967, 969, 970, 972, 1001, 1012, 1013, 1033, 1067, 1069, 1086, 1106, 1107, 1108, 1123, 1193, 1197, 1205, 1206, 1229, 1230, 1257, 1258, 1266, 1305, 1364, 1424, 1427, 1443, 1460, 1564, 1582, 1607, 1661, 1691, 1718, 1722, 1724, 1750, 1756, 1822, 1825, 1849, 1864, 1866, 1869, 1870, 1880, 1881, 1882, 1883, 1884, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1905, 1906, 1910, 1913, 1914, 1916, 1919, 1921, 1922, 1931, 1933, 1940, 1941, 1942, 1945, 1946, 1947, 1950, 1951, 1954, 1955, 1956], "str": [0, 1, 2, 3, 5, 14, 21, 22, 24, 26, 28, 29, 30, 32, 35, 39, 41, 43, 45, 47, 55, 310, 501, 505, 591, 767, 773, 780, 781, 782, 803, 804, 805, 842, 889, 891, 899, 903, 904, 928, 940, 946, 967, 968, 979, 980, 981, 983, 992, 993, 995, 996, 997, 1001, 1009, 1010, 1011, 1023, 1024, 1026, 1028, 1040, 1061, 1066, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1122, 1123, 1127, 1132, 1134, 1142, 1191, 1192, 1193, 1194, 1196, 1197, 1200, 1203, 1239, 1252, 1257, 1258, 1265, 1266, 1295, 1308, 1309, 1324, 1343, 1344, 1350, 1355, 1356, 1357, 1361, 1363, 1371, 1377, 1381, 1387, 1388, 1393, 1394, 1403, 1404, 1405, 1418, 1419, 1427, 1428, 1430, 1431, 1432, 1434, 1437, 1441, 1444, 1455, 1458, 1459, 1470, 1472, 1474, 1475, 1476, 1477, 1479, 1498, 1499, 1509, 1510, 1518, 1523, 1526, 1537, 1538, 1561, 1569, 1595, 1607, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1651, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1693, 1710, 1741, 1745, 1752, 1753, 1788, 1807, 1848, 1849, 1857, 1864, 1866, 1867, 1868, 1869, 1870, 1877, 1878, 1879, 1881, 1883, 1887, 1889, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1920, 1921, 1927, 1930, 1932, 1934, 1935, 1944, 1947, 1949, 1953, 1954, 1955, 1956], "possibl": [0, 2, 9, 14, 15, 18, 24, 26, 30, 45, 51, 52, 55, 485, 486, 568, 605, 846, 867, 868, 934, 940, 976, 1067, 1068, 1069, 1114, 1126, 1193, 1207, 1234, 1247, 1250, 1251, 1254, 1259, 1265, 1344, 1350, 1427, 1433, 1517, 1518, 1537, 1570, 1595, 1619, 1620, 1729, 1732, 1747, 1799, 1807, 1825, 1866, 1868, 1869, 1881, 1882, 1887, 1889, 1891, 1892, 1893, 1894, 1897, 1902, 1903, 1904, 1906, 1913, 1916, 1921, 1923, 1928, 1932, 1936, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1950, 1954], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 18, 21, 22, 25, 26, 28, 30, 32, 33, 35, 38, 39, 41, 42, 45, 47, 49, 52, 54, 55, 56, 58, 61, 64, 66, 77, 90, 91, 92, 93, 108, 139, 143, 210, 224, 225, 226, 227, 243, 248, 249, 261, 262, 288, 300, 302, 304, 305, 306, 307, 308, 310, 312, 315, 341, 388, 389, 407, 408, 410, 411, 459, 469, 471, 487, 501, 503, 505, 525, 532, 548, 571, 572, 573, 575, 576, 587, 588, 668, 669, 672, 675, 676, 679, 683, 684, 685, 723, 744, 752, 758, 759, 767, 772, 773, 775, 781, 783, 784, 787, 790, 807, 808, 809, 810, 813, 814, 815, 842, 847, 853, 862, 863, 864, 868, 873, 877, 879, 881, 883, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 909, 910, 911, 916, 918, 924, 928, 932, 933, 935, 945, 953, 954, 957, 970, 1000, 1009, 1010, 1023, 1036, 1045, 1046, 1049, 1057, 1058, 1067, 1068, 1069, 1071, 1080, 1081, 1083, 1085, 1087, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1100, 1109, 1114, 1120, 1122, 1123, 1124, 1125, 1129, 1130, 1132, 1133, 1135, 1137, 1141, 1142, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1163, 1178, 1183, 1184, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1196, 1200, 1201, 1209, 1212, 1214, 1215, 1218, 1222, 1223, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1243, 1246, 1248, 1250, 1251, 1253, 1257, 1258, 1263, 1264, 1265, 1266, 1269, 1274, 1280, 1282, 1283, 1286, 1291, 1293, 1294, 1296, 1299, 1312, 1315, 1317, 1321, 1322, 1323, 1324, 1327, 1328, 1331, 1335, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1369, 1370, 1371, 1372, 1374, 1381, 1382, 1383, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1455, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1498, 1499, 1501, 1502, 1503, 1508, 1509, 1518, 1519, 1523, 1526, 1528, 1537, 1538, 1539, 1550, 1551, 1552, 1561, 1562, 1563, 1564, 1566, 1569, 1576, 1589, 1590, 1595, 1597, 1598, 1600, 1602, 1605, 1606, 1607, 1612, 1614, 1615, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1640, 1643, 1644, 1647, 1649, 1653, 1654, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1699, 1703, 1706, 1710, 1712, 1713, 1725, 1727, 1729, 1730, 1731, 1736, 1737, 1738, 1745, 1748, 1758, 1761, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1779, 1783, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1811, 1812, 1822, 1826, 1829, 1832, 1835, 1836, 1837, 1838, 1840, 1843, 1844, 1845, 1846, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1876, 1878, 1879, 1881, 1884, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1939, 1941, 1942, 1944, 1947, 1948, 1949, 1953, 1954], "xpu": [0, 1193, 1427, 1915], "hpu": [0, 1927], "attribut": [0, 1, 11, 13, 21, 22, 24, 25, 31, 55, 56, 69, 74, 139, 279, 483, 484, 715, 726, 727, 728, 729, 730, 731, 733, 734, 744, 752, 779, 790, 803, 804, 805, 826, 827, 828, 846, 847, 877, 881, 883, 887, 1117, 1192, 1193, 1194, 1196, 1197, 1199, 1204, 1205, 1266, 1364, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1427, 1470, 1607, 1608, 1618, 1619, 1620, 1641, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1847, 1850, 1865, 1867, 1870, 1884, 1888, 1889, 1892, 1894, 1895, 1900, 1905, 1910, 1913, 1916, 1921, 1931, 1932, 1944, 1947, 1953, 1955, 1957], "thu": [0, 1, 11, 21, 24, 30, 42, 45, 47, 55, 773, 810, 813, 842, 1066, 1087, 1257, 1288, 1367, 1479, 1595, 1607, 1666, 1667, 1677, 1796, 1866, 1869, 1876, 1877, 1889, 1891, 1894, 1896, 1897, 1899, 1900, 1910, 1916, 1921, 1925, 1929, 1931, 1932], "obtain": [0, 3, 21, 24, 30, 34, 54, 55, 484, 906, 1138, 1312, 1350, 1434, 1510, 1607, 1670, 1676, 1699, 1716, 1812, 1869, 1881, 1882, 1891, 1904, 1910, 1912, 1915, 1916, 1952], "bool": [0, 1, 2, 3, 5, 13, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 35, 41, 43, 45, 47, 54, 55, 139, 185, 198, 234, 249, 308, 310, 317, 318, 319, 320, 322, 323, 328, 330, 433, 434, 435, 436, 437, 446, 459, 484, 505, 569, 591, 668, 681, 682, 683, 684, 685, 687, 723, 746, 767, 768, 773, 782, 802, 853, 861, 862, 863, 864, 868, 881, 889, 890, 891, 892, 893, 894, 895, 896, 897, 909, 912, 914, 915, 917, 918, 924, 925, 931, 932, 933, 939, 940, 941, 963, 969, 976, 1006, 1012, 1024, 1067, 1068, 1069, 1072, 1079, 1084, 1102, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1133, 1135, 1150, 1151, 1154, 1155, 1168, 1174, 1178, 1181, 1182, 1184, 1190, 1193, 1197, 1200, 1201, 1209, 1210, 1213, 1215, 1223, 1224, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1263, 1264, 1265, 1266, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1285, 1291, 1293, 1294, 1296, 1299, 1305, 1308, 1309, 1317, 1322, 1323, 1324, 1325, 1326, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1444, 1445, 1446, 1447, 1454, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1491, 1498, 1499, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1530, 1537, 1538, 1561, 1569, 1576, 1595, 1601, 1607, 1608, 1611, 1612, 1614, 1616, 1618, 1619, 1620, 1641, 1642, 1643, 1644, 1646, 1649, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1705, 1707, 1709, 1710, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1745, 1750, 1754, 1755, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1783, 1793, 1794, 1795, 1796, 1797, 1798, 1805, 1806, 1807, 1810, 1811, 1819, 1825, 1829, 1834, 1843, 1844, 1846, 1847, 1849, 1851, 1852, 1853, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1878, 1879, 1881, 1882, 1883, 1884, 1898, 1905, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1920, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1935, 1942, 1944, 1949, 1953, 1955], "option": [0, 1, 3, 5, 14, 21, 24, 28, 29, 30, 32, 35, 39, 40, 41, 43, 44, 45, 47, 55, 70, 72, 77, 139, 144, 159, 161, 164, 167, 168, 169, 184, 195, 198, 229, 256, 286, 314, 320, 382, 433, 434, 435, 436, 437, 475, 487, 488, 501, 508, 513, 525, 548, 568, 569, 571, 572, 573, 575, 576, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 723, 746, 767, 768, 773, 780, 782, 787, 806, 842, 847, 850, 853, 864, 866, 867, 868, 869, 870, 871, 872, 873, 880, 881, 889, 890, 891, 892, 893, 894, 895, 896, 897, 900, 901, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 924, 927, 929, 930, 931, 932, 933, 935, 937, 938, 939, 940, 945, 946, 952, 953, 955, 956, 957, 958, 961, 965, 966, 967, 969, 970, 972, 974, 978, 979, 981, 982, 983, 986, 987, 994, 995, 998, 1001, 1009, 1010, 1011, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1036, 1037, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1135, 1136, 1137, 1138, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1167, 1170, 1182, 1184, 1187, 1188, 1190, 1191, 1193, 1194, 1197, 1200, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1305, 1308, 1309, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1381, 1384, 1385, 1386, 1387, 1388, 1393, 1394, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1418, 1419, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1441, 1445, 1446, 1447, 1454, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1491, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1523, 1526, 1528, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1569, 1576, 1582, 1583, 1595, 1603, 1604, 1607, 1608, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1674, 1676, 1677, 1678, 1679, 1680, 1684, 1697, 1698, 1699, 1702, 1706, 1707, 1709, 1710, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1738, 1740, 1745, 1758, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1822, 1823, 1824, 1825, 1826, 1829, 1831, 1834, 1835, 1836, 1837, 1838, 1840, 1843, 1844, 1846, 1851, 1852, 1853, 1854, 1859, 1860, 1862, 1863, 1864, 1866, 1867, 1869, 1871, 1873, 1875, 1877, 1878, 1879, 1884, 1887, 1892, 1894, 1895, 1896, 1899, 1900, 1904, 1905, 1908, 1910, 1913, 1915, 1916, 1921, 1925, 1926, 1928, 1930, 1932, 1935, 1936, 1944, 1947, 1951, 1953, 1954, 1956], "whether": [0, 1, 2, 7, 14, 21, 22, 24, 25, 26, 29, 30, 32, 40, 41, 47, 55, 76, 308, 310, 459, 505, 605, 668, 681, 683, 684, 687, 862, 863, 868, 877, 885, 888, 889, 891, 896, 897, 909, 918, 931, 932, 933, 939, 940, 941, 943, 945, 1008, 1024, 1122, 1134, 1150, 1151, 1168, 1190, 1193, 1201, 1202, 1210, 1215, 1223, 1224, 1230, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1265, 1281, 1283, 1291, 1293, 1294, 1296, 1299, 1317, 1322, 1323, 1324, 1325, 1350, 1387, 1393, 1427, 1436, 1441, 1476, 1488, 1489, 1490, 1510, 1538, 1569, 1601, 1607, 1614, 1616, 1619, 1632, 1646, 1649, 1654, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1685, 1697, 1707, 1710, 1754, 1755, 1805, 1806, 1807, 1810, 1811, 1829, 1834, 1843, 1844, 1846, 1847, 1852, 1853, 1857, 1864, 1869, 1875, 1876, 1878, 1884, 1888, 1892, 1894, 1898, 1908, 1910, 1914, 1916, 1921, 1925, 1927, 1929, 1930, 1935, 1941, 1944, 1947, 1954], "torch_dtyp": 0, "weight": [0, 21, 24, 30, 45, 47, 53, 55, 56, 145, 290, 350, 351, 484, 700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 733, 734, 737, 739, 740, 741, 742, 744, 748, 749, 751, 752, 753, 760, 761, 762, 769, 780, 781, 782, 796, 797, 821, 823, 829, 833, 837, 838, 839, 840, 841, 846, 847, 849, 850, 911, 958, 1122, 1124, 1132, 1134, 1154, 1155, 1193, 1197, 1203, 1205, 1210, 1219, 1317, 1343, 1344, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1379, 1380, 1382, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1431, 1432, 1433, 1434, 1435, 1442, 1444, 1456, 1470, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1517, 1518, 1527, 1536, 1540, 1543, 1558, 1560, 1561, 1570, 1579, 1598, 1607, 1614, 1615, 1617, 1619, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1649, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1713, 1846, 1857, 1864, 1865, 1867, 1868, 1869, 1877, 1878, 1883, 1884, 1887, 1894, 1896, 1900, 1905, 1908, 1916, 1917, 1918, 1919, 1925, 1930, 1934, 1935, 1944, 1949], "cach": [0, 2, 3, 30, 55, 474, 940, 947, 991, 992, 1009, 1012, 1017, 1019, 1021, 1023, 1031, 1036, 1302, 1303, 1304, 1608, 1619, 1651, 1881, 1896, 1939, 1941, 1944, 1948, 1952, 1954, 1956], "insid": [0, 1, 7, 21, 41, 45, 47, 52, 54, 55, 885, 886, 887, 888, 975, 1012, 1124, 1128, 1133, 1205, 1607, 1866, 1868, 1869, 1877, 1888, 1892, 1894, 1895, 1899, 1910, 1925, 1934, 1943, 1947, 1954], "custom_fwd": [0, 1888], "fwd": [0, 1948], "cast_input": [0, 1888], "helper": [0, 3, 5, 24, 51, 55, 1466, 1864, 1865, 1868, 1892, 1893, 1910, 1913, 1921, 1953, 1955], "subclass": [0, 1, 14, 21, 26, 30, 34, 52, 55, 128, 525, 877, 878, 879, 1191, 1194, 1204, 1427, 1608, 1621, 1626, 1647, 1866, 1869, 1870, 1876, 1888, 1900, 1910, 1921, 1925, 1941, 1944, 1947, 1955], "page": [0, 6, 7, 9, 21, 25, 42, 44, 1266, 1470, 1472, 1474, 1892, 1893, 1900, 1911, 1921, 1951], "incom": [0, 24, 43, 769, 807, 808, 809, 810, 813, 1348, 1414, 1497, 1543, 1881, 1889], "non": [0, 1, 3, 5, 14, 20, 22, 24, 25, 26, 29, 30, 32, 34, 41, 43, 44, 47, 54, 56, 66, 73, 77, 139, 324, 476, 492, 501, 505, 533, 686, 722, 727, 728, 729, 730, 731, 733, 734, 744, 748, 752, 753, 760, 761, 762, 826, 853, 865, 877, 879, 881, 886, 888, 896, 897, 911, 924, 927, 940, 951, 952, 957, 1023, 1112, 1113, 1119, 1123, 1128, 1134, 1170, 1193, 1196, 1206, 1209, 1210, 1229, 1230, 1237, 1241, 1242, 1255, 1257, 1266, 1276, 1283, 1288, 1293, 1317, 1322, 1323, 1327, 1340, 1341, 1342, 1356, 1357, 1359, 1360, 1363, 1373, 1379, 1396, 1397, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1442, 1444, 1458, 1509, 1528, 1556, 1561, 1603, 1604, 1607, 1653, 1680, 1702, 1745, 1746, 1761, 1773, 1788, 1789, 1793, 1794, 1795, 1796, 1797, 1798, 1827, 1843, 1857, 1864, 1865, 1866, 1868, 1869, 1871, 1881, 1884, 1887, 1890, 1894, 1895, 1896, 1900, 1904, 1910, 1914, 1915, 1920, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1939, 1942, 1943, 1944, 1945, 1952, 1953, 1955], "intern": [0, 3, 8, 9, 14, 21, 22, 24, 26, 30, 32, 38, 45, 47, 52, 55, 967, 1001, 1022, 1123, 1193, 1230, 1232, 1248, 1251, 1274, 1345, 1346, 1347, 1381, 1466, 1501, 1502, 1503, 1526, 1616, 1660, 1753, 1796, 1846, 1870, 1888, 1889, 1891, 1892, 1897, 1903, 1904, 1908, 1922, 1923, 1927, 1929, 1936, 1944, 1947, 1954], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 21, 24, 26, 28, 29, 30, 32, 34, 41, 42, 45, 47, 48, 54, 55, 69, 77, 139, 198, 210, 474, 485, 486, 487, 729, 731, 769, 781, 783, 805, 847, 849, 850, 853, 867, 868, 878, 881, 882, 889, 890, 891, 896, 909, 918, 961, 963, 967, 968, 969, 970, 972, 977, 978, 981, 982, 984, 985, 986, 987, 990, 991, 992, 994, 995, 998, 1000, 1001, 1004, 1006, 1007, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1039, 1042, 1043, 1044, 1067, 1069, 1079, 1084, 1102, 1118, 1120, 1140, 1141, 1142, 1150, 1151, 1176, 1177, 1193, 1197, 1209, 1213, 1264, 1266, 1280, 1295, 1302, 1304, 1305, 1367, 1370, 1374, 1427, 1466, 1474, 1478, 1520, 1526, 1537, 1576, 1594, 1595, 1597, 1607, 1620, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1635, 1636, 1658, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1709, 1718, 1720, 1722, 1724, 1725, 1749, 1753, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1836, 1838, 1843, 1848, 1849, 1862, 1865, 1866, 1868, 1869, 1870, 1871, 1873, 1876, 1879, 1881, 1884, 1888, 1889, 1892, 1893, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1925, 1927, 1928, 1930, 1931, 1934, 1943, 1944, 1947, 1950, 1951, 1954, 1955, 1956], "outsid": [0, 5, 9, 21, 34, 45, 47, 52, 56, 65, 66, 672, 783, 873, 1122, 1124, 1128, 1133, 1194, 1526, 1607, 1682, 1683, 1688, 1689, 1695, 1868, 1869, 1887, 1889, 1892, 1895, 1896, 1932, 1944, 1950], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 139, 185, 198, 244, 249, 324, 433, 434, 435, 436, 437, 461, 462, 476, 484, 486, 532, 568, 569, 591, 592, 606, 668, 677, 681, 683, 684, 685, 687, 723, 748, 767, 769, 773, 775, 779, 785, 826, 828, 835, 846, 852, 862, 863, 865, 877, 880, 881, 883, 885, 891, 896, 897, 910, 928, 931, 932, 933, 940, 942, 951, 952, 953, 966, 969, 970, 972, 977, 1005, 1008, 1009, 1054, 1056, 1070, 1102, 1114, 1122, 1123, 1126, 1127, 1130, 1134, 1146, 1155, 1156, 1167, 1190, 1193, 1197, 1201, 1204, 1205, 1206, 1209, 1214, 1215, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1247, 1248, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1260, 1261, 1265, 1274, 1281, 1283, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1305, 1322, 1323, 1324, 1325, 1343, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1371, 1374, 1375, 1376, 1379, 1382, 1387, 1390, 1391, 1392, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1431, 1432, 1433, 1434, 1435, 1442, 1458, 1460, 1466, 1474, 1478, 1479, 1491, 1501, 1502, 1503, 1509, 1518, 1521, 1522, 1526, 1537, 1561, 1563, 1564, 1566, 1570, 1576, 1582, 1595, 1597, 1598, 1601, 1602, 1607, 1614, 1616, 1618, 1621, 1625, 1627, 1630, 1640, 1641, 1648, 1649, 1653, 1655, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1687, 1691, 1693, 1697, 1707, 1709, 1710, 1711, 1712, 1729, 1731, 1741, 1753, 1775, 1789, 1790, 1791, 1796, 1802, 1804, 1805, 1806, 1807, 1810, 1811, 1822, 1828, 1834, 1852, 1853, 1857, 1866, 1868, 1869, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1954], "effect": [0, 3, 7, 14, 21, 22, 24, 30, 43, 45, 47, 52, 55, 56, 59, 185, 198, 591, 723, 767, 773, 1001, 1049, 1134, 1193, 1236, 1237, 1238, 1239, 1295, 1335, 1350, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1427, 1433, 1479, 1537, 1564, 1595, 1601, 1607, 1608, 1626, 1677, 1685, 1786, 1791, 1811, 1832, 1847, 1857, 1864, 1866, 1877, 1887, 1888, 1889, 1892, 1894, 1916, 1919, 1927, 1928, 1930, 1939, 1944], "custom_bwd": [0, 1888], "bwd": 0, "small": [0, 3, 7, 9, 21, 22, 24, 30, 41, 45, 853, 896, 897, 940, 980, 1023, 1256, 1257, 1269, 1271, 1335, 1362, 1436, 1441, 1455, 1475, 1479, 1508, 1562, 1569, 1607, 1682, 1688, 1697, 1811, 1866, 1868, 1869, 1892, 1894, 1896, 1900, 1903, 1905, 1910, 1913, 1916, 1917, 1925, 1926, 1932, 1939, 1942, 1943, 1944, 1945, 1948, 1952, 1954, 1956], "magnitud": [0, 953, 1651, 1761, 1887, 1888, 1892], "represent": [0, 3, 14, 21, 24, 26, 39, 45, 55, 70, 469, 746, 814, 970, 1082, 1083, 1085, 1109, 1138, 1193, 1233, 1236, 1238, 1241, 1321, 1427, 1433, 1697, 1865, 1866, 1869, 1884, 1894, 1903, 1908, 1910, 1913, 1916, 1925, 1932, 1942, 1944, 1954, 1957], "These": [0, 1, 2, 3, 8, 14, 15, 21, 24, 25, 30, 48, 50, 53, 55, 782, 868, 958, 1066, 1130, 1190, 1193, 1236, 1301, 1335, 1427, 1598, 1615, 1865, 1866, 1867, 1868, 1869, 1879, 1882, 1883, 1885, 1888, 1889, 1892, 1893, 1894, 1900, 1903, 1905, 1910, 1913, 1919, 1921, 1922, 1928, 1933, 1939, 1941, 1942, 1944, 1947, 1950, 1954, 1955], "flush": [0, 1, 26, 45, 1023, 1204, 1741, 1754, 1903, 1930], "zero": [0, 1, 2, 22, 24, 25, 28, 30, 43, 47, 52, 55, 139, 249, 304, 501, 503, 532, 533, 572, 573, 575, 576, 611, 667, 679, 686, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748, 752, 756, 757, 760, 761, 762, 763, 765, 768, 769, 783, 787, 807, 808, 809, 810, 813, 818, 865, 874, 875, 876, 881, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 910, 911, 931, 932, 933, 938, 953, 957, 1012, 1023, 1027, 1028, 1057, 1061, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1114, 1119, 1122, 1130, 1152, 1153, 1156, 1178, 1190, 1193, 1205, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1266, 1274, 1275, 1276, 1277, 1278, 1283, 1284, 1317, 1321, 1325, 1339, 1340, 1341, 1342, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1382, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1436, 1439, 1440, 1441, 1442, 1444, 1464, 1478, 1479, 1482, 1483, 1484, 1493, 1494, 1495, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1526, 1547, 1548, 1562, 1563, 1564, 1576, 1624, 1625, 1626, 1627, 1642, 1649, 1653, 1657, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1697, 1709, 1711, 1712, 1713, 1729, 1738, 1748, 1775, 1779, 1789, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1811, 1825, 1826, 1828, 1834, 1863, 1866, 1867, 1869, 1871, 1879, 1881, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1900, 1903, 1906, 1910, 1911, 1913, 1915, 1916, 1919, 1921, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1943], "underflow": [0, 1393, 1888], "updat": [0, 9, 11, 21, 22, 26, 28, 32, 41, 45, 47, 50, 51, 55, 75, 210, 476, 501, 503, 748, 787, 788, 812, 1122, 1131, 1193, 1230, 1345, 1346, 1347, 1364, 1370, 1371, 1379, 1390, 1391, 1392, 1427, 1428, 1437, 1466, 1517, 1518, 1615, 1619, 1649, 1663, 1669, 1674, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1864, 1866, 1877, 1888, 1889, 1892, 1893, 1894, 1900, 1902, 1905, 1906, 1910, 1911, 1912, 1914, 1916, 1921, 1922, 1923, 1930, 1939, 1953], "lost": [0, 32, 42, 44, 1364, 1423, 1424, 1425], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 21, 22, 24, 25, 28, 29, 30, 32, 33, 39, 40, 42, 43, 45, 47, 52, 55, 68, 71, 72, 75, 324, 487, 545, 722, 882, 895, 937, 940, 968, 1013, 1033, 1054, 1056, 1066, 1094, 1096, 1100, 1111, 1193, 1194, 1196, 1197, 1204, 1205, 1239, 1261, 1266, 1294, 1335, 1344, 1367, 1393, 1423, 1424, 1425, 1427, 1480, 1481, 1499, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1651, 1691, 1699, 1710, 1749, 1753, 1757, 1796, 1812, 1864, 1866, 1868, 1869, 1873, 1881, 1882, 1883, 1885, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1954, 1956], "prevent": [0, 7, 8, 21, 22, 24, 25, 32, 47, 55, 487, 723, 887, 969, 1047, 1048, 1067, 1068, 1069, 1190, 1293, 1305, 1322, 1325, 1365, 1433, 1458, 1545, 1582, 1583, 1598, 1607, 1707, 1787, 1790, 1810, 1836, 1838, 1846, 1881, 1888, 1889, 1892, 1893, 1896, 1900, 1913, 1915, 1923, 1925, 1926, 1939, 1943, 1944, 1947], "multipli": [0, 24, 45, 302, 310, 411, 501, 673, 674, 675, 676, 677, 678, 679, 748, 767, 773, 774, 775, 908, 920, 1036, 1049, 1066, 1146, 1157, 1217, 1229, 1230, 1234, 1247, 1249, 1251, 1257, 1259, 1288, 1298, 1312, 1316, 1319, 1343, 1355, 1356, 1357, 1360, 1379, 1397, 1479, 1480, 1481, 1537, 1595, 1596, 1597, 1619, 1682, 1688, 1690, 1697, 1753, 1781, 1784, 1788, 1789, 1803, 1807, 1808, 1811, 1832, 1867, 1882, 1892, 1897, 1900, 1903, 1911, 1925, 1926, 1944], "factor": [0, 3, 22, 30, 55, 677, 678, 679, 787, 807, 908, 931, 1236, 1237, 1238, 1241, 1243, 1283, 1284, 1285, 1365, 1388, 1415, 1439, 1440, 1567, 1568, 1576, 1677, 1678, 1679, 1681, 1682, 1684, 1686, 1687, 1688, 1689, 1690, 1693, 1694, 1695, 1709, 1767, 1789, 1811, 1887, 1888, 1916, 1925, 1944], "flow": [0, 56, 62, 64, 937, 1206, 1209, 1491, 1526, 1607, 1866, 1887, 1889, 1892, 1894, 1905, 1907, 1910, 1923, 1939, 1940, 1942, 1944, 1947, 1952], "through": [0, 5, 7, 9, 15, 21, 24, 26, 30, 34, 45, 47, 52, 54, 55, 56, 59, 61, 68, 484, 780, 828, 842, 849, 850, 887, 896, 897, 974, 1012, 1093, 1126, 1134, 1191, 1194, 1196, 1209, 1210, 1212, 1229, 1230, 1251, 1257, 1274, 1434, 1471, 1472, 1473, 1474, 1528, 1598, 1607, 1619, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1709, 1857, 1864, 1865, 1868, 1869, 1873, 1875, 1879, 1881, 1882, 1883, 1889, 1892, 1894, 1896, 1897, 1899, 1900, 1906, 1907, 1908, 1910, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1929, 1933, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1953, 1954, 1957], "word": [0, 1, 8, 24, 41, 42, 50, 54, 55, 924, 1335, 1355, 1356, 1357, 1370, 1371, 1470, 1517, 1518, 1537, 1595, 1607, 1614, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1868, 1889, 1896, 1913, 1922], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 14, 21, 24, 25, 26, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 55, 56, 63, 64, 73, 142, 143, 210, 211, 302, 304, 310, 324, 387, 391, 436, 446, 459, 474, 475, 476, 491, 501, 503, 505, 508, 532, 605, 668, 677, 681, 683, 684, 685, 687, 803, 805, 829, 868, 877, 881, 889, 891, 901, 902, 909, 910, 918, 927, 928, 940, 943, 958, 972, 981, 982, 1012, 1023, 1057, 1065, 1072, 1086, 1096, 1101, 1103, 1117, 1122, 1123, 1134, 1135, 1136, 1150, 1151, 1154, 1155, 1167, 1168, 1190, 1192, 1193, 1196, 1197, 1199, 1201, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1215, 1216, 1225, 1229, 1230, 1246, 1253, 1254, 1257, 1259, 1265, 1274, 1276, 1281, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1317, 1322, 1323, 1325, 1327, 1335, 1339, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1375, 1376, 1381, 1386, 1390, 1391, 1392, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1474, 1476, 1508, 1517, 1518, 1521, 1522, 1526, 1543, 1561, 1563, 1566, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1614, 1616, 1619, 1643, 1647, 1652, 1654, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1707, 1733, 1734, 1748, 1753, 1761, 1784, 1788, 1792, 1793, 1794, 1795, 1797, 1798, 1805, 1806, 1807, 1810, 1811, 1822, 1826, 1832, 1834, 1846, 1849, 1852, 1853, 1855, 1857, 1859, 1864, 1866, 1867, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1953, 1954, 1955, 1956], "larger": [0, 9, 24, 30, 55, 243, 487, 897, 911, 1023, 1123, 1248, 1251, 1335, 1364, 1370, 1371, 1419, 1476, 1479, 1517, 1518, 1889, 1892, 1896, 1897, 1899, 1903, 1905, 1925, 1930, 1947, 1948, 1951, 1952, 1953], "thei": [0, 1, 3, 5, 7, 9, 11, 13, 17, 18, 21, 24, 26, 30, 31, 41, 45, 47, 50, 51, 54, 55, 73, 310, 324, 325, 674, 677, 678, 685, 788, 803, 804, 805, 812, 829, 842, 847, 878, 887, 897, 908, 940, 1012, 1070, 1117, 1122, 1132, 1168, 1182, 1183, 1190, 1193, 1201, 1206, 1215, 1229, 1230, 1236, 1257, 1265, 1287, 1291, 1294, 1296, 1299, 1317, 1340, 1341, 1342, 1358, 1359, 1360, 1374, 1412, 1420, 1421, 1422, 1427, 1433, 1443, 1455, 1478, 1526, 1528, 1598, 1607, 1608, 1611, 1614, 1616, 1617, 1640, 1643, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1687, 1690, 1749, 1755, 1807, 1811, 1846, 1847, 1851, 1864, 1866, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1898, 1900, 1902, 1903, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1921, 1925, 1930, 1932, 1933, 1934, 1939, 1942, 1943, 1944, 1945, 1946, 1954, 1955], "don": [0, 1, 4, 7, 9, 11, 24, 40, 48, 50, 52, 55, 56, 65, 66, 139, 773, 783, 881, 882, 895, 1040, 1122, 1209, 1287, 1390, 1391, 1392, 1479, 1595, 1598, 1607, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1752, 1864, 1866, 1870, 1881, 1882, 1883, 1889, 1892, 1894, 1896, 1900, 1902, 1906, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1925, 1941, 1942, 1943, 1944, 1945, 1947, 1955], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 21, 22, 24, 26, 30, 31, 34, 38, 40, 41, 45, 48, 50, 52, 53, 54, 55, 56, 58, 65, 66, 70, 73, 139, 302, 304, 310, 446, 511, 525, 559, 675, 676, 685, 748, 769, 773, 783, 811, 814, 865, 866, 867, 868, 877, 879, 881, 882, 885, 887, 890, 895, 931, 932, 933, 938, 958, 967, 970, 991, 1009, 1010, 1040, 1064, 1082, 1087, 1088, 1089, 1090, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1117, 1118, 1119, 1122, 1123, 1124, 1134, 1135, 1146, 1156, 1190, 1191, 1193, 1194, 1196, 1200, 1201, 1205, 1207, 1209, 1212, 1214, 1223, 1224, 1230, 1232, 1233, 1236, 1243, 1251, 1252, 1257, 1265, 1266, 1274, 1287, 1300, 1301, 1315, 1324, 1344, 1348, 1350, 1355, 1356, 1357, 1364, 1370, 1371, 1379, 1388, 1390, 1391, 1392, 1393, 1397, 1414, 1427, 1442, 1458, 1460, 1470, 1478, 1479, 1497, 1501, 1502, 1503, 1510, 1517, 1518, 1538, 1543, 1562, 1582, 1595, 1598, 1601, 1602, 1607, 1608, 1614, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1641, 1643, 1644, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1683, 1693, 1699, 1705, 1709, 1726, 1751, 1752, 1761, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1784, 1788, 1807, 1811, 1812, 1822, 1825, 1831, 1834, 1857, 1858, 1864, 1866, 1867, 1868, 1870, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1899, 1900, 1902, 1905, 1906, 1910, 1911, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1941, 1942, 1943, 1945, 1947, 1949, 1952, 1954, 1955], "grad": [0, 1, 5, 24, 30, 48, 51, 52, 55, 139, 324, 446, 475, 476, 483, 484, 491, 492, 569, 868, 877, 881, 882, 888, 889, 891, 896, 897, 901, 902, 1012, 1070, 1122, 1123, 1125, 1129, 1133, 1134, 1168, 1176, 1193, 1266, 1427, 1607, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1755, 1788, 1846, 1857, 1865, 1866, 1867, 1882, 1883, 1884, 1888, 1893, 1894, 1895, 1897, 1900, 1902, 1911, 1921, 1922, 1925, 1931, 1950], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 24, 28, 29, 30, 32, 34, 38, 40, 41, 43, 45, 47, 50, 51, 52, 54, 55, 56, 139, 243, 324, 423, 446, 571, 605, 668, 683, 684, 736, 745, 748, 778, 782, 849, 868, 920, 1003, 1007, 1057, 1066, 1070, 1119, 1122, 1134, 1167, 1192, 1194, 1197, 1204, 1209, 1219, 1224, 1236, 1237, 1241, 1242, 1249, 1255, 1257, 1263, 1266, 1283, 1287, 1288, 1294, 1298, 1302, 1319, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1367, 1370, 1371, 1374, 1379, 1380, 1390, 1391, 1392, 1397, 1398, 1400, 1401, 1402, 1409, 1410, 1411, 1421, 1422, 1428, 1434, 1437, 1442, 1444, 1466, 1478, 1509, 1561, 1607, 1608, 1616, 1619, 1623, 1649, 1652, 1654, 1659, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1694, 1698, 1703, 1745, 1748, 1749, 1753, 1755, 1779, 1784, 1811, 1831, 1834, 1846, 1847, 1857, 1863, 1864, 1865, 1866, 1868, 1869, 1871, 1877, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1907, 1908, 1910, 1913, 1914, 1916, 1921, 1923, 1925, 1928, 1932, 1939, 1942, 1947, 1954, 1956], "interfer": [0, 1879, 1892, 1910, 1944], "learn": [0, 7, 8, 15, 30, 40, 45, 47, 55, 75, 1348, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1387, 1399, 1412, 1414, 1435, 1456, 1470, 1472, 1474, 1475, 1476, 1579, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1865, 1873, 1885, 1887, 1892, 1898, 1900, 1901, 1907, 1913, 1916, 1921, 1923, 1936, 1938, 1940, 1942, 1947], "rate": [0, 8, 22, 30, 47, 1366, 1367, 1368, 1372, 1473, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1702, 1865, 1899, 1930, 1944, 1951], "fp16": [0, 2, 717, 1607, 1916, 1917], "everi": [0, 1, 2, 8, 9, 21, 22, 24, 26, 28, 30, 32, 47, 52, 55, 469, 475, 598, 668, 769, 807, 885, 901, 902, 940, 1049, 1066, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1123, 1146, 1155, 1193, 1225, 1239, 1249, 1252, 1283, 1339, 1365, 1366, 1367, 1368, 1372, 1420, 1427, 1460, 1462, 1466, 1512, 1513, 1514, 1519, 1550, 1551, 1552, 1566, 1583, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1615, 1648, 1651, 1652, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1749, 1811, 1844, 1869, 1875, 1879, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1901, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1932, 1942, 1943, 1947, 1951, 1952, 1953, 1954], "most": [0, 1, 3, 4, 7, 8, 15, 21, 24, 26, 28, 30, 31, 32, 33, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 487, 781, 885, 886, 887, 892, 896, 905, 940, 1035, 1049, 1066, 1123, 1168, 1178, 1191, 1194, 1299, 1335, 1474, 1526, 1576, 1607, 1619, 1674, 1753, 1786, 1832, 1864, 1866, 1868, 1869, 1871, 1876, 1881, 1883, 1884, 1889, 1892, 1894, 1902, 1903, 1904, 1908, 1912, 1915, 1916, 1922, 1923, 1925, 1928, 1930, 1932, 1936, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954], "bf16": [0, 2], "pretrain": [0, 850, 1370, 1371, 1864, 1889, 1910], "cannot": [0, 3, 8, 9, 13, 21, 22, 24, 30, 31, 34, 41, 45, 47, 48, 52, 53, 54, 55, 56, 211, 243, 512, 533, 868, 1087, 1089, 1097, 1098, 1099, 1105, 1122, 1190, 1198, 1317, 1350, 1370, 1479, 1510, 1576, 1607, 1660, 1812, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1879, 1883, 1884, 1889, 1893, 1894, 1905, 1906, 1910, 1916, 1921, 1923, 1925, 1927, 1928, 1939, 1944, 1945, 1955], "numer": [0, 21, 30, 48, 53, 675, 781, 896, 897, 924, 1197, 1209, 1210, 1225, 1229, 1230, 1234, 1239, 1247, 1248, 1251, 1254, 1257, 1259, 1281, 1283, 1344, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1460, 1463, 1466, 1475, 1517, 1538, 1545, 1576, 1582, 1584, 1615, 1648, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1713, 1745, 1811, 1865, 1869, 1870, 1874, 1877, 1892, 1894, 1895, 1910, 1916, 1926, 1931, 1944, 1954, 1957], "max": [0, 21, 24, 32, 34, 40, 41, 43, 45, 47, 55, 56, 65, 66, 105, 174, 175, 176, 177, 289, 683, 684, 685, 746, 758, 759, 768, 770, 771, 790, 807, 808, 809, 810, 813, 862, 911, 928, 935, 936, 940, 958, 1045, 1080, 1081, 1153, 1205, 1225, 1239, 1246, 1248, 1250, 1251, 1263, 1336, 1337, 1338, 1349, 1350, 1361, 1362, 1371, 1375, 1376, 1381, 1386, 1387, 1395, 1396, 1413, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1435, 1446, 1447, 1454, 1475, 1476, 1478, 1488, 1489, 1490, 1500, 1508, 1518, 1521, 1522, 1537, 1541, 1550, 1551, 1552, 1562, 1566, 1570, 1572, 1577, 1595, 1611, 1643, 1666, 1667, 1668, 1678, 1683, 1684, 1693, 1714, 1715, 1788, 1805, 1806, 1817, 1818, 1846, 1852, 1853, 1866, 1867, 1876, 1879, 1884, 1890, 1892, 1896, 1911, 1916, 1919, 1943, 1948, 1949, 1957], "65504": 0, "overflow": [0, 1047, 1048, 1293, 1322, 1325, 1545, 1582, 1583, 1707, 1738, 1787, 1790, 1810, 1836, 1838, 1892, 1903, 1926], "instead": [0, 1, 3, 5, 8, 9, 14, 21, 22, 24, 26, 29, 30, 32, 38, 41, 42, 45, 47, 50, 51, 52, 55, 56, 58, 64, 210, 395, 446, 487, 501, 736, 745, 756, 757, 781, 805, 814, 868, 878, 889, 890, 891, 892, 895, 896, 924, 930, 1101, 1103, 1127, 1128, 1129, 1130, 1133, 1134, 1139, 1180, 1191, 1193, 1194, 1198, 1223, 1224, 1230, 1232, 1248, 1251, 1257, 1263, 1265, 1294, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1364, 1366, 1367, 1368, 1372, 1379, 1387, 1393, 1394, 1395, 1396, 1397, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1434, 1441, 1442, 1454, 1458, 1459, 1460, 1466, 1475, 1493, 1494, 1495, 1498, 1499, 1509, 1519, 1526, 1538, 1550, 1551, 1552, 1561, 1569, 1582, 1607, 1649, 1651, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1691, 1714, 1715, 1725, 1745, 1749, 1792, 1807, 1811, 1846, 1857, 1866, 1868, 1869, 1876, 1883, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1915, 1916, 1919, 1922, 1925, 1932, 1933, 1935, 1939, 1940, 1942, 1943, 1944, 1947, 1950, 1953, 1954, 1955], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 21, 22, 24, 26, 28, 30, 32, 33, 34, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 73, 139, 143, 185, 341, 484, 487, 668, 748, 772, 779, 782, 808, 809, 811, 814, 846, 853, 881, 889, 891, 895, 909, 911, 916, 953, 966, 991, 1013, 1014, 1033, 1034, 1035, 1066, 1087, 1089, 1097, 1098, 1099, 1114, 1124, 1128, 1133, 1152, 1178, 1191, 1194, 1203, 1206, 1207, 1209, 1223, 1225, 1229, 1230, 1234, 1239, 1240, 1241, 1243, 1249, 1252, 1257, 1259, 1263, 1265, 1266, 1271, 1274, 1283, 1294, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1395, 1396, 1413, 1418, 1420, 1421, 1422, 1433, 1434, 1435, 1445, 1458, 1464, 1469, 1474, 1476, 1478, 1491, 1509, 1518, 1526, 1530, 1531, 1561, 1563, 1570, 1607, 1609, 1610, 1614, 1616, 1619, 1620, 1653, 1654, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1691, 1729, 1732, 1745, 1747, 1761, 1764, 1796, 1811, 1812, 1842, 1843, 1846, 1860, 1864, 1869, 1874, 1881, 1882, 1883, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1905, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1936, 1942, 1943, 1944, 1945, 1947, 1950, 1952, 1953, 1954, 1955, 1957], "decreas": [0, 30, 1023, 1239, 1366, 1367, 1368, 1372, 1440, 1641, 1642, 1678, 1685, 1693, 1875, 1877, 1902, 1904, 1925, 1928], "attempt": [0, 1, 8, 14, 24, 41, 42, 47, 52, 74, 934, 940, 943, 954, 1197, 1204, 1283, 1576, 1609, 1610, 1666, 1667, 1846, 1849, 1866, 1869, 1882, 1883, 1888, 1892, 1894, 1906, 1907, 1912, 1913, 1921, 1942, 1943, 1944, 1954], "bring": [0, 48, 55, 1087, 1491, 1526, 1914, 1948, 1951], "number": [0, 1, 2, 3, 4, 5, 7, 14, 21, 22, 24, 28, 29, 30, 32, 39, 40, 41, 44, 45, 48, 50, 53, 55, 56, 61, 74, 77, 143, 162, 207, 221, 243, 302, 341, 366, 387, 391, 423, 434, 459, 461, 462, 469, 481, 485, 487, 501, 503, 505, 531, 533, 534, 546, 571, 572, 573, 575, 576, 577, 596, 605, 673, 674, 675, 676, 677, 678, 679, 686, 746, 748, 756, 757, 760, 761, 762, 769, 807, 853, 865, 878, 896, 908, 910, 911, 916, 920, 922, 926, 934, 935, 939, 953, 957, 958, 962, 972, 974, 980, 989, 998, 999, 1010, 1012, 1013, 1014, 1023, 1033, 1034, 1037, 1038, 1058, 1061, 1063, 1066, 1067, 1071, 1079, 1109, 1111, 1114, 1119, 1121, 1135, 1137, 1143, 1144, 1145, 1149, 1153, 1154, 1155, 1167, 1169, 1190, 1191, 1193, 1207, 1214, 1217, 1218, 1225, 1239, 1248, 1257, 1261, 1266, 1271, 1282, 1286, 1294, 1306, 1307, 1311, 1313, 1316, 1317, 1321, 1325, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1393, 1394, 1397, 1398, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1527, 1537, 1538, 1540, 1543, 1550, 1551, 1552, 1561, 1563, 1569, 1570, 1576, 1598, 1607, 1615, 1619, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1644, 1648, 1653, 1654, 1655, 1657, 1658, 1661, 1669, 1682, 1683, 1684, 1685, 1688, 1689, 1691, 1692, 1693, 1699, 1702, 1706, 1716, 1718, 1719, 1720, 1722, 1723, 1724, 1729, 1731, 1732, 1735, 1736, 1737, 1738, 1746, 1750, 1753, 1754, 1756, 1757, 1758, 1759, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1784, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1804, 1805, 1806, 1807, 1808, 1812, 1826, 1827, 1828, 1836, 1838, 1843, 1844, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1876, 1879, 1881, 1884, 1887, 1890, 1892, 1894, 1897, 1900, 1902, 1903, 1905, 1910, 1912, 1913, 1914, 1915, 1917, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1939, 1942, 1943, 1944, 1951, 1954, 1956, 1957], "expect": [0, 1, 3, 5, 7, 9, 13, 21, 22, 24, 26, 28, 32, 39, 41, 43, 45, 47, 52, 53, 55, 69, 668, 685, 748, 842, 889, 890, 891, 892, 893, 894, 1012, 1087, 1089, 1106, 1107, 1108, 1127, 1128, 1167, 1190, 1193, 1209, 1210, 1238, 1259, 1260, 1294, 1346, 1347, 1363, 1379, 1380, 1381, 1382, 1391, 1392, 1393, 1397, 1398, 1399, 1409, 1410, 1411, 1427, 1433, 1434, 1442, 1444, 1460, 1466, 1470, 1472, 1474, 1479, 1517, 1523, 1537, 1561, 1569, 1570, 1582, 1595, 1596, 1597, 1598, 1607, 1641, 1694, 1750, 1820, 1855, 1864, 1865, 1871, 1889, 1893, 1896, 1897, 1900, 1910, 1912, 1913, 1916, 1917, 1918, 1921, 1925, 1930, 1932, 1940, 1943, 1944, 1948, 1950], "alwai": [0, 5, 7, 14, 17, 21, 22, 24, 39, 43, 45, 47, 51, 55, 329, 436, 446, 782, 868, 886, 889, 895, 909, 918, 928, 934, 940, 962, 1012, 1023, 1053, 1061, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1097, 1098, 1099, 1100, 1102, 1105, 1109, 1150, 1151, 1193, 1204, 1209, 1224, 1229, 1230, 1231, 1232, 1234, 1235, 1247, 1250, 1251, 1252, 1253, 1257, 1259, 1323, 1343, 1345, 1346, 1347, 1364, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1463, 1466, 1598, 1607, 1640, 1733, 1734, 1760, 1807, 1811, 1843, 1846, 1869, 1870, 1881, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1913, 1914, 1920, 1921, 1923, 1925, 1928, 1931, 1932, 1939, 1942, 1943], "abov": [0, 1, 3, 13, 15, 24, 30, 34, 41, 43, 45, 47, 48, 53, 55, 56, 58, 71, 605, 668, 780, 781, 868, 909, 918, 1023, 1049, 1053, 1054, 1055, 1056, 1057, 1066, 1138, 1150, 1151, 1193, 1194, 1214, 1225, 1229, 1230, 1248, 1250, 1251, 1254, 1257, 1260, 1263, 1266, 1343, 1374, 1427, 1455, 1463, 1478, 1576, 1598, 1655, 1685, 1709, 1720, 1721, 1753, 1758, 1771, 1791, 1832, 1835, 1836, 1837, 1838, 1864, 1866, 1868, 1869, 1876, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1904, 1905, 1908, 1910, 1913, 1916, 1921, 1922, 1923, 1925, 1926, 1932, 1936, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1954], "our": [0, 3, 7, 8, 24, 37, 40, 41, 42, 44, 51, 52, 53, 55, 885, 1086, 1123, 1343, 1666, 1667, 1753, 1889, 1894, 1897, 1902, 1907, 1910, 1912, 1916, 1922, 1925, 1936, 1939, 1942, 1943, 1944, 1946, 1947, 1948, 1953, 1954], "NOT": [0, 21, 24, 32, 41, 42, 43, 45, 55, 914, 967, 1001, 1193, 1276, 1367, 1607, 1608, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1652, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1889, 1908, 1923, 1925], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 21, 22, 24, 26, 27, 29, 30, 32, 33, 38, 41, 42, 43, 44, 45, 51, 52, 55, 56, 66, 128, 211, 484, 767, 773, 849, 850, 881, 931, 969, 970, 972, 1054, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1107, 1108, 1193, 1197, 1203, 1204, 1223, 1224, 1236, 1237, 1238, 1266, 1305, 1343, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1388, 1427, 1437, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1528, 1537, 1576, 1595, 1607, 1614, 1630, 1647, 1687, 1750, 1783, 1793, 1794, 1795, 1797, 1798, 1829, 1846, 1849, 1864, 1866, 1868, 1869, 1873, 1879, 1881, 1882, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1906, 1910, 1912, 1913, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1928, 1930, 1934, 1936, 1941, 1942, 1943, 1944, 1946, 1948, 1950, 1953, 1954, 1955], "guarante": [0, 1, 5, 9, 21, 24, 26, 28, 30, 41, 43, 45, 52, 54, 55, 56, 864, 940, 1193, 1203, 1364, 1427, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1783, 1785, 1846, 1889, 1891, 1892, 1903, 1904, 1913, 1915, 1917, 1921, 1923, 1942], "encount": [0, 5, 24, 45, 52, 54, 55, 668, 1607, 1866, 1869, 1871, 1875, 1891, 1903, 1913, 1916, 1940, 1944, 1947, 1950, 1952, 1954], "nan": [0, 1, 30, 415, 416, 487, 672, 674, 677, 678, 679, 682, 685, 686, 869, 873, 908, 924, 1067, 1068, 1069, 1112, 1113, 1114, 1153, 1182, 1183, 1185, 1186, 1233, 1240, 1253, 1256, 1269, 1274, 1292, 1293, 1297, 1321, 1322, 1323, 1324, 1325, 1526, 1611, 1703, 1740, 1745, 1800, 1834, 1846, 1867, 1876, 1888, 1889, 1895, 1903, 1926, 1932], "verifi": [0, 24, 55, 76, 896, 1049, 1661, 1662, 1680, 1832, 1864, 1866, 1878, 1894, 1897, 1910, 1914, 1946], "compat": [0, 1, 14, 21, 26, 30, 32, 45, 47, 51, 52, 55, 56, 485, 486, 591, 605, 668, 803, 804, 805, 878, 921, 951, 952, 1193, 1198, 1211, 1224, 1235, 1248, 1251, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1537, 1651, 1660, 1732, 1864, 1865, 1868, 1869, 1875, 1881, 1882, 1888, 1894, 1905, 1908, 1913, 1915, 1916, 1919, 1921, 1925, 1927, 1933], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 13, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 143, 145, 162, 173, 180, 197, 213, 214, 215, 216, 217, 222, 243, 249, 252, 278, 287, 289, 300, 302, 304, 306, 310, 341, 390, 391, 415, 416, 433, 436, 437, 442, 469, 471, 475, 476, 484, 495, 496, 501, 503, 505, 508, 526, 531, 532, 535, 544, 546, 548, 566, 568, 569, 571, 572, 573, 575, 576, 577, 583, 584, 585, 586, 593, 595, 596, 605, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 739, 740, 741, 743, 744, 745, 746, 748, 756, 757, 758, 760, 761, 762, 763, 766, 768, 770, 771, 773, 782, 784, 787, 790, 805, 808, 809, 810, 813, 842, 844, 853, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 886, 889, 890, 891, 893, 896, 897, 899, 901, 902, 905, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 924, 927, 928, 929, 930, 931, 932, 934, 935, 938, 949, 950, 953, 954, 955, 956, 957, 958, 966, 972, 981, 983, 1009, 1010, 1036, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1064, 1066, 1068, 1069, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1146, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1163, 1167, 1170, 1178, 1189, 1190, 1191, 1193, 1197, 1199, 1200, 1201, 1205, 1213, 1214, 1215, 1216, 1217, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1283, 1287, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1331, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1458, 1460, 1461, 1462, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1482, 1483, 1484, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1529, 1530, 1531, 1534, 1535, 1536, 1537, 1541, 1542, 1544, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1570, 1572, 1576, 1577, 1580, 1582, 1585, 1591, 1592, 1593, 1594, 1595, 1598, 1607, 1611, 1614, 1615, 1619, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1655, 1659, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1700, 1702, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1740, 1741, 1745, 1747, 1748, 1749, 1752, 1754, 1758, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1783, 1785, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1813, 1814, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1843, 1844, 1845, 1848, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1876, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1952, 1953, 1955, 1957], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 13, 14, 18, 19, 21, 22, 24, 30, 39, 45, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 143, 180, 197, 222, 249, 278, 287, 302, 304, 306, 310, 390, 391, 433, 459, 487, 501, 503, 505, 511, 525, 532, 546, 548, 572, 573, 574, 575, 576, 595, 673, 674, 678, 685, 722, 727, 728, 729, 730, 731, 733, 734, 748, 750, 761, 762, 849, 850, 853, 868, 874, 875, 876, 889, 892, 894, 908, 911, 918, 919, 920, 924, 926, 930, 932, 933, 934, 935, 938, 953, 957, 1045, 1047, 1049, 1056, 1058, 1060, 1061, 1064, 1065, 1066, 1069, 1082, 1084, 1086, 1087, 1093, 1094, 1097, 1102, 1105, 1106, 1109, 1112, 1114, 1115, 1116, 1124, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1136, 1146, 1152, 1154, 1156, 1158, 1159, 1170, 1178, 1182, 1200, 1204, 1205, 1214, 1215, 1216, 1219, 1222, 1223, 1240, 1243, 1246, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1276, 1280, 1287, 1288, 1294, 1295, 1299, 1324, 1326, 1327, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1381, 1382, 1383, 1388, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1415, 1418, 1423, 1424, 1427, 1434, 1437, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1455, 1458, 1464, 1466, 1470, 1472, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1492, 1493, 1501, 1502, 1504, 1505, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1524, 1526, 1529, 1537, 1561, 1563, 1569, 1585, 1595, 1596, 1597, 1607, 1619, 1629, 1632, 1634, 1635, 1637, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1657, 1658, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1692, 1698, 1700, 1702, 1703, 1705, 1706, 1709, 1710, 1713, 1714, 1715, 1716, 1720, 1725, 1726, 1729, 1730, 1736, 1737, 1738, 1745, 1758, 1765, 1767, 1768, 1769, 1770, 1773, 1774, 1783, 1789, 1791, 1792, 1793, 1794, 1796, 1799, 1807, 1810, 1811, 1812, 1813, 1814, 1821, 1823, 1825, 1826, 1827, 1829, 1830, 1832, 1841, 1842, 1846, 1851, 1857, 1858, 1859, 1862, 1866, 1867, 1868, 1869, 1870, 1876, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1896, 1897, 1900, 1901, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1921, 1925, 1926, 1928, 1930, 1931, 1932, 1941, 1952, 1953, 1954], "growth_interv": 0, "2000": [0, 24, 28, 1084, 1086, 1093, 1102, 1115, 1271, 1479, 1685, 1713, 1763, 1764, 1825], "scaler": [0, 1888, 1892], "help": [0, 1, 4, 7, 8, 11, 14, 21, 22, 24, 38, 41, 47, 52, 55, 896, 897, 905, 991, 1023, 1123, 1124, 1134, 1193, 1194, 1213, 1295, 1308, 1309, 1366, 1367, 1368, 1372, 1427, 1614, 1760, 1857, 1864, 1869, 1876, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1895, 1898, 1900, 1903, 1908, 1910, 1913, 1921, 1922, 1925, 1933, 1943, 1946, 1947, 1948, 1952, 1954], "given": [0, 1, 2, 3, 7, 9, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 39, 41, 43, 45, 47, 53, 54, 55, 139, 208, 302, 304, 306, 310, 315, 366, 387, 391, 460, 461, 462, 463, 464, 466, 501, 503, 505, 572, 573, 592, 595, 668, 681, 683, 684, 686, 687, 723, 748, 767, 773, 780, 781, 782, 783, 787, 788, 790, 808, 812, 825, 828, 842, 846, 853, 864, 877, 879, 881, 883, 885, 887, 889, 890, 891, 892, 893, 894, 897, 910, 911, 914, 922, 926, 927, 932, 933, 934, 939, 940, 952, 954, 957, 958, 960, 961, 964, 966, 969, 970, 972, 973, 974, 978, 986, 987, 990, 994, 995, 1011, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1041, 1042, 1043, 1044, 1051, 1053, 1058, 1066, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1122, 1132, 1133, 1159, 1190, 1193, 1201, 1209, 1210, 1215, 1219, 1229, 1231, 1232, 1241, 1243, 1249, 1257, 1266, 1273, 1275, 1276, 1277, 1278, 1281, 1291, 1293, 1295, 1296, 1299, 1325, 1335, 1343, 1344, 1350, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1375, 1376, 1379, 1387, 1397, 1419, 1423, 1424, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1442, 1455, 1461, 1475, 1476, 1479, 1480, 1481, 1491, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1537, 1561, 1576, 1591, 1595, 1596, 1597, 1601, 1602, 1603, 1615, 1640, 1647, 1648, 1651, 1654, 1655, 1661, 1687, 1690, 1692, 1694, 1697, 1702, 1707, 1710, 1711, 1712, 1725, 1731, 1736, 1747, 1748, 1753, 1779, 1783, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1807, 1810, 1812, 1821, 1822, 1827, 1829, 1831, 1841, 1843, 1846, 1850, 1864, 1865, 1866, 1869, 1873, 1875, 1876, 1878, 1881, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1904, 1905, 1908, 1910, 1912, 1915, 1916, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1935, 1938, 1943, 1944, 1947, 1953, 1954, 1955], "safe": [0, 24, 41, 45, 54, 55, 74, 76, 1013, 1014, 1033, 1034, 1607, 1663, 1666, 1667, 1670, 1866, 1869, 1888, 1889, 1892, 1895, 1899, 1921, 1936, 1939, 1944, 1945, 1947, 1954], "onc": [0, 1, 7, 9, 15, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 41, 47, 50, 52, 54, 55, 71, 885, 886, 887, 889, 891, 1066, 1193, 1197, 1265, 1364, 1427, 1607, 1617, 1619, 1651, 1689, 1693, 1709, 1756, 1760, 1849, 1866, 1869, 1877, 1879, 1881, 1888, 1889, 1891, 1892, 1894, 1897, 1899, 1900, 1912, 1913, 1925, 1930, 1939, 1941, 1944, 1947, 1951], "begin": [0, 18, 21, 22, 24, 25, 33, 41, 47, 55, 484, 668, 748, 772, 808, 809, 853, 909, 953, 967, 1015, 1017, 1086, 1146, 1152, 1214, 1249, 1261, 1342, 1343, 1344, 1361, 1363, 1369, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1397, 1398, 1413, 1418, 1421, 1422, 1434, 1435, 1442, 1445, 1458, 1464, 1469, 1476, 1509, 1530, 1531, 1607, 1614, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1683, 1685, 1691, 1758, 1761, 1764, 1807, 1832, 1843, 1860, 1869, 1888, 1889, 1892, 1894, 1897, 1899, 1904, 1910, 1912, 1919, 1926, 1944, 1954], "first": [0, 1, 4, 5, 7, 9, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 41, 42, 45, 47, 53, 55, 56, 64, 67, 205, 243, 279, 577, 598, 674, 677, 679, 682, 748, 781, 782, 802, 842, 845, 847, 862, 863, 872, 877, 878, 879, 880, 895, 896, 908, 912, 913, 915, 916, 917, 920, 922, 924, 938, 966, 969, 980, 1054, 1056, 1057, 1058, 1063, 1066, 1071, 1084, 1086, 1105, 1119, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1137, 1146, 1149, 1157, 1158, 1159, 1170, 1182, 1191, 1201, 1206, 1207, 1213, 1218, 1223, 1226, 1233, 1249, 1252, 1259, 1260, 1262, 1265, 1266, 1282, 1288, 1291, 1294, 1295, 1296, 1298, 1315, 1317, 1323, 1328, 1331, 1335, 1341, 1342, 1348, 1356, 1357, 1359, 1360, 1370, 1371, 1373, 1378, 1379, 1393, 1396, 1397, 1412, 1419, 1421, 1422, 1442, 1455, 1508, 1594, 1598, 1607, 1616, 1617, 1619, 1630, 1640, 1646, 1666, 1667, 1668, 1669, 1670, 1676, 1679, 1680, 1684, 1688, 1691, 1693, 1699, 1709, 1710, 1736, 1737, 1745, 1753, 1773, 1788, 1791, 1796, 1826, 1827, 1831, 1836, 1838, 1844, 1851, 1854, 1857, 1859, 1864, 1866, 1868, 1869, 1876, 1878, 1881, 1882, 1884, 1888, 1889, 1892, 1894, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1930, 1934, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1952, 1953, 1954, 1955], "param": [0, 1, 28, 30, 33, 41, 47, 49, 51, 55, 476, 752, 783, 1122, 1132, 1193, 1212, 1427, 1433, 1437, 1438, 1606, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1693, 1848, 1867, 1877, 1887, 1888, 1892, 1893, 1912, 1955], "contain": [0, 1, 2, 3, 5, 11, 14, 15, 21, 24, 25, 28, 29, 30, 32, 34, 35, 39, 42, 45, 47, 54, 55, 56, 57, 62, 64, 72, 77, 139, 143, 180, 184, 197, 279, 300, 302, 304, 308, 310, 459, 471, 532, 591, 595, 674, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 748, 802, 825, 829, 865, 880, 881, 889, 890, 891, 892, 893, 894, 895, 905, 908, 909, 910, 918, 920, 924, 942, 953, 954, 958, 968, 979, 980, 981, 982, 983, 1012, 1066, 1100, 1101, 1103, 1109, 1129, 1130, 1133, 1134, 1150, 1151, 1154, 1155, 1163, 1167, 1184, 1191, 1193, 1194, 1200, 1201, 1204, 1209, 1210, 1213, 1224, 1230, 1231, 1232, 1233, 1235, 1237, 1239, 1240, 1256, 1265, 1283, 1287, 1294, 1317, 1323, 1335, 1344, 1363, 1364, 1370, 1371, 1374, 1379, 1380, 1382, 1387, 1397, 1398, 1419, 1427, 1428, 1429, 1434, 1437, 1442, 1444, 1455, 1459, 1466, 1478, 1509, 1517, 1518, 1520, 1591, 1598, 1601, 1602, 1607, 1615, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1651, 1653, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1699, 1702, 1727, 1741, 1745, 1806, 1807, 1811, 1827, 1834, 1836, 1838, 1843, 1844, 1848, 1849, 1853, 1857, 1865, 1866, 1868, 1869, 1870, 1876, 1879, 1883, 1884, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1905, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1951, 1953, 1954, 1955, 1956], "inf": [0, 30, 45, 47, 672, 674, 677, 678, 679, 873, 908, 924, 1182, 1183, 1185, 1187, 1188, 1225, 1240, 1246, 1250, 1253, 1263, 1274, 1321, 1417, 1460, 1470, 1576, 1611, 1625, 1634, 1654, 1738, 1745, 1888, 1889, 1895, 1903, 1926, 1932, 1954], "otherwis": [0, 1, 3, 5, 7, 9, 11, 14, 21, 24, 25, 31, 34, 47, 48, 52, 55, 77, 198, 310, 317, 321, 325, 327, 331, 332, 483, 492, 548, 568, 569, 571, 591, 605, 668, 674, 675, 676, 677, 678, 681, 683, 684, 685, 687, 723, 748, 756, 757, 772, 782, 805, 808, 809, 849, 850, 853, 880, 883, 891, 896, 908, 924, 1007, 1066, 1072, 1105, 1117, 1184, 1190, 1193, 1196, 1200, 1206, 1215, 1239, 1254, 1263, 1265, 1266, 1281, 1286, 1291, 1293, 1294, 1296, 1298, 1299, 1322, 1325, 1341, 1342, 1361, 1363, 1366, 1367, 1368, 1372, 1379, 1383, 1384, 1385, 1386, 1388, 1397, 1413, 1427, 1431, 1432, 1433, 1434, 1435, 1437, 1442, 1443, 1445, 1458, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1494, 1495, 1528, 1530, 1531, 1535, 1570, 1580, 1607, 1614, 1619, 1640, 1644, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1697, 1699, 1707, 1709, 1716, 1725, 1732, 1745, 1753, 1761, 1805, 1806, 1807, 1810, 1842, 1843, 1844, 1852, 1853, 1860, 1864, 1866, 1868, 1869, 1876, 1877, 1882, 1888, 1894, 1895, 1902, 1908, 1909, 1910, 1916, 1917, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1955], "skip": [0, 41, 847, 942, 1066, 1119, 1223, 1224, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1779, 1848, 1866, 1888, 1889, 1892, 1893, 1894, 1900, 1912, 1915, 1921, 1942, 1944, 1945, 1947], "next": [0, 3, 21, 24, 30, 41, 47, 55, 548, 748, 1197, 1331, 1380, 1398, 1444, 1607, 1642, 1881, 1888, 1889, 1891, 1892, 1894, 1895, 1900, 1902, 1914, 1915, 1921, 1922, 1925, 1928, 1930, 1941, 1944, 1947], "iter": [0, 1, 2, 3, 7, 22, 24, 25, 26, 28, 30, 42, 44, 45, 47, 55, 56, 61, 979, 980, 981, 982, 983, 1012, 1015, 1017, 1038, 1193, 1266, 1427, 1428, 1429, 1437, 1438, 1607, 1608, 1611, 1612, 1613, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1648, 1650, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1688, 1699, 1769, 1812, 1867, 1869, 1870, 1881, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1900, 1912, 1915, 1920, 1930, 1944, 1947, 1953, 1954, 1955], "clip": [0, 47, 954, 1611, 1612, 1867, 1895, 1910, 1911], "accumul": [0, 1, 2, 47, 139, 279, 302, 307, 308, 310, 459, 476, 674, 881, 895, 1263, 1607, 1664, 1665, 1846, 1866, 1867, 1879, 1889, 1892, 1893, 1896, 1903, 1912, 1917, 1921, 1922, 1925, 1942, 1944, 1949, 1954], "estim": [0, 1, 3, 21, 30, 954, 958, 1146, 1190, 1345, 1346, 1347, 1377, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1524, 1615, 1677, 1774, 1915], "minim": [0, 1, 7, 8, 807, 863, 1296, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1677, 1678, 1679, 1680, 1693, 1864, 1879, 1888, 1892, 1900, 1902, 1905, 1910, 1914, 1916, 1944, 1954], "larg": [0, 2, 3, 7, 8, 21, 24, 55, 668, 846, 956, 958, 1023, 1230, 1239, 1257, 1335, 1374, 1478, 1520, 1607, 1691, 1778, 1791, 1865, 1881, 1883, 1884, 1891, 1892, 1896, 1900, 1903, 1905, 1908, 1910, 1913, 1914, 1917, 1921, 1925, 1928, 1931, 1939, 1944, 1952, 1954, 1956], "becom": [0, 7, 8, 9, 13, 21, 24, 30, 55, 279, 748, 864, 1146, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1379, 1397, 1412, 1432, 1442, 1455, 1509, 1526, 1598, 1683, 1783, 1832, 1876, 1877, 1889, 1893, 1894, 1910, 1913, 1915, 1921, 1947, 1954, 1956], "too": [0, 7, 9, 14, 22, 26, 41, 52, 55, 1023, 1122, 1239, 1257, 1323, 1350, 1363, 1427, 1510, 1608, 1649, 1869, 1891, 1896, 1897, 1902, 1903, 1904, 1906, 1908, 1913, 1914, 1923, 1925, 1942, 1943, 1954, 1956], "therefor": [0, 3, 5, 21, 22, 24, 30, 31, 39, 47, 50, 56, 61, 62, 75, 436, 532, 895, 909, 918, 942, 1012, 1100, 1117, 1119, 1122, 1150, 1151, 1206, 1209, 1239, 1252, 1370, 1371, 1478, 1517, 1518, 1526, 1649, 1685, 1869, 1888, 1889, 1892, 1894, 1896, 1899, 1910, 1923, 1925, 1941, 1945, 1947], "largest": [0, 47, 578, 911, 1110, 1225, 1246, 1248, 1250, 1251, 1266, 1563, 1615, 1829, 1867, 1868, 1869, 1949, 1953, 1957], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 28, 30, 34, 41, 45, 47, 48, 53, 54, 55, 56, 57, 243, 476, 605, 937, 940, 970, 972, 1007, 1087, 1088, 1089, 1097, 1098, 1099, 1190, 1191, 1193, 1194, 1240, 1241, 1256, 1263, 1317, 1345, 1346, 1347, 1367, 1371, 1390, 1391, 1392, 1424, 1427, 1435, 1466, 1474, 1518, 1598, 1607, 1631, 1647, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1716, 1732, 1749, 1750, 1841, 1864, 1868, 1869, 1876, 1877, 1879, 1881, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1898, 1900, 1902, 1904, 1905, 1908, 1910, 1913, 1914, 1916, 1920, 1921, 1925, 1930, 1935, 1939, 1941, 1942, 1943, 1944, 1954, 1957], "approxim": [0, 1, 3, 22, 28, 41, 55, 1130, 1146, 1257, 1266, 1335, 1377, 1441, 1456, 1463, 1524, 1569, 1579, 1615, 1663, 1680, 1699, 1753, 1812, 1832, 1867, 1869, 1892, 1893, 1894, 1897, 1910, 1949, 1957], "time": [0, 1, 3, 4, 7, 8, 9, 14, 21, 22, 24, 25, 26, 28, 30, 31, 32, 38, 41, 42, 43, 45, 47, 52, 54, 55, 56, 65, 66, 77, 279, 302, 475, 481, 605, 668, 673, 674, 675, 676, 677, 678, 679, 682, 733, 734, 744, 748, 752, 756, 757, 787, 789, 812, 829, 865, 895, 901, 902, 906, 908, 920, 928, 930, 940, 951, 958, 969, 970, 972, 1012, 1025, 1044, 1047, 1058, 1080, 1081, 1087, 1088, 1089, 1095, 1106, 1107, 1108, 1116, 1119, 1128, 1129, 1130, 1133, 1134, 1182, 1190, 1193, 1201, 1206, 1209, 1210, 1214, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1245, 1249, 1252, 1254, 1256, 1257, 1265, 1266, 1288, 1298, 1305, 1316, 1317, 1319, 1329, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1374, 1375, 1376, 1379, 1390, 1391, 1392, 1397, 1399, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1440, 1442, 1463, 1466, 1478, 1479, 1480, 1481, 1491, 1494, 1495, 1521, 1522, 1566, 1567, 1568, 1584, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1614, 1615, 1617, 1619, 1653, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1687, 1697, 1698, 1709, 1731, 1737, 1788, 1802, 1807, 1808, 1827, 1857, 1865, 1868, 1869, 1870, 1875, 1877, 1881, 1887, 1889, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1950, 1951, 1953, 1954, 1956], "check": [0, 4, 5, 11, 14, 21, 24, 25, 30, 32, 41, 45, 47, 56, 57, 62, 64, 210, 329, 487, 682, 849, 885, 887, 888, 896, 897, 942, 969, 970, 972, 976, 1005, 1023, 1180, 1190, 1193, 1209, 1210, 1223, 1224, 1229, 1230, 1232, 1235, 1237, 1242, 1248, 1251, 1255, 1257, 1258, 1283, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1598, 1607, 1616, 1619, 1632, 1642, 1661, 1662, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1847, 1849, 1864, 1865, 1868, 1869, 1870, 1882, 1883, 1888, 1892, 1894, 1895, 1896, 1899, 1900, 1901, 1904, 1908, 1910, 1912, 1913, 1914, 1915, 1921, 1925, 1930, 1932, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1955], "dure": [0, 1, 5, 14, 18, 22, 24, 26, 32, 33, 35, 41, 45, 47, 54, 55, 56, 70, 72, 73, 324, 476, 491, 492, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 781, 815, 877, 878, 887, 967, 1001, 1011, 1012, 1024, 1025, 1044, 1204, 1206, 1207, 1209, 1265, 1339, 1345, 1346, 1347, 1364, 1365, 1370, 1371, 1390, 1391, 1392, 1445, 1466, 1472, 1474, 1511, 1517, 1518, 1598, 1607, 1609, 1610, 1647, 1661, 1694, 1792, 1836, 1838, 1868, 1875, 1876, 1877, 1879, 1882, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1908, 1910, 1913, 1915, 1916, 1919, 1921, 1923, 1932, 1939, 1940, 1944, 1947, 1951, 1952, 1953, 1954, 1956], "unscale_": [0, 1888], "found": [0, 7, 15, 16, 18, 41, 45, 55, 56, 64, 72, 74, 75, 76, 924, 966, 1045, 1046, 1193, 1197, 1215, 1291, 1294, 1296, 1299, 1323, 1339, 1349, 1372, 1427, 1454, 1676, 1745, 1864, 1866, 1869, 1884, 1888, 1894, 1897, 1900, 1902, 1910, 1913, 1915, 1916, 1921, 1930, 1940, 1943, 1948, 1951, 1953, 1955], "underli": [0, 24, 26, 28, 30, 32, 45, 47, 52, 55, 86, 300, 315, 366, 389, 391, 461, 462, 463, 464, 471, 487, 508, 512, 545, 546, 547, 601, 736, 745, 866, 969, 1163, 1167, 1193, 1265, 1326, 1569, 1727, 1831, 1845, 1866, 1869, 1884, 1892, 1896, 1898, 1914, 1921, 1927, 1929, 1936, 1943, 1947], "themselv": [0, 1, 9, 30, 41, 47, 781, 829, 1829, 1892, 1913, 1955], "remain": [0, 5, 8, 30, 41, 55, 1301, 1370, 1371, 1517, 1518, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1710, 1732, 1879, 1881, 1888, 1896, 1900, 1941], "uncorrupt": 0, "usual": [0, 7, 14, 21, 22, 26, 41, 42, 47, 55, 74, 469, 819, 820, 821, 822, 829, 881, 889, 891, 895, 1134, 1366, 1367, 1368, 1372, 1387, 1390, 1391, 1392, 1393, 1598, 1607, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1857, 1866, 1869, 1884, 1888, 1889, 1891, 1892, 1894, 1896, 1899, 1912, 1917, 1919, 1921, 1930, 1938, 1943, 1948, 1955], "unskip": 0, "occur": [0, 11, 21, 24, 34, 35, 41, 47, 52, 71, 73, 185, 304, 940, 1026, 1066, 1190, 1196, 1207, 1237, 1350, 1466, 1510, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1868, 1879, 1883, 1888, 1889, 1892, 1896, 1903, 1908, 1910, 1915, 1921, 1923, 1929, 1932, 1942, 1944, 1946, 1950, 1952, 1954, 1955, 1956], "consecut": [0, 24, 47, 598, 1642, 1681, 1832, 1843, 1844, 1883, 1910], "appear": [0, 4, 22, 24, 30, 45, 55, 842, 1012, 1066, 1107, 1108, 1134, 1265, 1299, 1301, 1603, 1608, 1731, 1760, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1857, 1866, 1869, 1882, 1883, 1894, 1895, 1900, 1910, 1913, 1944], "few": [0, 1, 7, 8, 22, 26, 32, 1066, 1123, 1371, 1607, 1864, 1869, 1889, 1892, 1894, 1896, 1898, 1903, 1906, 1910, 1912, 1914, 1916, 1919, 1925, 1929, 1931, 1933, 1942, 1944, 1946, 1947, 1948, 1952, 1954], "calibr": [0, 776, 777, 785, 826, 827, 845, 847, 849, 1888, 1916, 1917, 1919, 1935], "rare": [0, 7, 1888, 1910, 1942, 1945, 1955], "hundr": [0, 1888, 1899, 1954], "thousand": [0, 1954], "16": [0, 20, 24, 45, 310, 605, 726, 727, 728, 729, 730, 731, 760, 1064, 1082, 1109, 1146, 1156, 1193, 1205, 1217, 1223, 1229, 1230, 1234, 1250, 1327, 1339, 1341, 1342, 1350, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1395, 1396, 1397, 1415, 1420, 1421, 1422, 1424, 1425, 1427, 1434, 1442, 1453, 1470, 1484, 1501, 1503, 1504, 1506, 1510, 1521, 1522, 1657, 1706, 1753, 1783, 1846, 1854, 1858, 1866, 1870, 1887, 1892, 1900, 1903, 1905, 1910, 1911, 1914, 1921, 1925, 1926, 1928, 1930, 1931, 1941, 1944, 1954], "initi": [0, 1, 2, 3, 4, 8, 17, 18, 21, 22, 26, 28, 32, 34, 41, 42, 44, 47, 69, 77, 484, 487, 568, 700, 701, 702, 703, 704, 705, 708, 718, 719, 720, 721, 733, 734, 744, 748, 752, 849, 850, 867, 947, 969, 977, 998, 1003, 1004, 1007, 1008, 1033, 1067, 1068, 1069, 1140, 1169, 1191, 1193, 1206, 1207, 1265, 1266, 1283, 1345, 1346, 1347, 1348, 1350, 1358, 1359, 1360, 1364, 1370, 1371, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1435, 1442, 1443, 1444, 1466, 1476, 1517, 1598, 1607, 1609, 1610, 1614, 1616, 1619, 1647, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1749, 1750, 1751, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1865, 1867, 1868, 1869, 1879, 1884, 1887, 1889, 1892, 1893, 1894, 1899, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1920, 1921, 1922, 1939, 1947, 1952, 1953], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 47, 51, 52, 54, 55, 56, 63, 64, 77, 139, 278, 302, 304, 306, 308, 310, 324, 460, 474, 475, 487, 501, 503, 505, 525, 548, 592, 595, 605, 612, 672, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 748, 752, 769, 778, 779, 785, 787, 807, 811, 814, 826, 842, 845, 846, 847, 849, 864, 868, 873, 880, 881, 882, 883, 889, 890, 891, 892, 893, 894, 895, 901, 902, 905, 911, 924, 927, 930, 934, 940, 942, 956, 957, 958, 966, 967, 972, 979, 980, 981, 982, 983, 994, 995, 996, 1023, 1025, 1030, 1031, 1042, 1044, 1049, 1053, 1054, 1055, 1056, 1057, 1066, 1082, 1087, 1090, 1094, 1097, 1100, 1105, 1106, 1107, 1108, 1109, 1114, 1117, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1134, 1135, 1138, 1155, 1167, 1178, 1184, 1190, 1191, 1193, 1194, 1196, 1199, 1203, 1204, 1205, 1209, 1226, 1229, 1230, 1239, 1243, 1245, 1246, 1249, 1250, 1254, 1256, 1257, 1259, 1262, 1263, 1265, 1271, 1287, 1294, 1299, 1317, 1323, 1326, 1327, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1345, 1346, 1347, 1350, 1356, 1357, 1359, 1360, 1363, 1364, 1371, 1378, 1379, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1399, 1413, 1417, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1432, 1433, 1455, 1458, 1460, 1462, 1466, 1475, 1476, 1508, 1525, 1526, 1528, 1538, 1545, 1563, 1564, 1582, 1583, 1591, 1598, 1607, 1614, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1649, 1651, 1654, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1699, 1711, 1725, 1729, 1731, 1732, 1736, 1738, 1745, 1749, 1753, 1758, 1760, 1778, 1783, 1787, 1788, 1790, 1791, 1799, 1802, 1826, 1831, 1832, 1835, 1836, 1837, 1838, 1842, 1843, 1845, 1846, 1849, 1857, 1864, 1866, 1868, 1869, 1871, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957], "int": [0, 2, 3, 13, 18, 21, 22, 24, 26, 28, 29, 30, 32, 35, 38, 39, 41, 42, 44, 45, 47, 55, 56, 63, 64, 65, 66, 77, 205, 207, 221, 222, 231, 243, 302, 304, 306, 310, 425, 432, 433, 435, 437, 445, 460, 464, 481, 485, 487, 501, 503, 505, 508, 525, 531, 533, 534, 546, 548, 554, 571, 572, 573, 575, 576, 595, 605, 668, 681, 683, 684, 685, 687, 743, 744, 763, 765, 767, 768, 773, 774, 775, 807, 862, 863, 864, 866, 880, 887, 900, 909, 911, 918, 925, 927, 934, 939, 957, 958, 961, 962, 965, 966, 968, 970, 972, 974, 975, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 994, 995, 996, 998, 1000, 1004, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1067, 1069, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1134, 1135, 1141, 1143, 1144, 1146, 1150, 1151, 1153, 1154, 1155, 1156, 1167, 1169, 1190, 1191, 1193, 1194, 1196, 1199, 1200, 1205, 1213, 1215, 1225, 1226, 1246, 1247, 1250, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1273, 1280, 1281, 1286, 1291, 1293, 1294, 1296, 1299, 1301, 1302, 1303, 1307, 1317, 1322, 1323, 1324, 1325, 1326, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1376, 1378, 1380, 1382, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1429, 1432, 1434, 1435, 1438, 1439, 1440, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1462, 1463, 1466, 1470, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1508, 1509, 1510, 1517, 1518, 1525, 1528, 1537, 1545, 1561, 1562, 1563, 1567, 1568, 1582, 1583, 1591, 1595, 1596, 1597, 1607, 1615, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1641, 1643, 1648, 1651, 1654, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1699, 1700, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1741, 1746, 1747, 1748, 1752, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1779, 1783, 1787, 1790, 1791, 1792, 1799, 1802, 1804, 1805, 1806, 1807, 1810, 1812, 1816, 1822, 1826, 1827, 1829, 1831, 1832, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1851, 1852, 1853, 1857, 1858, 1862, 1866, 1867, 1868, 1869, 1870, 1879, 1881, 1882, 1884, 1887, 1892, 1895, 1902, 1905, 1908, 1910, 1911, 1914, 1915, 1916, 1920, 1921, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1942, 1944, 1947, 1949, 1953, 1956, 1957], "simpli": [0, 1, 3, 14, 21, 30, 34, 42, 45, 54, 55, 851, 1123, 1180, 1191, 1339, 1365, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1753, 1866, 1868, 1889, 1895, 1897, 1900, 1901, 1915, 1925, 1942, 1944], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 13, 14, 15, 18, 21, 24, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 45, 47, 55, 56, 63, 64, 341, 577, 612, 668, 769, 868, 889, 890, 891, 892, 893, 894, 896, 897, 926, 927, 939, 940, 942, 1003, 1009, 1010, 1012, 1061, 1066, 1084, 1086, 1114, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1168, 1169, 1191, 1193, 1194, 1196, 1197, 1198, 1204, 1205, 1209, 1265, 1428, 1429, 1437, 1438, 1576, 1607, 1703, 1725, 1729, 1749, 1750, 1786, 1849, 1850, 1857, 1864, 1873, 1875, 1880, 1881, 1883, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1899, 1902, 1905, 1906, 1907, 1908, 1913, 1916, 1920, 1921, 1922, 1923, 1928, 1931, 1932, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1950, 1951, 1954, 1955, 1956], "backoff": [0, 1921], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "interv": [0, 30, 43, 853, 954, 1116, 1308, 1309, 1694, 1718, 1719, 1767, 1879, 1892, 1915], "get_scal": [0, 1888], "sync": [0, 24, 28, 47, 54, 55, 1607, 1892, 1893, 1914, 1939, 1943], "is_en": [0, 1786, 1793, 1794, 1795, 1796, 1797, 1798], "indic": [0, 1, 2, 3, 13, 21, 22, 24, 25, 29, 30, 41, 45, 69, 72, 73, 180, 197, 210, 302, 304, 306, 307, 308, 310, 459, 501, 503, 505, 532, 560, 561, 571, 602, 683, 684, 723, 733, 734, 862, 863, 864, 865, 866, 886, 896, 897, 924, 931, 932, 933, 945, 963, 967, 969, 970, 972, 1006, 1045, 1046, 1069, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1135, 1146, 1167, 1191, 1193, 1198, 1207, 1210, 1211, 1215, 1224, 1235, 1237, 1248, 1251, 1265, 1273, 1281, 1283, 1285, 1291, 1294, 1296, 1299, 1305, 1317, 1323, 1327, 1335, 1336, 1337, 1338, 1363, 1370, 1371, 1375, 1376, 1421, 1422, 1423, 1424, 1425, 1430, 1432, 1433, 1488, 1489, 1490, 1509, 1517, 1518, 1521, 1522, 1538, 1553, 1554, 1555, 1563, 1576, 1591, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1653, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1689, 1691, 1710, 1745, 1783, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1821, 1822, 1826, 1829, 1835, 1836, 1837, 1838, 1843, 1844, 1846, 1847, 1849, 1857, 1860, 1866, 1867, 1869, 1873, 1882, 1883, 1894, 1902, 1905, 1910, 1911, 1921, 1925, 1929, 1930, 1932, 1945, 1947, 1949, 1954], "load_state_dict": [0, 22, 26, 28, 47, 1193, 1265, 1427, 1598, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1864, 1865, 1900, 1905, 1916], "state_dict": [0, 22, 26, 28, 45, 47, 824, 825, 1193, 1427, 1598, 1633, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1864, 1878, 1893, 1900, 1902, 1905, 1908, 1910, 1916, 1934], "load": [0, 1, 11, 14, 15, 22, 26, 28, 45, 47, 825, 850, 904, 940, 968, 1197, 1204, 1209, 1371, 1598, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1741, 1865, 1866, 1877, 1878, 1883, 1889, 1892, 1899, 1900, 1904, 1906, 1910, 1921, 1930, 1946, 1948, 1952, 1954], "dict": [0, 3, 5, 21, 22, 24, 25, 26, 28, 29, 30, 32, 35, 39, 43, 45, 47, 49, 51, 55, 668, 780, 781, 782, 803, 804, 805, 824, 842, 898, 940, 1009, 1010, 1023, 1032, 1122, 1132, 1134, 1191, 1192, 1193, 1194, 1200, 1205, 1209, 1210, 1265, 1266, 1364, 1374, 1427, 1428, 1437, 1478, 1598, 1607, 1630, 1649, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1857, 1864, 1866, 1867, 1869, 1870, 1878, 1879, 1894, 1900, 1905, 1908, 1910, 1911, 1912, 1921, 1922, 1930, 1934, 1935, 1941, 1950, 1953, 1955], "object": [0, 1, 3, 5, 6, 8, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 41, 43, 45, 47, 54, 55, 56, 58, 77, 195, 198, 591, 781, 782, 842, 849, 868, 878, 879, 880, 905, 907, 940, 990, 1001, 1041, 1066, 1105, 1117, 1119, 1124, 1125, 1127, 1128, 1129, 1133, 1179, 1180, 1193, 1200, 1201, 1204, 1205, 1209, 1210, 1225, 1246, 1250, 1263, 1265, 1266, 1286, 1364, 1366, 1367, 1368, 1372, 1390, 1391, 1392, 1427, 1437, 1466, 1607, 1617, 1632, 1641, 1642, 1645, 1646, 1647, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1741, 1815, 1816, 1819, 1847, 1850, 1864, 1868, 1869, 1870, 1873, 1877, 1878, 1881, 1885, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1916, 1918, 1919, 1920, 1921, 1923, 1927, 1928, 1930, 1932, 1940, 1941, 1943, 1947, 1950, 1953, 1955, 1956, 1957], "tupl": [0, 3, 5, 13, 14, 21, 26, 32, 38, 39, 41, 45, 47, 55, 222, 308, 433, 435, 437, 485, 508, 525, 548, 571, 572, 573, 683, 684, 685, 723, 754, 755, 756, 757, 760, 761, 762, 767, 773, 774, 775, 781, 805, 806, 842, 849, 850, 866, 867, 874, 875, 876, 877, 878, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 900, 901, 902, 923, 942, 946, 957, 979, 980, 983, 994, 1012, 1018, 1045, 1046, 1064, 1067, 1069, 1083, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1095, 1096, 1098, 1099, 1101, 1103, 1106, 1116, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1138, 1154, 1156, 1193, 1200, 1205, 1209, 1210, 1215, 1224, 1229, 1230, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1250, 1252, 1253, 1255, 1257, 1260, 1263, 1281, 1283, 1285, 1291, 1293, 1295, 1296, 1299, 1301, 1322, 1325, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1433, 1437, 1448, 1449, 1450, 1451, 1452, 1453, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1537, 1550, 1551, 1552, 1562, 1564, 1595, 1596, 1597, 1602, 1603, 1604, 1607, 1619, 1630, 1643, 1649, 1653, 1654, 1658, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1699, 1700, 1709, 1718, 1720, 1722, 1732, 1736, 1737, 1783, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1805, 1806, 1810, 1811, 1812, 1825, 1826, 1827, 1828, 1829, 1834, 1841, 1842, 1843, 1844, 1852, 1853, 1857, 1858, 1860, 1862, 1866, 1867, 1870, 1881, 1884, 1889, 1892, 1894, 1895, 1900, 1905, 1908, 1910, 1912, 1913, 1916, 1921, 1925, 1930, 1932, 1935, 1944, 1947, 1953, 1955], "unmodifi": [0, 24, 1941], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 13, 17, 18, 21, 22, 24, 25, 26, 29, 30, 32, 34, 38, 39, 40, 41, 42, 43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 73, 139, 185, 461, 462, 501, 503, 505, 532, 545, 877, 878, 879, 880, 881, 885, 940, 942, 945, 947, 951, 952, 983, 988, 994, 995, 1013, 1014, 1033, 1034, 1042, 1089, 1118, 1123, 1126, 1134, 1135, 1154, 1190, 1193, 1194, 1199, 1200, 1204, 1226, 1230, 1234, 1237, 1239, 1241, 1242, 1247, 1251, 1252, 1254, 1255, 1257, 1259, 1262, 1263, 1265, 1266, 1274, 1335, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1374, 1421, 1422, 1423, 1424, 1425, 1427, 1434, 1455, 1458, 1478, 1480, 1528, 1538, 1582, 1600, 1601, 1602, 1605, 1606, 1607, 1615, 1616, 1619, 1640, 1643, 1644, 1652, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1697, 1716, 1729, 1745, 1755, 1761, 1768, 1790, 1842, 1857, 1864, 1868, 1869, 1879, 1881, 1883, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1933, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1948, 1953, 1954, 1956], "five": [0, 1869, 1905], "entri": [0, 3, 24, 25, 28, 30, 39, 41, 42, 304, 723, 846, 847, 905, 1009, 1010, 1056, 1107, 1108, 1167, 1193, 1214, 1370, 1371, 1427, 1433, 1517, 1518, 1603, 1604, 1625, 1626, 1634, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1790, 1866, 1869, 1870, 1876, 1884, 1889, 1893, 1894, 1897, 1900, 1919, 1925, 1930, 1934, 1940, 1941, 1942, 1947], "_growth_track": 0, "recent": [0, 1, 7, 8, 44, 54, 1168, 1178, 1786, 1868, 1869, 1884, 1894, 1903, 1904, 1925, 1932, 1951, 1954], "empti": [0, 3, 24, 26, 32, 39, 47, 52, 55, 222, 310, 501, 503, 511, 525, 533, 805, 910, 911, 921, 927, 1066, 1068, 1191, 1194, 1219, 1239, 1240, 1245, 1252, 1275, 1276, 1277, 1278, 1285, 1344, 1363, 1371, 1434, 1499, 1518, 1564, 1647, 1659, 1660, 1796, 1811, 1825, 1846, 1863, 1866, 1867, 1868, 1869, 1871, 1877, 1882, 1883, 1884, 1887, 1890, 1892, 1894, 1910, 1911, 1913, 1925, 1926, 1933, 1942, 1943, 1949, 1952], "wish": [0, 1129, 1802, 1888, 1892, 1894, 1895], "checkpoint": [0, 28, 42, 44, 47, 904, 1265, 1607, 1864, 1865, 1878, 1896, 1905, 1908, 1914, 1923, 1939], "kwarg": [0, 1, 5, 14, 21, 24, 25, 28, 41, 45, 47, 55, 56, 568, 591, 735, 748, 750, 751, 809, 810, 812, 815, 878, 944, 970, 972, 1009, 1010, 1122, 1133, 1134, 1193, 1196, 1198, 1257, 1283, 1389, 1416, 1427, 1457, 1461, 1465, 1467, 1468, 1598, 1603, 1607, 1621, 1626, 1630, 1640, 1647, 1649, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1741, 1844, 1857, 1864, 1869, 1870, 1894, 1895, 1900, 1908, 1912, 1921, 1927, 1935, 1940, 1941, 1953, 1954, 1955], "carri": [0, 51, 325, 785, 826, 827, 845, 846, 1890, 1916], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 21, 24, 26, 29, 30, 38, 39, 42, 45, 48, 51, 55, 56, 60, 62, 222, 301, 303, 305, 307, 388, 390, 436, 484, 500, 502, 504, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 744, 748, 752, 760, 761, 762, 767, 769, 773, 785, 824, 826, 827, 845, 846, 853, 854, 855, 856, 857, 858, 859, 860, 865, 869, 870, 871, 872, 873, 882, 883, 884, 887, 896, 908, 910, 911, 912, 913, 914, 915, 916, 917, 920, 924, 927, 929, 930, 931, 932, 933, 935, 936, 938, 940, 948, 949, 950, 952, 953, 955, 956, 966, 971, 979, 981, 983, 1010, 1011, 1023, 1024, 1036, 1040, 1045, 1046, 1047, 1048, 1050, 1053, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1187, 1188, 1193, 1199, 1205, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1336, 1337, 1338, 1340, 1341, 1342, 1348, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1370, 1372, 1375, 1376, 1379, 1380, 1395, 1396, 1397, 1412, 1414, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1512, 1513, 1514, 1519, 1522, 1526, 1537, 1543, 1562, 1564, 1595, 1607, 1624, 1625, 1626, 1627, 1653, 1654, 1655, 1656, 1658, 1659, 1680, 1697, 1698, 1702, 1703, 1704, 1706, 1709, 1710, 1716, 1717, 1718, 1720, 1722, 1724, 1725, 1728, 1729, 1730, 1734, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1761, 1762, 1763, 1775, 1776, 1777, 1778, 1783, 1788, 1789, 1800, 1801, 1803, 1804, 1805, 1806, 1808, 1809, 1811, 1822, 1823, 1824, 1827, 1829, 1831, 1834, 1835, 1837, 1839, 1840, 1846, 1852, 1853, 1854, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1876, 1879, 1881, 1883, 1884, 1889, 1890, 1892, 1893, 1894, 1895, 1900, 1902, 1908, 1910, 1912, 1913, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1935, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1952, 1953, 1955, 1956], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 38, 39, 40, 41, 42, 45, 47, 49, 51, 52, 55, 56, 58, 63, 64, 71, 72, 73, 475, 476, 605, 668, 748, 767, 773, 780, 781, 782, 788, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 842, 849, 850, 877, 878, 879, 883, 901, 902, 924, 929, 933, 1009, 1023, 1066, 1084, 1086, 1110, 1119, 1132, 1146, 1193, 1194, 1203, 1207, 1214, 1225, 1236, 1246, 1249, 1250, 1263, 1266, 1285, 1288, 1335, 1344, 1350, 1363, 1371, 1374, 1379, 1397, 1427, 1442, 1458, 1474, 1478, 1545, 1576, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1614, 1654, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1688, 1691, 1699, 1710, 1738, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1786, 1787, 1788, 1789, 1796, 1807, 1832, 1840, 1846, 1849, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1931, 1932, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1952, 1954, 1955, 1956, 1957], "two": [0, 1, 3, 4, 5, 6, 8, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 38, 39, 41, 42, 45, 47, 51, 52, 55, 73, 74, 571, 572, 573, 575, 576, 595, 605, 668, 680, 682, 748, 781, 875, 878, 891, 896, 928, 930, 976, 1015, 1017, 1045, 1046, 1054, 1063, 1066, 1072, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1112, 1113, 1122, 1132, 1154, 1156, 1182, 1191, 1193, 1204, 1207, 1214, 1217, 1219, 1224, 1226, 1229, 1230, 1235, 1236, 1241, 1246, 1249, 1250, 1252, 1253, 1255, 1257, 1262, 1265, 1288, 1291, 1294, 1296, 1299, 1324, 1341, 1343, 1344, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1374, 1379, 1387, 1388, 1394, 1396, 1397, 1418, 1419, 1421, 1427, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1458, 1459, 1474, 1475, 1476, 1478, 1498, 1499, 1509, 1528, 1538, 1545, 1561, 1569, 1576, 1614, 1619, 1641, 1651, 1653, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1687, 1691, 1710, 1725, 1738, 1753, 1791, 1796, 1811, 1827, 1831, 1832, 1834, 1843, 1854, 1858, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1942, 1943, 1949, 1952, 1954], "unless": [0, 1, 4, 7, 22, 24, 43, 45, 47, 48, 55, 139, 476, 487, 828, 846, 885, 911, 967, 1001, 1122, 1193, 1237, 1242, 1255, 1265, 1294, 1381, 1427, 1474, 1602, 1630, 1649, 1674, 1680, 1745, 1846, 1869, 1875, 1889, 1892, 1904, 1910, 1913, 1917, 1942], "explicitli": [0, 8, 14, 24, 29, 34, 47, 75, 1003, 1054, 1056, 1066, 1155, 1234, 1247, 1251, 1259, 1301, 1537, 1595, 1691, 1807, 1866, 1868, 1869, 1870, 1875, 1892, 1894, 1897, 1899, 1905, 1910, 1913, 1914, 1920, 1921, 1925, 1944], "earlier": [0, 1, 6, 47, 1811, 1889, 1892, 1896, 1899, 1905, 1910, 1915], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 21, 22, 24, 26, 30, 41, 42, 45, 47, 51, 52, 55, 71, 72, 829, 895, 948, 1066, 1183, 1185, 1186, 1189, 1193, 1204, 1206, 1209, 1210, 1224, 1230, 1232, 1241, 1248, 1251, 1427, 1466, 1576, 1607, 1617, 1683, 1710, 1792, 1832, 1835, 1836, 1837, 1838, 1864, 1865, 1866, 1868, 1869, 1877, 1878, 1888, 1889, 1892, 1894, 1896, 1897, 1900, 1905, 1910, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1930, 1932, 1940, 1943, 1944, 1945, 1952, 1953, 1954], "avoid": [0, 5, 8, 9, 21, 24, 29, 30, 39, 42, 47, 55, 56, 63, 64, 180, 197, 436, 769, 853, 881, 921, 940, 1023, 1193, 1239, 1265, 1362, 1393, 1394, 1418, 1427, 1436, 1441, 1478, 1508, 1538, 1562, 1569, 1607, 1615, 1680, 1731, 1760, 1807, 1825, 1843, 1879, 1883, 1889, 1891, 1892, 1896, 1897, 1900, 1914, 1921, 1922, 1929, 1930, 1931, 1942, 1943, 1944, 1945, 1947, 1950], "corrupt": [0, 24, 41, 1364, 1892, 1902], "appli": [0, 1, 3, 5, 8, 13, 22, 26, 28, 29, 30, 32, 34, 41, 45, 47, 51, 52, 53, 55, 56, 66, 70, 71, 72, 108, 310, 387, 460, 501, 505, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 723, 726, 727, 728, 729, 730, 731, 746, 748, 754, 755, 756, 757, 758, 759, 760, 761, 762, 768, 769, 770, 771, 772, 798, 799, 800, 801, 828, 846, 885, 887, 888, 896, 913, 916, 942, 953, 1054, 1056, 1061, 1070, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1114, 1122, 1123, 1130, 1133, 1134, 1193, 1197, 1243, 1266, 1283, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1369, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1519, 1521, 1522, 1523, 1524, 1527, 1529, 1530, 1531, 1532, 1536, 1537, 1538, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1556, 1561, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1598, 1603, 1604, 1607, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1648, 1649, 1651, 1652, 1654, 1664, 1676, 1680, 1693, 1706, 1711, 1712, 1713, 1714, 1715, 1755, 1787, 1788, 1790, 1807, 1843, 1844, 1845, 1857, 1866, 1869, 1876, 1881, 1883, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1900, 1903, 1910, 1912, 1913, 1914, 1916, 1919, 1922, 1925, 1926, 1938, 1939, 1941, 1944, 1945, 1953], "argument": [0, 1, 3, 4, 5, 8, 9, 13, 14, 18, 21, 24, 25, 26, 28, 30, 32, 39, 42, 44, 45, 47, 51, 52, 54, 55, 56, 62, 63, 64, 73, 77, 139, 185, 198, 302, 310, 433, 434, 435, 436, 437, 475, 476, 501, 505, 548, 568, 569, 571, 572, 573, 575, 576, 591, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 722, 726, 727, 728, 729, 730, 731, 781, 782, 787, 807, 808, 809, 812, 813, 814, 829, 845, 846, 849, 851, 853, 868, 869, 870, 871, 872, 873, 877, 878, 879, 880, 881, 885, 886, 887, 890, 892, 893, 894, 895, 896, 901, 902, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 920, 924, 927, 929, 930, 931, 932, 933, 935, 937, 938, 944, 948, 952, 953, 955, 956, 958, 966, 988, 990, 994, 995, 1001, 1009, 1010, 1012, 1035, 1039, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1076, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1167, 1170, 1187, 1188, 1190, 1193, 1196, 1205, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1371, 1374, 1377, 1379, 1386, 1389, 1390, 1391, 1392, 1393, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1423, 1424, 1425, 1427, 1428, 1433, 1434, 1435, 1442, 1466, 1474, 1478, 1480, 1481, 1524, 1526, 1562, 1598, 1601, 1602, 1603, 1604, 1607, 1618, 1619, 1621, 1625, 1626, 1630, 1634, 1640, 1649, 1653, 1655, 1658, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1685, 1697, 1698, 1702, 1703, 1706, 1707, 1709, 1710, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1738, 1740, 1745, 1749, 1755, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1783, 1786, 1788, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1843, 1846, 1852, 1853, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1867, 1868, 1869, 1871, 1873, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932, 1939, 1941, 1943, 1944, 1948, 1953, 1955, 1957], "keyword": [0, 1, 5, 21, 24, 25, 28, 45, 52, 55, 56, 62, 73, 77, 302, 310, 433, 434, 435, 436, 437, 569, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 849, 853, 868, 869, 870, 871, 872, 873, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 920, 924, 927, 929, 931, 932, 933, 935, 937, 938, 948, 952, 953, 955, 956, 958, 966, 979, 981, 983, 1009, 1010, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1058, 1061, 1063, 1065, 1067, 1068, 1069, 1071, 1076, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1135, 1136, 1137, 1138, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1167, 1170, 1187, 1188, 1193, 1196, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1364, 1386, 1389, 1427, 1601, 1602, 1607, 1619, 1621, 1626, 1630, 1649, 1653, 1655, 1658, 1659, 1697, 1698, 1702, 1703, 1706, 1707, 1709, 1710, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1738, 1740, 1745, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1783, 1786, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1803, 1804, 1805, 1806, 1808, 1810, 1811, 1822, 1823, 1824, 1825, 1829, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1846, 1852, 1853, 1854, 1859, 1860, 1862, 1863, 1864, 1869, 1870, 1883, 1884, 1894, 1903, 1908, 1910, 1912, 1921, 1925, 1926, 1930, 1944, 1955], "closur": [0, 13, 28, 56, 63, 64, 942, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1941, 1945], "divid": [0, 5, 22, 24, 28, 227, 571, 572, 573, 983, 1061, 1064, 1084, 1102, 1111, 1155, 1156, 1204, 1343, 1344, 1350, 1351, 1361, 1387, 1388, 1394, 1418, 1419, 1430, 1431, 1432, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1509, 1510, 1538, 1561, 1569, 1607, 1811, 1858, 1867, 1911], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 33, 34, 39, 41, 42, 44, 45, 47, 49, 50, 52, 55, 56, 65, 66, 74, 75, 139, 243, 459, 476, 483, 487, 571, 668, 722, 723, 807, 808, 809, 812, 813, 814, 829, 846, 877, 881, 885, 886, 895, 921, 922, 930, 1003, 1012, 1019, 1054, 1056, 1066, 1087, 1089, 1109, 1122, 1193, 1287, 1317, 1363, 1370, 1423, 1424, 1425, 1427, 1433, 1470, 1472, 1474, 1501, 1502, 1503, 1594, 1607, 1619, 1621, 1625, 1627, 1655, 1680, 1726, 1731, 1745, 1804, 1832, 1847, 1849, 1865, 1866, 1868, 1869, 1876, 1877, 1881, 1883, 1884, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1932, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1952, 1954, 1955], "modifi": [0, 1, 18, 21, 22, 24, 25, 26, 28, 47, 55, 56, 249, 475, 476, 779, 826, 827, 828, 885, 887, 888, 901, 902, 942, 951, 952, 1146, 1190, 1193, 1196, 1197, 1213, 1370, 1427, 1470, 1472, 1474, 1517, 1518, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1683, 1691, 1773, 1866, 1869, 1882, 1888, 1892, 1894, 1895, 1900, 1905, 1913, 1914, 1916, 1921, 1926, 1929, 1931, 1935, 1941, 1942, 1943, 1944, 1954], "inspect": [0, 1, 24, 45, 47, 55, 904, 1193, 1205, 1888, 1894, 1899, 1913, 1917, 1928, 1944, 1946, 1948, 1955], "between": [0, 1, 2, 3, 7, 17, 18, 22, 24, 29, 30, 31, 41, 42, 43, 45, 47, 54, 55, 185, 501, 571, 572, 573, 575, 576, 595, 605, 677, 678, 679, 683, 684, 748, 760, 761, 762, 790, 845, 853, 872, 881, 883, 890, 892, 893, 894, 896, 897, 928, 940, 958, 969, 976, 978, 1025, 1029, 1043, 1044, 1049, 1066, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1117, 1146, 1153, 1190, 1193, 1205, 1229, 1230, 1252, 1257, 1324, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1366, 1367, 1368, 1372, 1374, 1379, 1388, 1394, 1403, 1404, 1405, 1406, 1407, 1408, 1418, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1436, 1455, 1458, 1459, 1460, 1475, 1476, 1478, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1525, 1550, 1551, 1552, 1566, 1582, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1691, 1693, 1702, 1710, 1714, 1715, 1720, 1721, 1725, 1750, 1804, 1805, 1806, 1807, 1811, 1831, 1832, 1852, 1853, 1866, 1868, 1869, 1870, 1876, 1881, 1884, 1888, 1889, 1891, 1892, 1893, 1897, 1898, 1900, 1902, 1904, 1905, 1907, 1908, 1910, 1912, 1914, 1916, 1917, 1921, 1923, 1925, 1927, 1930, 1934, 1939, 1947, 1952, 1954], "simpl": [0, 15, 18, 22, 34, 41, 45, 51, 53, 55, 476, 958, 1023, 1124, 1132, 1133, 1134, 1193, 1197, 1205, 1345, 1346, 1347, 1370, 1400, 1401, 1402, 1427, 1466, 1517, 1766, 1857, 1864, 1866, 1870, 1884, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1910, 1913, 1921, 1925, 1941, 1943, 1946, 1947], "util": [0, 7, 17, 42, 45, 47, 48, 54, 55, 56, 720, 723, 726, 727, 728, 733, 734, 744, 748, 752, 778, 786, 983, 1117, 1193, 1379, 1397, 1427, 1442, 1443, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1815, 1816, 1817, 1818, 1819, 1865, 1869, 1879, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1899, 1900, 1902, 1910, 1912, 1913, 1914, 1942, 1944, 1952, 1954], "clip_grad_norm_": [0, 47, 1888], "max_norm": [0, 47, 733, 734, 1370, 1371, 1517, 1518, 1611, 1867, 1888], "own": [0, 7, 9, 24, 25, 28, 30, 33, 41, 43, 47, 55, 668, 1001, 1100, 1119, 1155, 1193, 1265, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1616, 1619, 1869, 1885, 1888, 1892, 1913, 1916, 1917, 1921, 1923, 1925, 1943, 1946], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 77, 139, 249, 302, 304, 310, 324, 474, 476, 501, 503, 505, 534, 548, 595, 598, 605, 668, 674, 675, 680, 682, 686, 687, 723, 748, 779, 781, 782, 802, 828, 842, 846, 849, 862, 865, 877, 878, 879, 881, 882, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 905, 906, 907, 910, 919, 921, 926, 927, 931, 934, 935, 939, 940, 942, 947, 957, 965, 969, 970, 972, 973, 981, 982, 991, 999, 1003, 1009, 1013, 1014, 1022, 1023, 1030, 1031, 1033, 1034, 1038, 1040, 1042, 1083, 1084, 1085, 1086, 1089, 1092, 1093, 1096, 1099, 1101, 1103, 1119, 1122, 1123, 1129, 1130, 1132, 1133, 1135, 1155, 1158, 1189, 1190, 1193, 1201, 1204, 1205, 1208, 1209, 1229, 1256, 1265, 1281, 1283, 1291, 1293, 1296, 1304, 1305, 1314, 1322, 1323, 1324, 1325, 1335, 1342, 1344, 1348, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1374, 1379, 1380, 1381, 1382, 1387, 1393, 1394, 1397, 1398, 1414, 1418, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1466, 1470, 1472, 1474, 1475, 1478, 1483, 1484, 1491, 1497, 1499, 1517, 1518, 1523, 1528, 1547, 1548, 1576, 1582, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1614, 1619, 1626, 1630, 1640, 1644, 1652, 1653, 1654, 1655, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1692, 1693, 1694, 1695, 1707, 1753, 1786, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1804, 1805, 1806, 1807, 1810, 1826, 1828, 1835, 1836, 1837, 1838, 1841, 1843, 1844, 1849, 1852, 1853, 1855, 1859, 1864, 1866, 1867, 1868, 1869, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1951, 1952, 1953, 1954, 1955, 1956], "assign": [0, 1, 7, 9, 10, 21, 24, 32, 41, 42, 52, 55, 668, 826, 827, 828, 1191, 1193, 1194, 1335, 1363, 1427, 1434, 1437, 1438, 1608, 1619, 1866, 1870, 1888, 1894, 1895, 1896, 1910, 1916, 1922, 1923, 1929, 1930], "been": [0, 1, 5, 7, 9, 11, 21, 22, 24, 25, 28, 29, 30, 32, 34, 41, 44, 47, 50, 51, 55, 73, 476, 668, 748, 885, 970, 972, 977, 1005, 1008, 1065, 1070, 1123, 1196, 1197, 1203, 1208, 1265, 1379, 1386, 1397, 1442, 1491, 1526, 1607, 1616, 1621, 1625, 1627, 1647, 1648, 1663, 1683, 1684, 1685, 1691, 1693, 1709, 1807, 1822, 1849, 1859, 1875, 1879, 1881, 1882, 1883, 1888, 1889, 1891, 1892, 1897, 1898, 1900, 1902, 1904, 1906, 1908, 1910, 1912, 1913, 1921, 1923, 1925, 1930, 1939, 1940, 1944, 1950, 1954], "twice": [0, 54, 605, 890, 1130, 1888, 1889, 1896, 1897, 1943], "trigger": [0, 7, 9, 24, 41, 54, 73, 74, 76, 210, 1040, 1758, 1888, 1889, 1892, 1893, 1894, 1899, 1905, 1921, 1939, 1941, 1944, 1950, 1951, 1954], "runtimeerror": [0, 1, 14, 24, 28, 52, 55, 73, 77, 571, 685, 885, 921, 1114, 1168, 1178, 1193, 1223, 1224, 1225, 1233, 1234, 1235, 1237, 1241, 1247, 1254, 1259, 1260, 1286, 1317, 1427, 1660, 1747, 1786, 1846, 1866, 1868, 1869, 1882, 1884, 1888, 1890, 1896, 1904, 1906, 1910, 1916, 1920, 1925, 1928], "spars": [0, 1, 11, 179, 180, 197, 207, 210, 312, 317, 331, 332, 423, 531, 532, 533, 534, 569, 571, 572, 573, 574, 575, 576, 602, 677, 733, 734, 896, 897, 1040, 1135, 1157, 1178, 1266, 1288, 1298, 1327, 1370, 1371, 1460, 1517, 1518, 1543, 1680, 1699, 1747, 1781, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1812, 1831, 1846, 1847, 1865, 1867, 1871, 1876, 1887, 1903, 1904, 1911, 1918, 1928, 1929, 1932, 1942, 1949], "place": [0, 3, 7, 11, 13, 21, 22, 24, 26, 31, 32, 45, 47, 50, 51, 55, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 110, 112, 114, 116, 119, 120, 122, 130, 132, 135, 136, 138, 141, 147, 149, 151, 153, 155, 157, 166, 175, 183, 187, 190, 192, 202, 204, 210, 211, 220, 225, 227, 233, 236, 238, 240, 242, 243, 246, 249, 251, 258, 260, 262, 266, 268, 272, 274, 281, 283, 285, 293, 295, 297, 299, 301, 303, 305, 307, 345, 347, 349, 351, 353, 355, 357, 360, 362, 364, 365, 372, 374, 376, 378, 380, 384, 388, 390, 408, 411, 414, 416, 427, 429, 431, 439, 444, 454, 457, 473, 475, 476, 478, 480, 484, 487, 496, 499, 500, 502, 504, 510, 515, 517, 520, 522, 524, 537, 539, 541, 550, 552, 559, 563, 565, 581, 584, 586, 588, 590, 591, 600, 610, 746, 781, 785, 802, 826, 827, 845, 846, 885, 887, 901, 902, 922, 979, 980, 982, 983, 1003, 1066, 1117, 1122, 1123, 1131, 1193, 1238, 1256, 1317, 1339, 1349, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1384, 1385, 1386, 1413, 1427, 1444, 1445, 1446, 1447, 1454, 1469, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1530, 1533, 1542, 1573, 1575, 1590, 1594, 1598, 1603, 1604, 1607, 1611, 1612, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1649, 1680, 1736, 1738, 1742, 1743, 1744, 1791, 1827, 1865, 1866, 1868, 1869, 1876, 1883, 1888, 1892, 1894, 1899, 1907, 1912, 1913, 1914, 1921, 1922, 1927, 1929, 1931, 1942, 1943, 1944, 1947, 1951, 1953], "replac": [0, 1, 14, 21, 22, 24, 26, 40, 42, 45, 47, 49, 50, 51, 52, 53, 55, 71, 73, 74, 76, 108, 409, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 735, 802, 827, 846, 931, 1012, 1066, 1122, 1123, 1198, 1201, 1211, 1283, 1284, 1317, 1321, 1458, 1469, 1598, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1649, 1651, 1709, 1807, 1811, 1834, 1866, 1867, 1869, 1877, 1892, 1894, 1895, 1897, 1899, 1902, 1906, 1910, 1911, 1913, 1916, 1932, 1940, 1942, 1944, 1946, 1953], "were": [0, 1, 2, 3, 18, 24, 32, 41, 44, 45, 47, 52, 54, 55, 139, 310, 324, 459, 842, 877, 879, 881, 895, 1012, 1123, 1134, 1201, 1265, 1491, 1607, 1611, 1616, 1626, 1643, 1745, 1749, 1821, 1828, 1857, 1868, 1876, 1888, 1892, 1894, 1905, 1910, 1913, 1939, 1943, 1944, 1950, 1953, 1954], "reduc": [0, 2, 3, 14, 22, 24, 25, 26, 28, 47, 310, 501, 504, 505, 674, 681, 683, 684, 685, 687, 807, 808, 809, 810, 813, 815, 862, 863, 940, 980, 991, 1023, 1166, 1246, 1250, 1252, 1257, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1371, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1507, 1509, 1518, 1534, 1537, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1580, 1581, 1592, 1595, 1607, 1615, 1652, 1669, 1693, 1707, 1709, 1710, 1744, 1788, 1792, 1805, 1806, 1810, 1811, 1832, 1846, 1852, 1853, 1867, 1881, 1882, 1889, 1891, 1893, 1894, 1900, 1902, 1904, 1905, 1906, 1911, 1912, 1913, 1914, 1916, 1925, 1939, 1942, 1944, 1949, 1954, 1955], "increas": [0, 1, 3, 7, 22, 24, 30, 38, 47, 668, 842, 886, 924, 991, 1023, 1066, 1154, 1155, 1335, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1439, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1567, 1568, 1576, 1678, 1684, 1685, 1689, 1691, 1693, 1745, 1753, 1832, 1851, 1867, 1875, 1880, 1891, 1892, 1898, 1902, 1917, 1925, 1939, 1944, 1948], "set": [0, 1, 2, 3, 5, 8, 9, 12, 14, 20, 21, 22, 24, 25, 26, 28, 30, 32, 34, 39, 41, 42, 43, 44, 45, 47, 50, 51, 54, 55, 56, 68, 70, 77, 139, 143, 243, 319, 433, 434, 435, 436, 437, 446, 484, 487, 508, 568, 569, 668, 723, 729, 731, 748, 767, 773, 780, 781, 782, 785, 803, 804, 805, 808, 809, 810, 813, 814, 829, 842, 846, 847, 849, 850, 853, 866, 878, 880, 881, 888, 889, 890, 891, 892, 893, 894, 895, 919, 924, 935, 939, 940, 952, 967, 977, 992, 1001, 1013, 1014, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1067, 1068, 1069, 1122, 1131, 1140, 1155, 1173, 1174, 1193, 1197, 1201, 1203, 1205, 1207, 1209, 1210, 1229, 1230, 1233, 1239, 1246, 1248, 1250, 1251, 1263, 1264, 1265, 1266, 1280, 1283, 1286, 1307, 1311, 1312, 1313, 1335, 1339, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1379, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1437, 1441, 1442, 1458, 1459, 1466, 1470, 1472, 1474, 1475, 1476, 1491, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1526, 1530, 1537, 1538, 1547, 1548, 1561, 1563, 1569, 1576, 1595, 1607, 1609, 1610, 1615, 1620, 1649, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1709, 1716, 1718, 1722, 1724, 1725, 1733, 1734, 1745, 1746, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1775, 1791, 1796, 1805, 1806, 1825, 1835, 1836, 1837, 1838, 1846, 1849, 1850, 1852, 1853, 1864, 1866, 1868, 1869, 1870, 1873, 1875, 1877, 1878, 1879, 1881, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1930, 1932, 1934, 1935, 1938, 1943, 1944, 1945, 1947, 1949, 1951, 1953, 1954, 1955], "directli": [0, 1, 3, 7, 9, 14, 15, 21, 22, 24, 26, 30, 31, 32, 40, 45, 47, 51, 55, 545, 720, 735, 878, 887, 942, 1049, 1117, 1123, 1130, 1132, 1138, 1224, 1433, 1460, 1479, 1537, 1582, 1641, 1832, 1866, 1868, 1869, 1879, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1905, 1913, 1915, 1916, 1921, 1925, 1930, 1932, 1942, 1943, 1944, 1946, 1948, 1953, 1954], "fill": [0, 24, 143, 162, 247, 248, 249, 275, 306, 310, 366, 389, 433, 434, 435, 437, 442, 469, 596, 611, 911, 1054, 1067, 1068, 1069, 1120, 1121, 1224, 1235, 1237, 1371, 1470, 1518, 1564, 1658, 1659, 1718, 1719, 1720, 1721, 1722, 1723, 1811, 1846, 1862, 1863, 1867, 1873, 1883, 1884, 1887, 1892, 1894, 1905, 1911, 1925, 1932, 1943, 1947, 1949], "later": [0, 1, 2, 3, 7, 20, 22, 24, 29, 47, 54, 55, 733, 734, 744, 752, 904, 1001, 1265, 1397, 1420, 1421, 1422, 1442, 1456, 1550, 1551, 1552, 1579, 1607, 1811, 1866, 1889, 1891, 1892, 1893, 1900, 1905, 1922, 1923, 1947], "chang": [0, 1, 2, 3, 7, 11, 13, 18, 22, 24, 26, 28, 29, 30, 32, 40, 45, 47, 48, 51, 52, 54, 55, 128, 210, 222, 243, 310, 446, 484, 487, 505, 508, 544, 605, 668, 807, 865, 896, 897, 940, 951, 952, 966, 967, 968, 977, 988, 990, 1001, 1002, 1009, 1010, 1012, 1054, 1102, 1122, 1140, 1146, 1167, 1190, 1193, 1204, 1205, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1295, 1367, 1370, 1388, 1397, 1427, 1458, 1479, 1491, 1526, 1550, 1551, 1552, 1576, 1598, 1599, 1607, 1609, 1610, 1616, 1619, 1620, 1649, 1653, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1685, 1688, 1689, 1691, 1693, 1695, 1709, 1749, 1753, 1791, 1802, 1805, 1806, 1807, 1831, 1849, 1852, 1853, 1864, 1865, 1866, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1898, 1900, 1902, 1903, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1939, 1942, 1943, 1945, 1946, 1947, 1950, 1951, 1954], "further": [0, 1, 4, 9, 13, 14, 22, 24, 47, 54, 56, 65, 66, 1138, 1197, 1233, 1335, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1607, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1697, 1869, 1876, 1900, 1902, 1913, 1915, 1923, 1930, 1935, 1938, 1942, 1949, 1952, 1954], "floattensor": [0, 24, 310, 475, 674, 675, 676, 677, 678, 723, 896, 897, 908, 1140, 1370, 1371, 1430, 1470, 1751, 1928, 1931], "end": [0, 7, 8, 9, 21, 22, 24, 30, 34, 38, 50, 55, 350, 351, 526, 748, 772, 785, 808, 809, 853, 909, 953, 967, 1027, 1056, 1066, 1105, 1119, 1146, 1152, 1153, 1190, 1193, 1214, 1219, 1249, 1259, 1261, 1264, 1266, 1280, 1326, 1327, 1342, 1343, 1344, 1361, 1363, 1369, 1373, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1397, 1398, 1413, 1418, 1421, 1422, 1427, 1429, 1434, 1435, 1438, 1442, 1445, 1455, 1458, 1464, 1469, 1476, 1509, 1518, 1530, 1531, 1607, 1614, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1683, 1688, 1725, 1758, 1761, 1764, 1779, 1832, 1843, 1844, 1860, 1866, 1867, 1868, 1869, 1881, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1903, 1906, 1908, 1910, 1912, 1915, 1916, 1919, 1921, 1926, 1939, 1943, 1946, 1949, 1954], "reason": [0, 3, 8, 9, 21, 24, 26, 45, 47, 52, 70, 668, 829, 1087, 1089, 1193, 1209, 1210, 1229, 1230, 1257, 1294, 1343, 1367, 1427, 1528, 1576, 1603, 1604, 1619, 1741, 1866, 1868, 1869, 1875, 1889, 1893, 1895, 1903, 1905, 1910, 1921, 1928, 1940, 1942, 1943, 1944, 1947, 1948, 1954, 1955], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 21, 22, 24, 28, 29, 31, 32, 34, 41, 42, 43, 45, 47, 48, 49, 52, 53, 54, 55, 73, 483, 501, 503, 505, 746, 811, 814, 851, 880, 882, 887, 896, 926, 939, 940, 967, 1001, 1012, 1045, 1046, 1047, 1048, 1117, 1119, 1128, 1135, 1155, 1168, 1180, 1190, 1193, 1196, 1205, 1209, 1239, 1257, 1266, 1273, 1283, 1285, 1294, 1317, 1327, 1339, 1349, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1384, 1385, 1386, 1413, 1445, 1446, 1447, 1454, 1469, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1528, 1530, 1545, 1598, 1607, 1655, 1660, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1697, 1703, 1753, 1846, 1864, 1865, 1866, 1867, 1869, 1871, 1873, 1881, 1882, 1883, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1915, 1916, 1917, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1939, 1942, 1943, 1946, 1947, 1951, 1953, 1954, 1956], "synchron": [0, 3, 4, 17, 18, 22, 26, 28, 32, 41, 47, 54, 865, 969, 970, 972, 980, 1000, 1040, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1241, 1242, 1248, 1251, 1254, 1255, 1257, 1258, 1266, 1305, 1466, 1607, 1653, 1655, 1731, 1865, 1891, 1892, 1893, 1898, 1902, 1914, 1921, 1944], "fall": [0, 2, 7, 14, 21, 45, 783, 896, 940, 1155, 1207, 1265, 1388, 1458, 1535, 1580, 1611, 1612, 1864, 1910, 1916, 1944], "below": [0, 1, 5, 9, 13, 14, 21, 22, 24, 30, 32, 33, 38, 41, 42, 43, 44, 45, 55, 56, 63, 64, 668, 722, 736, 745, 783, 802, 1009, 1053, 1054, 1055, 1056, 1057, 1066, 1094, 1096, 1100, 1138, 1146, 1193, 1210, 1250, 1251, 1256, 1263, 1295, 1358, 1359, 1360, 1379, 1381, 1388, 1397, 1399, 1423, 1424, 1425, 1427, 1442, 1458, 1479, 1509, 1535, 1580, 1607, 1619, 1653, 1680, 1750, 1753, 1791, 1822, 1832, 1835, 1836, 1837, 1838, 1866, 1868, 1869, 1871, 1875, 1876, 1881, 1882, 1888, 1889, 1892, 1893, 1894, 1897, 1898, 1900, 1902, 1904, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1926, 1929, 1932, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1954], "someth": [0, 3, 7, 45, 49, 55, 56, 58, 889, 891, 1066, 1193, 1209, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1871, 1879, 1881, 1882, 1889, 1898, 1906, 1910, 1921, 1940, 1942, 1944, 1946, 1947, 1953, 1954, 1955], "wrong": [0, 24, 55, 73, 885, 1191, 1194, 1893, 1902, 1906, 1910, 1912], "incompat": [0, 9, 14, 52, 921, 1190, 1890, 1913], "due": [0, 3, 4, 5, 7, 22, 24, 30, 40, 45, 47, 52, 55, 56, 58, 73, 474, 868, 889, 890, 895, 954, 1206, 1229, 1230, 1257, 1283, 1367, 1381, 1470, 1479, 1537, 1576, 1647, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1812, 1866, 1884, 1892, 1893, 1897, 1898, 1904, 1908, 1910, 1916, 1917, 1921, 1923, 1944, 1947, 1950, 1954, 1956], "float64": [0, 11, 229, 434, 437, 568, 868, 948, 1109, 1118, 1140, 1175, 1193, 1223, 1229, 1230, 1232, 1234, 1250, 1427, 1576, 1666, 1667, 1703, 1711, 1750, 1751, 1754, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1855, 1860, 1900, 1903, 1925, 1927, 1928, 1931, 1932, 1957], "variant": [0, 5, 22, 846, 1224, 1235, 1248, 1251, 1324, 1327, 1666, 1667, 1668, 1680, 1785, 1834, 1865, 1899, 1919, 1931, 1949, 1950, 1953], "suppli": [0, 5, 7, 14, 15, 24, 1001, 1433, 1662, 1869, 1892, 1910, 1925, 1944, 1954], "won": [0, 8, 22, 26, 41, 50, 446, 1193, 1205, 1427, 1562, 1601, 1602, 1864, 1889, 1894, 1921, 1933, 1943, 1944, 1947, 1952, 1954], "go": [0, 1, 7, 15, 21, 24, 38, 43, 51, 55, 487, 488, 548, 886, 901, 1266, 1340, 1341, 1342, 1420, 1421, 1422, 1868, 1869, 1876, 1881, 1882, 1883, 1889, 1891, 1892, 1894, 1895, 1899, 1900, 1902, 1906, 1910, 1913, 1928, 1930, 1940, 1941, 1942, 1943, 1944, 1947], "addmm": [0, 45, 56, 95, 1803, 1867, 1882, 1903, 1911, 1925, 1949, 1953], "b": [0, 1, 3, 11, 13, 21, 24, 26, 30, 39, 45, 55, 56, 59, 74, 76, 249, 324, 387, 605, 673, 674, 736, 745, 769, 812, 868, 885, 887, 888, 899, 901, 902, 908, 919, 920, 922, 926, 928, 930, 933, 938, 953, 959, 960, 961, 962, 963, 964, 965, 966, 1009, 1010, 1058, 1061, 1065, 1066, 1111, 1112, 1113, 1114, 1119, 1123, 1136, 1158, 1170, 1190, 1196, 1204, 1205, 1213, 1214, 1216, 1225, 1226, 1234, 1238, 1239, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1259, 1260, 1263, 1266, 1275, 1277, 1278, 1284, 1292, 1297, 1299, 1316, 1344, 1348, 1370, 1371, 1378, 1414, 1497, 1499, 1518, 1525, 1543, 1614, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1677, 1679, 1710, 1716, 1729, 1732, 1748, 1760, 1779, 1788, 1793, 1794, 1795, 1797, 1798, 1802, 1807, 1808, 1810, 1817, 1818, 1827, 1834, 1835, 1837, 1854, 1859, 1866, 1867, 1868, 1869, 1882, 1883, 1884, 1887, 1888, 1890, 1892, 1894, 1896, 1897, 1898, 1903, 1905, 1908, 1915, 1916, 1922, 1923, 1925, 1926, 1929, 1930, 1935, 1940, 1941, 1944, 1946, 1947, 1949, 1953, 1954, 1956], "c": [0, 1, 3, 8, 9, 14, 21, 24, 30, 39, 50, 55, 74, 76, 249, 324, 487, 508, 605, 673, 809, 865, 868, 887, 919, 930, 954, 1003, 1009, 1043, 1058, 1061, 1066, 1112, 1113, 1114, 1123, 1124, 1128, 1133, 1136, 1146, 1193, 1204, 1216, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1249, 1250, 1252, 1254, 1256, 1257, 1316, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1363, 1366, 1367, 1368, 1372, 1374, 1375, 1376, 1382, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1409, 1410, 1411, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1434, 1439, 1440, 1448, 1449, 1450, 1451, 1452, 1453, 1461, 1466, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1499, 1509, 1510, 1522, 1526, 1561, 1567, 1568, 1576, 1614, 1642, 1644, 1645, 1646, 1653, 1654, 1697, 1713, 1729, 1767, 1788, 1802, 1807, 1827, 1844, 1848, 1849, 1865, 1866, 1867, 1868, 1869, 1873, 1882, 1883, 1891, 1892, 1893, 1895, 1897, 1899, 1906, 1913, 1922, 1923, 1925, 1926, 1929, 1930, 1936, 1941, 1942, 1943, 1944, 1946, 1947, 1949, 1953, 1954, 1955, 1956], "addmm_": [0, 1867, 1882, 1925], "d": [0, 1, 11, 21, 22, 24, 29, 30, 45, 48, 55, 302, 310, 324, 459, 501, 503, 505, 532, 571, 605, 674, 678, 853, 868, 887, 908, 909, 911, 918, 919, 920, 924, 930, 1053, 1055, 1065, 1066, 1079, 1083, 1084, 1085, 1086, 1091, 1092, 1095, 1096, 1101, 1102, 1103, 1106, 1107, 1108, 1134, 1135, 1150, 1151, 1158, 1167, 1190, 1194, 1198, 1236, 1237, 1287, 1298, 1319, 1334, 1342, 1343, 1347, 1357, 1361, 1362, 1366, 1367, 1368, 1370, 1372, 1374, 1379, 1381, 1392, 1397, 1399, 1411, 1422, 1436, 1442, 1466, 1475, 1476, 1478, 1491, 1526, 1537, 1543, 1570, 1594, 1595, 1615, 1648, 1653, 1654, 1678, 1698, 1716, 1725, 1737, 1745, 1750, 1802, 1807, 1820, 1821, 1827, 1830, 1835, 1836, 1837, 1838, 1851, 1857, 1859, 1864, 1867, 1876, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1895, 1897, 1898, 1905, 1910, 1921, 1922, 1925, 1926, 1930, 1931, 1943, 1944, 1946, 1952, 1954, 1956], "best": [0, 1, 7, 15, 18, 21, 24, 30, 42, 47, 50, 849, 850, 905, 927, 940, 1209, 1210, 1239, 1433, 1680, 1693, 1865, 1866, 1868, 1881, 1887, 1888, 1889, 1894, 1896, 1913, 1921, 1925, 1936, 1941, 1944, 1948], "stabil": [0, 1225, 1230, 1281, 1344, 1345, 1346, 1347, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1463, 1466, 1475, 1523, 1584, 1615, 1648, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1713, 1895, 1944, 1954], "respect": [0, 1, 5, 8, 24, 25, 28, 30, 39, 41, 47, 53, 54, 55, 185, 198, 475, 568, 591, 677, 678, 679, 748, 783, 807, 829, 873, 879, 881, 895, 897, 901, 902, 935, 958, 1054, 1056, 1057, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1146, 1193, 1225, 1229, 1230, 1239, 1249, 1252, 1254, 1257, 1266, 1298, 1321, 1343, 1350, 1358, 1359, 1360, 1364, 1379, 1381, 1397, 1427, 1428, 1442, 1472, 1474, 1475, 1476, 1477, 1479, 1517, 1526, 1603, 1604, 1621, 1625, 1627, 1649, 1651, 1679, 1693, 1784, 1788, 1811, 1827, 1883, 1888, 1889, 1892, 1894, 1897, 1900, 1901, 1914, 1919, 1925, 1926, 1927, 1932, 1943, 1948], "describ": [0, 5, 7, 8, 9, 21, 22, 26, 28, 29, 32, 33, 39, 41, 45, 55, 222, 501, 780, 781, 782, 803, 804, 805, 829, 847, 925, 992, 1009, 1026, 1066, 1146, 1214, 1254, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1366, 1367, 1368, 1369, 1372, 1374, 1375, 1376, 1382, 1385, 1388, 1390, 1391, 1392, 1394, 1399, 1418, 1420, 1421, 1422, 1433, 1434, 1441, 1445, 1458, 1466, 1474, 1475, 1476, 1478, 1509, 1521, 1522, 1531, 1564, 1691, 1832, 1865, 1866, 1868, 1869, 1887, 1888, 1889, 1892, 1893, 1896, 1897, 1899, 1900, 1905, 1910, 1913, 1915, 1916, 1919, 1922, 1923, 1932, 1944, 1945, 1950], "expos": [0, 1, 8, 24, 28, 47, 54, 55, 783, 1119, 1889, 1892, 1899, 1913, 1916, 1955], "namespac": [0, 55, 1040, 1866, 1870, 1873, 1894, 1900, 1908, 1910, 1914, 1919, 1936, 1941, 1955], "defin": [0, 1, 2, 3, 5, 9, 14, 15, 21, 22, 24, 25, 26, 29, 30, 32, 33, 39, 41, 42, 45, 47, 52, 55, 423, 433, 435, 437, 505, 554, 780, 785, 787, 826, 847, 848, 849, 850, 877, 878, 879, 880, 1023, 1049, 1066, 1067, 1086, 1114, 1120, 1136, 1138, 1152, 1154, 1155, 1182, 1193, 1199, 1216, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1246, 1250, 1251, 1252, 1254, 1256, 1257, 1263, 1299, 1364, 1369, 1375, 1376, 1383, 1384, 1385, 1386, 1393, 1395, 1396, 1427, 1433, 1445, 1460, 1462, 1467, 1469, 1491, 1526, 1576, 1582, 1598, 1601, 1607, 1625, 1627, 1634, 1635, 1655, 1658, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1685, 1688, 1691, 1709, 1718, 1720, 1722, 1729, 1758, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1788, 1790, 1832, 1835, 1836, 1837, 1838, 1860, 1862, 1864, 1866, 1869, 1871, 1873, 1881, 1882, 1884, 1889, 1892, 1893, 1897, 1898, 1900, 1902, 1906, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1925, 1926, 1931, 1932, 1933, 1939, 1940, 1943, 1945, 1947, 1951, 1955], "still": [0, 1, 2, 7, 8, 21, 24, 29, 30, 32, 41, 45, 47, 54, 55, 782, 787, 886, 891, 1197, 1203, 1211, 1394, 1418, 1607, 1608, 1609, 1610, 1693, 1741, 1866, 1869, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1896, 1898, 1905, 1906, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1943, 1947, 1949, 1950, 1954, 1956], "unlist": 0, "downstream": [0, 3, 1879, 1944, 1945, 1947, 1954], "stabl": [0, 1, 2, 13, 24, 30, 41, 42, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 864, 1066, 1229, 1230, 1234, 1239, 1247, 1251, 1254, 1257, 1259, 1266, 1344, 1783, 1865, 1867, 1887, 1890, 1904, 1921], "believ": [0, 8, 1944], "unstabl": [0, 30, 1229, 1230, 1257, 1274, 1283, 1545, 1811, 1926], "__matmul__": 0, "addbmm": [0, 89, 908, 1867, 1903, 1911], "addmv": [0, 97, 1867, 1882, 1911], "addr": [0, 24, 99, 1867, 1911, 1956], "baddbmm": [0, 141, 1867, 1903, 1911], "bmm": [0, 1846, 1867, 1882, 1884, 1903, 1904, 1911, 1925, 1949], "chain_matmul": [0, 1867, 1911], "multi_dot": [0, 930], "conv1d": [0, 696, 700, 703, 713, 729, 1358, 1366, 1403, 1846, 1867, 1911, 1916, 1918], "conv2d": [0, 45, 697, 701, 704, 706, 714, 730, 780, 802, 1193, 1203, 1205, 1209, 1210, 1359, 1367, 1404, 1427, 1428, 1434, 1455, 1478, 1634, 1846, 1866, 1867, 1877, 1910, 1911, 1916, 1918, 1919, 1930, 1935], "conv3d": [0, 698, 702, 705, 707, 715, 731, 1360, 1368, 1405, 1846, 1867, 1911, 1916, 1918], "conv_transpose1d": [0, 1867, 1911, 1918], "conv_transpose2d": [0, 1867, 1911, 1918], "conv_transpose3d": [0, 1867, 1911, 1918], "grucel": [0, 1903, 1916, 1918, 1919], "lstmcell": [0, 1903, 1916, 1918, 1919], "matmul": [0, 2, 11, 920, 940, 1133, 1298, 1478, 1699, 1709, 1753, 1811, 1867, 1882, 1884, 1892, 1903, 1911, 1918, 1925, 1939], "mv": [0, 11, 1205, 1846, 1867, 1882, 1911, 1925], "prelu": [0, 1428, 1867, 1911, 1918], "rnncell": [0, 1916, 1918, 1919], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 83, 615, 616, 854, 1867, 1882, 1911, 1932, 1949], "asin": [0, 130, 617, 618, 856, 1867, 1882, 1911, 1925, 1949], "cosh": [0, 192, 625, 626, 672, 1867, 1882, 1911, 1949], "cosine_embedding_loss": [0, 1867, 1911], "cdist": [0, 1892, 1911], "cosine_similar": [0, 1476, 1867, 1911], "cross_entropi": [0, 1867], "cumprod": [0, 202, 1867, 1882, 1911], "cumsum": [0, 204, 1049, 1846, 1867, 1882, 1911, 1949], "dist": [0, 22, 24, 25, 28, 30, 42, 47, 931, 932, 933, 1223, 1229, 1230, 1231, 1233, 1234, 1235, 1239, 1240, 1251, 1252, 1255, 1257, 1258, 1281, 1284, 1436, 1466, 1607, 1614, 1811, 1867, 1893, 1911, 1921, 1923], "erfinv": [0, 240, 1867, 1882, 1911, 1925, 1926], "exp": [0, 1, 30, 242, 631, 632, 758, 891, 892, 894, 1109, 1253, 1273, 1281, 1344, 1349, 1363, 1369, 1393, 1416, 1417, 1431, 1441, 1454, 1457, 1459, 1460, 1462, 1463, 1467, 1500, 1546, 1569, 1577, 1578, 1582, 1584, 1587, 1614, 1706, 1767, 1768, 1790, 1807, 1867, 1882, 1889, 1910, 1911, 1926, 1949], "expm1": [0, 246, 633, 634, 1867, 1882, 1911, 1925, 1926, 1949], "group_norm": [0, 1867, 1911, 1918], "hinge_embedding_loss": [0, 1867, 1911], "kl_div": [0, 1867, 1911], "l1_loss": [0, 1867, 1911], "layer_norm": [0, 1399, 1867, 1911, 1918], "log": [0, 14, 21, 22, 30, 32, 34, 35, 38, 39, 43, 68, 70, 365, 366, 641, 648, 668, 1076, 1269, 1271, 1273, 1274, 1281, 1309, 1335, 1343, 1344, 1363, 1381, 1393, 1416, 1417, 1431, 1434, 1441, 1459, 1460, 1463, 1523, 1528, 1538, 1545, 1546, 1561, 1569, 1582, 1584, 1607, 1865, 1867, 1875, 1879, 1882, 1889, 1892, 1894, 1908, 1910, 1911, 1915, 1926, 1930, 1933, 1934, 1935, 1946, 1947, 1948, 1949, 1951, 1952, 1954], "log_softmax": [0, 1350, 1393, 1510, 1561, 1582, 1867, 1883, 1911, 1926], "log10": [0, 360, 642, 643, 1867, 1882, 1911, 1949], "log1p": [0, 362, 644, 645, 1867, 1882, 1911, 1925, 1926, 1949], "log2": [0, 364, 646, 647, 1867, 1882, 1911, 1926, 1949], "margin_ranking_loss": [0, 1867, 1911], "mse_loss": [0, 51, 1122, 1867, 1911], "multilabel_margin_loss": [0, 1867, 1911], "multi_margin_loss": [0, 1867, 1911], "nll_loss": [0, 1867, 1911], "norm": [0, 30, 47, 49, 55, 690, 691, 692, 693, 694, 695, 928, 1060, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1225, 1229, 1238, 1239, 1246, 1251, 1263, 1370, 1371, 1418, 1436, 1471, 1472, 1473, 1474, 1475, 1517, 1518, 1562, 1566, 1611, 1615, 1624, 1625, 1630, 1633, 1634, 1648, 1651, 1668, 1730, 1867, 1871, 1888, 1889, 1897, 1900, 1903, 1911], "normal": [0, 1, 22, 28, 41, 45, 47, 55, 71, 325, 340, 366, 442, 544, 958, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1154, 1190, 1193, 1198, 1229, 1271, 1339, 1345, 1346, 1347, 1366, 1367, 1368, 1372, 1382, 1390, 1391, 1392, 1399, 1409, 1410, 1411, 1415, 1454, 1466, 1470, 1471, 1472, 1473, 1474, 1496, 1526, 1527, 1536, 1540, 1544, 1570, 1611, 1612, 1615, 1630, 1638, 1639, 1648, 1651, 1677, 1693, 1713, 1722, 1723, 1730, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1807, 1846, 1864, 1865, 1866, 1867, 1871, 1882, 1884, 1887, 1889, 1892, 1895, 1910, 1911, 1913, 1918, 1921, 1926, 1930, 1932, 1933, 1938, 1949, 1957], "pdist": [0, 1436, 1867, 1911], "poisson_nll_loss": [0, 1867, 1911], "pow": [0, 1, 457, 484, 889, 890, 893, 1109, 1867, 1869, 1882, 1888, 1889, 1911, 1925, 1931, 1949], "prod": [0, 38, 310, 505, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1259, 1260, 1370, 1374, 1478, 1846, 1867, 1882, 1911, 1925, 1949], "reciproc": [0, 473, 651, 652, 1740, 1867, 1882, 1911, 1949], "rsqrt": [0, 499, 1867, 1882, 1911, 1949], "sinh": [0, 524, 659, 660, 870, 1867, 1882, 1911, 1925, 1949], "smooth_l1_loss": [0, 1867, 1911], "soft_margin_loss": [0, 1867, 1911], "softmax": [0, 30, 784, 1335, 1363, 1393, 1417, 1461, 1509, 1528, 1538, 1545, 1576, 1583, 1787, 1867, 1882, 1883, 1884, 1892, 1911, 1918, 1925, 1926], "softmin": [0, 1867], "softplu": [0, 30, 1426, 1556, 1867, 1911], "sum": [0, 1, 13, 21, 24, 25, 28, 30, 32, 47, 52, 53, 55, 484, 505, 554, 734, 881, 889, 890, 891, 892, 893, 894, 895, 901, 902, 906, 958, 981, 982, 983, 1048, 1049, 1066, 1126, 1127, 1128, 1133, 1170, 1225, 1246, 1250, 1263, 1271, 1272, 1273, 1281, 1317, 1325, 1343, 1344, 1350, 1360, 1361, 1363, 1364, 1371, 1374, 1381, 1387, 1388, 1393, 1394, 1395, 1396, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1460, 1462, 1475, 1476, 1478, 1498, 1499, 1509, 1510, 1518, 1523, 1528, 1538, 1547, 1548, 1561, 1569, 1582, 1583, 1607, 1630, 1635, 1636, 1654, 1685, 1731, 1753, 1769, 1788, 1790, 1830, 1832, 1846, 1865, 1867, 1869, 1873, 1879, 1882, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1903, 1910, 1911, 1921, 1922, 1925, 1926, 1931, 1939, 1940, 1941, 1944, 1947, 1949, 1952, 1954, 1956], "renorm": [0, 480, 1370, 1371, 1517, 1518, 1867, 1911], "tan": [0, 563, 663, 664, 871, 1867, 1882, 1911, 1925, 1930, 1949], "triplet_margin_loss": [0, 1867, 1911], "take": [0, 1, 2, 3, 4, 7, 9, 14, 21, 22, 24, 26, 28, 30, 32, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 63, 64, 76, 748, 781, 786, 802, 808, 814, 850, 889, 890, 891, 892, 893, 894, 896, 897, 966, 1003, 1054, 1056, 1057, 1082, 1084, 1087, 1090, 1094, 1095, 1097, 1100, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1226, 1248, 1251, 1335, 1344, 1371, 1375, 1376, 1379, 1397, 1421, 1422, 1423, 1424, 1425, 1427, 1435, 1442, 1470, 1480, 1481, 1521, 1522, 1539, 1563, 1576, 1607, 1652, 1677, 1681, 1706, 1834, 1847, 1857, 1864, 1866, 1867, 1869, 1876, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1904, 1905, 1906, 1910, 1911, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953], "addcdiv": [0, 91, 1867, 1911], "addcmul": [0, 93, 1867, 1911], "atan2": [0, 135, 859, 1867, 1882, 1911, 1949], "bilinear": [0, 767, 773, 774, 1066, 1479, 1480, 1526, 1537, 1595, 1596, 1846, 1867, 1911], "cross": [0, 7, 8, 26, 30, 32, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1498, 1499, 1509, 1867, 1892, 1906, 1911, 1947], "dot": [0, 2, 14, 52, 53, 605, 890, 892, 893, 894, 1045, 1046, 1047, 1048, 1124, 1134, 1170, 1214, 1261, 1262, 1288, 1343, 1344, 1363, 1374, 1387, 1394, 1418, 1433, 1434, 1476, 1576, 1807, 1854, 1855, 1856, 1857, 1867, 1882, 1897, 1911, 1913], "grid_sampl": [0, 1491, 1846, 1867, 1911], "index_put": [0, 1846, 1867, 1911, 1949], "scatter_add": [0, 1867, 1911, 1949], "tensordot": [0, 1170, 1259, 1260, 1871, 1892, 1911], "binari": [0, 2, 14, 15, 22, 30, 32, 34, 39, 41, 55, 143, 723, 910, 1287, 1343, 1344, 1433, 1498, 1499, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1661, 1865, 1870, 1882, 1883, 1899, 1908, 1910, 1913, 1930], "add": [0, 1, 3, 7, 13, 15, 17, 21, 24, 26, 28, 38, 41, 45, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 71, 75, 87, 279, 302, 501, 503, 674, 675, 676, 679, 735, 736, 745, 778, 781, 826, 847, 849, 850, 982, 1012, 1023, 1066, 1123, 1193, 1205, 1335, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1427, 1429, 1433, 1434, 1438, 1441, 1528, 1569, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1753, 1803, 1864, 1866, 1867, 1868, 1869, 1873, 1877, 1879, 1882, 1884, 1888, 1890, 1891, 1894, 1895, 1898, 1899, 1900, 1902, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1935, 1939, 1940, 1941, 1942, 1944, 1945, 1948, 1949, 1952, 1953, 1954, 1955, 1956], "nativ": [0, 2, 11, 22, 29, 47, 55, 992, 1123, 1204, 1611, 1612, 1753, 1866, 1869, 1881, 1892, 1905, 1907, 1912, 1913, 1921, 1944], "intervent": [0, 8, 1921], "mixtur": [0, 30, 1363, 1509], "bceloss": [0, 1344, 1498], "aren": [0, 8, 52, 55, 70, 1123, 1882, 1889, 1922, 1955], "mean": [0, 2, 3, 5, 7, 8, 13, 15, 18, 21, 22, 24, 26, 28, 30, 41, 43, 45, 47, 48, 50, 53, 54, 55, 243, 310, 324, 366, 442, 476, 483, 505, 746, 748, 769, 782, 784, 849, 850, 908, 921, 958, 1122, 1124, 1204, 1294, 1312, 1317, 1322, 1326, 1327, 1333, 1334, 1335, 1337, 1338, 1339, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1361, 1363, 1365, 1369, 1371, 1372, 1373, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1414, 1416, 1417, 1418, 1419, 1426, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1476, 1477, 1497, 1498, 1499, 1507, 1509, 1510, 1518, 1519, 1523, 1534, 1535, 1538, 1539, 1543, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1593, 1607, 1655, 1680, 1713, 1722, 1723, 1753, 1767, 1788, 1805, 1806, 1812, 1846, 1852, 1853, 1864, 1866, 1867, 1868, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1900, 1906, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1942, 1943, 1944, 1947, 1948, 1949, 1950, 1951], "doesn": [0, 1, 2, 7, 8, 11, 13, 21, 24, 26, 50, 52, 54, 55, 73, 811, 814, 868, 885, 895, 970, 991, 1123, 1134, 1201, 1207, 1233, 1257, 1265, 1274, 1355, 1356, 1357, 1364, 1393, 1460, 1501, 1502, 1503, 1538, 1582, 1607, 1608, 1630, 1669, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1784, 1788, 1857, 1866, 1869, 1870, 1882, 1884, 1889, 1890, 1892, 1894, 1895, 1899, 1902, 1906, 1912, 1914, 1922, 1925, 1943, 1949, 1954], "revers": [0, 30, 53, 55, 501, 722, 781, 889, 891, 1084, 1086, 1106, 1126, 1128, 1133, 1261, 1397, 1440, 1568, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1834, 1851, 1867, 1868, 1869, 1889, 1893, 1895, 1911, 1931], "rais": [0, 1, 5, 7, 14, 24, 28, 30, 32, 34, 41, 45, 47, 52, 54, 55, 56, 77, 302, 304, 310, 685, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 921, 930, 971, 1036, 1109, 1114, 1191, 1193, 1198, 1201, 1209, 1211, 1223, 1225, 1233, 1234, 1237, 1241, 1242, 1247, 1254, 1255, 1259, 1260, 1265, 1286, 1312, 1427, 1576, 1601, 1619, 1620, 1625, 1627, 1630, 1640, 1660, 1661, 1747, 1796, 1846, 1864, 1870, 1876, 1881, 1889, 1892, 1894, 1896, 1903, 1908, 1910, 1913, 1914, 1920, 1921, 1932, 1942, 1943, 1944, 1947, 1953, 1954, 1955], "mani": [0, 3, 7, 11, 14, 21, 22, 24, 30, 41, 45, 47, 51, 52, 55, 77, 391, 668, 877, 879, 889, 891, 1066, 1206, 1350, 1680, 1779, 1828, 1835, 1836, 1837, 1838, 1866, 1868, 1882, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1899, 1900, 1903, 1907, 1910, 1912, 1916, 1923, 1925, 1928, 1930, 1931, 1933, 1940, 1942, 1943, 1944, 1946, 1947, 1948, 1953, 1954, 1956], "sigmoid": [0, 30, 55, 515, 655, 656, 748, 783, 1343, 1344, 1370, 1379, 1380, 1397, 1398, 1456, 1498, 1525, 1579, 1867, 1882, 1883, 1887, 1908, 1911, 1918, 1926, 1949], "right": [0, 2, 7, 9, 13, 24, 26, 30, 47, 55, 808, 853, 909, 916, 918, 919, 924, 929, 933, 1060, 1066, 1107, 1110, 1111, 1115, 1146, 1150, 1151, 1155, 1159, 1190, 1213, 1238, 1243, 1254, 1256, 1257, 1265, 1271, 1272, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1374, 1381, 1394, 1395, 1396, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1430, 1431, 1432, 1436, 1437, 1443, 1475, 1478, 1479, 1480, 1481, 1526, 1546, 1564, 1612, 1619, 1669, 1683, 1684, 1725, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1807, 1827, 1832, 1834, 1849, 1851, 1864, 1867, 1869, 1881, 1882, 1883, 1889, 1894, 1897, 1908, 1910, 1912, 1919, 1923, 1926, 1941, 1943, 1952], "entropi": [0, 30, 1343, 1363, 1431, 1498, 1499, 1509, 1926], "combin": [0, 3, 21, 22, 24, 41, 53, 54, 605, 677, 700, 701, 702, 703, 704, 705, 706, 707, 781, 842, 878, 1023, 1095, 1096, 1101, 1103, 1155, 1288, 1298, 1344, 1374, 1388, 1433, 1474, 1478, 1520, 1543, 1626, 1866, 1867, 1868, 1888, 1892, 1895, 1910, 1911, 1912, 1914, 1916, 1919, 1921, 1940, 1947], "bcewithlogitsloss": [0, 1499], "bcewithlogit": 0, "_convolut": [0, 1911], "avg_pool3d": [0, 1867, 1911, 1918, 1949], "grid_sampler_2d": [0, 1867, 1911, 1949], "_grid_sampler_2d_cpu_fallback": [0, 1911], "grid_sampler_3d": [0, 1867, 1911], "polar": [0, 30, 1253, 1867, 1911], "quantil": [0, 1294, 1324, 1867, 1911, 1926], "nanquantil": [0, 1867, 1911], "stft": [0, 909, 918, 1150, 1151, 1190, 1213, 1867, 1911], "view_as_complex": [0, 11, 1867, 1911], "choleski": [0, 2, 30, 932, 933, 1224, 1230, 1266, 1867, 1911], "cholesky_invers": [0, 2, 1867, 1911], "cholesky_solv": [0, 2, 1867, 1911], "invers": [0, 30, 671, 672, 870, 873, 927, 932, 933, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1190, 1234, 1235, 1247, 1251, 1254, 1259, 1260, 1358, 1359, 1360, 1370, 1371, 1374, 1423, 1424, 1425, 1478, 1517, 1518, 1553, 1554, 1555, 1616, 1619, 1643, 1685, 1691, 1842, 1865, 1867, 1869, 1903, 1911, 1926], "lu_solv": [0, 2, 1241, 1867, 1911], "orgqr": [0, 1867, 1911], "ormqr": [0, 1138, 1233, 1867, 1911], "pinvers": [0, 1239, 1867, 1911], "max_pool3d": [0, 1867, 1911, 1918], "max_unpool2d": [0, 1521, 1551, 1867, 1911], "max_unpool3d": [0, 1522, 1552, 1867, 1911], "adaptive_avg_pool3d": [0, 1867, 1894, 1911, 1918], "reflection_pad1d": [0, 1867, 1911, 1949], "reflection_pad2d": [0, 1867, 1911, 1949], "replication_pad1d": [0, 1867, 1911], "replication_pad2d": [0, 1867, 1911, 1949], "replication_pad3d": [0, 1867, 1911, 1949], "ctc_loss": [0, 1350, 1867, 1911], "fft_fft": [0, 1867, 1911], "fft_ifft": [0, 1867, 1911], "fft_fft2": [0, 1867, 1911], "fft_ifft2": [0, 1867, 1911], "fft_fftn": [0, 1867, 1911], "fft_ifftn": [0, 1867, 1911], "fft_rfft": [0, 1867, 1911], "fft_irfft": [0, 1867, 1911], "fft_rfft2": [0, 1867, 1911], "fft_irfft2": [0, 1867, 1911], "fft_rfftn": [0, 1867, 1911], "fft_irfftn": [0, 1867, 1911], "fft_hfft": [0, 1867, 1911], "fft_ihfft": [0, 1867, 1911], "linalg_matrix_norm": [0, 1867, 1911], "linalg_cond": [0, 1867, 1911], "linalg_matrix_rank": [0, 1867, 1911], "linalg_solv": [0, 1867, 1911], "linalg_choleski": [0, 1867, 1911], "linalg_svdv": [0, 1867, 1911], "linalg_eigv": [0, 1867, 1911], "linalg_eigvalsh": [0, 1867, 1911], "linalg_inv": [0, 1867, 1911], "linalg_householder_product": [0, 1867, 1911], "linalg_tensorinv": [0, 1867, 1911], "linalg_tensorsolv": [0, 1867, 1911], "fake_quantize_per_tensor_affin": [0, 1867, 1911], "eig": [0, 1230, 1231, 1257, 1903], "geqrf": [0, 1233, 1697, 1867, 1911], "lstsq": [0, 1138, 1225, 1251], "_lu_with_info": [0, 1911], "qr": [0, 2, 1138, 1229, 1230, 1233, 1239, 1257, 1614, 1697, 1867, 1911], "solv": [0, 7, 11, 1138, 1146, 1225, 1234, 1236, 1237, 1240, 1241, 1243, 1247, 1255, 1256, 1260, 1266, 1284, 1834, 1889, 1897, 1903, 1906, 1936, 1944], "svd": [0, 2, 11, 1229, 1230, 1239, 1251, 1258, 1274, 1619, 1699, 1812, 1867, 1903, 1911, 1925, 1949], "symeig": 0, "triangular_solv": [0, 1867, 1911], "fractional_max_pool2d": [0, 1867, 1911], "fractional_max_pool3d": [0, 1867, 1911], "adaptive_max_pool3d": [0, 1867, 1911], "multilabel_margin_loss_forward": [0, 1911], "linalg_qr": [0, 1867, 1911], "linalg_cholesky_ex": [0, 1867, 1911], "linalg_svd": [0, 1867, 1911], "linalg_eig": [0, 1867, 1911], "linalg_eigh": [0, 1867, 1911], "linalg_lstsq": [0, 1867, 1911], "linalg_inv_ex": [0, 1867, 1911], "cat": [0, 24, 30, 55, 532, 735, 736, 745, 781, 784, 949, 950, 1295, 1446, 1792, 1804, 1866, 1867, 1882, 1910, 1911, 1913, 1916, 1918, 1925, 1934, 1942, 1949], "stack": [0, 8, 18, 21, 22, 24, 30, 34, 45, 51, 52, 55, 748, 905, 927, 938, 1027, 1028, 1065, 1132, 1134, 1158, 1295, 1350, 1379, 1397, 1398, 1442, 1471, 1473, 1644, 1848, 1857, 1859, 1865, 1867, 1884, 1892, 1893, 1896, 1911, 1913, 1915, 1918, 1925, 1941, 1943, 1944, 1947, 1954, 1956], "index_copi": [0, 1846, 1867, 1911], "implement": [1, 2, 5, 8, 13, 16, 17, 21, 22, 24, 25, 26, 28, 30, 33, 38, 39, 42, 45, 47, 52, 55, 56, 58, 64, 69, 73, 139, 501, 503, 505, 675, 726, 727, 728, 729, 730, 731, 748, 767, 769, 773, 781, 788, 807, 808, 809, 812, 813, 814, 866, 868, 881, 890, 896, 897, 956, 1066, 1109, 1114, 1119, 1126, 1127, 1129, 1130, 1193, 1199, 1201, 1203, 1204, 1207, 1249, 1252, 1265, 1266, 1294, 1335, 1350, 1364, 1379, 1395, 1396, 1427, 1433, 1439, 1443, 1446, 1463, 1472, 1474, 1526, 1564, 1576, 1584, 1607, 1611, 1612, 1614, 1615, 1619, 1630, 1643, 1647, 1648, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1683, 1685, 1691, 1709, 1716, 1729, 1738, 1741, 1778, 1788, 1811, 1812, 1827, 1843, 1846, 1847, 1849, 1868, 1869, 1870, 1873, 1876, 1881, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1912, 1913, 1914, 1916, 1921, 1922, 1925, 1926, 1929, 1931, 1939, 1942, 1944, 1947, 1950, 1955], "arbitrari": [1, 3, 24, 28, 45, 56, 59, 63, 243, 878, 1049, 1257, 1265, 1364, 1370, 1394, 1418, 1478, 1498, 1499, 1517, 1538, 1564, 1640, 1811, 1832, 1869, 1875, 1889, 1895, 1899, 1900, 1912, 1914, 1916, 1925, 1933, 1944, 1950, 1954, 1955], "scalar": [1, 13, 24, 30, 45, 56, 64, 86, 139, 143, 249, 302, 434, 577, 675, 676, 726, 727, 728, 729, 730, 731, 867, 868, 881, 889, 890, 893, 895, 913, 916, 924, 954, 958, 1061, 1066, 1081, 1114, 1120, 1146, 1153, 1170, 1184, 1218, 1219, 1288, 1295, 1324, 1335, 1343, 1344, 1350, 1361, 1363, 1364, 1381, 1387, 1388, 1393, 1394, 1399, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1528, 1570, 1653, 1658, 1659, 1660, 1693, 1706, 1708, 1710, 1728, 1729, 1745, 1794, 1795, 1796, 1797, 1798, 1825, 1843, 1844, 1860, 1862, 1863, 1867, 1868, 1869, 1879, 1884, 1887, 1889, 1894, 1897, 1910, 1921, 1925, 1928, 1930, 1932, 1943, 1944, 1949, 1953], "exist": [1, 7, 8, 9, 11, 14, 21, 24, 25, 26, 30, 32, 34, 39, 41, 42, 47, 51, 55, 56, 71, 72, 243, 487, 780, 842, 866, 889, 890, 891, 892, 893, 894, 895, 896, 959, 960, 961, 962, 963, 964, 965, 1007, 1193, 1197, 1209, 1229, 1234, 1240, 1241, 1266, 1324, 1427, 1428, 1437, 1786, 1804, 1849, 1864, 1866, 1873, 1876, 1881, 1882, 1884, 1885, 1889, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1905, 1910, 1913, 1914, 1915, 1916, 1921, 1923, 1925, 1929, 1931, 1939, 1940, 1943, 1945, 1949, 1952, 1956], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 21, 22, 24, 29, 30, 32, 42, 43, 45, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 108, 668, 940, 942, 959, 960, 961, 962, 963, 964, 965, 1009, 1010, 1023, 1123, 1168, 1193, 1197, 1198, 1204, 1205, 1206, 1209, 1210, 1211, 1224, 1235, 1237, 1265, 1443, 1455, 1607, 1757, 1864, 1865, 1868, 1869, 1875, 1883, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1908, 1910, 1912, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1955, 1956], "declar": [1, 9, 14, 21, 42, 1868, 1869, 1870, 1894, 1910, 1913, 1914], "requires_grad": [1, 5, 30, 47, 53, 324, 433, 434, 435, 436, 437, 475, 476, 484, 853, 868, 885, 887, 888, 896, 897, 899, 901, 902, 909, 918, 1012, 1067, 1068, 1069, 1070, 1079, 1084, 1102, 1119, 1120, 1121, 1124, 1134, 1150, 1151, 1168, 1193, 1213, 1264, 1280, 1343, 1344, 1361, 1363, 1370, 1371, 1381, 1393, 1394, 1418, 1419, 1427, 1433, 1434, 1441, 1474, 1475, 1498, 1499, 1509, 1561, 1607, 1608, 1609, 1610, 1647, 1652, 1658, 1659, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1755, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1788, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1846, 1857, 1862, 1863, 1867, 1871, 1882, 1883, 1884, 1892, 1894, 1895, 1900, 1905, 1910, 1911, 1921, 1922, 1931, 1932, 1933, 1941, 1943, 1944, 1949, 1952], "type": [1, 2, 3, 5, 13, 14, 15, 17, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 45, 47, 52, 54, 55, 56, 58, 61, 62, 64, 65, 66, 69, 70, 74, 76, 77, 139, 180, 185, 197, 315, 318, 322, 330, 433, 434, 435, 436, 437, 469, 547, 592, 668, 673, 674, 675, 676, 677, 678, 722, 723, 726, 727, 728, 737, 739, 740, 741, 742, 744, 752, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 772, 780, 781, 782, 785, 803, 804, 805, 807, 808, 809, 810, 811, 813, 815, 828, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 861, 867, 877, 878, 879, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 924, 925, 926, 927, 928, 930, 939, 940, 941, 946, 961, 962, 963, 964, 976, 978, 985, 986, 987, 989, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1004, 1006, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1029, 1041, 1043, 1044, 1047, 1048, 1061, 1066, 1067, 1068, 1069, 1079, 1080, 1081, 1084, 1102, 1109, 1111, 1112, 1113, 1114, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1130, 1131, 1132, 1134, 1136, 1140, 1141, 1142, 1145, 1150, 1151, 1153, 1154, 1155, 1169, 1172, 1174, 1175, 1178, 1181, 1189, 1190, 1191, 1193, 1194, 1196, 1199, 1200, 1203, 1205, 1207, 1209, 1210, 1212, 1213, 1216, 1225, 1229, 1246, 1250, 1257, 1263, 1264, 1265, 1266, 1280, 1283, 1286, 1293, 1295, 1302, 1303, 1306, 1316, 1322, 1325, 1335, 1339, 1355, 1356, 1357, 1364, 1371, 1417, 1427, 1428, 1429, 1433, 1437, 1438, 1455, 1460, 1461, 1462, 1470, 1471, 1472, 1473, 1474, 1486, 1487, 1491, 1492, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1571, 1572, 1574, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1589, 1591, 1592, 1593, 1594, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1651, 1653, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1699, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1731, 1735, 1738, 1745, 1746, 1749, 1750, 1751, 1753, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1787, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1807, 1808, 1810, 1811, 1812, 1825, 1834, 1836, 1838, 1843, 1844, 1846, 1847, 1848, 1851, 1857, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1877, 1878, 1879, 1882, 1884, 1887, 1888, 1889, 1891, 1892, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1911, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1944, 1947, 1949, 1953, 1955], "doubl": [1, 3, 32, 469, 475, 605, 737, 739, 740, 741, 742, 744, 754, 755, 769, 885, 887, 892, 896, 897, 925, 932, 933, 948, 966, 1012, 1081, 1109, 1146, 1193, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1274, 1275, 1276, 1277, 1278, 1284, 1371, 1427, 1486, 1489, 1518, 1598, 1660, 1697, 1703, 1793, 1794, 1795, 1797, 1798, 1811, 1825, 1834, 1860, 1869, 1882, 1892, 1894, 1895, 1903, 1910, 1913, 1927, 1928, 1931], "bfloat16": [1, 22, 47, 1175, 1193, 1245, 1262, 1427, 1660, 1666, 1667, 1753, 1882, 1892, 1925, 1927, 1928, 1931, 1932, 1957], "cfloat": [1, 11, 24, 300, 471, 605, 932, 933, 966, 1163, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1284, 1697, 1727, 1811, 1834, 1856, 1928, 1931], "cdoubl": [1, 11, 932, 933, 966, 1193, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1284, 1427, 1697, 1811, 1834, 1928, 1931], "beta": [1, 2, 11, 48, 54, 88, 89, 94, 95, 96, 97, 98, 99, 140, 141, 310, 505, 542, 674, 677, 678, 679, 908, 967, 1001, 1002, 1009, 1010, 1012, 1150, 1213, 1288, 1298, 1345, 1346, 1347, 1382, 1388, 1390, 1391, 1392, 1399, 1415, 1458, 1463, 1466, 1543, 1544, 1576, 1580, 1584, 1666, 1667, 1668, 1670, 1676, 1680, 1713, 1771, 1773, 1784, 1789, 1803, 1865, 1867, 1877, 1892, 1907, 1908, 1909, 1910, 1916, 1921, 1925, 1928, 1933, 1949], "even": [1, 8, 21, 22, 24, 29, 32, 47, 54, 55, 76, 532, 568, 803, 804, 805, 881, 958, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1097, 1098, 1099, 1102, 1133, 1178, 1206, 1223, 1225, 1229, 1230, 1231, 1232, 1246, 1250, 1252, 1253, 1257, 1258, 1263, 1288, 1294, 1364, 1466, 1501, 1502, 1503, 1564, 1607, 1614, 1652, 1654, 1691, 1738, 1749, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1811, 1855, 1866, 1869, 1870, 1879, 1884, 1888, 1889, 1892, 1894, 1896, 1898, 1900, 1902, 1903, 1904, 1905, 1912, 1913, 1914, 1923, 1928, 1939, 1942, 1943, 1944, 1946, 1947, 1956], "though": [1, 24, 55, 56, 59, 139, 782, 878, 881, 891, 1082, 1083, 1085, 1191, 1194, 1288, 1654, 1866, 1870, 1883, 1884, 1889, 1892, 1894, 1895, 1902, 1903, 1912, 1916, 1943, 1956], "signatur": [1, 13, 21, 34, 45, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 387, 475, 476, 544, 901, 902, 968, 1193, 1427, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1619, 1640, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1807, 1892, 1894, 1895, 1910, 1913, 1914, 1921, 1925, 1941, 1946, 1947, 1955], "veri": [1, 4, 7, 8, 18, 21, 22, 24, 51, 53, 55, 942, 956, 1124, 1132, 1134, 1256, 1390, 1391, 1392, 1607, 1608, 1614, 1669, 1691, 1697, 1774, 1778, 1834, 1857, 1868, 1881, 1889, 1894, 1896, 1897, 1898, 1900, 1902, 1903, 1906, 1912, 1913, 1920, 1921, 1922, 1925, 1943, 1944, 1946, 1947, 1953, 1954], "unlik": [1, 3, 7, 30, 47, 53, 476, 481, 1063, 1102, 1105, 1109, 1168, 1229, 1230, 1249, 1252, 1257, 1261, 1291, 1294, 1296, 1399, 1609, 1610, 1728, 1750, 1854, 1868, 1869, 1881, 1884, 1892, 1902, 1904, 1928, 1933, 1942, 1944], "coverag": [1, 7, 45, 48, 55, 1126, 1127, 1865, 1866, 1871, 1883, 1916, 1925, 1955], "plan": [1, 2, 7, 9, 24, 26, 29, 882, 1607, 1709, 1884, 1889, 1894, 1913, 1925, 1953, 1954], "consid": [1, 5, 8, 22, 24, 32, 41, 45, 47, 52, 54, 55, 682, 767, 773, 782, 889, 891, 892, 896, 958, 1053, 1054, 1055, 1056, 1057, 1087, 1122, 1182, 1186, 1189, 1193, 1234, 1236, 1237, 1238, 1239, 1247, 1248, 1251, 1256, 1259, 1363, 1374, 1427, 1430, 1478, 1491, 1526, 1537, 1595, 1608, 1614, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1649, 1679, 1747, 1767, 1802, 1835, 1836, 1837, 1838, 1864, 1866, 1869, 1873, 1876, 1888, 1889, 1890, 1894, 1896, 1897, 1900, 1903, 1908, 1913, 1915, 1917, 1922, 1923, 1925, 1928, 1931, 1932, 1942, 1944, 1953, 1955, 1956], "ad": [1, 3, 9, 14, 21, 22, 24, 28, 30, 38, 47, 50, 52, 53, 54, 55, 210, 211, 302, 308, 459, 503, 668, 674, 675, 676, 677, 678, 679, 723, 882, 883, 884, 889, 890, 891, 892, 896, 908, 1066, 1070, 1126, 1127, 1129, 1168, 1193, 1207, 1271, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1434, 1436, 1441, 1455, 1466, 1470, 1475, 1478, 1504, 1505, 1506, 1523, 1550, 1551, 1552, 1576, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1619, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1713, 1714, 1715, 1755, 1784, 1789, 1803, 1864, 1866, 1868, 1873, 1879, 1883, 1888, 1895, 1897, 1899, 1900, 1913, 1916, 1919, 1925, 1930, 1933, 1940, 1942, 1943, 1944, 1949, 1950, 1953, 1956], "tutori": [1, 3, 9, 15, 24, 25, 28, 55, 882, 883, 884, 887, 1849, 1865, 1866, 1873, 1876, 1885, 1894, 1899, 1900, 1902, 1905, 1910, 1916, 1943, 1944, 1946], "how": [1, 3, 5, 7, 8, 9, 13, 15, 17, 21, 24, 26, 29, 33, 41, 42, 43, 45, 47, 48, 49, 51, 52, 55, 56, 63, 64, 69, 222, 475, 476, 773, 780, 781, 784, 829, 847, 849, 850, 882, 883, 884, 887, 901, 902, 1049, 1070, 1123, 1132, 1146, 1168, 1193, 1204, 1265, 1374, 1427, 1478, 1479, 1564, 1595, 1607, 1640, 1652, 1729, 1753, 1755, 1768, 1779, 1865, 1866, 1868, 1869, 1873, 1876, 1878, 1881, 1882, 1883, 1885, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1900, 1902, 1904, 1905, 1910, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1930, 1942, 1946, 1947, 1948, 1956], "major": [1, 6, 7, 8, 9, 994, 1811, 1865, 1869, 1912, 1942, 1944, 1946, 1948], "build": [1, 8, 9, 14, 15, 24, 30, 55, 1193, 1203, 1427, 1473, 1491, 1526, 1865, 1866, 1876, 1885, 1889, 1910, 1914, 1916, 1922, 1930, 1931, 1936, 1939, 1954], "basic": [1, 3, 7, 9, 13, 26, 41, 55, 56, 57, 1126, 1127, 1128, 1200, 1266, 1607, 1685, 1865, 1870, 1885, 1890, 1892, 1893, 1897, 1913, 1922, 1929, 1930, 1941, 1944, 1946, 1947], "jacobian": [1, 30, 48, 49, 51, 52, 881, 883, 889, 892, 894, 895, 896, 897, 1127, 1128, 1129, 1133, 1134, 1857, 1889, 1894, 1897], "hessian": [1, 48, 51, 52, 890, 893, 1127, 1128, 1887, 1895], "etc": [1, 3, 5, 11, 13, 21, 22, 24, 30, 32, 41, 42, 47, 847, 848, 849, 942, 1190, 1193, 1363, 1427, 1607, 1731, 1864, 1868, 1869, 1876, 1894, 1895, 1896, 1900, 1902, 1908, 1910, 1912, 1913, 1916, 1921, 1925, 1927, 1930, 1933, 1939, 1941, 1947], "user": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 21, 22, 24, 25, 26, 29, 30, 31, 32, 34, 38, 41, 42, 44, 47, 48, 51, 52, 54, 55, 56, 73, 139, 324, 720, 726, 727, 728, 733, 734, 744, 752, 782, 785, 787, 826, 842, 849, 850, 881, 887, 895, 970, 1003, 1117, 1122, 1123, 1193, 1230, 1265, 1427, 1470, 1472, 1473, 1474, 1576, 1601, 1602, 1607, 1616, 1630, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1864, 1865, 1866, 1868, 1869, 1873, 1876, 1881, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1897, 1898, 1899, 1900, 1902, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1921, 1922, 1925, 1929, 1930, 1932, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1952, 1954, 1955], "input": [1, 2, 3, 5, 9, 11, 13, 15, 19, 21, 22, 24, 25, 28, 29, 30, 31, 34, 47, 48, 49, 50, 51, 52, 53, 55, 56, 63, 64, 69, 71, 73, 74, 75, 77, 139, 249, 269, 290, 390, 471, 487, 505, 597, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 708, 716, 717, 722, 723, 726, 727, 728, 729, 730, 731, 733, 734, 744, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 802, 805, 807, 825, 826, 827, 828, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 885, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 905, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 928, 929, 931, 932, 933, 934, 935, 936, 937, 939, 940, 948, 951, 952, 953, 954, 955, 956, 957, 958, 966, 982, 1009, 1010, 1012, 1045, 1046, 1047, 1048, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1175, 1178, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1196, 1197, 1200, 1201, 1205, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1284, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1644, 1649, 1652, 1653, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1684, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1721, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1743, 1744, 1747, 1748, 1750, 1753, 1761, 1762, 1763, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1820, 1821, 1822, 1823, 1824, 1826, 1828, 1829, 1830, 1831, 1834, 1835, 1837, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1861, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1876, 1877, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1925, 1926, 1928, 1929, 1932, 1934, 1935, 1939, 1941, 1942, 1943, 1944, 1949, 1952, 1953, 1954, 1955], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 139, 143, 243, 312, 324, 446, 475, 476, 501, 503, 533, 602, 605, 668, 675, 717, 729, 730, 731, 736, 745, 746, 748, 756, 757, 760, 761, 762, 773, 779, 780, 781, 782, 785, 787, 802, 808, 811, 812, 814, 825, 829, 842, 846, 847, 849, 850, 851, 867, 868, 877, 878, 879, 881, 882, 883, 884, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 904, 910, 927, 940, 943, 946, 951, 958, 967, 969, 979, 981, 983, 990, 991, 1001, 1009, 1011, 1015, 1017, 1019, 1023, 1024, 1049, 1066, 1067, 1070, 1071, 1084, 1086, 1087, 1088, 1089, 1102, 1105, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1132, 1133, 1134, 1137, 1138, 1146, 1149, 1154, 1155, 1168, 1184, 1190, 1191, 1193, 1194, 1196, 1197, 1199, 1200, 1204, 1205, 1207, 1209, 1210, 1215, 1218, 1225, 1233, 1236, 1240, 1241, 1246, 1249, 1252, 1253, 1257, 1263, 1265, 1282, 1283, 1285, 1295, 1304, 1305, 1324, 1326, 1327, 1328, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1375, 1376, 1379, 1384, 1385, 1386, 1388, 1394, 1396, 1397, 1400, 1401, 1402, 1413, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1432, 1433, 1434, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1455, 1458, 1463, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1479, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1521, 1522, 1537, 1550, 1551, 1552, 1570, 1576, 1595, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1619, 1640, 1641, 1647, 1652, 1654, 1658, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1688, 1689, 1691, 1695, 1697, 1706, 1710, 1718, 1722, 1732, 1738, 1741, 1753, 1755, 1756, 1758, 1783, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1805, 1806, 1807, 1811, 1825, 1829, 1832, 1834, 1842, 1843, 1845, 1847, 1849, 1852, 1853, 1857, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957], "lambda": [1, 13, 21, 26, 30, 50, 53, 54, 55, 56, 59, 63, 64, 67, 247, 475, 476, 901, 902, 928, 1124, 1129, 1133, 1134, 1229, 1230, 1231, 1232, 1265, 1383, 1464, 1476, 1566, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1679, 1685, 1687, 1690, 1785, 1857, 1870, 1889, 1894, 1895, 1912, 1913, 1921, 1932, 1944, 1955], "captur": [1, 13, 15, 45, 55, 56, 59, 63, 64, 668, 967, 969, 1001, 1007, 1012, 1196, 1305, 1663, 1666, 1667, 1670, 1866, 1870, 1875, 1894, 1895, 1898, 1907, 1908, 1910, 1913, 1916, 1935, 1936, 1939, 1941, 1942, 1944, 1947, 1952, 1954], "f": [1, 10, 22, 24, 30, 32, 33, 38, 39, 45, 48, 49, 52, 53, 54, 55, 56, 57, 162, 247, 275, 324, 366, 883, 884, 958, 1084, 1086, 1093, 1102, 1123, 1124, 1126, 1127, 1128, 1129, 1133, 1134, 1146, 1193, 1201, 1204, 1205, 1265, 1393, 1395, 1396, 1398, 1427, 1476, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1528, 1561, 1563, 1564, 1576, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1741, 1857, 1866, 1868, 1869, 1882, 1883, 1889, 1892, 1894, 1896, 1897, 1898, 1900, 1906, 1908, 1909, 1910, 1913, 1914, 1921, 1925, 1930, 1932, 1940, 1942, 1944, 1947, 1953, 1955], "three": [1, 2, 6, 9, 24, 28, 47, 49, 52, 55, 76, 876, 1064, 1066, 1146, 1155, 1237, 1240, 1241, 1242, 1257, 1285, 1342, 1357, 1360, 1399, 1422, 1576, 1614, 1654, 1685, 1753, 1869, 1889, 1892, 1893, 1894, 1910, 1913, 1914, 1916, 1921, 1923, 1925, 1930, 1951], "anoth": [1, 5, 7, 13, 21, 22, 24, 26, 30, 31, 32, 43, 45, 47, 55, 474, 947, 967, 969, 970, 972, 1117, 1203, 1229, 1230, 1233, 1257, 1370, 1371, 1428, 1437, 1598, 1615, 1749, 1866, 1868, 1869, 1875, 1888, 1889, 1891, 1892, 1894, 1900, 1902, 1906, 1913, 1914, 1922, 1923, 1925, 1931, 1933, 1939, 1940, 1944, 1946, 1947, 1950, 1953, 1956], "constant": [1, 13, 21, 45, 55, 56, 57, 61, 62, 64, 66, 732, 763, 809, 810, 943, 1049, 1106, 1107, 1108, 1190, 1193, 1197, 1209, 1241, 1266, 1352, 1353, 1354, 1371, 1374, 1381, 1436, 1458, 1475, 1478, 1523, 1526, 1564, 1615, 1661, 1677, 1682, 1685, 1832, 1867, 1869, 1888, 1894, 1900, 1904, 1910, 1912, 1925, 1943, 1946, 1947], "boolean": [1, 13, 14, 30, 41, 55, 56, 63, 64, 389, 391, 877, 912, 914, 915, 917, 945, 969, 970, 972, 1071, 1137, 1149, 1168, 1182, 1183, 1184, 1185, 1186, 1189, 1218, 1266, 1282, 1287, 1328, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1576, 1616, 1619, 1709, 1805, 1806, 1829, 1852, 1853, 1868, 1870, 1894, 1927, 1928, 1930, 1931, 1932, 1933, 1944], "flag": [1, 2, 14, 24, 25, 31, 42, 44, 47, 50, 52, 55, 723, 861, 889, 891, 909, 918, 931, 932, 933, 940, 997, 1117, 1122, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1150, 1151, 1168, 1174, 1181, 1265, 1285, 1433, 1537, 1538, 1607, 1616, 1619, 1649, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1753, 1755, 1760, 1786, 1796, 1834, 1846, 1857, 1865, 1866, 1869, 1881, 1889, 1892, 1894, 1903, 1904, 1910, 1913, 1916, 1930, 1931, 1944, 1945, 1953, 1954], "inform": [1, 2, 3, 4, 7, 8, 9, 17, 18, 20, 21, 22, 24, 25, 28, 32, 33, 34, 37, 41, 42, 45, 47, 49, 55, 68, 180, 197, 244, 302, 310, 475, 476, 486, 503, 505, 606, 668, 723, 891, 896, 897, 901, 902, 911, 1070, 1101, 1103, 1123, 1168, 1190, 1193, 1210, 1223, 1230, 1239, 1355, 1356, 1357, 1358, 1359, 1360, 1388, 1397, 1423, 1424, 1425, 1427, 1433, 1442, 1454, 1470, 1472, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1537, 1576, 1595, 1596, 1597, 1607, 1640, 1652, 1661, 1676, 1708, 1735, 1753, 1755, 1760, 1786, 1846, 1866, 1869, 1875, 1876, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1899, 1900, 1903, 1908, 1910, 1913, 1915, 1916, 1928, 1930, 1931, 1932, 1935, 1938, 1942, 1943, 1944, 1947, 1948, 1952, 1954, 1956, 1957], "well": [1, 3, 5, 7, 9, 14, 22, 24, 29, 41, 45, 47, 52, 53, 55, 605, 779, 810, 813, 849, 1009, 1127, 1128, 1193, 1197, 1204, 1209, 1229, 1230, 1231, 1233, 1239, 1252, 1257, 1303, 1345, 1346, 1347, 1363, 1397, 1427, 1466, 1547, 1548, 1607, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1709, 1843, 1866, 1869, 1876, 1882, 1884, 1888, 1889, 1892, 1894, 1895, 1897, 1900, 1902, 1904, 1910, 1913, 1916, 1919, 1921, 1923, 1925, 1929, 1930, 1933, 1940, 1943, 1944, 1945, 1950], "relat": [1, 6, 7, 9, 21, 24, 32, 45, 46, 47, 52, 56, 57, 62, 64, 68, 668, 1146, 1233, 1374, 1458, 1478, 1607, 1699, 1847, 1884, 1889, 1905, 1913, 1921, 1925, 1926, 1932, 1944, 1955], "mechan": [1, 8, 24, 35, 39, 41, 45, 55, 867, 1070, 1168, 1193, 1427, 1576, 1652, 1755, 1825, 1865, 1881, 1884, 1893, 1894, 1899, 1900, 1919, 1921, 1922, 1939], "confus": [1, 8, 56, 1193, 1427, 1889, 1892, 1913, 1925, 1945, 1947], "receiv": [1, 7, 9, 21, 24, 28, 30, 52, 54, 1023, 1193, 1427, 1603, 1604, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1694, 1869, 1879, 1881, 1888, 1889, 1902, 1914, 1921, 1922, 1923, 1925, 1942, 1947, 1954, 1956], "memori": [1, 2, 3, 5, 11, 22, 26, 28, 30, 31, 47, 51, 55, 139, 144, 159, 161, 164, 167, 168, 169, 184, 195, 198, 222, 229, 243, 256, 286, 314, 320, 326, 328, 329, 382, 433, 434, 435, 436, 437, 446, 451, 474, 487, 488, 512, 513, 568, 591, 605, 722, 751, 866, 868, 881, 887, 896, 897, 922, 937, 940, 967, 968, 971, 974, 975, 977, 991, 992, 1001, 1002, 1005, 1009, 1011, 1012, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1030, 1031, 1032, 1036, 1066, 1067, 1068, 1069, 1117, 1118, 1119, 1121, 1122, 1123, 1128, 1130, 1134, 1193, 1211, 1239, 1265, 1302, 1303, 1304, 1312, 1371, 1397, 1398, 1427, 1470, 1471, 1472, 1474, 1576, 1594, 1607, 1614, 1640, 1652, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1718, 1719, 1721, 1722, 1723, 1724, 1825, 1846, 1857, 1863, 1865, 1866, 1877, 1881, 1883, 1884, 1889, 1894, 1902, 1908, 1910, 1914, 1915, 1916, 1921, 1925, 1927, 1928, 1929, 1931, 1932, 1939, 1943, 1944, 1946, 1951, 1953], "overlap": [1, 21, 22, 24, 28, 47, 55, 866, 896, 897, 1069, 1123, 1190, 1374, 1478, 1607, 1807, 1846, 1892, 1893, 1928, 1942, 1944, 1953], "dens": [1, 28, 207, 533, 534, 571, 572, 573, 574, 575, 576, 909, 918, 1150, 1151, 1213, 1266, 1680, 1781, 1784, 1788, 1789, 1792, 1793, 1794, 1795, 1797, 1798, 1803, 1812, 1846, 1884, 1904, 1925, 1928, 1942], "stride": [1, 11, 45, 56, 61, 64, 65, 66, 127, 210, 243, 328, 433, 434, 435, 436, 437, 487, 508, 532, 569, 571, 572, 573, 575, 576, 605, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 756, 757, 760, 761, 762, 770, 771, 853, 866, 909, 918, 1067, 1069, 1079, 1084, 1102, 1120, 1121, 1150, 1151, 1157, 1193, 1203, 1207, 1213, 1264, 1280, 1298, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1478, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1520, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1607, 1658, 1714, 1715, 1718, 1720, 1721, 1722, 1724, 1725, 1732, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1785, 1788, 1831, 1836, 1838, 1855, 1862, 1867, 1870, 1882, 1910, 1911, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1941, 1942, 1943, 1944, 1949, 1954], "rowmajor": [1, 1607], "contigu": [1, 11, 22, 26, 320, 487, 508, 605, 1373, 1430, 1566, 1607, 1726, 1732, 1811, 1867, 1883, 1884, 1911, 1918, 1925, 1927, 1929], "create_graph": [1, 139, 476, 881, 889, 890, 891, 892, 893, 894, 895, 1867, 1888], "preserv": [1, 13, 21, 30, 45, 47, 55, 487, 767, 773, 842, 864, 867, 1107, 1108, 1123, 1193, 1197, 1204, 1427, 1428, 1437, 1479, 1537, 1595, 1662, 1741, 1745, 1783, 1825, 1866, 1877, 1882, 1884, 1887, 1892, 1895, 1904, 1907, 1908, 1910, 1921, 1925, 1928, 1939, 1943], "preexist": [1, 1942, 1943], "behavior": [1, 2, 7, 14, 20, 22, 24, 25, 26, 28, 30, 31, 34, 39, 42, 45, 47, 51, 52, 54, 55, 75, 243, 308, 459, 487, 501, 532, 605, 675, 773, 781, 814, 866, 880, 916, 922, 924, 926, 939, 966, 1061, 1066, 1067, 1068, 1069, 1111, 1118, 1119, 1123, 1193, 1204, 1207, 1209, 1239, 1246, 1250, 1263, 1264, 1265, 1280, 1288, 1295, 1364, 1367, 1388, 1397, 1427, 1442, 1466, 1479, 1491, 1526, 1594, 1595, 1598, 1599, 1607, 1608, 1651, 1653, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1703, 1709, 1725, 1732, 1774, 1811, 1832, 1846, 1864, 1866, 1870, 1871, 1873, 1875, 1882, 1884, 1890, 1892, 1894, 1895, 1903, 1904, 1905, 1910, 1912, 1913, 1914, 1917, 1918, 1921, 1926, 1929, 1942, 1943, 1945, 1947], "let": [1, 7, 8, 21, 22, 29, 30, 42, 52, 55, 474, 484, 932, 933, 935, 1146, 1193, 1213, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1427, 1607, 1614, 1825, 1873, 1882, 1883, 1889, 1892, 1893, 1894, 1895, 1900, 1902, 1903, 1904, 1905, 1906, 1913, 1922, 1923, 1925, 1930, 1939, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954], "accord": [1, 9, 32, 45, 785, 849, 850, 868, 910, 922, 1064, 1156, 1254, 1287, 1317, 1335, 1371, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1685, 1691, 1710, 1774, 1799, 1826, 1858, 1869, 1879, 1883, 1884, 1887, 1900, 1904, 1906, 1913, 1923, 1932], "retain": [1, 9, 24, 681, 683, 684, 687, 862, 863, 868, 1197, 1215, 1246, 1250, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1654, 1707, 1710, 1741, 1805, 1806, 1810, 1835, 1836, 1837, 1838, 1852, 1853, 1881, 1902, 1925], "over": [1, 9, 13, 21, 22, 24, 25, 29, 30, 32, 39, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 63, 64, 67, 469, 668, 685, 726, 727, 728, 729, 730, 731, 754, 755, 760, 761, 762, 770, 771, 880, 905, 927, 978, 1023, 1025, 1029, 1043, 1044, 1045, 1046, 1047, 1048, 1066, 1122, 1126, 1128, 1132, 1134, 1146, 1154, 1193, 1209, 1226, 1246, 1250, 1262, 1263, 1265, 1273, 1293, 1295, 1325, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1371, 1374, 1375, 1376, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1415, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1434, 1441, 1455, 1458, 1459, 1461, 1466, 1475, 1478, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1521, 1522, 1538, 1544, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1569, 1576, 1602, 1611, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1714, 1715, 1730, 1790, 1792, 1805, 1806, 1807, 1810, 1827, 1842, 1852, 1853, 1857, 1869, 1879, 1881, 1882, 1883, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1908, 1912, 1916, 1921, 1922, 1925, 1933, 1939, 1941, 1942, 1943, 1944, 1947, 1954, 1956], "4": [1, 3, 11, 13, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 39, 41, 45, 52, 55, 56, 57, 58, 61, 62, 63, 64, 66, 180, 197, 231, 243, 278, 300, 302, 304, 306, 310, 390, 391, 433, 434, 459, 471, 475, 481, 484, 487, 501, 505, 511, 525, 532, 544, 546, 548, 572, 573, 595, 605, 671, 672, 673, 674, 677, 679, 680, 681, 683, 684, 685, 687, 727, 729, 730, 731, 734, 736, 745, 748, 761, 762, 812, 853, 862, 863, 864, 868, 869, 870, 871, 872, 873, 875, 876, 887, 889, 892, 893, 894, 908, 911, 914, 918, 919, 920, 924, 926, 929, 930, 933, 934, 935, 938, 948, 953, 954, 955, 956, 966, 1046, 1049, 1056, 1058, 1060, 1061, 1064, 1065, 1066, 1069, 1071, 1081, 1082, 1084, 1086, 1094, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1117, 1119, 1122, 1124, 1132, 1133, 1134, 1135, 1136, 1137, 1146, 1149, 1153, 1154, 1155, 1156, 1158, 1159, 1163, 1167, 1170, 1182, 1184, 1190, 1199, 1200, 1205, 1207, 1214, 1215, 1216, 1217, 1218, 1219, 1223, 1225, 1226, 1232, 1234, 1236, 1237, 1238, 1241, 1243, 1246, 1248, 1250, 1252, 1254, 1256, 1259, 1260, 1261, 1263, 1264, 1267, 1269, 1270, 1275, 1277, 1278, 1280, 1282, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1315, 1316, 1317, 1325, 1326, 1327, 1328, 1335, 1340, 1351, 1352, 1353, 1356, 1357, 1359, 1360, 1368, 1370, 1371, 1372, 1374, 1378, 1379, 1397, 1398, 1423, 1424, 1430, 1432, 1434, 1439, 1440, 1442, 1448, 1449, 1450, 1451, 1452, 1466, 1478, 1479, 1480, 1481, 1482, 1483, 1491, 1493, 1502, 1505, 1517, 1518, 1526, 1537, 1561, 1564, 1567, 1568, 1594, 1595, 1596, 1597, 1598, 1607, 1614, 1619, 1630, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1657, 1659, 1663, 1676, 1681, 1682, 1688, 1692, 1693, 1694, 1698, 1702, 1703, 1706, 1707, 1709, 1710, 1712, 1716, 1718, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1736, 1737, 1738, 1740, 1741, 1745, 1758, 1765, 1767, 1768, 1773, 1774, 1776, 1778, 1783, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1807, 1810, 1813, 1814, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1844, 1845, 1846, 1851, 1854, 1855, 1856, 1857, 1858, 1859, 1863, 1866, 1867, 1868, 1869, 1870, 1876, 1881, 1883, 1884, 1887, 1889, 1890, 1892, 1893, 1894, 1900, 1902, 1905, 1906, 1908, 1910, 1913, 1914, 1916, 1918, 1921, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1939, 1941, 1942, 1944, 1947, 1949, 1952, 1954], "fact": [1, 3, 8, 47, 483, 909, 918, 952, 1146, 1150, 1151, 1229, 1230, 1257, 1866, 1894, 1897, 1910, 1922, 1925, 1939, 1943, 1948], "reset": [1, 24, 748, 808, 813, 881, 967, 1015, 1017, 1030, 1031, 1032, 1193, 1379, 1427, 1443, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1699, 1716, 1812, 1879, 1910, 1920], "phase": [1, 22, 781, 1229, 1230, 1691, 1811, 1867, 1906, 1944, 1954], "recreat": [1, 1889, 1953], "valid": [1, 24, 30, 39, 41, 45, 55, 73, 77, 735, 736, 745, 779, 931, 943, 946, 1009, 1066, 1191, 1193, 1194, 1215, 1229, 1230, 1239, 1240, 1241, 1252, 1257, 1288, 1355, 1356, 1357, 1501, 1502, 1503, 1526, 1598, 1625, 1630, 1634, 1660, 1661, 1681, 1682, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1709, 1866, 1867, 1868, 1869, 1883, 1884, 1889, 1892, 1894, 1898, 1910, 1912, 1915, 1921, 1922, 1941, 1942, 1947, 1954], "altern": [1, 9, 21, 24, 55, 668, 802, 1126, 1127, 1155, 1201, 1265, 1455, 1472, 1474, 1545, 1607, 1659, 1680, 1752, 1846, 1863, 1864, 1870, 1889, 1898, 1900, 1903, 1904, 1906, 1944, 1952], "never": [1, 5, 7, 22, 24, 41, 42, 45, 210, 211, 784, 867, 928, 940, 1190, 1240, 1241, 1252, 1265, 1607, 1640, 1889, 1892, 1894, 1913, 1914, 1921, 1932, 1939, 1942], "long": [1, 7, 9, 21, 41, 45, 54, 722, 737, 739, 740, 741, 742, 744, 751, 769, 1123, 1169, 1294, 1299, 1323, 1350, 1363, 1371, 1397, 1398, 1434, 1510, 1660, 1708, 1822, 1826, 1836, 1838, 1843, 1865, 1869, 1876, 1881, 1882, 1883, 1889, 1890, 1892, 1894, 1896, 1902, 1904, 1910, 1913, 1915, 1920, 1927, 1928, 1930, 1931, 1944, 1949, 1952, 1954], "hard": [1, 7, 8, 24, 29, 42, 942, 1066, 1266, 1383, 1528, 1529, 1866, 1867, 1868, 1889, 1910, 1913, 1944, 1945], "matter": [1, 4, 24, 47, 885, 1054, 1066, 1201, 1204, 1209, 1607, 1884, 1889, 1913], "discourag": [1, 1035, 1039, 1889, 1921], "aggress": [1, 47, 1190, 1889, 1921, 1944], "buffer": [1, 4, 21, 22, 24, 45, 47, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 868, 980, 1012, 1119, 1122, 1132, 1193, 1201, 1204, 1215, 1265, 1345, 1346, 1347, 1364, 1400, 1401, 1402, 1427, 1466, 1600, 1607, 1609, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1647, 1649, 1677, 1679, 1741, 1783, 1829, 1868, 1885, 1889, 1893, 1894, 1900, 1905, 1908, 1910, 1914, 1944], "free": [1, 7, 24, 26, 30, 32, 41, 42, 47, 55, 56, 63, 64, 1018, 1036, 1196, 1209, 1266, 1877, 1887, 1889, 1892, 1894, 1896, 1902, 1906, 1910, 1925, 1942, 1944, 1956], "reus": [1, 24, 29, 55, 474, 1889, 1892, 1921, 1939, 1942, 1944, 1949, 1954, 1956], "effici": [1, 2, 3, 8, 11, 21, 30, 47, 48, 53, 139, 748, 881, 886, 895, 930, 1130, 1138, 1211, 1249, 1266, 1285, 1335, 1366, 1367, 1368, 1371, 1372, 1379, 1433, 1439, 1440, 1474, 1576, 1877, 1884, 1889, 1893, 1894, 1897, 1901, 1902, 1903, 1912, 1914, 1916, 1921, 1922, 1925, 1928, 1929, 1933], "occas": [1, 7, 1889], "actual": [1, 8, 26, 32, 34, 45, 47, 52, 55, 778, 951, 1084, 1102, 1205, 1209, 1358, 1359, 1360, 1526, 1607, 1631, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1864, 1868, 1869, 1882, 1889, 1892, 1893, 1894, 1897, 1902, 1906, 1908, 1916, 1921, 1927, 1932, 1942, 1943, 1944, 1946, 1947], "signific": [1, 3, 26, 1693, 1753, 1889, 1892, 1925, 1946, 1950], "amount": [1, 2, 3, 4, 7, 21, 24, 26, 32, 41, 55, 897, 991, 1017, 1019, 1023, 1190, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1374, 1415, 1430, 1478, 1509, 1624, 1625, 1627, 1628, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1883, 1889, 1891, 1892, 1895, 1896, 1898, 1908, 1921, 1925, 1942, 1948, 1952, 1954, 1956], "heavi": [1, 24, 1889, 1906, 1943], "pressur": [1, 47, 1889], "might": [1, 3, 4, 9, 14, 15, 18, 24, 26, 28, 29, 30, 41, 45, 52, 54, 55, 74, 76, 139, 474, 532, 881, 966, 1209, 1210, 1526, 1607, 1608, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1864, 1866, 1879, 1884, 1889, 1891, 1892, 1893, 1894, 1897, 1899, 1904, 1907, 1910, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1929, 1931, 1932, 1936, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1953, 1954], "keep": [1, 3, 5, 7, 21, 22, 26, 28, 32, 41, 45, 47, 56, 970, 1265, 1345, 1346, 1347, 1351, 1370, 1390, 1391, 1392, 1436, 1466, 1526, 1537, 1607, 1626, 1662, 1730, 1753, 1864, 1865, 1866, 1881, 1883, 1884, 1889, 1892, 1893, 1895, 1896, 1897, 1902, 1908, 1912, 1916, 1921, 1922, 1923, 1941, 1942, 1943, 1944, 1947, 1952, 1956], "track": [1, 32, 45, 56, 68, 69, 70, 75, 324, 975, 1015, 1017, 1030, 1031, 1032, 1122, 1123, 1168, 1295, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1607, 1626, 1879, 1881, 1883, 1884, 1889, 1892, 1894, 1895, 1896, 1899, 1900, 1908, 1912, 1914, 1915, 1922, 1923, 1925, 1942, 1943, 1944, 1947, 1951], "save": [1, 5, 7, 11, 15, 22, 24, 26, 28, 45, 47, 484, 825, 877, 878, 887, 1130, 1192, 1193, 1198, 1201, 1209, 1211, 1265, 1427, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1687, 1690, 1694, 1866, 1867, 1878, 1883, 1894, 1895, 1900, 1902, 1904, 1908, 1911, 1912, 1913, 1915, 1921, 1925, 1930, 1934, 1939, 1944, 1946, 1956], "afterward": [1, 45, 1427, 1598, 1607, 1925], "start": [1, 3, 4, 8, 9, 21, 22, 24, 26, 32, 38, 40, 41, 42, 43, 47, 51, 54, 55, 222, 391, 421, 422, 484, 526, 686, 853, 1015, 1017, 1028, 1030, 1031, 1088, 1089, 1105, 1119, 1191, 1206, 1219, 1264, 1280, 1326, 1327, 1335, 1340, 1341, 1342, 1371, 1373, 1420, 1421, 1422, 1428, 1430, 1518, 1564, 1607, 1621, 1625, 1627, 1640, 1663, 1685, 1691, 1725, 1756, 1779, 1793, 1794, 1795, 1797, 1798, 1864, 1865, 1867, 1868, 1873, 1876, 1881, 1883, 1889, 1890, 1892, 1893, 1896, 1900, 1901, 1902, 1906, 1910, 1912, 1915, 1916, 1921, 1922, 1923, 1925, 1938, 1942, 1944, 1949, 1951], "sure": [1, 7, 9, 21, 24, 26, 31, 33, 42, 44, 50, 55, 849, 850, 881, 1117, 1197, 1209, 1210, 1266, 1607, 1652, 1687, 1829, 1869, 1882, 1889, 1893, 1896, 1897, 1906, 1910, 1915, 1916, 1921, 1922, 1923, 1925, 1930, 1944, 1946, 1954], "longer": [1, 24, 43, 51, 52, 675, 878, 896, 897, 1190, 1197, 1607, 1651, 1654, 1879, 1889, 1892, 1908, 1921, 1923, 1939, 1954], "find": [1, 7, 14, 24, 41, 52, 55, 71, 1066, 1146, 1215, 1266, 1358, 1359, 1360, 1397, 1661, 1699, 1710, 1745, 1812, 1864, 1877, 1881, 1883, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1902, 1904, 1908, 1910, 1911, 1916, 1921, 1925, 1928, 1930, 1932, 1934, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1955], "quick": [1, 7, 50, 1876, 1900, 1909, 1937, 1952], "guid": [1, 8, 21, 69, 71, 72, 1205, 1651, 1865, 1892, 1895, 1913, 1916, 1947, 1952], "var": [1, 34, 39, 41, 44, 1345, 1346, 1347, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1523, 1713, 1853, 1867, 1869, 1882, 1911, 1942, 1947, 1949, 1954], "thing": [1, 3, 7, 8, 24, 45, 52, 55, 1123, 1203, 1295, 1343, 1528, 1784, 1868, 1889, 1892, 1894, 1895, 1896, 1897, 1902, 1910, 1913, 1916, 1917, 1923, 1939, 1943, 1944, 1947, 1952, 1954], "detach": [1, 5, 211, 436, 446, 937, 1122, 1193, 1350, 1427, 1510, 1528, 1788, 1825, 1866, 1867, 1882, 1884, 1896, 1910, 1911, 1918, 1925, 1929, 1931, 1953], "register_hook": [1, 1882, 1889], "name": [1, 2, 3, 14, 22, 24, 29, 30, 32, 34, 35, 38, 39, 41, 43, 45, 47, 55, 76, 668, 685, 735, 736, 745, 780, 802, 803, 804, 805, 812, 828, 842, 846, 905, 946, 968, 995, 1122, 1132, 1191, 1193, 1194, 1201, 1204, 1209, 1210, 1224, 1229, 1230, 1236, 1237, 1239, 1240, 1241, 1242, 1252, 1253, 1255, 1257, 1258, 1265, 1427, 1477, 1600, 1605, 1606, 1607, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1651, 1660, 1661, 1741, 1751, 1847, 1849, 1851, 1864, 1865, 1866, 1867, 1869, 1870, 1873, 1875, 1878, 1879, 1881, 1887, 1889, 1892, 1893, 1894, 1897, 1899, 1900, 1908, 1910, 1911, 1913, 1914, 1915, 1921, 1922, 1927, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1944, 1947, 1948, 1951, 1953, 1954, 1955, 1956, 1957], "factori": [1, 2, 11, 30, 32, 35, 39, 45, 52, 812, 1066, 1652, 1661, 1749, 1865, 1867, 1883, 1892, 1911, 1928, 1942, 1943], "ones": [1, 21, 24, 28, 30, 45, 47, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 139, 243, 302, 391, 433, 434, 436, 503, 782, 847, 881, 890, 892, 893, 894, 895, 896, 910, 922, 940, 1049, 1057, 1079, 1122, 1129, 1130, 1133, 1168, 1190, 1193, 1205, 1214, 1240, 1256, 1265, 1344, 1361, 1370, 1374, 1381, 1382, 1399, 1427, 1431, 1432, 1434, 1436, 1478, 1517, 1576, 1594, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1644, 1646, 1649, 1659, 1660, 1713, 1730, 1748, 1753, 1779, 1828, 1832, 1849, 1860, 1867, 1869, 1871, 1882, 1883, 1889, 1890, 1892, 1894, 1901, 1903, 1904, 1910, 1911, 1912, 1913, 1916, 1921, 1923, 1926, 1928, 1931, 1948, 1953, 1954], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 15, 21, 24, 25, 26, 28, 29, 30, 32, 34, 39, 41, 42, 43, 45, 47, 52, 55, 74, 75, 76, 779, 784, 788, 790, 808, 809, 810, 812, 813, 849, 850, 887, 940, 958, 1027, 1028, 1064, 1066, 1109, 1146, 1156, 1195, 1207, 1219, 1257, 1268, 1270, 1272, 1280, 1364, 1427, 1430, 1431, 1432, 1436, 1443, 1470, 1472, 1474, 1543, 1576, 1607, 1611, 1612, 1614, 1621, 1625, 1627, 1663, 1664, 1665, 1666, 1667, 1668, 1677, 1678, 1679, 1680, 1706, 1716, 1741, 1753, 1755, 1811, 1812, 1826, 1836, 1838, 1858, 1865, 1867, 1869, 1891, 1892, 1893, 1894, 1900, 1914, 1915, 1916, 1921, 1922, 1925, 1926, 1929, 1930, 1932, 1934, 1935, 1941, 1942, 1944, 1946, 1947], "static": [1, 3, 8, 14, 25, 30, 32, 45, 47, 56, 61, 62, 64, 782, 803, 805, 814, 820, 845, 847, 877, 878, 879, 880, 1207, 1470, 1607, 1786, 1866, 1867, 1868, 1869, 1892, 1899, 1907, 1908, 1914, 1917, 1921, 1927, 1939, 1941, 1942, 1947], "Then": [1, 24, 42, 55, 1374, 1478, 1616, 1661, 1847, 1889, 1890, 1892, 1893, 1894, 1895, 1903, 1904, 1910, 1912, 1913, 1921, 1922, 1934, 1939, 1945], "op": [1, 4, 24, 45, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 75, 76, 139, 491, 512, 592, 745, 780, 781, 782, 811, 814, 842, 849, 850, 881, 887, 895, 930, 940, 973, 988, 990, 994, 995, 1009, 1010, 1035, 1039, 1041, 1123, 1143, 1194, 1207, 1209, 1210, 1265, 1271, 1443, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1697, 1756, 1834, 1865, 1869, 1873, 1875, 1876, 1877, 1879, 1882, 1883, 1891, 1892, 1893, 1894, 1902, 1908, 1913, 1915, 1916, 1917, 1918, 1919, 1925, 1927, 1929, 1931, 1935, 1939, 1940, 1943, 1944, 1945, 1946, 1947, 1949, 1953, 1954], "ctx": [1, 39, 56, 60, 877, 878, 879, 885, 886, 887, 888, 1888, 1894, 1895, 1910], "gradcheck": [1, 897, 1785, 1865, 1894, 1925], "extend": [1, 21, 24, 26, 30, 33, 43, 55, 849, 878, 880, 887, 1429, 1438, 1785, 1847, 1865, 1873, 1884, 1889, 1899, 1901, 1902, 1910, 1911, 1913, 1919, 1925, 1942, 1955], "staticmethod": [1, 56, 878, 880, 885, 886, 887, 888, 1869, 1888, 1894, 1910, 1921], "result": [1, 3, 4, 5, 7, 8, 9, 13, 14, 18, 21, 22, 24, 26, 30, 32, 34, 39, 42, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 142, 210, 211, 243, 244, 304, 324, 387, 484, 486, 487, 544, 571, 572, 573, 575, 576, 606, 674, 675, 676, 677, 678, 681, 683, 684, 685, 687, 748, 781, 865, 867, 883, 884, 889, 890, 891, 892, 893, 894, 896, 897, 908, 911, 922, 926, 931, 937, 939, 940, 943, 954, 956, 979, 981, 983, 1009, 1010, 1023, 1045, 1046, 1047, 1048, 1049, 1061, 1066, 1084, 1087, 1093, 1102, 1109, 1111, 1114, 1118, 1119, 1122, 1123, 1124, 1127, 1128, 1133, 1134, 1138, 1154, 1155, 1157, 1170, 1184, 1193, 1196, 1197, 1205, 1209, 1210, 1212, 1214, 1215, 1219, 1233, 1235, 1237, 1238, 1246, 1250, 1252, 1254, 1255, 1256, 1263, 1273, 1274, 1281, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1322, 1325, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1393, 1397, 1427, 1433, 1442, 1470, 1471, 1472, 1473, 1474, 1478, 1508, 1526, 1537, 1591, 1594, 1595, 1607, 1614, 1616, 1649, 1652, 1653, 1654, 1655, 1661, 1691, 1697, 1699, 1706, 1707, 1710, 1716, 1729, 1735, 1750, 1778, 1789, 1791, 1792, 1796, 1803, 1805, 1806, 1807, 1810, 1811, 1812, 1821, 1825, 1826, 1831, 1832, 1834, 1835, 1837, 1849, 1852, 1853, 1857, 1866, 1867, 1868, 1869, 1876, 1877, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1925, 1928, 1930, 1931, 1932, 1935, 1936, 1940, 1942, 1943, 1947, 1948, 1951, 1952, 1953, 1954, 1955], "save_for_backward": [1, 878, 886, 888, 1888, 1889, 1894, 1895, 1910], "grad_output": [1, 56, 877, 885, 895, 897, 901, 902, 1193, 1427, 1603, 1604, 1867, 1889, 1892, 1894, 1895, 1900, 1949], "saved_tensor": [1, 886, 887, 888, 1888, 1889, 1894, 1895], "avail": [1, 2, 5, 8, 9, 14, 15, 21, 24, 32, 41, 42, 71, 72, 963, 989, 991, 992, 1003, 1006, 1013, 1014, 1033, 1034, 1036, 1066, 1200, 1257, 1258, 1283, 1470, 1479, 1537, 1576, 1595, 1699, 1753, 1807, 1812, 1846, 1849, 1864, 1865, 1866, 1868, 1869, 1873, 1876, 1881, 1889, 1892, 1894, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1915, 1916, 1917, 1921, 1935, 1936, 1941, 1946, 1954, 1955], "cost": [1, 3, 4, 8, 9, 22, 47, 930, 940, 1249, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1749, 1892, 1904, 1917, 1922, 1928, 1954], "both": [1, 2, 3, 14, 21, 22, 24, 25, 26, 29, 30, 34, 39, 40, 41, 42, 45, 47, 54, 55, 56, 63, 64, 86, 328, 717, 756, 757, 760, 761, 762, 781, 839, 880, 884, 890, 891, 892, 893, 894, 908, 945, 958, 990, 1061, 1082, 1112, 1113, 1114, 1122, 1136, 1138, 1146, 1153, 1170, 1183, 1184, 1190, 1193, 1207, 1215, 1216, 1264, 1280, 1288, 1294, 1308, 1309, 1340, 1341, 1345, 1346, 1347, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1382, 1388, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1420, 1421, 1422, 1427, 1433, 1466, 1474, 1478, 1479, 1482, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1576, 1607, 1619, 1649, 1666, 1667, 1691, 1714, 1715, 1753, 1784, 1786, 1788, 1807, 1811, 1831, 1832, 1866, 1868, 1869, 1876, 1882, 1883, 1885, 1888, 1889, 1890, 1894, 1895, 1897, 1900, 1903, 1904, 1905, 1910, 1913, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1932, 1934, 1935, 1936, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1954], "cpu": [1, 4, 5, 14, 17, 21, 24, 26, 45, 47, 56, 61, 64, 65, 66, 77, 108, 185, 278, 315, 324, 433, 434, 435, 436, 437, 446, 568, 577, 853, 868, 906, 909, 918, 956, 959, 960, 969, 979, 980, 981, 983, 1067, 1069, 1079, 1084, 1102, 1114, 1119, 1120, 1143, 1144, 1150, 1151, 1193, 1201, 1203, 1204, 1213, 1223, 1225, 1229, 1230, 1231, 1232, 1234, 1236, 1239, 1241, 1242, 1248, 1251, 1254, 1257, 1258, 1264, 1265, 1280, 1283, 1294, 1305, 1364, 1370, 1427, 1470, 1591, 1607, 1611, 1612, 1640, 1641, 1655, 1658, 1709, 1718, 1720, 1722, 1724, 1725, 1749, 1754, 1756, 1757, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1778, 1788, 1793, 1794, 1795, 1796, 1797, 1798, 1811, 1825, 1826, 1827, 1836, 1838, 1843, 1846, 1862, 1865, 1866, 1867, 1869, 1873, 1877, 1881, 1882, 1884, 1892, 1894, 1895, 1898, 1900, 1903, 1904, 1906, 1910, 1911, 1914, 1915, 1917, 1920, 1921, 1925, 1927, 1928, 1931, 1932, 1933, 1936, 1939, 1941, 1943, 1944, 1946, 1948, 1951, 1952, 1954], "There": [1, 5, 6, 7, 9, 13, 14, 20, 24, 26, 29, 41, 45, 48, 52, 53, 55, 73, 74, 76, 668, 722, 781, 878, 940, 1123, 1364, 1397, 1442, 1576, 1607, 1647, 1652, 1864, 1866, 1868, 1869, 1875, 1876, 1883, 1889, 1892, 1894, 1895, 1896, 1899, 1902, 1906, 1907, 1910, 1913, 1916, 1917, 1921, 1923, 1931, 1933, 1939, 1941, 1942, 1943, 1944, 1947, 1953, 1954], "moment": [1, 29, 56, 62, 760, 761, 762, 954, 1666, 1667, 1668, 1670, 1676, 1680, 1877, 1881, 1884, 1915, 1921, 1947, 1951], "nvprof": [1, 4, 903, 1892], "regist": [1, 15, 22, 24, 28, 29, 30, 41, 43, 45, 47, 55, 69, 71, 72, 73, 74, 76, 475, 476, 668, 780, 781, 842, 901, 902, 940, 1012, 1193, 1265, 1427, 1428, 1429, 1437, 1438, 1455, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1614, 1615, 1616, 1617, 1619, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1847, 1849, 1873, 1879, 1881, 1893, 1894, 1899, 1900, 1905, 1908, 1910, 1913, 1921, 1943, 1946], "activ": [1, 5, 7, 9, 43, 45, 47, 53, 68, 70, 780, 782, 784, 791, 795, 829, 830, 839, 849, 850, 968, 977, 992, 1005, 1023, 1122, 1124, 1134, 1266, 1339, 1366, 1367, 1368, 1372, 1382, 1399, 1426, 1428, 1445, 1456, 1470, 1472, 1474, 1519, 1556, 1579, 1607, 1617, 1618, 1619, 1649, 1654, 1857, 1865, 1877, 1881, 1892, 1894, 1895, 1900, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1925, 1934, 1935, 1939, 1943, 1949, 1954], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1915], "use_devic": 1, "record_shap": [1, 1915], "with_flop": [1, 1915], "profile_memori": [1, 1915], "with_stack": [1, 1915], "with_modul": [1, 1915], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1915], "hold": [1, 24, 39, 41, 43, 44, 45, 47, 51, 54, 55, 525, 1266, 1374, 1428, 1429, 1437, 1438, 1478, 1598, 1607, 1609, 1610, 1616, 1626, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1793, 1794, 1795, 1796, 1797, 1798, 1890, 1892, 1894, 1896, 1899, 1902, 1912, 1915, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1942, 1947], "summari": [1, 3, 42, 1024, 1758, 1865, 1879, 1930, 1935, 1948, 1954, 1956], "hood": [1, 45, 54, 1881, 1889, 1892, 1893, 1902, 1913, 1923, 1941, 1943, 1947], "just": [1, 2, 7, 14, 22, 24, 29, 30, 32, 39, 55, 577, 675, 685, 778, 811, 814, 877, 879, 905, 951, 952, 1209, 1210, 1248, 1251, 1256, 1257, 1283, 1366, 1367, 1368, 1372, 1607, 1619, 1620, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1749, 1835, 1836, 1837, 1838, 1847, 1864, 1866, 1881, 1888, 1889, 1894, 1895, 1897, 1899, 1900, 1901, 1905, 1913, 1914, 1921, 1922, 1925, 1928, 1929, 1931, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1953], "record": [1, 5, 28, 33, 34, 35, 39, 42, 45, 54, 55, 433, 434, 435, 436, 437, 484, 807, 808, 809, 810, 813, 815, 853, 909, 918, 969, 970, 972, 1067, 1068, 1069, 1079, 1084, 1102, 1119, 1120, 1121, 1150, 1151, 1193, 1209, 1213, 1264, 1280, 1305, 1308, 1309, 1364, 1427, 1658, 1659, 1661, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1862, 1863, 1866, 1868, 1884, 1888, 1889, 1892, 1894, 1907, 1908, 1910, 1915, 1921, 1930, 1931, 1932, 1933, 1934, 1935, 1939, 1942, 1944, 1954, 1956], "event": [1, 27, 30, 32, 40, 43, 54, 905, 906, 907, 970, 972, 1023, 1026, 1209, 1210, 1271, 1308, 1309, 1576, 1865, 1879, 1881, 1892, 1915, 1930, 1952, 1956], "being": [1, 3, 5, 9, 13, 21, 24, 26, 28, 30, 32, 34, 41, 42, 43, 45, 47, 51, 52, 54, 55, 56, 64, 70, 86, 391, 748, 781, 787, 880, 889, 895, 938, 970, 978, 1025, 1029, 1043, 1044, 1079, 1112, 1113, 1123, 1132, 1133, 1182, 1193, 1197, 1283, 1292, 1297, 1343, 1344, 1361, 1363, 1370, 1371, 1375, 1376, 1381, 1387, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1475, 1491, 1498, 1499, 1509, 1521, 1522, 1526, 1538, 1561, 1569, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1709, 1710, 1805, 1806, 1807, 1852, 1853, 1866, 1869, 1876, 1879, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1908, 1910, 1913, 1916, 1919, 1921, 1922, 1925, 1932, 1934, 1939, 1942, 1943, 1944, 1947, 1952, 1954, 1955], "those": [1, 2, 4, 5, 14, 21, 22, 24, 26, 28, 30, 45, 47, 52, 54, 55, 70, 812, 896, 981, 991, 1054, 1056, 1134, 1209, 1251, 1257, 1265, 1304, 1335, 1343, 1344, 1361, 1363, 1371, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1479, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1661, 1680, 1811, 1832, 1857, 1868, 1882, 1883, 1888, 1889, 1892, 1894, 1895, 1898, 1900, 1904, 1905, 1910, 1912, 1919, 1921, 1923, 1939, 1941, 1943, 1944, 1946, 1947, 1948, 1951, 1954], "report": [1, 3, 4, 18, 24, 34, 42, 45, 54, 55, 73, 74, 76, 1023, 1126, 1127, 1129, 1888, 1892, 1914, 1925, 1944, 1948, 1951, 1954, 1956], "runtim": [1, 3, 5, 14, 24, 45, 55, 815, 866, 905, 1064, 1066, 1156, 1193, 1199, 1209, 1427, 1609, 1610, 1662, 1705, 1846, 1858, 1869, 1882, 1883, 1889, 1892, 1894, 1902, 1907, 1909, 1910, 1936, 1942, 1944], "note": [1, 2, 3, 5, 8, 11, 13, 14, 15, 18, 20, 21, 22, 24, 26, 28, 30, 31, 32, 39, 41, 43, 45, 47, 51, 53, 54, 55, 56, 63, 64, 73, 74, 75, 76, 139, 210, 366, 476, 487, 488, 501, 503, 505, 723, 729, 730, 731, 779, 781, 782, 783, 787, 829, 849, 853, 872, 881, 887, 889, 890, 891, 892, 893, 894, 895, 897, 924, 930, 940, 966, 1041, 1049, 1054, 1066, 1087, 1117, 1119, 1134, 1135, 1146, 1168, 1180, 1190, 1191, 1193, 1194, 1200, 1266, 1288, 1308, 1309, 1343, 1344, 1350, 1358, 1359, 1360, 1361, 1363, 1370, 1371, 1379, 1381, 1387, 1393, 1394, 1397, 1418, 1419, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1441, 1442, 1458, 1459, 1466, 1470, 1475, 1479, 1498, 1499, 1509, 1517, 1518, 1526, 1537, 1538, 1561, 1564, 1569, 1570, 1583, 1598, 1607, 1608, 1654, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1683, 1685, 1691, 1693, 1709, 1716, 1792, 1793, 1794, 1795, 1797, 1798, 1803, 1807, 1811, 1832, 1846, 1847, 1849, 1857, 1864, 1866, 1867, 1870, 1876, 1881, 1884, 1885, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1913, 1915, 1917, 1919, 1920, 1922, 1923, 1925, 1929, 1930, 1941, 1942, 1944, 1945, 1952, 1953, 1954, 1957], "propag": [1, 26, 27, 29, 30, 32, 41, 55, 56, 64, 501, 674, 677, 678, 679, 683, 684, 685, 686, 754, 755, 756, 757, 767, 770, 771, 773, 774, 775, 826, 828, 908, 1112, 1113, 1322, 1792, 1865, 1881, 1882, 1888, 1892, 1894, 1897, 1899, 1921, 1934, 1935, 1942, 1943, 1947, 1953], "async": [1, 24, 25, 54, 591, 1607, 1870, 1892, 1899, 1927], "task": [1, 3, 7, 22, 48, 53, 1196, 1212, 1390, 1391, 1392, 1869, 1891, 1899, 1900, 1902, 1906, 1944], "cuda": [1, 3, 4, 5, 14, 16, 20, 21, 22, 24, 26, 28, 47, 77, 139, 278, 302, 310, 324, 329, 503, 505, 512, 568, 853, 865, 867, 881, 895, 909, 911, 918, 940, 967, 968, 969, 970, 972, 973, 988, 990, 1001, 1067, 1068, 1069, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1120, 1150, 1151, 1193, 1213, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1248, 1251, 1254, 1255, 1257, 1258, 1264, 1265, 1280, 1283, 1299, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1397, 1427, 1442, 1466, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1598, 1607, 1609, 1610, 1611, 1612, 1653, 1655, 1658, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1709, 1718, 1720, 1722, 1724, 1725, 1749, 1753, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1789, 1793, 1794, 1795, 1796, 1797, 1798, 1811, 1825, 1827, 1836, 1838, 1843, 1846, 1862, 1865, 1867, 1873, 1882, 1884, 1894, 1895, 1900, 1903, 1910, 1911, 1912, 1914, 1915, 1920, 1921, 1925, 1927, 1928, 1931, 1932, 1933, 1936, 1941, 1943, 1946, 1951, 1954], "cudaev": 1, "4u": 1, "shape": [1, 5, 8, 11, 13, 22, 24, 30, 47, 49, 51, 53, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 86, 160, 180, 197, 207, 389, 391, 433, 435, 437, 459, 485, 486, 501, 503, 505, 532, 554, 605, 668, 673, 675, 676, 685, 723, 733, 734, 744, 746, 748, 752, 754, 755, 756, 757, 760, 761, 762, 769, 784, 866, 872, 886, 890, 892, 893, 894, 905, 910, 911, 913, 916, 921, 923, 927, 928, 932, 933, 940, 953, 982, 1056, 1057, 1058, 1060, 1061, 1066, 1067, 1069, 1071, 1086, 1087, 1088, 1089, 1097, 1098, 1099, 1105, 1111, 1112, 1113, 1114, 1120, 1127, 1128, 1132, 1133, 1134, 1135, 1137, 1149, 1154, 1155, 1159, 1167, 1170, 1184, 1190, 1207, 1209, 1210, 1213, 1218, 1219, 1223, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1282, 1283, 1287, 1295, 1300, 1301, 1316, 1317, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1517, 1518, 1522, 1526, 1528, 1537, 1538, 1543, 1550, 1551, 1552, 1562, 1563, 1566, 1567, 1568, 1570, 1576, 1595, 1598, 1607, 1609, 1610, 1614, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1655, 1658, 1660, 1662, 1697, 1706, 1710, 1714, 1715, 1718, 1720, 1721, 1722, 1729, 1731, 1732, 1736, 1745, 1748, 1773, 1788, 1789, 1791, 1794, 1796, 1802, 1807, 1808, 1811, 1821, 1828, 1832, 1842, 1843, 1844, 1857, 1860, 1862, 1866, 1867, 1869, 1882, 1883, 1884, 1889, 1890, 1892, 1894, 1895, 1896, 1908, 1911, 1915, 1918, 1921, 1925, 1926, 1930, 1931, 1932, 1933, 1936, 1941, 1944, 1949, 1953, 1954], "about": [1, 8, 9, 13, 17, 21, 24, 25, 28, 32, 34, 38, 40, 42, 45, 48, 52, 55, 75, 244, 486, 606, 896, 897, 974, 975, 991, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1123, 1223, 1230, 1371, 1640, 1676, 1680, 1691, 1752, 1864, 1866, 1868, 1869, 1873, 1876, 1891, 1892, 1893, 1894, 1896, 1899, 1902, 1903, 1905, 1907, 1913, 1915, 1916, 1919, 1922, 1923, 1925, 1929, 1931, 1940, 1942, 1944, 1947, 1950, 1954], "dimens": [1, 11, 21, 24, 29, 30, 45, 47, 52, 53, 55, 56, 61, 64, 67, 73, 207, 221, 222, 243, 249, 302, 304, 306, 310, 421, 422, 460, 461, 462, 481, 501, 503, 505, 525, 531, 533, 534, 548, 571, 572, 573, 575, 576, 595, 605, 674, 680, 681, 683, 684, 685, 687, 723, 746, 767, 769, 773, 862, 863, 864, 865, 874, 875, 876, 880, 895, 919, 927, 930, 931, 932, 933, 934, 966, 981, 983, 1045, 1046, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1064, 1066, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1134, 1135, 1146, 1155, 1156, 1167, 1170, 1190, 1214, 1215, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1273, 1274, 1281, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1301, 1315, 1322, 1323, 1324, 1325, 1326, 1327, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1369, 1370, 1371, 1373, 1374, 1377, 1378, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1399, 1407, 1408, 1413, 1414, 1415, 1416, 1417, 1418, 1421, 1422, 1426, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1474, 1475, 1476, 1477, 1478, 1491, 1497, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1525, 1526, 1527, 1528, 1537, 1540, 1543, 1544, 1545, 1562, 1563, 1564, 1576, 1582, 1583, 1595, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1641, 1642, 1644, 1646, 1648, 1651, 1653, 1654, 1697, 1700, 1707, 1709, 1710, 1711, 1716, 1730, 1731, 1732, 1736, 1745, 1747, 1748, 1758, 1779, 1783, 1787, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1805, 1806, 1807, 1810, 1811, 1820, 1822, 1826, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1865, 1867, 1868, 1869, 1884, 1887, 1890, 1892, 1895, 1896, 1897, 1903, 1908, 1914, 1916, 1925, 1926, 1928, 1930, 1931, 1942, 1949], "collect": [1, 3, 7, 21, 25, 26, 28, 32, 41, 47, 54, 55, 787, 788, 812, 849, 850, 928, 1005, 1067, 1155, 1295, 1607, 1630, 1658, 1718, 1722, 1862, 1865, 1867, 1868, 1869, 1879, 1892, 1893, 1895, 1912, 1915, 1916, 1919, 1923, 1925, 1930, 1932, 1944, 1947, 1951, 1953, 1954, 1956], "group": [1, 3, 9, 21, 22, 25, 26, 28, 32, 38, 41, 42, 43, 44, 47, 50, 55, 598, 668, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 760, 761, 762, 868, 905, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1466, 1501, 1502, 1503, 1504, 1505, 1506, 1527, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1844, 1864, 1865, 1867, 1869, 1881, 1887, 1892, 1893, 1910, 1912, 1913, 1915, 1921, 1930, 1940, 1944, 1949, 1954], "prof": [1, 38, 1915, 1944, 1952, 1954], "key_averag": [1, 1915], "group_by_input_shap": [1, 905, 1915], "skew": [1, 3, 4, 1245, 1614], "neglig": [1, 1206, 1753], "bottom": [1, 47, 1526, 1876, 1952], "But": [1, 7, 47, 54, 474, 1209, 1239, 1607, 1889, 1894, 1896, 1897, 1913, 1914, 1925, 1929, 1943, 1944, 1947, 1948, 1955], "total": [1, 3, 4, 7, 21, 22, 24, 38, 40, 41, 42, 47, 865, 906, 983, 1018, 1023, 1036, 1119, 1154, 1155, 1303, 1350, 1374, 1387, 1394, 1418, 1433, 1478, 1563, 1607, 1611, 1653, 1655, 1657, 1685, 1691, 1731, 1758, 1807, 1864, 1868, 1879, 1892, 1898, 1902, 1912, 1925], "artifici": [1, 1925], "flop": [1, 1915], "hardwar": [1, 8, 847, 849, 850, 1229, 1230, 1257, 1846, 1892, 1902, 1904, 1917, 1925, 1944, 1946, 1954], "matrix": [1, 2, 22, 24, 30, 180, 197, 674, 677, 678, 679, 748, 908, 910, 919, 920, 928, 930, 931, 932, 933, 940, 954, 958, 1049, 1053, 1054, 1056, 1066, 1134, 1138, 1142, 1157, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1266, 1274, 1283, 1285, 1288, 1298, 1317, 1319, 1370, 1371, 1379, 1397, 1478, 1517, 1518, 1614, 1619, 1648, 1654, 1697, 1698, 1699, 1709, 1753, 1781, 1784, 1788, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1811, 1812, 1827, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1851, 1857, 1865, 1869, 1882, 1883, 1884, 1887, 1891, 1892, 1894, 1897, 1900, 1903, 1915, 1925, 1930, 1931, 1944], "2d": [1, 26, 29, 30, 575, 576, 688, 691, 694, 723, 727, 730, 754, 756, 761, 767, 771, 773, 774, 775, 954, 958, 1054, 1066, 1249, 1250, 1333, 1337, 1341, 1344, 1345, 1346, 1356, 1359, 1363, 1367, 1371, 1375, 1390, 1391, 1396, 1421, 1430, 1432, 1433, 1434, 1479, 1480, 1481, 1486, 1489, 1491, 1494, 1499, 1502, 1505, 1513, 1518, 1521, 1548, 1551, 1561, 1564, 1615, 1648, 1715, 1791, 1796, 1834, 1877, 1887, 1894, 1915, 1916, 1925], "alloc": [1, 4, 11, 18, 22, 26, 30, 32, 41, 47, 243, 320, 433, 434, 435, 436, 437, 474, 968, 970, 972, 974, 975, 977, 990, 991, 992, 1015, 1017, 1019, 1021, 1022, 1023, 1024, 1031, 1032, 1036, 1067, 1069, 1302, 1303, 1304, 1312, 1718, 1722, 1724, 1749, 1825, 1865, 1881, 1884, 1889, 1893, 1898, 1902, 1908, 1915, 1928, 1938, 1939, 1942, 1943, 1952], "dealloc": [1, 55, 1119, 1881, 1892, 1896, 1898, 1915], "line": [1, 4, 18, 24, 45, 55, 668, 905, 1066, 1123, 1168, 1193, 1204, 1427, 1491, 1526, 1758, 1786, 1866, 1869, 1870, 1884, 1890, 1894, 1897, 1898, 1904, 1906, 1910, 1915, 1925, 1938, 1941, 1944, 1946, 1947, 1948, 1951, 1954, 1956], "hierarchi": [1, 55, 828, 1197, 1666, 1667, 1870, 1894, 1915, 1916, 1942], "callstack": [1, 24, 1915], "A": [1, 2, 3, 5, 7, 8, 9, 13, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 38, 41, 42, 43, 45, 47, 48, 53, 54, 56, 57, 58, 61, 74, 77, 548, 568, 571, 572, 573, 582, 612, 668, 680, 685, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 733, 734, 744, 749, 750, 751, 752, 753, 778, 780, 802, 846, 847, 849, 850, 907, 909, 918, 919, 921, 926, 931, 932, 933, 939, 940, 942, 945, 946, 954, 958, 969, 970, 972, 980, 982, 983, 1051, 1066, 1071, 1079, 1080, 1081, 1093, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1137, 1146, 1149, 1150, 1151, 1155, 1183, 1184, 1185, 1186, 1189, 1191, 1193, 1196, 1201, 1204, 1206, 1209, 1210, 1214, 1218, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1266, 1274, 1282, 1283, 1284, 1285, 1289, 1328, 1344, 1348, 1350, 1363, 1370, 1371, 1380, 1381, 1389, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1417, 1426, 1427, 1433, 1455, 1460, 1462, 1470, 1475, 1476, 1491, 1497, 1509, 1517, 1528, 1538, 1545, 1556, 1576, 1582, 1583, 1598, 1607, 1608, 1609, 1610, 1614, 1616, 1619, 1641, 1642, 1645, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1684, 1685, 1687, 1690, 1691, 1693, 1699, 1709, 1711, 1712, 1713, 1714, 1715, 1726, 1732, 1738, 1741, 1774, 1783, 1786, 1787, 1790, 1802, 1806, 1807, 1811, 1812, 1829, 1834, 1835, 1836, 1837, 1838, 1842, 1843, 1844, 1845, 1846, 1853, 1857, 1860, 1864, 1866, 1867, 1868, 1869, 1873, 1876, 1877, 1882, 1883, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1902, 1903, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1935, 1939, 1940, 1941, 1943, 1944, 1946, 1947, 1949, 1952, 1953, 1954, 1955, 1956, 1957], "aten": [1, 2, 3, 13, 14, 18, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 74, 1009, 1123, 1317, 1660, 1661, 1786, 1866, 1867, 1873, 1891, 1894, 1906, 1908, 1911, 1915, 1916, 1925, 1936, 1940, 1945, 1948, 1954], "torchscript": [1, 3, 8, 28, 45, 55, 605, 1191, 1194, 1196, 1197, 1198, 1200, 1205, 1209, 1211, 1661, 1865, 1870, 1905, 1915, 1921, 1956], "eager": [1, 8, 45, 940, 1041, 1191, 1194, 1205, 1757, 1869, 1892, 1915, 1917, 1919, 1939, 1944, 1945, 1946, 1951, 1954], "experiment": [1, 2, 22, 24, 28, 29, 45, 47, 55, 56, 59, 63, 64, 67, 222, 889, 891, 895, 940, 946, 1040, 1123, 1224, 1235, 1237, 1238, 1242, 1255, 1607, 1680, 1865, 1866, 1868, 1882, 1883, 1892, 1893, 1904, 1906, 1908, 1910, 1913, 1914, 1915, 1942, 1943, 1944, 1954], "kineto": [1, 1915], "_experimentalconfig": [1, 1915], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 21, 24, 31, 39, 43, 48, 51, 52, 53, 55, 668, 956, 970, 993, 997, 1009, 1117, 1206, 1237, 1283, 1778, 1879, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1906, 1910, 1913, 1915, 1916, 1921, 1944, 1955], "100": [1, 21, 24, 28, 30, 55, 56, 63, 64, 289, 726, 727, 730, 731, 1153, 1193, 1205, 1211, 1249, 1264, 1271, 1280, 1295, 1316, 1335, 1343, 1344, 1345, 1346, 1347, 1356, 1357, 1359, 1360, 1362, 1363, 1390, 1391, 1392, 1427, 1434, 1436, 1466, 1475, 1508, 1509, 1561, 1669, 1681, 1682, 1687, 1688, 1689, 1690, 1692, 1694, 1695, 1711, 1767, 1867, 1869, 1881, 1891, 1892, 1910, 1912, 1917, 1923, 1925, 1930, 1940, 1941, 1947, 1948], "realli": [1, 7, 55, 942, 1869, 1889, 1913, 1943], "y": [1, 11, 14, 21, 30, 38, 45, 47, 52, 53, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 605, 608, 769, 872, 874, 875, 876, 883, 884, 887, 889, 890, 891, 892, 893, 894, 922, 928, 951, 958, 1009, 1010, 1049, 1060, 1066, 1070, 1122, 1124, 1127, 1128, 1129, 1133, 1134, 1168, 1200, 1205, 1209, 1262, 1271, 1272, 1295, 1343, 1344, 1345, 1346, 1347, 1348, 1361, 1363, 1382, 1387, 1388, 1390, 1391, 1392, 1394, 1399, 1414, 1418, 1419, 1430, 1431, 1432, 1434, 1436, 1458, 1459, 1466, 1469, 1475, 1476, 1497, 1526, 1543, 1566, 1598, 1619, 1652, 1713, 1731, 1733, 1734, 1755, 1788, 1802, 1828, 1832, 1833, 1857, 1860, 1866, 1867, 1868, 1869, 1882, 1883, 1887, 1889, 1890, 1891, 1892, 1895, 1897, 1898, 1901, 1908, 1910, 1913, 1916, 1921, 1923, 1926, 1930, 1933, 1934, 1935, 1939, 1940, 1942, 1944, 1946, 1947, 1953, 1954], "column": [1, 3, 22, 29, 180, 249, 572, 575, 938, 954, 958, 1049, 1079, 1107, 1108, 1158, 1229, 1230, 1233, 1249, 1252, 1257, 1261, 1266, 1317, 1436, 1478, 1517, 1518, 1614, 1699, 1709, 1791, 1793, 1794, 1795, 1797, 1798, 1811, 1832, 1836, 1838, 1851, 1887, 1897, 1925], "remov": [1, 3, 21, 22, 24, 26, 30, 42, 44, 47, 55, 475, 476, 501, 534, 545, 685, 785, 803, 804, 805, 847, 901, 902, 930, 931, 1012, 1123, 1139, 1190, 1193, 1197, 1283, 1284, 1288, 1427, 1428, 1437, 1528, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1615, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1635, 1636, 1638, 1639, 1649, 1651, 1654, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1709, 1725, 1747, 1802, 1811, 1834, 1841, 1843, 1864, 1865, 1877, 1889, 1900, 1905, 1910, 1911, 1913, 1923, 1927, 1932, 1944, 1946, 1950, 1953], "breviti": [1, 55, 958, 1910], "print": [1, 3, 13, 18, 21, 24, 32, 33, 38, 39, 42, 45, 47, 52, 54, 708, 716, 717, 722, 733, 734, 744, 752, 899, 901, 902, 1122, 1123, 1132, 1193, 1197, 1200, 1201, 1205, 1283, 1348, 1351, 1389, 1414, 1427, 1439, 1440, 1508, 1564, 1567, 1568, 1619, 1629, 1630, 1631, 1632, 1635, 1645, 1649, 1661, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1758, 1850, 1864, 1866, 1867, 1889, 1891, 1892, 1894, 1900, 1901, 1908, 1909, 1910, 1911, 1913, 1915, 1921, 1930, 1931, 1934, 1935, 1940, 1941, 1944, 1946, 1947, 1954], "tabl": [1, 3, 24, 55, 1370, 1517, 1867, 1869, 1894, 1912, 1913, 1915, 1916, 1921, 1925, 1932, 1943, 1945, 1948, 1951, 1954], "sort_bi": [1, 1915], "self_cpu_time_tot": [1, 1915], "avg": [1, 24, 1664], "mul": [1, 18, 45, 55, 56, 59, 62, 63, 408, 735, 736, 745, 1170, 1318, 1866, 1867, 1869, 1882, 1884, 1894, 1910, 1911, 1918, 1922, 1925, 1928, 1934, 1940, 1942, 1949, 1953], "32": [1, 2, 22, 24, 45, 77, 734, 1119, 1190, 1203, 1283, 1341, 1366, 1367, 1368, 1372, 1373, 1375, 1376, 1396, 1415, 1421, 1432, 1470, 1471, 1472, 1473, 1474, 1491, 1521, 1522, 1528, 1576, 1883, 1884, 1900, 1904, 1910, 1919, 1925, 1928, 1930, 1931, 1941, 1947, 1948], "048m": 1, "200": [1, 28, 45, 1193, 1271, 1427, 1711, 1869, 1925, 1954], "27": [1, 605, 1261, 1684, 1706, 1851, 1910], "041m": 1, "powbackward0": 1, "9": [1, 7, 21, 22, 24, 31, 55, 56, 61, 302, 304, 306, 310, 390, 391, 459, 501, 548, 569, 571, 685, 733, 734, 842, 924, 930, 934, 938, 958, 1049, 1064, 1067, 1088, 1089, 1098, 1099, 1109, 1112, 1113, 1116, 1117, 1146, 1156, 1223, 1225, 1246, 1248, 1250, 1261, 1263, 1326, 1327, 1333, 1334, 1337, 1338, 1351, 1370, 1371, 1423, 1424, 1439, 1440, 1449, 1452, 1517, 1518, 1564, 1567, 1568, 1654, 1655, 1664, 1666, 1667, 1668, 1669, 1670, 1676, 1679, 1680, 1681, 1685, 1691, 1693, 1694, 1698, 1702, 1738, 1745, 1754, 1758, 1768, 1773, 1783, 1791, 1799, 1825, 1826, 1830, 1832, 1841, 1851, 1858, 1866, 1870, 1876, 1896, 1900, 1905, 1906, 1910, 1911, 1912, 1913, 1921, 1925, 1926, 1928, 1932, 1941], "727m": 1, "55": [1, 1381, 1910], "483m": 1, "accumulategrad": [1, 1889], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 14, 33, 38, 55, 668, 1209, 1760, 1869, 1875, 1908, 1920, 1925], "nvtx": [1, 4, 1865], "program": [1, 3, 4, 8, 13, 18, 21, 24, 33, 42, 44, 45, 47, 55, 605, 951, 952, 1015, 1017, 1123, 1753, 1866, 1868, 1870, 1880, 1889, 1892, 1896, 1899, 1901, 1902, 1905, 1906, 1916, 1930, 1936, 1939, 1941, 1942, 1943, 1944, 1946, 1952, 1954, 1956], "off": [1, 5, 7, 8, 14, 24, 32, 47, 55, 70, 909, 918, 1027, 1123, 1150, 1151, 1190, 1209, 1257, 1340, 1341, 1342, 1344, 1420, 1421, 1422, 1526, 1564, 1755, 1891, 1892, 1893, 1896, 1899, 1903, 1915, 1916, 1917, 1921, 1922, 1942, 1943, 1947, 1951], "o": [1, 22, 24, 25, 30, 42, 43, 44, 45, 55, 1193, 1265, 1308, 1309, 1310, 1398, 1427, 1433, 1607, 1741, 1864, 1870, 1881, 1889, 1892, 1893, 1896, 1906, 1913, 1914, 1921], "trace_nam": 1, "regular": [1, 3, 4, 24, 32, 42, 47, 50, 55, 1009, 1010, 1122, 1241, 1242, 1350, 1365, 1366, 1367, 1368, 1372, 1412, 1426, 1427, 1428, 1429, 1437, 1438, 1519, 1556, 1598, 1609, 1610, 1649, 1667, 1676, 1869, 1883, 1884, 1894, 1895, 1899, 1900, 1908, 1910, 1913, 1916, 1919, 1921, 1925, 1926, 1933, 1935, 1947], "command": [1, 4, 24, 32, 39, 42, 55, 1892, 1898, 1902, 1906, 1914, 1915, 1922, 1948, 1951], "unfortun": [1, 9, 21, 45, 1607, 1889, 1941, 1943], "wai": [1, 3, 5, 7, 8, 9, 14, 21, 22, 24, 26, 28, 29, 30, 34, 38, 45, 47, 49, 50, 54, 55, 139, 568, 668, 784, 807, 810, 813, 849, 850, 878, 881, 890, 892, 893, 894, 895, 896, 1087, 1089, 1123, 1146, 1193, 1223, 1224, 1239, 1254, 1343, 1371, 1390, 1391, 1392, 1397, 1409, 1410, 1411, 1427, 1455, 1472, 1474, 1518, 1570, 1607, 1617, 1647, 1680, 1684, 1691, 1866, 1868, 1869, 1873, 1875, 1876, 1879, 1881, 1882, 1883, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1906, 1908, 1910, 1912, 1913, 1916, 1921, 1922, 1925, 1929, 1931, 1935, 1939, 1940, 1942, 1943, 1944, 1947, 1952, 1953, 1954, 1956], "disk": [1, 21, 1265, 1741, 1889, 1900, 1913, 1930], "annot": [1, 34, 39, 45, 55, 903, 1191, 1199, 1205, 1866, 1868, 1870, 1910, 1921, 1944, 1945, 1947], "wait": [1, 18, 24, 32, 39, 41, 54, 812, 965, 969, 970, 972, 1042, 1196, 1305, 1308, 1309, 1314, 1693, 1867, 1869, 1881, 1891, 1892, 1893, 1911, 1915, 1921, 1944, 1952, 1956], "either": [1, 8, 9, 14, 18, 21, 22, 24, 28, 29, 30, 32, 34, 39, 41, 42, 43, 45, 47, 52, 54, 55, 143, 210, 302, 310, 501, 503, 605, 668, 720, 726, 727, 728, 733, 734, 744, 752, 767, 773, 779, 846, 878, 880, 887, 896, 897, 927, 940, 980, 1066, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1119, 1123, 1146, 1168, 1170, 1186, 1193, 1209, 1249, 1264, 1265, 1280, 1295, 1333, 1334, 1337, 1338, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1371, 1381, 1387, 1394, 1396, 1418, 1419, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1442, 1444, 1458, 1459, 1474, 1475, 1477, 1479, 1480, 1481, 1498, 1499, 1509, 1537, 1538, 1561, 1569, 1595, 1602, 1607, 1632, 1654, 1666, 1667, 1669, 1676, 1691, 1706, 1708, 1750, 1753, 1807, 1811, 1860, 1864, 1866, 1868, 1869, 1871, 1875, 1883, 1887, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1908, 1910, 1912, 1913, 1914, 1916, 1922, 1923, 1925, 1926, 1929, 1932, 1942, 1945, 1957], "nvidia": [1, 14, 24, 978, 991, 1019, 1025, 1029, 1043, 1044, 1846, 1865, 1892, 1896, 1898, 1904, 1906, 1916, 1925, 1933, 1936, 1951, 1952, 1954], "visual": [1, 55, 1295, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1865, 1892, 1900, 1906, 1908, 1915, 1930, 1944, 1952, 1954], "nvvp": 1, "timelin": [1, 4, 1308, 1309, 1865, 1915], "load_nvprof": 1, "repl": [1, 1946], "append": [1, 24, 54, 55, 56, 61, 218, 243, 595, 749, 751, 753, 1012, 1056, 1058, 1288, 1380, 1398, 1429, 1438, 1444, 1455, 1607, 1867, 1868, 1869, 1889, 1891, 1892, 1902, 1906, 1910, 1911, 1925, 1930, 1944, 1947, 1953], "size": [1, 2, 3, 7, 18, 21, 22, 24, 26, 30, 32, 41, 45, 47, 50, 55, 56, 57, 62, 63, 64, 127, 197, 210, 231, 243, 244, 302, 304, 310, 328, 433, 434, 435, 437, 475, 481, 486, 487, 488, 501, 503, 505, 508, 511, 532, 533, 534, 554, 569, 571, 572, 573, 575, 576, 594, 595, 605, 606, 668, 678, 679, 681, 683, 684, 685, 687, 708, 716, 717, 723, 729, 730, 731, 733, 734, 744, 752, 754, 755, 756, 757, 767, 773, 774, 775, 784, 846, 853, 865, 866, 868, 880, 889, 890, 891, 892, 893, 894, 905, 908, 909, 911, 918, 920, 921, 922, 923, 924, 931, 934, 940, 958, 966, 968, 974, 980, 981, 983, 1023, 1047, 1048, 1054, 1057, 1064, 1066, 1067, 1068, 1069, 1072, 1083, 1084, 1085, 1087, 1088, 1089, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1119, 1120, 1121, 1128, 1129, 1134, 1135, 1150, 1151, 1155, 1156, 1167, 1170, 1190, 1193, 1215, 1224, 1233, 1238, 1246, 1250, 1254, 1257, 1259, 1260, 1261, 1263, 1264, 1266, 1274, 1280, 1281, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1300, 1301, 1302, 1303, 1317, 1319, 1322, 1325, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1376, 1379, 1381, 1382, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1466, 1470, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1499, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1537, 1544, 1550, 1551, 1552, 1561, 1562, 1564, 1567, 1568, 1570, 1576, 1595, 1596, 1597, 1598, 1607, 1630, 1640, 1641, 1642, 1643, 1644, 1646, 1648, 1651, 1653, 1655, 1658, 1659, 1669, 1678, 1697, 1698, 1699, 1700, 1702, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1731, 1736, 1745, 1748, 1767, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1804, 1805, 1806, 1807, 1810, 1811, 1812, 1825, 1826, 1827, 1832, 1834, 1842, 1843, 1844, 1845, 1852, 1853, 1855, 1856, 1857, 1858, 1862, 1863, 1865, 1866, 1867, 1869, 1877, 1879, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1905, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1925, 1927, 1928, 1930, 1931, 1939, 1941, 1942, 1943, 1944, 1948, 1949, 1952, 1954, 1956], "format": [1, 19, 22, 24, 26, 34, 43, 55, 70, 144, 159, 161, 164, 167, 168, 169, 184, 195, 198, 229, 256, 286, 314, 320, 382, 487, 488, 513, 568, 571, 572, 573, 574, 575, 576, 668, 723, 748, 780, 781, 937, 1012, 1066, 1067, 1068, 1121, 1190, 1193, 1207, 1236, 1350, 1371, 1379, 1397, 1427, 1442, 1474, 1607, 1641, 1643, 1659, 1661, 1719, 1721, 1723, 1741, 1784, 1788, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1863, 1864, 1866, 1869, 1870, 1875, 1892, 1894, 1900, 1905, 1907, 1908, 1910, 1911, 1915, 1916, 1921, 1922, 1925, 1928, 1930, 1932, 1952, 1954], "arg0": [1, 24, 1908], "arg1": [1, 24, 39, 40, 42, 1908], "repres": [1, 8, 11, 21, 22, 30, 31, 32, 34, 35, 41, 43, 45, 47, 55, 69, 71, 222, 748, 780, 781, 784, 877, 942, 946, 954, 958, 967, 999, 1002, 1066, 1087, 1089, 1094, 1096, 1097, 1098, 1099, 1123, 1146, 1153, 1182, 1183, 1186, 1189, 1192, 1209, 1210, 1241, 1283, 1335, 1350, 1427, 1433, 1474, 1476, 1478, 1607, 1613, 1616, 1621, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1650, 1661, 1685, 1691, 1697, 1699, 1710, 1753, 1793, 1794, 1795, 1797, 1798, 1807, 1811, 1843, 1844, 1849, 1855, 1856, 1866, 1868, 1869, 1876, 1879, 1884, 1889, 1894, 1895, 1897, 1899, 1900, 1903, 1907, 1908, 1910, 1914, 1916, 1917, 1919, 1921, 1925, 1928, 1942, 1943, 1947, 1956, 1957], "order": [1, 3, 5, 24, 25, 26, 28, 30, 42, 45, 47, 48, 53, 54, 55, 139, 180, 197, 222, 302, 304, 306, 310, 320, 391, 475, 476, 668, 780, 781, 790, 842, 864, 881, 882, 895, 901, 902, 919, 930, 970, 1012, 1023, 1054, 1057, 1058, 1066, 1084, 1086, 1087, 1093, 1105, 1106, 1107, 1108, 1124, 1134, 1146, 1193, 1213, 1224, 1230, 1232, 1239, 1246, 1249, 1250, 1257, 1258, 1261, 1263, 1266, 1295, 1301, 1315, 1317, 1335, 1344, 1350, 1364, 1427, 1428, 1437, 1454, 1455, 1491, 1499, 1526, 1550, 1551, 1552, 1576, 1598, 1607, 1616, 1626, 1640, 1641, 1642, 1643, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1691, 1697, 1700, 1710, 1745, 1748, 1773, 1783, 1811, 1829, 1836, 1838, 1843, 1846, 1851, 1857, 1864, 1865, 1866, 1867, 1869, 1870, 1873, 1881, 1882, 1883, 1884, 1887, 1890, 1892, 1893, 1894, 1895, 1897, 1900, 1903, 1905, 1908, 1910, 1912, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1932, 1935, 1939, 1940, 1942, 1944, 1948, 1952, 1954], "backend": [1, 14, 40, 44, 47, 729, 730, 731, 780, 781, 821, 843, 844, 847, 849, 850, 889, 895, 940, 946, 992, 1023, 1066, 1123, 1207, 1230, 1237, 1239, 1257, 1308, 1309, 1310, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1564, 1576, 1607, 1661, 1662, 1753, 1847, 1849, 1865, 1867, 1868, 1873, 1877, 1880, 1891, 1892, 1894, 1903, 1904, 1910, 1917, 1919, 1925, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1951], "side": [1, 14, 24, 41, 43, 45, 52, 55, 56, 59, 756, 757, 760, 761, 762, 933, 1001, 1060, 1082, 1083, 1085, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1102, 1190, 1191, 1238, 1243, 1254, 1256, 1340, 1341, 1342, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1448, 1449, 1451, 1452, 1453, 1478, 1482, 1483, 1484, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1564, 1685, 1714, 1715, 1745, 1807, 1834, 1864, 1866, 1867, 1869, 1888, 1889, 1892, 1894, 1897, 1921, 1939, 1944, 1947], "creation": [1, 2, 21, 24, 26, 55, 733, 734, 744, 752, 812, 969, 1123, 1607, 1608, 1621, 1866, 1870, 1879, 1881, 1889, 1892, 1921, 1923, 1925, 1931, 1942, 1947], "warmup": [1, 3, 1012, 1892, 1915, 1939, 1944, 1952], "correl": [1, 30, 42, 954, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372], "view": [1, 7, 8, 11, 18, 21, 22, 26, 28, 32, 45, 47, 55, 56, 64, 68, 211, 243, 423, 485, 486, 487, 595, 606, 680, 685, 748, 866, 874, 875, 876, 884, 922, 934, 951, 952, 1056, 1057, 1064, 1105, 1106, 1107, 1108, 1123, 1156, 1168, 1193, 1249, 1260, 1309, 1371, 1379, 1397, 1427, 1442, 1478, 1479, 1480, 1481, 1518, 1563, 1603, 1604, 1607, 1611, 1700, 1732, 1736, 1737, 1741, 1747, 1748, 1779, 1799, 1810, 1821, 1826, 1830, 1842, 1855, 1856, 1858, 1865, 1866, 1867, 1881, 1883, 1884, 1890, 1894, 1908, 1911, 1918, 1921, 1923, 1925, 1927, 1928, 1931, 1943, 1949, 1951, 1953, 1954], "difficult": [1, 7, 9, 45, 52, 1134, 1857, 1943, 1944, 1950, 1952, 1954], "eas": [1, 55, 1891, 1894, 1898, 1942, 1953], "sequenc": [1, 21, 26, 28, 29, 30, 45, 47, 139, 554, 723, 748, 802, 868, 881, 895, 924, 926, 927, 930, 938, 972, 979, 980, 983, 1051, 1065, 1067, 1134, 1154, 1155, 1158, 1209, 1249, 1295, 1335, 1345, 1350, 1355, 1364, 1371, 1379, 1397, 1433, 1442, 1455, 1470, 1471, 1472, 1473, 1474, 1518, 1576, 1616, 1619, 1626, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1655, 1658, 1662, 1677, 1716, 1718, 1722, 1745, 1804, 1807, 1857, 1859, 1862, 1866, 1867, 1868, 1884, 1892, 1896, 1908, 1910, 1913, 1914, 1921, 1931, 1932, 1939, 1941, 1942, 1944, 1953, 1954], "gener": [1, 2, 3, 7, 8, 14, 21, 22, 24, 30, 34, 35, 42, 45, 47, 48, 49, 56, 58, 61, 64, 73, 142, 143, 162, 247, 275, 366, 409, 442, 469, 596, 668, 897, 910, 940, 942, 998, 1001, 1009, 1010, 1013, 1014, 1033, 1034, 1036, 1037, 1038, 1066, 1088, 1089, 1123, 1134, 1145, 1150, 1169, 1197, 1203, 1214, 1225, 1230, 1239, 1256, 1257, 1261, 1266, 1286, 1294, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1317, 1363, 1374, 1388, 1470, 1478, 1479, 1491, 1598, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1648, 1651, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1697, 1699, 1702, 1716, 1718, 1720, 1721, 1722, 1724, 1746, 1759, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1812, 1827, 1831, 1847, 1849, 1851, 1857, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1877, 1882, 1887, 1889, 1892, 1894, 1896, 1897, 1899, 1900, 1902, 1906, 1908, 1910, 1912, 1913, 1915, 1920, 1921, 1922, 1925, 1928, 1930, 1932, 1934, 1936, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1955], "seq": [1, 593, 748, 927, 939, 1295, 1379, 1397, 1433, 1442, 1470, 1472, 1474, 1643, 1841], "n": [1, 3, 24, 26, 29, 30, 32, 34, 39, 42, 55, 218, 249, 395, 453, 454, 674, 677, 678, 679, 723, 746, 748, 769, 865, 905, 908, 909, 911, 918, 920, 924, 930, 931, 932, 933, 958, 959, 960, 961, 962, 963, 964, 965, 1047, 1048, 1058, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1126, 1129, 1134, 1146, 1150, 1151, 1155, 1190, 1193, 1205, 1209, 1210, 1213, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1266, 1274, 1283, 1288, 1290, 1295, 1298, 1319, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1409, 1410, 1411, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1497, 1509, 1510, 1518, 1522, 1526, 1561, 1564, 1566, 1576, 1607, 1614, 1625, 1634, 1653, 1697, 1698, 1699, 1704, 1709, 1710, 1716, 1722, 1724, 1737, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1788, 1789, 1805, 1806, 1807, 1811, 1812, 1826, 1827, 1832, 1836, 1838, 1851, 1852, 1853, 1854, 1857, 1867, 1869, 1873, 1882, 1883, 1887, 1889, 1892, 1894, 1896, 1897, 1902, 1913, 1915, 1916, 1917, 1925, 1926, 1930, 1931, 1932, 1944, 1947, 1949], "counter": [1, 24, 1005, 1023, 1168, 1364, 1879, 1881, 1889], "increment": [1, 24, 41, 45, 1119, 1155, 1197, 1364, 1866, 1868, 1889, 1908, 1921, 1939], "stash": [1, 5, 1892, 1894, 1914], "associ": [1, 8, 9, 24, 26, 35, 45, 883, 940, 975, 1026, 1028, 1154, 1155, 1193, 1243, 1254, 1256, 1265, 1350, 1427, 1437, 1510, 1607, 1615, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1767, 1769, 1866, 1869, 1875, 1882, 1883, 1889, 1897, 1900, 1903, 1905, 1908, 1913, 1914, 1915, 1921, 1922, 1928, 1931, 1943, 1944, 1947, 1954, 1956], "tell": [1, 7, 55, 484, 1194, 1201, 1265, 1662, 1866, 1876, 1889, 1894, 1895, 1913, 1941, 1956], "top": [1, 3, 7, 8, 13, 21, 26, 29, 30, 34, 47, 51, 55, 735, 905, 1343, 1344, 1363, 1387, 1394, 1418, 1434, 1476, 1479, 1526, 1621, 1625, 1627, 1774, 1829, 1848, 1870, 1876, 1881, 1894, 1908, 1912, 1941, 1951, 1952], "m": [1, 4, 8, 22, 24, 29, 30, 38, 42, 45, 55, 674, 677, 678, 679, 708, 716, 717, 726, 727, 728, 729, 730, 731, 733, 734, 744, 746, 752, 802, 848, 849, 850, 908, 920, 924, 928, 1079, 1132, 1155, 1191, 1193, 1198, 1200, 1204, 1205, 1211, 1214, 1225, 1233, 1239, 1240, 1241, 1242, 1246, 1247, 1248, 1250, 1251, 1252, 1257, 1258, 1259, 1260, 1266, 1283, 1284, 1288, 1298, 1317, 1319, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1376, 1377, 1378, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1395, 1396, 1413, 1414, 1416, 1417, 1420, 1421, 1422, 1426, 1427, 1434, 1435, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1564, 1566, 1607, 1614, 1619, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1651, 1697, 1698, 1699, 1709, 1716, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1788, 1789, 1807, 1811, 1812, 1827, 1834, 1866, 1867, 1868, 1869, 1892, 1894, 1896, 1897, 1900, 1902, 1905, 1916, 1925, 1935, 1936, 1938, 1944], "By": [1, 2, 3, 5, 14, 21, 24, 29, 33, 38, 45, 47, 55, 433, 434, 435, 436, 437, 868, 940, 958, 972, 1015, 1017, 1049, 1061, 1084, 1086, 1087, 1088, 1089, 1097, 1098, 1099, 1124, 1125, 1127, 1128, 1134, 1146, 1154, 1155, 1197, 1246, 1257, 1265, 1294, 1299, 1321, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1381, 1387, 1390, 1391, 1392, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1651, 1699, 1710, 1731, 1786, 1832, 1857, 1864, 1868, 1873, 1876, 1889, 1892, 1894, 1896, 1900, 1902, 1903, 1905, 1908, 1910, 1912, 1920, 1921, 1925, 1932, 1941, 1944, 1948, 1950, 1954], "compar": [1, 3, 5, 14, 21, 45, 47, 55, 74, 682, 853, 864, 895, 1023, 1070, 1071, 1094, 1095, 1096, 1100, 1101, 1102, 1103, 1112, 1113, 1137, 1149, 1168, 1182, 1218, 1282, 1292, 1297, 1328, 1433, 1607, 1652, 1755, 1843, 1869, 1879, 1892, 1894, 1897, 1903, 1906, 1916, 1917, 1921, 1925, 1930, 1932, 1934, 1935, 1939, 1945, 1951], "down": [1, 7, 14, 21, 30, 32, 39, 40, 42, 55, 767, 1023, 1061, 1108, 1114, 1203, 1239, 1537, 1710, 1738, 1894, 1899, 1902, 1910, 1921, 1923, 1925, 1930, 1948, 1954], "irrelev": [1, 3, 1870], "hand": [1, 4, 24, 47, 52, 55, 933, 1060, 1066, 1191, 1238, 1243, 1254, 1256, 1339, 1437, 1455, 1834, 1846, 1866, 1868, 1869, 1889, 1897, 1900, 1902, 1905, 1913, 1925, 1943, 1947], "underwai": [1, 1007, 1892], "up": [1, 6, 7, 8, 9, 14, 21, 22, 24, 28, 30, 32, 34, 38, 40, 41, 43, 44, 47, 50, 55, 767, 773, 878, 940, 1009, 1010, 1012, 1049, 1066, 1095, 1096, 1101, 1103, 1108, 1123, 1184, 1197, 1203, 1206, 1207, 1252, 1335, 1350, 1374, 1433, 1472, 1474, 1478, 1479, 1491, 1517, 1526, 1537, 1595, 1607, 1680, 1716, 1738, 1843, 1844, 1864, 1866, 1868, 1873, 1876, 1879, 1881, 1882, 1883, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1900, 1903, 1910, 1913, 1915, 1916, 1921, 1922, 1932, 1939, 1941, 1943, 1947, 1950, 1952, 1954, 1956], "nonzero": [1, 47, 1190, 1275, 1277, 1278, 1283, 1860, 1867, 1911, 1942, 1943, 1949], "origin": [1, 5, 11, 13, 18, 21, 22, 24, 26, 34, 45, 47, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 195, 198, 210, 474, 533, 591, 595, 605, 668, 748, 785, 826, 827, 842, 845, 846, 925, 930, 970, 1086, 1087, 1089, 1093, 1097, 1098, 1099, 1105, 1122, 1132, 1167, 1190, 1201, 1205, 1206, 1209, 1210, 1287, 1301, 1335, 1339, 1351, 1363, 1364, 1379, 1456, 1466, 1509, 1579, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1643, 1646, 1648, 1649, 1651, 1661, 1676, 1691, 1700, 1736, 1747, 1783, 1799, 1832, 1843, 1844, 1866, 1869, 1875, 1881, 1883, 1889, 1892, 1894, 1896, 1899, 1902, 1903, 1905, 1910, 1913, 1914, 1916, 1917, 1925, 1927, 1934, 1935, 1940, 1941, 1943, 1944, 1945, 1947, 1948, 1953, 1954, 1955], "did": [1, 7, 8, 24, 41, 1324, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1868, 1869, 1897, 1905, 1913, 1946, 1947, 1956], "relationship": [1, 9, 38, 55, 937, 1146, 1476, 1889, 1892, 1905, 1913, 1943, 1947], "conceptu": [1, 3, 1889, 1895, 1923, 1941], "tag": [1, 3, 7, 24, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 946, 1265, 1864, 1865, 1899, 1905, 1913, 1930], "eventu": [1, 7, 41, 47, 1864, 1914, 1943], "itt": [1, 1915], "intel": [1, 4, 1865, 1906, 1951], "r": [1, 30, 53, 139, 877, 879, 881, 895, 896, 928, 939, 954, 1066, 1124, 1126, 1129, 1134, 1135, 1138, 1146, 1205, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1266, 1370, 1371, 1380, 1439, 1440, 1458, 1517, 1518, 1567, 1568, 1614, 1678, 1709, 1857, 1866, 1867, 1868, 1889, 1891, 1894, 1897, 1906, 1925, 1928, 1930, 1947, 1954], "instrument": [1, 3, 22, 1309, 1865, 1899, 1935], "technologi": [1, 45, 1865, 1908, 1909, 1936], "applic": [1, 2, 9, 30, 41, 476, 787, 798, 799, 800, 801, 887, 940, 991, 1128, 1304, 1363, 1364, 1472, 1474, 1509, 1607, 1846, 1865, 1876, 1884, 1889, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1904, 1910, 1912, 1916, 1921, 1922, 1923, 1925, 1931, 1944, 1956], "across": [1, 8, 14, 21, 22, 24, 26, 28, 32, 42, 47, 52, 55, 605, 723, 807, 862, 906, 983, 1022, 1023, 1066, 1080, 1134, 1204, 1209, 1295, 1344, 1364, 1374, 1415, 1433, 1435, 1466, 1478, 1496, 1499, 1528, 1544, 1591, 1607, 1626, 1630, 1654, 1741, 1857, 1865, 1866, 1879, 1882, 1884, 1889, 1893, 1896, 1899, 1900, 1902, 1903, 1904, 1912, 1914, 1917, 1921, 1922, 1927, 1930, 1935, 1939, 1942, 1944, 1947, 1954], "tool": [1, 4, 8, 9, 18, 24, 42, 55, 849, 904, 1309, 1786, 1864, 1865, 1866, 1868, 1891, 1892, 1906, 1910, 1913, 1915, 1935, 1941, 1944, 1948, 1952, 1954, 1956], "With": [1, 18, 21, 24, 30, 45, 47, 54, 727, 728, 729, 730, 731, 773, 1023, 1087, 1088, 1089, 1097, 1098, 1099, 1210, 1345, 1346, 1347, 1356, 1357, 1359, 1360, 1373, 1390, 1391, 1392, 1466, 1477, 1479, 1502, 1505, 1537, 1562, 1595, 1677, 1720, 1870, 1889, 1892, 1894, 1916, 1921, 1925, 1930, 1938, 1945, 1947, 1951, 1954], "abl": [1, 2, 7, 8, 18, 24, 26, 41, 45, 52, 1123, 1191, 1204, 1470, 1607, 1866, 1873, 1882, 1889, 1894, 1895, 1905, 1910, 1913, 1916, 1921, 1925, 1932, 1940, 1942, 1943, 1944, 1945, 1954, 1956], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 324, 729, 730, 731, 885, 895, 1134, 1716, 1857, 1889, 1892, 1893, 1894, 1907, 1908, 1921, 1922, 1936, 1944], "traceback": [1, 18, 34, 42, 54, 55, 1168, 1178, 1786, 1868, 1869, 1870, 1881, 1884, 1894, 1904, 1925, 1932, 1954, 1956], "fail": [1, 7, 24, 30, 32, 33, 34, 39, 40, 41, 42, 44, 45, 54, 55, 56, 61, 64, 73, 896, 897, 970, 1023, 1194, 1201, 1204, 1223, 1252, 1257, 1265, 1266, 1283, 1660, 1869, 1871, 1881, 1889, 1892, 1894, 1902, 1903, 1906, 1910, 1913, 1921, 1940, 1941, 1942, 1944, 1945, 1947, 1954, 1956], "debug": [1, 2, 4, 5, 8, 21, 38, 45, 68, 70, 668, 815, 816, 820, 831, 896, 897, 940, 942, 946, 967, 1000, 1040, 1141, 1223, 1601, 1602, 1603, 1604, 1752, 1760, 1865, 1868, 1875, 1889, 1891, 1892, 1893, 1898, 1899, 1900, 1904, 1906, 1908, 1910, 1913, 1934, 1941, 1942, 1945, 1946, 1956], "test": [1, 3, 14, 18, 24, 39, 41, 42, 45, 55, 56, 63, 64, 681, 687, 940, 1083, 1085, 1086, 1091, 1092, 1097, 1098, 1099, 1101, 1103, 1179, 1180, 1184, 1185, 1187, 1188, 1661, 1775, 1865, 1866, 1870, 1879, 1881, 1889, 1897, 1904, 1910, 1912, 1930, 1935, 1943, 1954, 1955], "slow": [1, 896, 1203, 1207, 1223, 1224, 1611, 1612, 1647, 1843, 1897, 1902, 1930, 1942, 1943], "import": [1, 2, 3, 5, 7, 9, 13, 14, 17, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 38, 39, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 210, 668, 722, 729, 730, 731, 760, 761, 762, 780, 848, 849, 850, 899, 901, 919, 926, 958, 1117, 1119, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1132, 1168, 1190, 1191, 1194, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1245, 1246, 1249, 1250, 1263, 1295, 1393, 1427, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1642, 1643, 1644, 1645, 1646, 1647, 1654, 1679, 1680, 1703, 1866, 1868, 1869, 1870, 1879, 1881, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1908, 1909, 1910, 1916, 1919, 1921, 1922, 1923, 1925, 1928, 1930, 1931, 1932, 1935, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1952, 1953, 1954, 1955], "myfunc": [1, 1895], "inp": [1, 13, 21, 24, 55, 882, 883, 884, 1478, 1607, 1949, 1952, 1955], "clone": [1, 15, 21, 47, 56, 243, 436, 885, 888, 899, 901, 902, 922, 1197, 1370, 1594, 1825, 1834, 1867, 1881, 1884, 1905, 1911, 1915, 1925, 1927, 1928, 1932, 1949], "run_fn": [1, 5, 845, 851], "last": [1, 5, 6, 11, 21, 22, 25, 28, 29, 30, 41, 54, 55, 304, 605, 680, 748, 865, 909, 918, 924, 934, 1009, 1049, 1054, 1058, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1105, 1150, 1151, 1155, 1168, 1170, 1178, 1190, 1215, 1249, 1252, 1257, 1294, 1299, 1335, 1348, 1363, 1371, 1373, 1379, 1397, 1399, 1414, 1434, 1437, 1441, 1442, 1455, 1471, 1472, 1478, 1497, 1518, 1527, 1540, 1563, 1564, 1607, 1608, 1653, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1736, 1745, 1753, 1783, 1786, 1793, 1794, 1795, 1797, 1798, 1799, 1807, 1811, 1827, 1829, 1832, 1855, 1856, 1868, 1869, 1879, 1882, 1884, 1889, 1892, 1894, 1897, 1904, 1910, 1913, 1914, 1925, 1931, 1932, 1940, 1948, 1954], "stdin": [1, 1168, 1786, 1884, 1894, 1904, 1925], "instal": [1, 3, 14, 15, 24, 55, 1864, 1900, 1901, 1908, 1909, 1910, 1913, 1921, 1930, 1940, 1941, 1942, 1947, 1950], "_tensor": [1, 143], "py": [1, 4, 14, 18, 24, 28, 30, 33, 40, 42, 47, 55, 75, 848, 1607, 1864, 1866, 1869, 1875, 1893, 1897, 1899, 1902, 1910, 1913, 1916, 1922, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1951, 1953, 1954, 1956], "93": [1, 605], "retain_graph": [1, 139, 881, 895, 901, 902, 1134, 1857, 1867, 1888, 1889, 1921], "90": [1, 1050, 1695, 1737], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 24, 39, 41, 1864, 1892, 1915, 1948], "53": [1, 469], "44": [1, 310, 433, 1069, 1342, 1422, 1647, 1941], "set_detect_anomali": 1, "behaviour": [1, 681, 682, 687, 1526, 1564, 1691, 1760, 1864, 1903], "interpos": [1, 1894], "grad_fn": [1, 139, 324, 476, 868, 881, 889, 890, 891, 892, 893, 894, 899, 901, 902, 1122, 1615, 1788, 1889, 1900, 1905], "node": [1, 24, 28, 32, 34, 40, 41, 45, 47, 55, 56, 64, 68, 71, 668, 807, 808, 809, 812, 813, 814, 1012, 1132, 1208, 1350, 1364, 1607, 1661, 1877, 1892, 1908, 1910, 1913, 1914, 1921, 1922, 1923, 1933, 1935, 1942, 1943, 1944, 1951, 1953, 1954], "grad_mod": [1, 1867], "least": [1, 5, 6, 8, 22, 26, 30, 40, 41, 47, 249, 391, 685, 911, 1054, 1056, 1057, 1066, 1107, 1108, 1146, 1154, 1155, 1190, 1216, 1239, 1266, 1288, 1321, 1335, 1607, 1641, 1864, 1869, 1883, 1887, 1889, 1890, 1892, 1896, 1914, 1917, 1923, 1925, 1926, 1927, 1932, 1944, 1946, 1954], "intermediari": [1, 14, 30, 887, 1889, 1897], "access": [1, 9, 18, 21, 24, 26, 47, 54, 56, 58, 69, 476, 545, 722, 887, 976, 1193, 1196, 1209, 1256, 1335, 1427, 1598, 1609, 1610, 1615, 1619, 1641, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1865, 1866, 1867, 1869, 1870, 1873, 1877, 1880, 1881, 1883, 1884, 1889, 1892, 1896, 1897, 1899, 1900, 1908, 1921, 1925, 1928, 1929, 1931, 1939, 1941, 1942, 1943, 1944, 1946, 1950, 1957], "isinst": [1, 21, 30, 55, 899, 901, 902, 1180, 1191, 1867, 1869, 1889, 1894, 1900, 1913, 1925, 1953, 1954], "dir": [1, 1009, 1661, 1864, 1869, 1913], "__call__": [1, 1193, 1427], "__class__": [1, 56, 58], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1870], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1870], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1869], "__ne__": 1, "__new__": [1, 1868, 1870], "__reduce__": [1, 1913], "__reduce_ex__": 1, "__repr__": [1, 3, 1894], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 55, 1867, 1869], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1889], "metadata": [1, 3, 13, 26, 34, 35, 45, 56, 63, 64, 1265, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1741, 1884, 1889, 1894, 1895, 1905, 1908, 1913, 1915, 1921, 1922, 1925, 1930, 1943, 1953], "next_funct": 1, "register_prehook": [1, 1889], "allclos": [1, 52, 53, 55, 896, 897, 1009, 1088, 1089, 1095, 1096, 1123, 1124, 1126, 1127, 1128, 1129, 1133, 1134, 1241, 1243, 1254, 1256, 1259, 1260, 1285, 1619, 1646, 1709, 1857, 1867, 1895, 1911, 1925], "pack": [1, 28, 726, 727, 728, 729, 730, 731, 733, 734, 748, 769, 1209, 1210, 1285, 1364, 1379, 1397, 1442, 1640, 1641, 1642, 1643, 1867, 1877, 1884, 1889, 1896, 1906, 1916], "unpack": [1, 56, 61, 62, 748, 884, 1209, 1241, 1285, 1364, 1643, 1645, 1652, 1662, 1869, 1870, 1889, 1894, 1896], "hook": [1, 25, 28, 29, 47, 475, 476, 736, 745, 887, 901, 902, 1012, 1193, 1364, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1648, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1865, 1885, 1893, 1894, 1899, 1907, 1908, 1913, 1916, 1941, 1943, 1944, 1945, 1947], "common": [1, 3, 8, 21, 32, 41, 52, 56, 70, 75, 673, 781, 853, 913, 916, 921, 953, 1061, 1066, 1111, 1112, 1113, 1114, 1136, 1216, 1265, 1316, 1345, 1346, 1347, 1350, 1466, 1508, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1729, 1741, 1808, 1849, 1865, 1869, 1874, 1883, 1889, 1892, 1894, 1895, 1896, 1900, 1902, 1905, 1910, 1913, 1925, 1926, 1929, 1932, 1942, 1944, 1947, 1950, 1952, 1953, 1954, 1956], "trade": [1, 5, 8, 47, 1257, 1344, 1753, 1891, 1896, 1917], "leav": [1, 8, 32, 42, 139, 881, 1198, 1211, 1617, 1620, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1802, 1866, 1868, 1869, 1889, 1892, 1908, 1913, 1917, 1947], "especi": [1, 9, 11, 21, 24, 55, 243, 922, 940, 947, 1594, 1868, 1889, 1894, 1895, 1903, 1905, 1916, 1921, 1925, 1939, 1943, 1944, 1946, 1947], "notic": [1, 13, 24, 677, 1086, 1100, 1288, 1298, 1343, 1479, 1543, 1682, 1683, 1688, 1689, 1695, 1843, 1865, 1866, 1889, 1925, 1944, 1948, 1952], "fit": [1, 9, 33, 51, 52, 487, 905, 1190, 1669, 1731, 1892, 1908, 1914, 1932, 1954], "evalu": [1, 4, 8, 9, 28, 29, 30, 45, 50, 55, 681, 687, 786, 851, 896, 1023, 1129, 1130, 1193, 1335, 1339, 1345, 1346, 1347, 1365, 1382, 1390, 1391, 1392, 1399, 1427, 1441, 1445, 1466, 1569, 1591, 1617, 1669, 1685, 1716, 1869, 1870, 1894, 1900, 1907, 1908, 1925, 1933, 1936, 1941, 1942, 1943], "saved_tensors_hook": [1, 887, 1889], "pack_hook": [1, 1889], "unpack_hook": [1, 1889], "pair": [1, 24, 26, 29, 30, 41, 43, 605, 723, 853, 928, 958, 1100, 1207, 1257, 1295, 1419, 1428, 1433, 1437, 1566, 1678, 1725, 1868, 1869, 1875, 1882, 1889, 1892, 1914, 1921, 1922, 1923, 1930, 1932, 1935, 1944], "retriev": [1, 21, 22, 24, 28, 32, 41, 55, 525, 877, 878, 1370, 1374, 1478, 1517, 1607, 1641, 1661, 1786, 1884, 1889, 1899, 1910, 1913, 1914, 1921, 1922, 1923, 1941, 1947, 1956], "everytim": 1, "store": [1, 3, 5, 14, 18, 22, 26, 32, 42, 45, 47, 55, 315, 321, 387, 674, 810, 813, 878, 920, 979, 981, 983, 1138, 1193, 1199, 1201, 1204, 1224, 1235, 1236, 1237, 1266, 1271, 1283, 1345, 1346, 1347, 1370, 1427, 1455, 1607, 1614, 1616, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1791, 1864, 1865, 1866, 1883, 1884, 1885, 1893, 1894, 1895, 1896, 1899, 1908, 1913, 1916, 1921, 1922, 1923, 1925, 1927, 1930, 1931, 1935, 1941, 1943, 1946, 1947], "content": [1, 3, 7, 26, 34, 45, 55, 887, 1201, 1204, 1224, 1235, 1237, 1242, 1255, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1802, 1831, 1864, 1869, 1878, 1881, 1889, 1902, 1921, 1929, 1930, 1931, 1950, 1954], "equal": [1, 13, 22, 24, 30, 41, 42, 43, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 249, 487, 533, 605, 668, 682, 683, 684, 727, 728, 729, 730, 731, 748, 756, 757, 808, 809, 810, 813, 849, 864, 909, 916, 918, 929, 930, 948, 958, 981, 983, 1036, 1055, 1071, 1110, 1124, 1125, 1137, 1150, 1151, 1153, 1154, 1155, 1178, 1182, 1218, 1239, 1252, 1256, 1259, 1260, 1283, 1284, 1295, 1312, 1328, 1332, 1333, 1334, 1336, 1337, 1338, 1343, 1344, 1350, 1356, 1357, 1359, 1360, 1364, 1371, 1374, 1375, 1376, 1379, 1381, 1397, 1432, 1433, 1441, 1442, 1478, 1494, 1495, 1499, 1502, 1505, 1517, 1518, 1521, 1522, 1528, 1607, 1641, 1644, 1697, 1710, 1767, 1768, 1773, 1799, 1807, 1826, 1842, 1847, 1860, 1867, 1870, 1876, 1882, 1883, 1884, 1889, 1890, 1897, 1903, 1911, 1912, 1914, 1926, 1930, 1932, 1953], "term": [1, 8, 9, 30, 41, 55, 546, 722, 751, 780, 930, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1097, 1098, 1099, 1102, 1114, 1225, 1335, 1343, 1381, 1388, 1397, 1398, 1432, 1441, 1458, 1523, 1535, 1569, 1580, 1607, 1614, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1729, 1774, 1865, 1869, 1888, 1889, 1894, 1895, 1896, 1897, 1902, 1910, 1913, 1916, 1922, 1925, 1936, 1942, 1944], "mulbackward0": [1, 890, 893, 894], "inplac": [1, 45, 50, 52, 55, 56, 63, 64, 743, 746, 764, 766, 768, 779, 785, 802, 826, 827, 828, 845, 846, 851, 885, 1123, 1193, 1339, 1349, 1365, 1366, 1367, 1368, 1369, 1372, 1384, 1385, 1386, 1413, 1426, 1427, 1445, 1446, 1447, 1454, 1456, 1469, 1492, 1500, 1511, 1512, 1513, 1514, 1515, 1519, 1530, 1531, 1532, 1541, 1556, 1571, 1572, 1574, 1577, 1579, 1589, 1601, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1846, 1867, 1876, 1889, 1894, 1910, 1935, 1949, 1953], "lead": [1, 5, 7, 20, 24, 31, 47, 53, 55, 885, 889, 891, 895, 897, 942, 1117, 1134, 1224, 1397, 1442, 1458, 1796, 1802, 1857, 1869, 1883, 1884, 1889, 1891, 1893, 1894, 1895, 1902, 1903, 1906, 1912, 1913, 1916, 1921, 1925, 1930, 1931, 1939, 1944, 1945], "undefin": [1, 24, 31, 34, 47, 308, 459, 605, 866, 888, 896, 897, 916, 924, 1069, 1118, 1119, 1343, 1660, 1703, 1889, 1892, 1894, 1895, 1921], "recurs": [1, 30, 45, 47, 55, 942, 945, 1058, 1193, 1205, 1207, 1427, 1683, 1868, 1894, 1900, 1913, 1921, 1941, 1944, 1945, 1947], "inner": [1, 3, 47, 48, 53, 803, 805, 889, 1049, 1124, 1128, 1133, 1832, 1867, 1911, 1921, 1935], "save_on_cpu": 1, "pin_memori": [1, 21, 45, 56, 61, 64, 65, 66, 433, 434, 435, 436, 437, 1067, 1069, 1718, 1722, 1724, 1825, 1866, 1867, 1884, 1892, 1911, 1927, 1949], "within": [1, 5, 9, 13, 21, 22, 24, 28, 29, 30, 41, 42, 43, 45, 47, 54, 55, 68, 69, 77, 476, 866, 896, 897, 940, 973, 1049, 1193, 1197, 1286, 1340, 1341, 1342, 1350, 1366, 1367, 1368, 1372, 1374, 1420, 1421, 1422, 1427, 1433, 1466, 1478, 1526, 1550, 1551, 1552, 1607, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1714, 1715, 1745, 1767, 1845, 1849, 1866, 1868, 1869, 1879, 1884, 1887, 1891, 1892, 1894, 1898, 1899, 1900, 1903, 1910, 1912, 1913, 1916, 1919, 1920, 1921, 1922, 1930, 1942, 1944, 1946, 1953, 1954], "move": [1, 5, 7, 8, 9, 14, 24, 26, 47, 55, 512, 577, 809, 1086, 1193, 1201, 1260, 1265, 1301, 1345, 1346, 1347, 1400, 1401, 1402, 1427, 1466, 1564, 1609, 1610, 1677, 1868, 1877, 1878, 1881, 1883, 1892, 1895, 1896, 1900, 1901, 1902, 1905, 1912, 1913, 1914, 1916, 1921, 1927, 1932, 1944, 1947, 1954], "copi": [1, 7, 11, 21, 22, 24, 26, 32, 39, 45, 47, 51, 52, 55, 179, 185, 195, 198, 304, 391, 436, 446, 451, 459, 481, 487, 568, 569, 570, 571, 591, 605, 780, 802, 826, 827, 867, 868, 883, 929, 937, 940, 979, 980, 1105, 1106, 1107, 1108, 1110, 1123, 1193, 1205, 1265, 1266, 1327, 1364, 1374, 1427, 1437, 1478, 1607, 1640, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1726, 1732, 1738, 1825, 1834, 1840, 1866, 1867, 1881, 1884, 1889, 1890, 1892, 1894, 1902, 1911, 1913, 1914, 1915, 1916, 1921, 1925, 1927, 1928, 1929, 1931, 1935, 1943, 1944, 1946, 1949, 1953], "pin": [1, 198, 326, 433, 434, 435, 436, 437, 451, 568, 591, 1067, 1069, 1193, 1427, 1640, 1718, 1722, 1724, 1825, 1865, 1884, 1927], "asynchron": [1, 3, 4, 54, 185, 198, 568, 591, 992, 1193, 1196, 1212, 1427, 1865, 1870, 1891, 1893, 1921, 1927, 1930, 1952], "prod_1": 1, "prod_2": 1, "del": [1, 1870, 1881, 1894, 1896], "illustr": [1, 1869, 1888, 1894, 1925, 1939, 1947, 1948], "aliv": [1, 5, 21, 32, 41, 970, 1889, 1892, 1896, 1902, 1921, 1922, 1923], "live": [1, 28, 1009, 1012, 1193, 1427, 1866, 1892, 1896, 1921, 1923, 1939, 1943, 1956], "releas": [1, 7, 20, 24, 41, 43, 51, 55, 501, 675, 930, 931, 966, 967, 968, 974, 991, 1001, 1002, 1005, 1009, 1010, 1012, 1023, 1139, 1193, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1283, 1284, 1304, 1367, 1397, 1427, 1442, 1550, 1551, 1552, 1654, 1709, 1725, 1741, 1807, 1811, 1834, 1864, 1865, 1868, 1879, 1881, 1889, 1891, 1892, 1898, 1903, 1904, 1905, 1906, 1910, 1916, 1921, 1931, 1932, 1944, 1954], "delet": [1, 24, 55, 882, 967, 975, 1864, 1877, 1881, 1889, 1911, 1920, 1921, 1923, 1953], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 13, 15, 18, 24, 26, 28, 42, 45, 47, 48, 54, 56, 70, 668, 677, 748, 756, 757, 889, 891, 895, 1040, 1205, 1288, 1298, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1345, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1379, 1380, 1390, 1397, 1398, 1433, 1442, 1444, 1461, 1470, 1472, 1474, 1475, 1476, 1477, 1494, 1495, 1512, 1513, 1514, 1519, 1521, 1522, 1543, 1607, 1699, 1846, 1865, 1866, 1868, 1869, 1870, 1873, 1875, 1883, 1884, 1889, 1894, 1896, 1897, 1904, 1907, 1910, 1915, 1916, 1921, 1925, 1930, 1933, 1936, 1945, 1946], "messag": [1, 2, 5, 18, 24, 34, 43, 45, 52, 55, 56, 57, 72, 73, 612, 668, 1026, 1028, 1223, 1224, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1864, 1866, 1867, 1869, 1870, 1875, 1896, 1908, 1910, 1914, 1915, 1921, 1923, 1932, 1946, 1954], "get": [1, 8, 13, 14, 21, 24, 25, 26, 29, 41, 42, 43, 44, 45, 47, 52, 54, 55, 77, 139, 324, 674, 722, 776, 777, 849, 850, 881, 884, 924, 994, 995, 996, 1013, 1053, 1123, 1126, 1127, 1128, 1140, 1168, 1209, 1261, 1370, 1371, 1395, 1396, 1423, 1424, 1425, 1437, 1454, 1607, 1608, 1615, 1641, 1648, 1730, 1745, 1849, 1864, 1865, 1866, 1869, 1879, 1881, 1882, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1905, 1908, 1911, 1913, 1916, 1921, 1923, 1925, 1929, 1930, 1931, 1939, 1941, 1942, 1943, 1947, 1948, 1954, 1955], "register_multi_grad_hook": [1, 1889], "fn": [1, 32, 33, 34, 38, 43, 45, 47, 55, 901, 902, 942, 943, 945, 1124, 1130, 1134, 1193, 1194, 1206, 1211, 1427, 1857, 1866, 1868, 1869, 1873, 1881, 1889, 1899, 1921, 1940, 1944, 1945, 1946, 1947, 1952, 1953, 1954], "multi": [1, 4, 32, 41, 748, 970, 1013, 1033, 1066, 1086, 1155, 1193, 1344, 1364, 1379, 1397, 1427, 1430, 1431, 1432, 1433, 1442, 1470, 1472, 1479, 1499, 1607, 1865, 1866, 1869, 1889, 1891, 1892, 1900, 1904, 1912, 1921, 1925, 1928, 1931, 1933], "specifi": [1, 2, 3, 5, 8, 13, 14, 21, 22, 24, 28, 29, 30, 32, 34, 39, 40, 41, 42, 45, 47, 55, 86, 139, 184, 248, 308, 320, 459, 469, 481, 485, 487, 488, 501, 503, 505, 525, 533, 534, 548, 568, 571, 572, 573, 575, 576, 591, 668, 723, 729, 730, 731, 756, 757, 781, 782, 783, 787, 802, 811, 814, 828, 842, 846, 847, 849, 866, 868, 880, 881, 895, 911, 934, 940, 957, 958, 967, 969, 970, 979, 980, 981, 983, 998, 1001, 1012, 1037, 1047, 1048, 1049, 1053, 1054, 1056, 1066, 1069, 1080, 1083, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1124, 1125, 1128, 1134, 1135, 1146, 1154, 1155, 1193, 1197, 1209, 1210, 1236, 1246, 1248, 1250, 1251, 1260, 1263, 1265, 1266, 1276, 1293, 1295, 1301, 1321, 1322, 1325, 1341, 1342, 1343, 1344, 1350, 1359, 1361, 1363, 1364, 1370, 1371, 1374, 1381, 1387, 1388, 1393, 1394, 1397, 1418, 1419, 1424, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1494, 1495, 1498, 1499, 1509, 1510, 1517, 1518, 1523, 1526, 1538, 1545, 1561, 1562, 1569, 1576, 1582, 1583, 1607, 1612, 1614, 1615, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1651, 1654, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1674, 1676, 1677, 1678, 1679, 1680, 1685, 1690, 1691, 1699, 1707, 1716, 1732, 1737, 1738, 1741, 1758, 1785, 1787, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1805, 1806, 1810, 1826, 1828, 1832, 1842, 1843, 1844, 1845, 1849, 1851, 1852, 1853, 1857, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1882, 1883, 1889, 1892, 1894, 1898, 1900, 1902, 1906, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932, 1940, 1942, 1953], "ignor": [1, 5, 7, 24, 28, 33, 39, 45, 47, 55, 139, 487, 532, 674, 677, 678, 679, 723, 782, 783, 846, 849, 850, 862, 881, 895, 896, 897, 908, 930, 932, 933, 958, 961, 965, 1013, 1014, 1033, 1034, 1087, 1089, 1097, 1098, 1099, 1138, 1153, 1193, 1205, 1211, 1214, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1285, 1322, 1323, 1324, 1340, 1341, 1342, 1343, 1344, 1361, 1363, 1371, 1379, 1381, 1387, 1393, 1394, 1397, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1442, 1458, 1459, 1470, 1475, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1607, 1654, 1662, 1685, 1693, 1697, 1758, 1789, 1790, 1807, 1811, 1834, 1866, 1869, 1870, 1876, 1883, 1889, 1892, 1894, 1910, 1925, 1932, 1939, 1941, 1953], "rel": [1, 8, 9, 14, 22, 24, 30, 47, 55, 475, 476, 682, 864, 896, 897, 901, 902, 958, 1182, 1248, 1251, 1475, 1476, 1491, 1526, 1662, 1666, 1667, 1693, 1876, 1879, 1891, 1892, 1899, 1910, 1913, 1932, 1947], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 13, 45, 55, 56, 63, 64, 785, 826, 827, 845, 846, 940, 1123, 1197, 1913, 1931, 1943, 1944], "_allowmutationonsavedcontext": 1, "purpos": [1, 22, 24, 55, 76, 459, 487, 748, 896, 1203, 1288, 1350, 1379, 1433, 1601, 1602, 1603, 1604, 1758, 1879, 1884, 1889, 1894, 1913, 1922, 1940, 1944, 1947, 1948, 1954], "clear": [1, 2, 8, 9, 43, 55, 947, 1193, 1427, 1428, 1437, 1661, 1864, 1889, 1892, 1900, 1905, 1911, 1912], "upon": [1, 2, 21, 25, 32, 34, 55, 940, 1607, 1616, 1619, 1843, 1881, 1889, 1892, 1910, 1916, 1923], "sin_": [1, 1867, 1882], "8415": [1, 1925], "sinbackward0": 1, "variou": [2, 5, 14, 21, 24, 45, 55, 1266, 1847, 1849, 1873, 1876, 1881, 1884, 1894, 1900, 1902, 1912, 1916, 1918, 1925, 1936, 1943, 1955], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 24, 994, 1716, 1873, 1892, 1898, 1899, 1901, 1933], "string": [2, 3, 5, 12, 14, 21, 24, 32, 38, 39, 41, 45, 55, 591, 802, 842, 946, 992, 1009, 1010, 1066, 1123, 1193, 1201, 1204, 1265, 1355, 1356, 1357, 1427, 1428, 1437, 1470, 1472, 1474, 1501, 1502, 1503, 1630, 1709, 1741, 1749, 1751, 1848, 1849, 1864, 1867, 1868, 1869, 1870, 1883, 1889, 1894, 1899, 1900, 1905, 1908, 1910, 1913, 1915, 1921, 1927, 1928, 1930, 1935, 1940, 1944, 1947, 1954, 1955, 1956], "vsx": 2, "z": [2, 3, 10, 30, 47, 52, 56, 59, 63, 64, 605, 808, 865, 887, 931, 948, 1066, 1070, 1295, 1380, 1526, 1619, 1652, 1653, 1703, 1733, 1734, 1866, 1867, 1868, 1883, 1889, 1891, 1892, 1897, 1898, 1908, 1910, 1913, 1919, 1921, 1923, 1939, 1942, 1944, 1953, 1954], "vector": [2, 11, 22, 30, 47, 48, 52, 243, 302, 304, 310, 677, 678, 679, 872, 881, 883, 889, 890, 891, 892, 893, 894, 895, 921, 922, 928, 939, 954, 958, 966, 1047, 1048, 1053, 1055, 1129, 1133, 1134, 1138, 1226, 1233, 1241, 1249, 1250, 1254, 1257, 1261, 1262, 1263, 1283, 1288, 1295, 1317, 1319, 1345, 1346, 1347, 1350, 1364, 1370, 1371, 1374, 1382, 1390, 1391, 1392, 1436, 1466, 1475, 1478, 1517, 1518, 1526, 1528, 1562, 1566, 1594, 1611, 1613, 1615, 1619, 1650, 1654, 1698, 1699, 1791, 1811, 1851, 1854, 1857, 1889, 1897, 1916, 1925, 1930, 1946], "NO": [2, 74, 76], "avx": [2, 1938], "avx2": [2, 1916, 1938], "avx512": [2, 1938], "is_built": [2, 1901], "built": [2, 3, 7, 8, 14, 22, 24, 29, 34, 50, 55, 941, 992, 1203, 1476, 1685, 1865, 1884, 1889, 1891, 1892, 1894, 1898, 1900, 1901, 1902, 1916, 1918, 1940, 1941, 1947, 1954, 1955], "necessarili": [2, 22, 24, 30, 32, 41, 45, 73, 459, 896, 1230, 1252, 1263, 1294, 1363, 1434, 1892, 1894], "machin": [2, 24, 32, 41, 47, 48, 53, 1197, 1203, 1239, 1463, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1913, 1920, 1921, 1922, 1936, 1938, 1946], "driver": [2, 1138, 1239, 1257, 1258, 1303, 1867, 1892, 1903, 1921, 1952, 1954], "would": [2, 3, 5, 8, 9, 11, 14, 21, 24, 30, 32, 34, 41, 42, 45, 47, 49, 52, 55, 139, 433, 434, 435, 436, 437, 686, 748, 782, 842, 881, 885, 895, 930, 1067, 1069, 1087, 1127, 1128, 1191, 1193, 1194, 1198, 1201, 1209, 1210, 1308, 1309, 1340, 1341, 1342, 1343, 1344, 1379, 1393, 1397, 1420, 1421, 1422, 1427, 1437, 1442, 1526, 1537, 1598, 1607, 1608, 1640, 1652, 1680, 1718, 1722, 1724, 1735, 1745, 1825, 1826, 1831, 1866, 1868, 1869, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1902, 1905, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1939, 1940, 1942, 1943, 1944, 1946, 1948, 1950, 1953, 1954], "allow_tf32": [2, 1753, 1867, 1892, 1903], "tensorfloat": 2, "core": [2, 3, 7, 8, 45, 51, 69, 940, 962, 1023, 1660, 1869, 1873, 1891, 1892, 1893, 1902, 1903, 1913, 1933, 1942, 1947, 1951], "amper": [2, 1925], "newer": [2, 14, 45, 1029, 1648, 1891, 1892, 1905, 1907, 1912, 1913, 1917, 1946], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1892, 1903], "precis": [2, 3, 8, 11, 14, 22, 30, 47, 674, 677, 896, 897, 908, 920, 1012, 1109, 1142, 1239, 1257, 1263, 1288, 1298, 1340, 1341, 1342, 1344, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1420, 1421, 1422, 1479, 1537, 1576, 1607, 1738, 1753, 1758, 1865, 1869, 1879, 1885, 1889, 1900, 1913, 1916, 1917, 1919, 1926, 1928, 1930, 1931, 1951, 1957], "gemm": [2, 1891, 1910, 1944], "allow_bf16_reduced_precision_reduct": [2, 1892, 1903], "cufft_plan_cach": [2, 1892], "cufft": 2, "queri": [2, 24, 41, 55, 723, 969, 970, 972, 978, 1025, 1029, 1043, 1044, 1193, 1305, 1427, 1433, 1576, 1618, 1867, 1892, 1913, 1942, 1943, 1947], "specif": [2, 3, 7, 8, 9, 14, 24, 26, 28, 30, 32, 39, 41, 43, 45, 47, 52, 55, 56, 68, 70, 75, 77, 501, 842, 849, 905, 972, 1057, 1086, 1155, 1190, 1197, 1203, 1207, 1209, 1210, 1294, 1374, 1399, 1576, 1601, 1602, 1621, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1676, 1677, 1678, 1679, 1680, 1748, 1753, 1788, 1847, 1864, 1866, 1868, 1869, 1871, 1873, 1875, 1879, 1883, 1885, 1889, 1892, 1894, 1898, 1902, 1904, 1908, 1910, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1923, 1930, 1931, 1938, 1942, 1943, 1944, 1946, 1947, 1951, 1953, 1954], "via": [2, 7, 14, 15, 21, 24, 26, 30, 39, 45, 47, 51, 55, 505, 605, 896, 897, 927, 967, 1003, 1023, 1070, 1126, 1266, 1345, 1346, 1347, 1364, 1382, 1390, 1391, 1392, 1399, 1466, 1614, 1648, 1651, 1691, 1866, 1868, 1869, 1879, 1881, 1884, 1887, 1889, 1892, 1894, 1895, 1896, 1898, 1900, 1902, 1903, 1910, 1913, 1916, 1921, 1922, 1925, 1928, 1929, 1940, 1942, 1943, 1947, 1950, 1955], "readonli": 2, "show": [2, 4, 7, 12, 18, 21, 22, 24, 26, 31, 45, 47, 55, 69, 889, 895, 940, 1117, 1193, 1295, 1427, 1598, 1661, 1864, 1865, 1869, 1882, 1891, 1892, 1893, 1897, 1898, 1900, 1908, 1910, 1912, 1913, 1921, 1923, 1946, 1948, 1951, 1952, 1954, 1956], "max_siz": [2, 40, 42, 1892], "capac": [2, 1036, 1892, 1902], "preferred_linalg_librari": [2, 1230], "subject": [2, 3, 11, 18, 24, 28, 29, 47, 54, 55, 222, 853, 1576, 1607, 1869, 1882, 1883, 1889, 1894, 1910, 1914, 1915, 1916, 1917, 1921, 1925, 1928, 1933, 1934, 1935, 1942, 1951], "algebra": [2, 9, 1066, 1230, 1251, 1865, 1874], "cusolv": [2, 1257, 1258, 1811], "magma": [2, 1239, 1283, 1709, 1811, 1906, 1925], "decid": [2, 4, 7, 24, 41, 51, 1630, 1876, 1910, 1925, 1943, 1944, 1948], "heurist": [2, 14, 21, 41, 42, 55, 1066, 1948], "overrid": [2, 14, 22, 24, 25, 30, 34, 42, 47, 52, 55, 780, 781, 842, 878, 880, 1009, 1343, 1344, 1361, 1363, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1443, 1458, 1459, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1621, 1680, 1741, 1758, 1865, 1869, 1873, 1905, 1912, 1913, 1916, 1921, 1925, 1930, 1935, 1953], "wherev": [2, 9, 1882, 1947], "pick": [2, 24, 40, 42, 501, 940, 1889, 1921, 1941, 1942, 1948], "prefer": [2, 9, 21, 26, 32, 47, 850, 866, 891, 1191, 1234, 1247, 1251, 1259, 1266, 1434, 1576, 1745, 1807, 1825, 1866, 1889, 1892, 1913, 1925, 1944], "environ": [2, 3, 7, 14, 15, 18, 20, 22, 30, 32, 34, 39, 44, 45, 55, 68, 70, 668, 1203, 1209, 1397, 1442, 1846, 1864, 1866, 1875, 1889, 1891, 1893, 1898, 1903, 1904, 1906, 1914, 1921, 1938, 1940, 1944, 1954], "variabl": [2, 3, 5, 13, 14, 18, 20, 22, 30, 32, 34, 39, 44, 47, 52, 55, 56, 59, 63, 64, 68, 70, 436, 668, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 716, 717, 718, 719, 720, 722, 726, 727, 728, 729, 730, 731, 733, 734, 744, 748, 752, 787, 885, 954, 958, 1035, 1067, 1134, 1207, 1209, 1266, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1379, 1380, 1397, 1398, 1399, 1412, 1414, 1427, 1430, 1435, 1442, 1444, 1607, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1658, 1662, 1664, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1718, 1720, 1722, 1846, 1857, 1862, 1864, 1865, 1875, 1876, 1883, 1884, 1889, 1891, 1893, 1896, 1897, 1903, 1904, 1906, 1908, 1910, 1912, 1916, 1921, 1927, 1930, 1941, 1942, 1944, 1946, 1954], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 13, 21, 24, 26, 28, 29, 30, 32, 42, 47, 52, 54, 55, 56, 59, 63, 64, 842, 849, 853, 861, 909, 918, 967, 1001, 1018, 1025, 1067, 1069, 1079, 1084, 1102, 1120, 1123, 1150, 1151, 1174, 1181, 1193, 1196, 1209, 1213, 1264, 1280, 1427, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1626, 1630, 1658, 1718, 1720, 1722, 1725, 1749, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1862, 1866, 1869, 1870, 1885, 1888, 1894, 1899, 1900, 1902, 1904, 1905, 1916, 1921, 1922, 1923, 1925, 1928, 1930, 1941, 1943, 1944, 1945, 1953, 1954], "overridden": [2, 14, 55, 877, 878, 879, 1009, 1427, 1786, 1869, 1889, 1894, 1903, 1914, 1954, 1955], "achiev": [2, 21, 22, 24, 30, 42, 47, 1066, 1130, 1193, 1344, 1350, 1427, 1433, 1434, 1499, 1528, 1607, 1880, 1892, 1899, 1902, 1913, 1921, 1923, 1954], "better": [2, 3, 7, 8, 9, 14, 21, 24, 32, 51, 940, 1035, 1122, 1126, 1127, 1168, 1180, 1209, 1363, 1460, 1582, 1607, 1691, 1716, 1869, 1888, 1889, 1891, 1892, 1897, 1906, 1910, 1912, 1915, 1916, 1917, 1925, 1930, 1935, 1940, 1941, 1947, 1951], "select": [2, 5, 15, 19, 21, 24, 30, 32, 302, 304, 306, 310, 748, 930, 960, 961, 964, 973, 974, 978, 985, 986, 987, 988, 990, 1011, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1035, 1036, 1039, 1041, 1043, 1044, 1086, 1266, 1295, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1397, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1635, 1636, 1748, 1822, 1849, 1860, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1889, 1891, 1892, 1897, 1904, 1911, 1916, 1925, 1929, 1932, 1941, 1947, 1949, 1951, 1956], "incorrect": [2, 4, 5, 47, 55, 73, 74, 76, 243, 501, 544, 887, 896, 922, 1209, 1252, 1265, 1433, 1470, 1471, 1472, 1473, 1474, 1594, 1654, 1796, 1807, 1866, 1869, 1892, 1903, 1910], "linalg": [2, 395, 930, 931, 932, 933, 966, 1052, 1138, 1171, 1274, 1283, 1284, 1285, 1289, 1290, 1614, 1615, 1619, 1654, 1696, 1701, 1703, 1709, 1780, 1811, 1812, 1834, 1854, 1865], "inv": [2, 30, 1171, 1225, 1229, 1235, 1251, 1255, 1259], "inv_ex": 2, "cholesky_ex": [2, 1223], "lu_factor": [2, 1242, 1243, 1283, 1284, 1285], "lu": [2, 10, 1235, 1241, 1242, 1243, 1284, 1285, 1867], "eigh": [2, 1223, 1229, 1232, 1251, 1257, 1903], "eighval": 2, "svdval": [2, 1225, 1239, 1248, 1257, 1811, 1903], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 24, 56, 784, 1894, 1910, 1916, 1921, 1947], "scale": [2, 7, 21, 30, 32, 40, 42, 86, 461, 463, 605, 673, 677, 678, 679, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 741, 742, 743, 744, 747, 758, 760, 761, 762, 763, 765, 768, 769, 783, 787, 790, 807, 808, 809, 810, 813, 908, 1080, 1081, 1084, 1102, 1133, 1134, 1280, 1339, 1365, 1370, 1371, 1372, 1388, 1399, 1454, 1479, 1480, 1481, 1517, 1518, 1519, 1535, 1537, 1576, 1577, 1582, 1664, 1685, 1711, 1712, 1713, 1714, 1715, 1789, 1790, 1808, 1857, 1865, 1867, 1883, 1887, 1892, 1896, 1900, 1908, 1916, 1917, 1919, 1926, 1944], "product": [2, 15, 24, 30, 41, 139, 674, 677, 678, 679, 748, 881, 883, 890, 892, 893, 894, 895, 908, 920, 926, 930, 954, 966, 978, 1025, 1029, 1043, 1044, 1047, 1063, 1066, 1129, 1133, 1134, 1170, 1214, 1226, 1233, 1259, 1260, 1262, 1288, 1295, 1298, 1319, 1379, 1380, 1397, 1398, 1525, 1576, 1614, 1697, 1698, 1707, 1753, 1827, 1842, 1854, 1857, 1865, 1866, 1882, 1889, 1897, 1899, 1903, 1913, 1916, 1925, 1956], "attent": [2, 7, 723, 1344, 1433, 1470, 1472, 1474, 1499, 1576, 1865, 1906, 1929], "stai": [2, 7, 28, 128, 1364, 1892, 1902, 1916, 1921, 1925], "align": [2, 9, 22, 70, 748, 767, 773, 808, 814, 940, 1066, 1146, 1249, 1342, 1350, 1363, 1379, 1393, 1397, 1421, 1422, 1442, 1479, 1509, 1510, 1537, 1538, 1595, 1614, 1654, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1683, 1832, 1865, 1882, 1889, 1897, 1910, 1919, 1926], "src": [2, 3, 24, 55, 185, 217, 302, 310, 459, 500, 501, 502, 503, 504, 505, 507, 526, 1057, 1123, 1317, 1470, 1473, 1474, 1660, 1742, 1743, 1744, 1748, 1779, 1821, 1846, 1867, 1913, 1949], "transform": [2, 3, 13, 21, 26, 29, 45, 47, 52, 68, 69, 70, 769, 785, 826, 827, 845, 846, 931, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1122, 1123, 1124, 1128, 1133, 1190, 1203, 1348, 1382, 1390, 1391, 1392, 1399, 1414, 1455, 1471, 1472, 1473, 1474, 1491, 1497, 1526, 1543, 1562, 1598, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1774, 1807, 1865, 1895, 1914, 1916, 1925, 1930, 1935, 1936, 1941, 1946, 1947], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 30, 475, 476, 729, 730, 731, 748, 932, 933, 1223, 1230, 1233, 1243, 1257, 1333, 1334, 1341, 1342, 1344, 1346, 1347, 1351, 1356, 1357, 1359, 1367, 1368, 1370, 1372, 1379, 1380, 1391, 1392, 1397, 1398, 1399, 1410, 1411, 1421, 1422, 1439, 1440, 1442, 1444, 1461, 1477, 1480, 1481, 1491, 1499, 1526, 1561, 1567, 1568, 1614, 1615, 1648, 1660, 1811, 1867, 1882, 1883, 1889, 1892, 1893, 1894, 1896, 1897, 1910, 1929, 1930, 1931, 1942, 1951], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1576], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1576], "math_sdp_en": 2, "math": [2, 21, 55, 1076, 1243, 1245, 1538, 1576, 1699, 1716, 1812, 1865, 1866, 1868, 1869, 1903, 1925, 1926, 1932, 1954], "enable_math_sdp": [2, 1576], "sdp_kernel": [2, 1576], "enable_flash": 2, "enable_math": [2, 1576], "enable_mem_effici": 2, "temporarili": [2, 32, 1749, 1889, 1910, 1915, 1948], "previou": [2, 18, 24, 41, 45, 47, 55, 544, 748, 940, 1001, 1111, 1146, 1204, 1264, 1280, 1379, 1397, 1442, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1661, 1716, 1807, 1877, 1889, 1892, 1894, 1900, 1906, 1908, 1916, 1923, 1944], "restor": [2, 5, 28, 55, 77, 947, 1111, 1264, 1280, 1651, 1736, 1758, 1900, 1905, 1941], "is_avail": [2, 17, 24, 1849, 1865, 1892, 1898, 1901, 1905, 1915], "determinist": [2, 3, 5, 20, 24, 30, 55, 73, 77, 501, 861, 1141, 1174, 1196, 1209, 1210, 1291, 1294, 1296, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1397, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1746, 1752, 1846, 1867, 1889, 1904, 1912, 1920], "algorithm": [2, 3, 7, 11, 19, 22, 25, 28, 30, 32, 47, 77, 748, 767, 773, 930, 1190, 1234, 1241, 1247, 1251, 1257, 1266, 1283, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1377, 1379, 1397, 1442, 1478, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1537, 1576, 1595, 1607, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1680, 1699, 1738, 1753, 1811, 1812, 1846, 1865, 1889, 1892, 1903, 1921, 1925], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 487, 861, 1067, 1068, 1069, 1174, 1752, 1904], "benchmark": [2, 1865, 1867, 1892, 1898, 1939, 1944, 1951], "fastest": [2, 865, 1607, 1653, 1666, 1667, 1897, 1904, 1912], "benchmark_limit": 2, "maximum": [2, 30, 41, 42, 45, 487, 683, 685, 759, 783, 808, 809, 810, 813, 814, 862, 980, 1015, 1017, 1023, 1030, 1031, 1045, 1046, 1067, 1068, 1069, 1112, 1128, 1153, 1154, 1155, 1266, 1291, 1312, 1386, 1517, 1518, 1612, 1683, 1691, 1716, 1730, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1846, 1848, 1867, 1875, 1887, 1888, 1892, 1902, 1911, 1919, 1932, 1942, 1949, 1956], "try": [2, 3, 4, 7, 8, 24, 26, 29, 33, 34, 38, 41, 45, 47, 51, 52, 71, 72, 940, 1036, 1119, 1128, 1134, 1198, 1200, 1209, 1230, 1312, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1470, 1471, 1473, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1857, 1864, 1866, 1869, 1870, 1889, 1892, 1894, 1896, 1897, 1902, 1910, 1912, 1913, 1916, 1917, 1921, 1925, 1940, 1942, 1943, 1944, 1946, 1954, 1956], "dispatch": [2, 24, 47, 55, 73, 74, 76, 1198, 1308, 1309, 1847, 1849, 1869, 1873, 1892, 1894, 1908, 1910, 1944, 1945, 1955], "v8": 2, "verbos": [2, 14, 24, 55, 668, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1864, 1875, 1883, 1910, 1930, 1954], "On": [2, 14, 20, 21, 24, 25, 30, 42, 47, 52, 55, 674, 677, 908, 920, 1241, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1395, 1396, 1397, 1398, 1414, 1437, 1442, 1455, 1607, 1666, 1667, 1676, 1679, 1865, 1866, 1876, 1889, 1891, 1892, 1894, 1903, 1913, 1921, 1922, 1923, 1925, 1939, 1942, 1943], "demand": [2, 21, 1003, 1868, 1899, 1902, 1921], "onemkl": 2, "easier": [2, 7, 21, 45, 55, 1866, 1868, 1884, 1889, 1890, 1894, 1895, 1925, 1944, 1954], "dump": [2, 55, 967, 1893, 1906, 1944, 1947, 1954], "durat": [2, 24, 38, 41, 1308, 1309, 1879, 1908, 1915, 1944, 1954], "kernel": [2, 3, 4, 11, 14, 18, 24, 47, 54, 727, 728, 729, 730, 731, 760, 761, 762, 940, 965, 970, 972, 973, 1009, 1010, 1042, 1044, 1314, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1576, 1617, 1847, 1849, 1866, 1873, 1877, 1884, 1892, 1894, 1895, 1901, 1903, 1910, 1912, 1915, 1917, 1925, 1939, 1941, 1943, 1944, 1945, 1946, 1952, 1954], "mkl_verbos": 2, "methodologi": 2, "moreov": [2, 47, 70, 501, 1607, 1679], "investig": [2, 7, 24, 52, 1952], "singl": [2, 3, 5, 13, 14, 22, 24, 26, 28, 29, 30, 32, 34, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 63, 64, 243, 668, 683, 684, 754, 755, 756, 757, 760, 761, 762, 802, 882, 889, 890, 891, 892, 893, 894, 895, 909, 918, 922, 940, 954, 958, 1009, 1012, 1122, 1124, 1125, 1128, 1130, 1134, 1150, 1151, 1155, 1178, 1192, 1193, 1209, 1210, 1213, 1271, 1295, 1308, 1309, 1333, 1334, 1337, 1338, 1341, 1342, 1344, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1375, 1376, 1382, 1395, 1396, 1399, 1421, 1422, 1427, 1435, 1439, 1440, 1455, 1466, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1523, 1550, 1551, 1552, 1594, 1600, 1602, 1605, 1606, 1607, 1611, 1612, 1613, 1649, 1650, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1685, 1706, 1732, 1753, 1799, 1805, 1806, 1843, 1844, 1846, 1852, 1853, 1857, 1865, 1866, 1868, 1869, 1876, 1877, 1881, 1883, 1884, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1922, 1923, 1925, 1928, 1931, 1932, 1935, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1953, 1954], "enough": [2, 8, 22, 55, 1205, 1317, 1476, 1793, 1794, 1795, 1796, 1797, 1798, 1846, 1868, 1881, 1884, 1892, 1894, 1897, 1912, 1913, 1928, 1944, 1955], "scope": [2, 7, 13, 43, 55, 70, 1119, 1466, 1630, 1866, 1868, 1869, 1892, 1896, 1910, 1913, 1923, 1943, 1953], "second": [2, 5, 14, 18, 24, 28, 32, 34, 41, 43, 45, 53, 55, 674, 677, 679, 682, 748, 782, 862, 863, 864, 872, 880, 896, 897, 908, 912, 913, 915, 916, 917, 920, 966, 978, 1025, 1029, 1043, 1044, 1054, 1056, 1057, 1063, 1071, 1112, 1113, 1124, 1127, 1128, 1129, 1133, 1134, 1136, 1137, 1146, 1149, 1157, 1158, 1159, 1170, 1182, 1216, 1218, 1226, 1262, 1265, 1271, 1272, 1282, 1288, 1292, 1294, 1295, 1297, 1298, 1323, 1328, 1331, 1335, 1341, 1342, 1348, 1356, 1357, 1359, 1360, 1370, 1371, 1378, 1379, 1393, 1396, 1397, 1415, 1419, 1421, 1422, 1442, 1455, 1508, 1510, 1544, 1598, 1630, 1666, 1667, 1670, 1676, 1680, 1691, 1737, 1788, 1796, 1831, 1836, 1838, 1851, 1854, 1857, 1868, 1869, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1904, 1908, 1910, 1915, 1921, 1926, 1930, 1939, 1947], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 13, 15, 18, 21, 24, 32, 33, 34, 38, 45, 47, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 487, 668, 735, 882, 883, 884, 892, 1123, 1138, 1364, 1607, 1865, 1866, 1869, 1870, 1875, 1879, 1881, 1884, 1887, 1889, 1891, 1894, 1897, 1908, 1913, 1915, 1916, 1917, 1921, 1925, 1930, 1934, 1935, 1936, 1941, 1942, 1944, 1945, 1947, 1949, 1952, 1953, 1954, 1955], "verbose_off": 2, "dnn": [2, 1891], "onednn": [2, 843, 844, 847, 1195, 1202, 1911, 1916], "former": [2, 47, 1397, 1427, 1889], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 22, 30, 45, 51, 54, 1526, 1607, 1864, 1865, 1880, 1894, 1900, 1908, 1912, 1919, 1921, 1930, 1933, 1940], "els": [2, 7, 13, 21, 24, 26, 30, 32, 33, 41, 45, 55, 56, 591, 748, 911, 1205, 1211, 1393, 1466, 1563, 1576, 1607, 1666, 1667, 1670, 1676, 1677, 1678, 1679, 1733, 1734, 1767, 1773, 1849, 1866, 1868, 1870, 1871, 1876, 1881, 1884, 1892, 1894, 1895, 1900, 1901, 1908, 1909, 1910, 1912, 1913, 1927, 1939, 1940, 1942, 1953], "einsum": [2, 1867, 1911], "readthedoc": [2, 1066], "io": [2, 7, 21, 26, 45, 1066, 1201, 1204, 1265, 1397, 1398, 1474, 1576, 1741, 1906, 1908, 1916], "en": [2, 22, 1066, 1898, 1930, 1957], "path_find": [2, 1066], "html": [2, 3, 4, 7, 15, 42, 668, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 940, 1066, 1476, 1846, 1849, 1890, 1898, 1900, 1904, 1913, 1930], "calcul": [2, 21, 24, 38, 748, 756, 757, 787, 790, 807, 808, 812, 928, 958, 1054, 1058, 1066, 1070, 1184, 1190, 1249, 1271, 1272, 1274, 1340, 1341, 1342, 1345, 1346, 1347, 1350, 1358, 1359, 1360, 1374, 1379, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1475, 1478, 1479, 1493, 1494, 1495, 1523, 1526, 1537, 1566, 1615, 1626, 1648, 1652, 1654, 1685, 1731, 1755, 1805, 1806, 1836, 1838, 1852, 1853, 1889, 1890, 1893, 1897, 1903, 1906, 1916, 1925, 1935], "path": [2, 3, 4, 8, 14, 24, 26, 39, 41, 43, 44, 45, 47, 55, 722, 903, 904, 967, 968, 1066, 1193, 1427, 1443, 1474, 1661, 1864, 1865, 1867, 1868, 1889, 1892, 1894, 1898, 1905, 1908, 1913, 1915, 1925, 1934, 1939, 1946, 1947, 1948], "contract": [2, 1066, 1827, 1865, 1883, 1913, 1940, 1947], "left": [2, 21, 55, 448, 487, 802, 808, 853, 909, 913, 916, 918, 919, 924, 929, 1066, 1086, 1093, 1107, 1110, 1111, 1115, 1146, 1150, 1151, 1155, 1190, 1191, 1198, 1213, 1234, 1243, 1247, 1251, 1254, 1255, 1256, 1257, 1259, 1271, 1272, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1374, 1381, 1394, 1395, 1396, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1430, 1431, 1432, 1436, 1437, 1475, 1478, 1479, 1480, 1481, 1526, 1546, 1564, 1612, 1683, 1684, 1697, 1725, 1738, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1807, 1827, 1832, 1851, 1866, 1867, 1869, 1889, 1894, 1900, 1919, 1926, 1952, 1956], "strategi": [2, 3, 7, 21, 22, 24, 28, 34, 47, 889, 891, 1066, 1126, 1207, 1335, 1607, 1691, 1868, 1895, 1897, 1917, 1944], "auto": [2, 24, 48, 71, 72, 1066, 1343, 1344, 1869, 1910, 1930, 1943], "greedi": [2, 28, 1066], "doc": [2, 3, 4, 9, 15, 41, 42, 71, 75, 668, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 828, 940, 1134, 1212, 1471, 1472, 1473, 1474, 1846, 1857, 1870, 1881, 1890, 1893, 1894, 1900, 1904, 1913, 1921, 1925, 1930, 1945, 1950], "timer": [3, 27, 1865], "stmt": [3, 1891], "setup": [3, 14, 22, 41, 42, 47, 808, 809, 810, 813, 1134, 1607, 1857, 1891, 1892, 1901, 1921, 1922, 1940], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 21, 28, 1066, 1335, 1344, 1350, 1361, 1363, 1387, 1419, 1430, 1431, 1510, 1641, 1684, 1893, 1902, 1904, 1930], "sub_label": 3, "descript": [3, 7, 12, 14, 21, 34, 41, 55, 722, 1164, 1165, 1166, 1239, 1266, 1491, 1709, 1753, 1868, 1869, 1892, 1894, 1897, 1899, 1900, 1910, 1936, 1945, 1957], "env": [3, 24, 30, 34, 39, 41, 42, 44, 55, 1023, 1893, 1903, 1908, 1909, 1921, 1944, 1954], "num_thread": [3, 1902], "languag": [3, 14, 34, 45, 1205, 1335, 1470, 1525, 1896, 1907], "measur": [3, 30, 38, 969, 1015, 1017, 1225, 1305, 1343, 1344, 1361, 1387, 1394, 1418, 1419, 1475, 1476, 1498, 1499, 1557, 1693, 1865, 1892, 1899, 1900, 1912, 1925], "statement": [3, 13, 30, 52, 55, 56, 61, 63, 64, 1194, 1209, 1870, 1889, 1894, 1902, 1905, 1907, 1910, 1913, 1919, 1921, 1940, 1947], "full": [3, 7, 8, 15, 21, 22, 24, 28, 30, 41, 44, 45, 47, 48, 52, 55, 56, 61, 64, 65, 66, 501, 888, 909, 918, 940, 1094, 1095, 1096, 1100, 1101, 1103, 1121, 1133, 1134, 1150, 1151, 1197, 1231, 1232, 1239, 1240, 1241, 1252, 1257, 1258, 1266, 1283, 1344, 1350, 1381, 1441, 1470, 1501, 1502, 1503, 1510, 1523, 1569, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1758, 1811, 1812, 1857, 1864, 1866, 1867, 1868, 1869, 1871, 1883, 1888, 1892, 1893, 1894, 1897, 1900, 1903, 1904, 1908, 1911, 1913, 1916, 1919, 1922, 1929, 1932, 1941, 1944, 1947, 1948, 1949, 1954], "org": [3, 4, 7, 9, 10, 13, 15, 22, 29, 30, 42, 668, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 940, 1266, 1397, 1445, 1446, 1473, 1476, 1651, 1699, 1753, 1774, 1849, 1864, 1870, 1889, 1890, 1900, 1904, 1906, 1910, 1913, 1930, 1956, 1957], "timeit": [3, 1891], "sever": [3, 13, 15, 21, 24, 29, 30, 47, 55, 726, 727, 728, 729, 730, 731, 754, 755, 760, 761, 762, 770, 771, 940, 1012, 1070, 1168, 1193, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1607, 1616, 1617, 1619, 1620, 1652, 1660, 1714, 1715, 1755, 1842, 1866, 1888, 1889, 1891, 1892, 1899, 1900, 1902, 1910, 1912, 1916, 1921, 1941, 1944], "kei": [3, 21, 26, 32, 39, 41, 42, 47, 55, 591, 668, 723, 842, 847, 905, 1032, 1122, 1132, 1193, 1209, 1210, 1265, 1427, 1428, 1433, 1437, 1470, 1471, 1472, 1473, 1474, 1576, 1633, 1649, 1847, 1849, 1865, 1867, 1868, 1869, 1873, 1892, 1894, 1899, 1900, 1905, 1910, 1911, 1912, 1915, 1916, 1919, 1921, 1922, 1927, 1930, 1932, 1934, 1936, 1945, 1947, 1951, 1952, 1953], "awar": [3, 7, 73, 474, 700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 826, 827, 843, 850, 851, 1474, 1576, 1607, 1815, 1816, 1817, 1818, 1819, 1883, 1889, 1892, 1913, 1919, 1922, 1925, 1951], "element": [3, 13, 21, 24, 30, 45, 52, 53, 55, 56, 62, 63, 64, 86, 108, 139, 143, 185, 205, 231, 243, 247, 275, 302, 304, 306, 308, 310, 341, 387, 389, 391, 423, 442, 459, 461, 462, 485, 487, 501, 503, 505, 508, 533, 534, 546, 548, 597, 598, 605, 669, 671, 672, 675, 676, 681, 682, 686, 687, 723, 746, 748, 758, 759, 760, 761, 762, 768, 772, 781, 862, 864, 865, 866, 869, 870, 871, 872, 873, 881, 889, 890, 892, 893, 894, 896, 897, 910, 919, 922, 929, 935, 939, 952, 954, 955, 956, 1009, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1055, 1056, 1057, 1061, 1063, 1066, 1069, 1071, 1072, 1076, 1096, 1100, 1101, 1103, 1105, 1110, 1112, 1113, 1115, 1119, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1137, 1138, 1146, 1149, 1152, 1153, 1154, 1155, 1170, 1178, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1213, 1215, 1216, 1218, 1235, 1237, 1241, 1252, 1256, 1267, 1268, 1270, 1273, 1275, 1276, 1277, 1278, 1282, 1283, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1315, 1317, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1339, 1340, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1393, 1394, 1397, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1416, 1418, 1419, 1420, 1421, 1422, 1426, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1476, 1478, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1511, 1515, 1518, 1519, 1524, 1525, 1529, 1530, 1531, 1532, 1535, 1538, 1539, 1541, 1546, 1550, 1551, 1552, 1556, 1557, 1561, 1562, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1580, 1582, 1584, 1586, 1587, 1588, 1589, 1594, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1640, 1641, 1643, 1644, 1653, 1654, 1655, 1657, 1662, 1702, 1703, 1706, 1707, 1714, 1715, 1717, 1728, 1731, 1732, 1736, 1738, 1740, 1758, 1761, 1763, 1775, 1776, 1778, 1779, 1783, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1805, 1806, 1810, 1821, 1823, 1824, 1828, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1846, 1852, 1853, 1854, 1857, 1860, 1867, 1869, 1876, 1884, 1887, 1890, 1891, 1894, 1897, 1903, 1905, 1910, 1912, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1943, 1946, 1955], "lazili": [3, 17, 26, 969, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1598, 1866, 1894, 1952], "threadpool": 3, "comparison": [3, 22, 24, 45, 55, 1193, 1209, 1210, 1427, 1662, 1870, 1894, 1932, 1935, 1941], "appl": [3, 1880], "focu": [3, 1693, 1947], "replic": [3, 21, 29, 47, 75, 1146, 1204, 1355, 1356, 1357, 1364, 1374, 1403, 1404, 1405, 1451, 1452, 1453, 1478, 1564, 1591, 1914], "particularli": [3, 21, 22, 43, 1363, 1364, 1434, 1866, 1892, 1942, 1952], "variat": [3, 30, 1869, 1894, 1912, 1917, 1954], "confound": 3, "quantifi": [3, 1476], "nois": [3, 1867, 1904, 1954], "median": [3, 30, 162, 1323, 1846, 1867, 1882, 1911], "robust": [3, 1266, 1881, 1900], "deviat": [3, 30, 47, 366, 1339, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1655, 1768, 1773, 1805, 1806, 1887, 1944], "merg": [3, 6, 7, 9, 21, 24, 26, 42, 1428, 1433, 1437], "repeat": [3, 30, 45, 52, 482, 958, 1066, 1257, 1283, 1423, 1424, 1425, 1498, 1499, 1699, 1731, 1791, 1811, 1812, 1828, 1867, 1869, 1892, 1911, 1915, 1918, 1925, 1949], "autorang": 3, "exact": [3, 14, 21, 32, 43, 74, 328, 729, 730, 731, 783, 862, 863, 864, 896, 897, 940, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1294, 1359, 1397, 1474, 1537, 1576, 1607, 1694, 1784, 1887, 1893, 1902, 1925, 1943, 1944, 1951, 1954, 1955], "discuss": [3, 5, 8, 9, 10, 30, 45, 55, 1388, 1537, 1876, 1889, 1894, 1900, 1904, 1921, 1923, 1925, 1941], "docstr": [3, 14, 45, 55, 849, 850, 1193, 1427, 1864, 1892], "adapt": [3, 754, 755, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1365, 1485, 1486, 1487, 1488, 1489, 1490, 1664, 1665, 1676, 1678, 1685, 1892, 1908, 1942], "field": [3, 7, 24, 28, 32, 34, 38, 39, 47, 55, 476, 814, 881, 1191, 1193, 1335, 1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1491, 1498, 1499, 1509, 1526, 1538, 1561, 1569, 1640, 1674, 1680, 1879, 1889, 1893, 1902, 1910, 1921, 1922, 1930, 1947, 1953, 1954], "displai": [3, 18, 1011, 1024, 1537, 1595, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1864, 1870, 1875, 1878, 1910, 1930, 1932, 1944, 1954], "instruct": [3, 4, 11, 14, 43, 54, 1753, 1866, 1869, 1892, 1903, 1910, 1916, 1932, 1938, 1943, 1947, 1954], "count": [3, 21, 30, 38, 55, 911, 957, 1005, 1119, 1154, 1155, 1191, 1231, 1232, 1640, 1843, 1844, 1867, 1879, 1892, 1911, 1915, 1921, 1923, 1925, 1947], "wall": [3, 1948], "callgrind": 3, "analog": [3, 45, 55, 682, 1049, 1087, 1089, 1168, 1243, 1397, 1679, 1811, 1828, 1884, 1900, 1942, 1947], "constructor": [3, 14, 21, 22, 28, 45, 47, 55, 56, 64, 812, 849, 850, 1335, 1432, 1437, 1438, 1455, 1480, 1481, 1607, 1647, 1786, 1865, 1866, 1869, 1870, 1892, 1893, 1900, 1921, 1925, 1927, 1928, 1931, 1957], "snippet": [3, 42, 1864, 1900, 1905, 1946, 1947], "loop": [3, 22, 43, 45, 48, 52, 53, 55, 56, 61, 850, 851, 895, 1012, 1015, 1017, 1128, 1134, 1209, 1607, 1617, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1857, 1866, 1867, 1869, 1879, 1891, 1892, 1896, 1897, 1900, 1903, 1907, 1910, 1912, 1915, 1916, 1930, 1939, 1943, 1947, 1953], "callabl": [3, 5, 13, 21, 22, 24, 28, 30, 32, 34, 39, 41, 43, 45, 47, 54, 55, 108, 387, 829, 940, 942, 1009, 1010, 1012, 1123, 1124, 1125, 1130, 1133, 1134, 1193, 1196, 1199, 1205, 1209, 1265, 1266, 1427, 1470, 1472, 1474, 1476, 1601, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1687, 1690, 1857, 1864, 1866, 1868, 1869, 1870, 1879, 1892, 1894, 1900, 1905, 1908, 1910, 1913, 1914, 1915, 1921, 1932, 1934, 1935, 1940, 1941, 1945, 1947, 1953, 1955], "present": [3, 9, 21, 24, 41, 47, 1191, 1283, 1335, 1397, 1437, 1640, 1660, 1807, 1864, 1878, 1881, 1882, 1883, 1888, 1889, 1892, 1894, 1897, 1900, 1905, 1910, 1913, 1922, 1925, 1928, 1945, 1950, 1956], "default_tim": 3, "summar": [3, 4, 42, 1758, 1869, 1884, 1925, 1941, 1947, 1954], "relu": [3, 22, 45, 52, 53, 55, 688, 689, 693, 694, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 753, 780, 781, 802, 842, 848, 1009, 1124, 1134, 1199, 1205, 1427, 1442, 1444, 1455, 1463, 1470, 1472, 1474, 1573, 1574, 1598, 1661, 1857, 1866, 1867, 1877, 1883, 1884, 1887, 1889, 1900, 1905, 1910, 1911, 1916, 1918, 1919, 1940, 1946, 1949, 1952, 1953, 1954], "readabl": [3, 12, 21, 39, 45, 55, 1011, 1024, 1825, 1910, 1912, 1941, 1954, 1955], "supplement": 3, "disambigu": [3, 39, 55, 1271, 1954], "ident": [3, 14, 21, 24, 30, 55, 776, 802, 896, 897, 1054, 1231, 1232, 1233, 1234, 1247, 1259, 1262, 1266, 1283, 1322, 1323, 1339, 1365, 1566, 1614, 1616, 1854, 1860, 1870, 1887, 1903, 1904, 1913, 1918, 1925, 1943, 1954], "easi": [3, 21, 26, 41, 45, 1866, 1889, 1896, 1899, 1900, 1902, 1913, 1916, 1921, 1922, 1925, 1940, 1941, 1944, 1946, 1947, 1952], "differenti": [3, 30, 48, 53, 139, 341, 577, 790, 877, 879, 881, 883, 884, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 937, 1012, 1127, 1128, 1129, 1133, 1208, 1240, 1241, 1252, 1283, 1349, 1350, 1370, 1528, 1562, 1607, 1619, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1846, 1865, 1876, 1894, 1896, 1897, 1910, 1912, 1921, 1931], "distinguish": [3, 1916, 1925], "princip": [3, 1240, 1699], "signal": [3, 11, 26, 32, 41, 43, 726, 727, 728, 754, 755, 770, 771, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1190, 1256, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1504, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1807, 1865, 1881, 1902, 1915, 1921], "form": [3, 7, 9, 11, 21, 24, 30, 40, 41, 42, 45, 47, 52, 55, 748, 767, 773, 931, 1054, 1094, 1096, 1193, 1233, 1236, 1241, 1252, 1257, 1333, 1334, 1337, 1338, 1350, 1375, 1376, 1379, 1397, 1427, 1442, 1478, 1479, 1510, 1521, 1522, 1525, 1537, 1564, 1595, 1619, 1679, 1697, 1827, 1864, 1866, 1870, 1884, 1889, 1894, 1900, 1908, 1910, 1913, 1916, 1925, 1930, 1941, 1946, 1953], "treat": [3, 30, 40, 50, 55, 56, 61, 62, 310, 459, 781, 896, 897, 1009, 1122, 1193, 1246, 1249, 1251, 1263, 1265, 1275, 1276, 1277, 1278, 1295, 1325, 1371, 1381, 1399, 1431, 1432, 1433, 1434, 1437, 1455, 1460, 1518, 1607, 1649, 1653, 1685, 1738, 1753, 1807, 1821, 1822, 1828, 1843, 1868, 1869, 1882, 1889, 1908, 1910, 1921, 1925, 1928, 1935, 1945, 1950, 1953], "distinct": [3, 69, 1122, 1229, 1230, 1274, 1869, 1894, 1905, 1910, 1921, 1922, 1942], "workload": [3, 8, 21, 24, 47, 1012, 1892, 1899, 1903, 1921, 1938, 1952], "good": [3, 7, 8, 14, 55, 940, 1126, 1435, 1774, 1864, 1873, 1881, 1894, 1899, 1900, 1902, 1910, 1913, 1914, 1916, 1941, 1942, 1943, 1947, 1951], "intrins": [3, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 780, 781, 1917, 1918], "contrast": [3, 30, 32, 45, 748, 1379, 1679, 1887, 1889, 1895, 1925, 1949], "blocked_autorang": 3, "callback": [3, 22, 41, 43, 54, 55, 1607, 1879, 1894, 1899, 1915, 1921], "min_run_tim": 3, "minimum": [3, 14, 22, 32, 41, 42, 45, 684, 685, 759, 783, 808, 809, 810, 813, 814, 863, 911, 1046, 1113, 1153, 1154, 1155, 1296, 1350, 1386, 1476, 1683, 1684, 1691, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1867, 1887, 1889, 1897, 1911, 1919, 1928, 1949], "At": [3, 5, 6, 7, 15, 21, 1100, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1395, 1396, 1847, 1877, 1884, 1891, 1897, 1916, 1921, 1926, 1941, 1944, 1947, 1954], "high": [3, 4, 7, 8, 9, 10, 15, 22, 24, 30, 32, 38, 40, 42, 55, 108, 1350, 1473, 1720, 1721, 1753, 1867, 1879, 1881, 1894, 1897, 1898, 1900, 1901, 1902, 1912, 1916, 1917, 1921, 1925, 1930, 1931, 1932, 1935, 1938, 1939, 1947, 1949, 1954], "pseudo": [3, 77], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 24, 1209, 1257, 1428, 1437, 1716, 1891, 1910, 1919, 1925, 1942, 1954], "block": [3, 7, 8, 21, 24, 28, 41, 43, 47, 54, 55, 571, 572, 573, 919, 969, 1023, 1214, 1266, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1430, 1478, 1520, 1594, 1607, 1793, 1794, 1795, 1866, 1868, 1869, 1879, 1881, 1885, 1889, 1892, 1893, 1897, 1910, 1916, 1921, 1925, 1936, 1952, 1956], "qualiti": [3, 7, 22], "balanc": [3, 940], "compet": [3, 1902], "statist": [3, 22, 24, 30, 787, 788, 808, 809, 810, 812, 813, 978, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1043, 1044, 1271, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1879, 1889, 1896, 1912, 1914, 1916, 1919, 1944, 1954], "amort": 3, "invoc": [3, 5, 55, 829, 940, 1196, 1209, 1866, 1869, 1892, 1894, 1899, 1910, 1921, 1923, 1939, 1947, 1952], "less": [3, 6, 7, 14, 21, 22, 24, 30, 32, 43, 45, 47, 353, 668, 889, 891, 896, 897, 958, 1019, 1036, 1066, 1110, 1114, 1119, 1122, 1218, 1230, 1266, 1282, 1283, 1335, 1388, 1441, 1458, 1464, 1643, 1729, 1836, 1838, 1864, 1867, 1869, 1884, 1892, 1894, 1902, 1903, 1911, 1914, 1916, 1944], "bias": [3, 22, 722, 748, 782, 1345, 1346, 1347, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1442, 1444, 1466], "trivial": [3, 32, 34, 723, 930, 1614, 1796, 1910, 1923, 1943], "low": [3, 7, 18, 22, 30, 47, 487, 892, 1138, 1350, 1699, 1716, 1720, 1721, 1738, 1812, 1867, 1879, 1881, 1892, 1902, 1915, 1932, 1948, 1949, 1955], "digit": [3, 924, 1758, 1864, 1878, 1899, 1903], "microsecond": [3, 1892], "bia": [3, 9, 24, 45, 56, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 737, 739, 740, 741, 742, 744, 748, 749, 752, 753, 760, 761, 762, 769, 780, 1132, 1193, 1203, 1335, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1442, 1443, 1444, 1470, 1472, 1474, 1496, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1527, 1536, 1540, 1543, 1598, 1607, 1614, 1615, 1629, 1631, 1633, 1648, 1651, 1713, 1867, 1877, 1894, 1900, 1905, 1908, 1916, 1918, 1925, 1930, 1949], "period": [3, 9, 28, 41, 909, 918, 978, 1011, 1024, 1025, 1029, 1043, 1044, 1086, 1150, 1151, 1213, 1695, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1867, 1879, 1902], "until": [3, 5, 7, 21, 22, 24, 28, 32, 41, 47, 54, 55, 474, 969, 970, 972, 1003, 1119, 1214, 1266, 1305, 1308, 1309, 1526, 1598, 1607, 1682, 1688, 1828, 1881, 1887, 1892, 1896, 1905, 1908, 1910, 1915, 1921, 1923, 1944], "overal": [3, 9, 21, 24, 41, 896, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1473, 1889, 1891, 1892, 1902, 1916, 1917, 1948], "main": [3, 7, 21, 22, 24, 25, 30, 32, 33, 34, 39, 41, 42, 43, 44, 45, 55, 249, 484, 940, 1053, 1054, 1055, 1056, 1057, 1256, 1528, 1791, 1835, 1836, 1837, 1838, 1864, 1866, 1879, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1902, 1906, 1907, 1908, 1916, 1921, 1922, 1930, 1931, 1936, 1940, 1944, 1947, 1953], "repetit": [3, 1731, 1828], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1865], "modulo": [3, 30, 1114, 1729], "determin": [3, 5, 8, 11, 14, 17, 18, 20, 21, 22, 24, 30, 32, 39, 41, 45, 47, 52, 55, 74, 75, 76, 811, 814, 889, 891, 896, 897, 909, 918, 925, 930, 1013, 1068, 1087, 1097, 1121, 1122, 1150, 1151, 1154, 1155, 1207, 1227, 1239, 1250, 1253, 1274, 1288, 1371, 1375, 1376, 1397, 1433, 1436, 1442, 1518, 1521, 1522, 1537, 1570, 1595, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1649, 1659, 1691, 1719, 1721, 1723, 1750, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1863, 1869, 1870, 1883, 1892, 1893, 1894, 1900, 1908, 1910, 1913, 1916, 1921, 1923, 1925, 1927, 1928, 1930, 1932, 1942, 1943, 1944, 1953, 1954], "itself": [3, 5, 7, 8, 24, 25, 45, 47, 53, 55, 476, 681, 687, 867, 958, 1127, 1128, 1193, 1205, 1209, 1427, 1460, 1582, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1785, 1866, 1881, 1900, 1902, 1904, 1907, 1910, 1913, 1921, 1925, 1929, 1940, 1943, 1947, 1954], "jitter": 3, "interpret": [3, 21, 24, 28, 30, 32, 41, 43, 767, 773, 868, 895, 1022, 1087, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1119, 1143, 1155, 1193, 1198, 1205, 1209, 1246, 1266, 1367, 1526, 1537, 1538, 1595, 1750, 1756, 1864, 1868, 1869, 1881, 1891, 1892, 1910, 1925, 1927, 1929, 1941, 1947], "ideal": [3, 40, 42, 47, 1209, 1680, 1883, 1944], "analysi": [3, 22, 30, 55, 1213, 1699, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1870, 1900, 1907, 1908, 1935, 1940, 1941, 1943, 1948], "valgrind": 3, "degrad": [3, 14, 47, 1891, 1893, 1894, 1925], "amelior": 3, "suffici": [3, 14, 22, 30, 33, 41, 47, 1666, 1667, 1864, 1925, 1928, 1944], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 55, 767, 773, 924, 1146, 1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1479, 1482, 1483, 1484, 1537, 1595, 1685, 1691, 1867, 1893, 1913, 1914, 1921, 1944], "caller": [3, 32, 41, 55, 842, 1193, 1427, 1474, 1603, 1604, 1796, 1889, 1892, 1921, 1923], "structur": [3, 5, 9, 13, 21, 22, 24, 31, 32, 34, 42, 45, 47, 55, 56, 57, 61, 64, 880, 1117, 1129, 1134, 1209, 1427, 1626, 1630, 1662, 1699, 1812, 1857, 1865, 1868, 1870, 1876, 1879, 1884, 1892, 1893, 1894, 1895, 1902, 1905, 1906, 1908, 1910, 1912, 1913, 1921, 1930, 1931, 1932, 1933, 1935, 1941, 1942, 1944, 1945, 1950, 1956], "restrict": [3, 8, 13, 21, 30, 47, 52, 53, 1265, 1288, 1363, 1868, 1869, 1870, 1883, 1884, 1889, 1892, 1897, 1914, 1916, 1942], "builtin": [3, 24, 55, 56, 64, 1206, 1265, 1725, 1866, 1868, 1870, 1921, 1923, 1944, 1954], "surpris": [3, 8, 47, 1864, 1897, 1903, 1943], "serial": [3, 15, 21, 24, 26, 28, 41, 1193, 1203, 1204, 1265, 1427, 1598, 1741, 1864, 1865, 1867, 1878, 1883, 1889, 1892, 1899, 1900, 1902, 1908, 1913, 1916, 1921, 1922], "subsequ": [3, 7, 14, 15, 24, 45, 47, 55, 940, 970, 1193, 1205, 1209, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1455, 1603, 1604, 1892, 1904, 1910, 1921, 1925, 1939, 1944, 1947], "deseri": [3, 26, 1265, 1598, 1864, 1878, 1905, 1921], "globalsbridg": 3, "care": [3, 7, 14, 24, 30, 54, 55, 942, 1087, 1089, 1427, 1881, 1891, 1892, 1893, 1894, 1896, 1900, 1902, 1905, 1910, 1921, 1925, 1939, 1943, 1944, 1945], "reli": [3, 9, 14, 21, 22, 32, 34, 47, 55, 139, 881, 896, 942, 1066, 1364, 1680, 1889, 1891, 1893, 1894, 1904, 1905, 1925, 1929, 1943, 1944, 1945, 1948], "pickl": [3, 21, 22, 24, 1193, 1265, 1427, 1741, 1864, 1878, 1881, 1905, 1913, 1921, 1956], "transfer": [3, 21, 24, 47, 1877, 1881, 1892, 1898, 1900, 1913, 1921], "properli": [3, 7, 21, 22, 26, 28, 32, 41, 54, 1087, 1088, 1089, 1097, 1098, 1099, 1295, 1428, 1429, 1437, 1438, 1607, 1847, 1864, 1876, 1894, 1897, 1900, 1902, 1905, 1921, 1922, 1928], "profil": [3, 4, 38, 55, 940, 1207, 1601, 1602, 1603, 1604, 1758, 1865, 1911, 1921, 1936, 1944], "drive": [3, 9, 24, 1889, 1947], "facil": [3, 1265, 1881], "analyz": [3, 4, 18, 55, 1893, 1894, 1903, 1954], "manipul": [3, 47, 54, 1197, 1865, 1888, 1896, 1900, 1914, 1919, 1953], "1000000": [3, 1663], "mirror": [3, 128], "semant": [3, 9, 17, 24, 41, 42, 45, 47, 55, 139, 782, 862, 863, 864, 881, 895, 922, 972, 1023, 1123, 1134, 1197, 1204, 1263, 1344, 1499, 1570, 1680, 1844, 1857, 1865, 1868, 1869, 1873, 1876, 1884, 1895, 1900, 1910, 1921, 1925, 1944], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 22, 1866], "consum": [3, 21, 26, 31, 43, 54, 423, 1066, 1881, 1892, 1902, 1907, 1908, 1910, 1930, 1947], "extrapol": 3, "sinc": [3, 7, 21, 22, 24, 29, 30, 34, 43, 45, 47, 55, 304, 476, 522, 735, 773, 781, 796, 797, 930, 942, 1015, 1017, 1019, 1066, 1106, 1107, 1108, 1122, 1190, 1193, 1198, 1204, 1207, 1283, 1343, 1370, 1423, 1424, 1425, 1427, 1479, 1491, 1526, 1528, 1595, 1598, 1601, 1630, 1649, 1654, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1691, 1807, 1866, 1867, 1868, 1869, 1875, 1877, 1879, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1931, 1932, 1939, 1944, 1947, 1950, 1953, 1954], "properti": [3, 21, 24, 25, 26, 30, 33, 38, 41, 45, 47, 55, 780, 868, 900, 906, 996, 1082, 1083, 1085, 1087, 1088, 1089, 1097, 1098, 1099, 1193, 1339, 1427, 1460, 1582, 1598, 1608, 1609, 1610, 1640, 1865, 1869, 1873, 1879, 1889, 1892, 1894, 1897, 1908, 1912, 1915, 1921, 1925, 1927, 1928, 1931, 1933, 1941, 1942, 1943, 1955, 1957], "significant_figur": 3, "figur": [3, 7, 8, 26, 55, 1891, 1893, 1894, 1910, 1914, 1923, 1930, 1935, 1944], "intend": [3, 41, 45, 55, 878, 887, 974, 1213, 1491, 1601, 1602, 1603, 1604, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1680, 1869, 1884, 1887, 1889, 1900, 1913], "interquartil": 3, "mitig": [3, 56], "tail": [3, 21, 39], "645": 3, "conjunct": [3, 21, 24, 28, 47, 812, 1491, 1526, 1607, 1919, 1921], "trim_sigfig": 3, "human": [3, 12, 39, 45, 1011, 1024, 1887, 1910, 1941, 1955], "raw": [3, 55, 1119, 1252, 1892, 1913], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 21, 24, 26, 29, 30, 32, 39, 47, 54, 55, 484, 668, 748, 896, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1209, 1283, 1345, 1346, 1347, 1364, 1367, 1379, 1390, 1391, 1392, 1409, 1410, 1411, 1412, 1437, 1466, 1472, 1474, 1607, 1802, 1869, 1873, 1877, 1881, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1903, 1910, 1912, 1914, 1916, 1917, 1921, 1923, 1940, 1942, 1943, 1947, 1951, 1953], "functioncount": [3, 1865], "stat": [3, 50, 814, 824, 825, 1023, 1030, 1031, 1032, 1466, 1607, 1879, 1892, 1934, 1944, 1954], "as_standard": 3, "strip": [3, 1528, 1607, 1866, 1911, 1925], "prefix": [3, 24, 26, 41, 47, 736, 745, 1193, 1427, 1607, 1864, 1875, 1889, 1910, 1913, 1934], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 24, 29, 30, 55, 668, 896, 1086, 1087, 1089, 1097, 1098, 1099, 1233, 1470, 1471, 1472, 1473, 1474, 1598, 1699, 1807, 1855, 1856, 1870, 1875, 1889, 1893, 1894, 1899, 1900, 1908, 1914, 1925, 1940, 1945, 1947, 1954], "locat": [3, 9, 14, 24, 30, 38, 76, 139, 143, 243, 501, 668, 922, 924, 981, 1045, 1046, 1215, 1265, 1291, 1296, 1299, 1317, 1364, 1374, 1461, 1478, 1491, 1526, 1591, 1594, 1607, 1619, 1710, 1745, 1767, 1789, 1792, 1846, 1864, 1866, 1878, 1892, 1905, 1910, 1913, 1915, 1921, 1923, 1925, 1930, 1934, 1939, 1943], "resembl": [3, 15], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 24, 38, 39, 45, 54, 55, 56, 63, 64, 812, 842, 847, 940, 1122, 1123, 1132, 1191, 1196, 1201, 1204, 1205, 1208, 1209, 1649, 1847, 1849, 1864, 1866, 1868, 1869, 1873, 1894, 1900, 1910, 1913, 1932, 1939], "9823794": 3, "bar": [3, 7, 38, 45, 55, 56, 63, 64, 842, 847, 958, 1122, 1196, 1204, 1805, 1806, 1852, 1853, 1864, 1866, 1868, 1878, 1900, 1910, 1913, 1932, 1947], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1190], "site": [3, 7], "denois": 3, "explan": [3, 9, 34, 850, 1193, 1427, 1865, 1893, 1894, 1900, 1944, 1951, 1954], "delta": [3, 30, 748, 958, 1379, 1388, 1397, 1458, 1535, 1664, 1805, 1806, 1832, 1852, 1853, 1867, 1887], "inclus": [3, 30, 45, 77, 501, 1153, 1155, 1264, 1280, 1286, 1720, 1721, 1804, 1920, 1932], "diff": [3, 7, 1866, 1867, 1911], "One": [3, 8, 14, 24, 26, 29, 47, 50, 52, 55, 571, 919, 1123, 1134, 1184, 1479, 1563, 1614, 1617, 1680, 1685, 1693, 1720, 1721, 1842, 1857, 1866, 1868, 1869, 1883, 1884, 1890, 1891, 1892, 1894, 1899, 1914, 1923, 1930, 1940, 1941, 1942, 1943, 1952], "unit": [3, 11, 14, 30, 32, 42, 47, 55, 748, 749, 1084, 1102, 1339, 1349, 1369, 1372, 1377, 1378, 1379, 1380, 1445, 1446, 1456, 1491, 1515, 1519, 1524, 1525, 1571, 1579, 1623, 1624, 1628, 1631, 1633, 1636, 1834, 1880, 1889, 1891, 1897, 1913, 1938, 1939], "logic": [3, 5, 13, 14, 21, 44, 47, 55, 912, 914, 915, 917, 1083, 1085, 1088, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1103, 1123, 1197, 1275, 1276, 1277, 1278, 1288, 1433, 1607, 1708, 1735, 1819, 1869, 1870, 1892, 1893, 1894, 1895, 1897, 1916, 1947], "question": [3, 10, 21, 55, 1651, 1865, 1889, 1936, 1942, 1943], "why": [3, 7, 21, 52, 55, 1066, 1197, 1576, 1865, 1876, 1895, 1942, 1943, 1952, 1956], "involv": [3, 5, 7, 9, 11, 21, 24, 45, 47, 50, 52, 55, 69, 1607, 1753, 1869, 1882, 1884, 1889, 1892, 1893, 1896, 1900, 1910, 1916, 1921, 1922, 1923, 1925, 1942, 1943], "look": [3, 4, 7, 8, 9, 13, 15, 24, 30, 40, 41, 45, 49, 52, 55, 56, 65, 66, 850, 889, 891, 1193, 1288, 1335, 1427, 1517, 1632, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1793, 1794, 1795, 1797, 1798, 1866, 1868, 1882, 1888, 1889, 1892, 1895, 1899, 1900, 1902, 1906, 1910, 1913, 1916, 1921, 1922, 1935, 1939, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1951, 1953, 1954, 1956], "autom": [3, 8, 55, 1866, 1916, 1944, 1954], "easili": [3, 7, 8, 11, 22, 24, 1123, 1434, 1526, 1564, 1680, 1738, 1847, 1894, 1895, 1897, 1900, 1905, 1912, 1920, 1921, 1923, 1930, 1953, 1954], "exclus": [3, 21, 24, 30, 32, 41, 45, 55, 723, 1155, 1607, 1720, 1721, 1724, 1889, 1932], "basi": [3, 9, 10, 30, 1266, 1685, 1892, 1899, 1916, 1921], "thought": [3, 38, 55, 1084, 1086, 1102], "path_and_function_nam": 3, "children": [3, 34, 47, 55, 779, 1193, 1427, 1881, 1900, 1913, 1923], "identifi": [3, 7, 9, 24, 32, 35, 38, 41, 42, 43, 55, 805, 1155, 1265, 1466, 1870, 1881, 1890, 1899, 1900, 1913, 1921, 1922, 1923, 1930, 1942, 1947, 1952], "hot": [3, 30, 1528, 1563, 1897, 1947], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 302, 552, 853, 1119, 1528, 1793, 1794, 1795, 1797, 1798, 1808, 1867, 1884, 1911, 1925], "index": [3, 15, 21, 22, 26, 30, 39, 45, 55, 180, 197, 270, 301, 302, 303, 304, 305, 306, 308, 310, 311, 459, 460, 500, 501, 502, 503, 504, 505, 506, 507, 683, 684, 805, 842, 865, 880, 924, 985, 988, 1045, 1046, 1086, 1126, 1127, 1128, 1132, 1134, 1135, 1164, 1165, 1166, 1167, 1191, 1210, 1215, 1223, 1241, 1259, 1273, 1281, 1283, 1287, 1291, 1294, 1295, 1296, 1299, 1317, 1323, 1326, 1327, 1335, 1350, 1363, 1370, 1371, 1428, 1429, 1434, 1437, 1438, 1476, 1478, 1517, 1518, 1563, 1625, 1627, 1634, 1635, 1640, 1653, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1695, 1710, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1779, 1790, 1791, 1793, 1794, 1795, 1797, 1798, 1807, 1821, 1842, 1843, 1845, 1846, 1849, 1857, 1865, 1866, 1867, 1869, 1876, 1881, 1882, 1883, 1884, 1889, 1892, 1893, 1895, 1898, 1904, 1911, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1943, 1944, 1949, 1954], "cpython": [3, 45, 55, 1936, 1941], "known": [3, 7, 9, 20, 24, 28, 35, 48, 51, 53, 56, 65, 66, 1129, 1130, 1209, 1210, 1265, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1397, 1442, 1456, 1458, 1478, 1537, 1579, 1598, 1766, 1767, 1825, 1846, 1865, 1867, 1871, 1879, 1881, 1884, 1887, 1889, 1891, 1904, 1910, 1912, 1921, 1923, 1926, 1936, 1942, 1945, 1954], "quit": [3, 7, 55, 1869, 1894, 1896, 1913, 1921, 1952], "noisi": 3, "higher": [3, 7, 8, 22, 24, 47, 48, 53, 56, 61, 64, 139, 881, 882, 895, 972, 1012, 1023, 1058, 1124, 1130, 1134, 1153, 1170, 1324, 1363, 1419, 1434, 1576, 1710, 1812, 1857, 1865, 1892, 1894, 1895, 1897, 1899, 1905, 1916, 1917, 1921, 1928, 1942], "filter": [3, 532, 760, 761, 762, 1190, 1213, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1807, 1869, 1913, 1954], "rather": [3, 8, 9, 14, 24, 32, 34, 43, 45, 47, 55, 56, 64, 767, 773, 905, 930, 1191, 1194, 1265, 1327, 1491, 1526, 1537, 1595, 1615, 1753, 1758, 1866, 1869, 1883, 1884, 1890, 1892, 1894, 1895, 1910, 1913, 1916, 1921, 1925, 1930, 1939, 1940, 1943, 1944, 1945, 1946, 1947], "unicod": [3, 1870], "dictionari": [3, 14, 21, 22, 30, 51, 55, 668, 780, 781, 782, 785, 803, 804, 805, 826, 827, 828, 842, 846, 852, 940, 1023, 1122, 1132, 1193, 1194, 1201, 1205, 1209, 1210, 1265, 1266, 1370, 1371, 1427, 1428, 1437, 1517, 1630, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1868, 1870, 1894, 1900, 1908, 1910, 1912, 1921, 1930, 1934, 1955, 1956], "lookup": [3, 26, 30, 1370, 1517, 1866, 1870, 1891, 1922, 1947, 1948], "map": [3, 14, 24, 26, 30, 32, 38, 39, 41, 42, 45, 47, 52, 53, 55, 56, 64, 69, 672, 723, 780, 781, 785, 787, 802, 803, 805, 827, 828, 842, 843, 844, 845, 846, 852, 873, 921, 1123, 1134, 1146, 1155, 1201, 1204, 1265, 1266, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1374, 1423, 1424, 1425, 1428, 1437, 1512, 1513, 1514, 1519, 1614, 1630, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1710, 1712, 1843, 1844, 1857, 1870, 1883, 1885, 1889, 1893, 1894, 1895, 1901, 1906, 1908, 1913, 1916, 1919, 1921, 1922, 1923, 1927, 1932, 1941, 1943, 1947, 1953, 1955], "agnost": [3, 16, 41, 959, 960, 961, 962, 963, 964, 965, 1526, 1883], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 24, 25, 29, 30, 32, 33, 34, 38, 42, 45, 47, 54, 55, 571, 575, 576, 605, 672, 681, 683, 684, 687, 748, 873, 896, 897, 927, 934, 938, 971, 981, 983, 1011, 1024, 1058, 1064, 1066, 1112, 1113, 1132, 1134, 1156, 1193, 1201, 1209, 1211, 1215, 1249, 1265, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1327, 1379, 1397, 1427, 1442, 1479, 1563, 1601, 1607, 1615, 1640, 1647, 1648, 1652, 1654, 1707, 1731, 1747, 1784, 1796, 1803, 1805, 1806, 1810, 1832, 1852, 1853, 1857, 1858, 1865, 1866, 1868, 1869, 1870, 1871, 1876, 1881, 1884, 1892, 1894, 1900, 1903, 1906, 1908, 1913, 1914, 1921, 1923, 1925, 1927, 1928, 1932, 1940, 1943, 1952, 1953, 1956], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 312, 317, 532, 602, 980, 1792, 1796, 1842, 1867, 1893, 1911, 1925, 1944, 1947], "finit": [4, 30, 896, 897, 1182, 1183, 1229, 1230, 1240, 1241, 1257, 1283, 1317, 1321, 1343, 1811, 1894, 1897, 1932], "natur": [4, 7, 8, 11, 24, 30, 47, 56, 58, 73, 896, 897, 1222, 1227, 1253, 1267, 1269, 1274, 1335, 1474, 1576, 1897, 1907, 1908, 1925, 1926], "against": [4, 5, 14, 24, 32, 41, 782, 853, 896, 897, 1094, 1095, 1096, 1100, 1101, 1103, 1135, 1184, 1193, 1209, 1210, 1427, 1433, 1661, 1864, 1869, 1913, 1935, 1951], "cprofil": 4, "mode": [4, 8, 21, 22, 24, 26, 30, 41, 43, 52, 53, 55, 68, 210, 211, 476, 734, 735, 760, 761, 762, 767, 773, 774, 775, 803, 805, 811, 814, 847, 848, 877, 879, 882, 883, 884, 889, 890, 891, 892, 896, 940, 967, 1000, 1040, 1041, 1070, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1123, 1126, 1127, 1128, 1129, 1132, 1133, 1141, 1168, 1176, 1177, 1191, 1193, 1194, 1197, 1209, 1211, 1252, 1265, 1295, 1308, 1309, 1345, 1346, 1347, 1355, 1356, 1357, 1371, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1443, 1466, 1479, 1480, 1501, 1502, 1503, 1518, 1526, 1537, 1564, 1595, 1596, 1597, 1608, 1615, 1619, 1652, 1685, 1693, 1709, 1752, 1754, 1755, 1846, 1865, 1867, 1877, 1882, 1887, 1892, 1893, 1895, 1896, 1900, 1907, 1908, 1911, 1915, 1917, 1918, 1919, 1921, 1933, 1941, 1943, 1944, 1945, 1946, 1949, 1954, 1955], "correct": [4, 6, 7, 22, 24, 25, 26, 30, 41, 45, 194, 195, 198, 210, 543, 568, 591, 592, 603, 885, 897, 958, 1087, 1089, 1097, 1098, 1099, 1167, 1191, 1194, 1209, 1210, 1229, 1364, 1381, 1393, 1598, 1607, 1640, 1757, 1805, 1806, 1852, 1853, 1866, 1867, 1868, 1882, 1883, 1892, 1894, 1897, 1927, 1949, 1953], "launch": [4, 14, 21, 27, 32, 33, 34, 39, 40, 41, 44, 54, 970, 1607, 1865, 1889, 1891, 1892, 1893, 1894, 1921, 1939, 1946], "spent": [4, 24, 906, 1691, 1891, 1900, 1944, 1952, 1954], "extrem": [4, 1607, 1889, 1910, 1943, 1947], "expens": [4, 21, 30, 47, 1614, 1892, 1897, 1899, 1915, 1921, 1931, 1942, 1944, 1948, 1951, 1954], "bound": [4, 15, 22, 24, 45, 47, 469, 783, 924, 935, 1080, 1081, 1193, 1340, 1341, 1342, 1420, 1421, 1422, 1427, 1445, 1526, 1693, 1724, 1745, 1869, 1870, 1887, 1889, 1913, 1916, 1926, 1942, 1943, 1954], "greater": [4, 24, 41, 56, 57, 281, 605, 668, 916, 929, 930, 935, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1137, 1149, 1248, 1312, 1343, 1475, 1526, 1537, 1563, 1576, 1595, 1615, 1648, 1846, 1867, 1889, 1892, 1904, 1911, 1925, 1926], "spend": [4, 7, 1266, 1948], "sens": [4, 30, 41, 55, 1630, 1843, 1844, 1869, 1889], "respons": [4, 7, 9, 24, 26, 28, 30, 32, 38, 43, 47, 54, 970, 1415, 1544, 1607, 1796, 1889, 1892, 1894, 1895, 1900, 1921, 1943], "Of": [4, 1653, 1864, 1893, 1894, 1944], "cours": [4, 55, 1864, 1893, 1894, 1921, 1944, 1947], "realiti": 4, "complic": [4, 22, 55, 781, 1753, 1873, 1883, 1890, 1913, 1921, 1923, 1943], "depend": [4, 5, 13, 14, 21, 24, 28, 30, 32, 41, 42, 43, 47, 55, 304, 773, 866, 978, 1025, 1029, 1043, 1044, 1087, 1089, 1097, 1098, 1099, 1124, 1128, 1133, 1205, 1209, 1229, 1230, 1257, 1283, 1288, 1343, 1344, 1361, 1363, 1371, 1374, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1478, 1479, 1491, 1498, 1499, 1509, 1518, 1526, 1538, 1561, 1569, 1576, 1595, 1598, 1607, 1619, 1620, 1626, 1685, 1697, 1699, 1716, 1732, 1793, 1794, 1795, 1797, 1798, 1811, 1834, 1860, 1864, 1866, 1868, 1869, 1876, 1881, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1907, 1909, 1910, 1915, 1916, 1921, 1925, 1931, 1932, 1936, 1939, 1940, 1942, 1943, 1944, 1946, 1947, 1950, 1953, 1956], "could": [4, 5, 7, 8, 21, 24, 30, 32, 41, 47, 52, 54, 55, 571, 572, 573, 575, 576, 942, 1005, 1087, 1089, 1097, 1098, 1099, 1190, 1199, 1224, 1265, 1283, 1308, 1309, 1684, 1788, 1843, 1868, 1869, 1876, 1881, 1889, 1892, 1893, 1906, 1910, 1913, 1916, 1917, 1921, 1922, 1923, 1925, 1929, 1930, 1940, 1944, 1945, 1950, 1954], "account": [4, 39, 55, 1607, 1887, 1891, 1925, 1939], "heavili": [4, 1669, 1891, 1894, 1913], "similarli": [4, 7, 45, 54, 55, 748, 778, 782, 846, 931, 1086, 1193, 1249, 1427, 1474, 1603, 1604, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1835, 1836, 1837, 1838, 1868, 1889, 1894, 1896, 1897, 1903, 1925, 1939, 1943, 1946], "platform": [4, 8, 9, 14, 24, 33, 34, 38, 1240, 1241, 1252, 1709, 1811, 1877, 1898, 1903, 1904, 1916], "startup": 4, "slower": [4, 14, 24, 864, 890, 1106, 1107, 1108, 1223, 1230, 1545, 1614, 1894, 1904, 1912, 1926, 1943], "rerun": [5, 24, 1892], "segment": [5, 1023, 1119, 1458, 1892, 1913, 1944, 1950, 1956], "persist": [5, 19, 26, 47, 748, 803, 804, 805, 1193, 1379, 1397, 1427, 1442, 1900, 1905, 1906, 1939, 1943, 1948], "rng": [5, 21, 998, 1037, 1746, 1892, 1904, 1920], "advanc": [5, 15, 21, 22, 32, 1470, 1472, 1474, 1653, 1849, 1873, 1876, 1883, 1892, 1894, 1898, 1902, 1908, 1929, 1930, 1944], "juggl": 5, "dropout": [5, 55, 722, 723, 748, 1193, 1339, 1366, 1367, 1368, 1372, 1379, 1397, 1427, 1433, 1442, 1443, 1470, 1472, 1474, 1492, 1512, 1513, 1514, 1519, 1576, 1865, 1867, 1877, 1883, 1884, 1889, 1892, 1911, 1918], "moder": 5, "hit": [5, 8, 14, 1607, 1864, 1892, 1939, 1944, 1948, 1954], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1865], "omit": [5, 14, 24, 42, 1100, 1101, 1103, 1381, 1441, 1906, 1910, 1921, 1932, 1945], "exclud": [5, 9, 22, 41, 55, 946, 1155, 1371, 1518, 1566, 1661, 1753, 1835, 1836, 1837, 1838, 1889, 1898, 1913, 1922, 1941, 1944], "_infer_device_typ": 5, "consequ": [5, 52, 1257, 1397, 1811, 1869, 1889, 1892, 1902, 1904, 1907], "random": [5, 30, 32, 41, 42, 48, 55, 73, 77, 143, 748, 880, 910, 998, 999, 1004, 1013, 1014, 1033, 1034, 1037, 1038, 1127, 1134, 1145, 1169, 1266, 1286, 1306, 1307, 1311, 1313, 1339, 1350, 1372, 1379, 1397, 1445, 1519, 1569, 1574, 1598, 1615, 1621, 1627, 1628, 1635, 1636, 1655, 1699, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1746, 1759, 1812, 1849, 1857, 1864, 1865, 1867, 1875, 1887, 1895, 1897, 1903, 1910, 1911, 1930, 1944, 1954], "gradient": [5, 11, 21, 22, 24, 28, 29, 30, 47, 48, 51, 139, 210, 211, 279, 324, 475, 476, 483, 501, 683, 684, 868, 877, 879, 881, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 911, 937, 1070, 1122, 1123, 1124, 1125, 1129, 1134, 1135, 1168, 1193, 1229, 1230, 1233, 1240, 1241, 1257, 1266, 1283, 1285, 1291, 1294, 1296, 1343, 1350, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1381, 1395, 1396, 1427, 1434, 1458, 1509, 1510, 1517, 1518, 1528, 1537, 1545, 1547, 1548, 1561, 1595, 1596, 1597, 1603, 1604, 1607, 1608, 1611, 1612, 1614, 1619, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1697, 1755, 1792, 1811, 1857, 1865, 1866, 1867, 1876, 1883, 1884, 1887, 1892, 1893, 1894, 1896, 1897, 1900, 1903, 1911, 1912, 1921, 1922, 1925, 1944, 1952], "among": [5, 21, 22, 24, 28, 30, 41, 979, 980, 983, 1155, 1364, 1655, 1869, 1902, 1943], "detect": [5, 14, 17, 18, 21, 24, 25, 32, 34, 47, 889, 890, 891, 892, 893, 894, 940, 1123, 1197, 1470, 1471, 1473, 1607, 1846, 1865, 1881, 1884, 1892, 1897, 1903, 1910, 1913, 1921, 1942, 1944, 1950, 1954], "priorit": [5, 1126, 1127, 1129, 1666, 1667, 1925], "defaultdevicetyp": 5, "anticip": [5, 1956], "belong": [5, 24, 26, 28, 30, 38, 55, 924, 972, 1681, 1864, 1892, 1912, 1947, 1953, 1955], "use_reentr": [5, 1607], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 55, 1365, 1621, 1832, 1885, 1900, 1907, 1908, 1912, 1914, 1916, 1938, 1947, 1954], "recomput": [5, 887, 1479, 1537, 1651, 1912, 1942], "refer": [5, 7, 14, 21, 22, 24, 25, 26, 28, 30, 33, 36, 37, 41, 42, 47, 48, 54, 68, 69, 70, 73, 75, 243, 722, 723, 744, 752, 780, 781, 782, 807, 808, 809, 812, 813, 814, 847, 861, 866, 881, 922, 1005, 1010, 1069, 1119, 1141, 1142, 1174, 1181, 1193, 1196, 1205, 1212, 1225, 1230, 1246, 1250, 1263, 1266, 1350, 1381, 1427, 1476, 1491, 1499, 1508, 1526, 1537, 1594, 1607, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1699, 1716, 1752, 1753, 1774, 1812, 1846, 1864, 1865, 1867, 1881, 1882, 1884, 1885, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1910, 1912, 1917, 1918, 1921, 1922, 1925, 1928, 1929, 1930, 1933, 1936, 1940, 1941, 1946, 1947, 1950, 1954], "potenti": [5, 8, 24, 41, 43, 47, 73, 180, 197, 1203, 1239, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1607, 1846, 1868, 1876, 1881, 1889, 1892, 1894, 1913, 1925, 1929, 1942, 1944, 1947], "silent": [5, 45, 1013, 1014, 1033, 1034, 1167, 1209, 1427, 1611, 1612, 1796, 1892, 1903, 1910], "consider": [5, 7, 70, 872, 1190, 1371, 1607, 1869, 1891], "limit": [5, 8, 9, 13, 21, 47, 48, 53, 70, 1036, 1123, 1207, 1312, 1350, 1370, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1576, 1607, 1630, 1758, 1865, 1869, 1873, 1881, 1883, 1884, 1889, 1892, 1893, 1900, 1903, 1904, 1905, 1907, 1913, 1916, 1919, 1921, 1922, 1925, 1932, 1942, 1943, 1947, 1951, 1954], "reentrant": [5, 1607], "stop": [5, 30, 32, 41, 42, 43, 853, 1005, 1191, 1266, 1350, 1640, 1693, 1725, 1866, 1869, 1921, 1945], "soon": [5, 41, 45, 47, 781, 1889, 1916, 1921, 1923, 1944, 1947], "intermedi": [5, 13, 14, 31, 45, 52, 55, 70, 921, 1117, 1123, 1130, 1283, 1371, 1470, 1472, 1474, 1518, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1866, 1869, 1892, 1894, 1895, 1896, 1903, 1935, 1942, 1943], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 13, 24, 26, 30, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 128, 139, 210, 211, 668, 735, 780, 781, 803, 804, 805, 811, 814, 881, 887, 895, 940, 942, 967, 1002, 1007, 1012, 1123, 1193, 1196, 1197, 1203, 1205, 1209, 1607, 1661, 1663, 1666, 1667, 1670, 1865, 1869, 1875, 1877, 1885, 1888, 1893, 1894, 1897, 1900, 1901, 1907, 1908, 1910, 1913, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1930, 1935, 1936, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1951], "no_grad": [5, 476, 849, 1070, 1124, 1128, 1133, 1168, 1193, 1370, 1427, 1433, 1474, 1608, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1887, 1889, 1900, 1916, 1933], "condit": [5, 13, 19, 21, 45, 52, 55, 56, 59, 63, 64, 605, 608, 612, 682, 748, 890, 896, 897, 1190, 1209, 1223, 1225, 1230, 1233, 1239, 1240, 1241, 1252, 1257, 1379, 1397, 1442, 1474, 1642, 1647, 1834, 1860, 1866, 1867, 1868, 1870, 1884, 1889, 1894, 1903, 1914, 1930, 1941, 1942, 1943, 1949], "unmet": 5, "particip": [5, 9, 21, 24, 25, 28, 41, 42, 1607, 1922, 1942], "wherea": [5, 45, 1249, 1308, 1309, 1322, 1680, 1811, 1869, 1889, 1932, 1943], "know": [5, 7, 8, 14, 25, 31, 45, 55, 474, 885, 890, 1117, 1123, 1204, 1607, 1866, 1869, 1876, 1888, 1889, 1892, 1894, 1897, 1910, 1913, 1921, 1922, 1923, 1925, 1939, 1941, 1942, 1943, 1944, 1947], "lstm": [5, 751, 1398, 1443, 1867, 1892, 1910, 1911, 1916, 1918, 1919, 1930], "hidden": [5, 748, 1132, 1379, 1380, 1397, 1398, 1442, 1444, 1608, 1892, 1930], "correctli": [5, 21, 24, 41, 45, 47, 474, 1123, 1193, 1209, 1427, 1545, 1866, 1868, 1869, 1879, 1883, 1888, 1889, 1893, 1894, 1895, 1902, 1904, 1916, 1921], "entrant": 5, "futur": [5, 8, 9, 13, 22, 24, 26, 32, 41, 42, 45, 52, 55, 279, 310, 501, 505, 545, 668, 675, 781, 803, 804, 805, 814, 849, 887, 930, 931, 940, 951, 952, 966, 967, 969, 970, 972, 1001, 1002, 1009, 1010, 1012, 1139, 1193, 1196, 1203, 1204, 1207, 1212, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1283, 1284, 1295, 1305, 1367, 1427, 1528, 1550, 1551, 1552, 1599, 1607, 1611, 1648, 1649, 1654, 1669, 1709, 1725, 1807, 1811, 1834, 1865, 1866, 1867, 1868, 1869, 1870, 1875, 1876, 1877, 1879, 1883, 1884, 1891, 1892, 1894, 1905, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1925, 1927, 1931, 1932, 1933, 1935, 1942, 1944, 1949, 1956], "turn": [5, 14, 21, 52, 55, 70, 668, 861, 940, 1181, 1209, 1471, 1473, 1793, 1794, 1795, 1796, 1797, 1798, 1876, 1889, 1892, 1903, 1904, 1910, 1915, 1916, 1922, 1925, 1942, 1943, 1946, 1947, 1952], "open": [5, 8, 9, 14, 21, 30, 41, 45, 48, 677, 903, 924, 1116, 1201, 1265, 1288, 1298, 1543, 1866, 1876, 1881, 1884, 1898, 1906, 1907, 1910, 1913, 1916, 1921, 1925, 1926, 1944, 1952, 1956], "ran": [5, 18, 47, 1944, 1950, 1954], "sequenti": [5, 21, 28, 45, 47, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 781, 1134, 1193, 1203, 1373, 1427, 1466, 1477, 1616, 1630, 1694, 1857, 1866, 1881, 1884, 1892, 1900, 1910, 1912, 1914, 1916, 1935, 1944, 1952, 1954], "func": [5, 24, 29, 50, 52, 55, 56, 58, 850, 880, 882, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 1168, 1196, 1209, 1210, 1649, 1849, 1857, 1865, 1869, 1888, 1921, 1923, 1955], "compris": [5, 42, 45], "chunk": [5, 21, 24, 26, 47, 927, 983, 1128, 1364, 1607, 1799, 1866, 1867, 1882, 1911, 1912, 1914, 1921, 1925, 1929], "input_var": [5, 1364], "person": [6, 7, 9], "land": [6, 9, 10, 1951], "six": [6, 69, 1357], "commit": [6, 7, 9, 14, 48, 1864, 1865, 1903, 1904, 1951], "repositori": [6, 9, 51, 55, 1864, 1902], "submit": [6, 9, 969, 970, 972, 1305, 1892, 1904, 1944, 1951], "month": [6, 9], "qualifi": [6, 24, 29, 38, 55, 668, 1193, 1427, 1875, 1908, 1913], "pr": [6, 7, 1699, 1812, 1935, 1944], "interest": [6, 7, 9, 70, 1889, 1895, 1897, 1900, 1907, 1941, 1943, 1948, 1952], "merge_rul": 6, "vote": [6, 9], "decis": [6, 26, 32, 41, 43, 45, 55, 1209, 1876, 1888, 1942], "criteria": [6, 9, 1266], "approv": [6, 9], "Not": [6, 42, 69, 1325, 1474, 1866, 1868, 1869, 1870, 1892, 1894, 1911, 1916, 1921, 1947], "busi": [6, 9, 1948], "dai": [6, 7, 1943, 1951], "contributor": [6, 7, 8, 9], "seen": [6, 13, 18, 30, 55, 210, 927, 940, 958, 1295, 1358, 1359, 1360, 1458, 1550, 1551, 1552, 1693, 1866, 1876, 1889, 1892, 1910, 1925, 1947], "thumb": [6, 24], "deprec": [7, 24, 32, 41, 42, 45, 47, 51, 395, 501, 545, 591, 773, 774, 775, 781, 814, 895, 896, 930, 931, 966, 1016, 1020, 1139, 1193, 1248, 1251, 1283, 1284, 1343, 1344, 1361, 1363, 1386, 1387, 1393, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1480, 1481, 1498, 1499, 1509, 1538, 1561, 1569, 1595, 1596, 1597, 1599, 1607, 1648, 1649, 1651, 1654, 1709, 1725, 1807, 1811, 1834, 1865, 1866, 1871, 1881, 1890, 1915, 1919, 1927, 1931, 1932, 1944], "wiki": [7, 9, 22, 1907, 1957], "acceler": [7, 22, 1345, 1346, 1347, 1466, 1663, 1898, 1936, 1939, 1944], "deep": [7, 9, 55, 1345, 1346, 1347, 1369, 1466, 1679, 1865, 1887, 1892, 1900, 1916, 1938, 1942, 1954], "neural": [7, 8, 15, 55, 1339, 1350, 1365, 1372, 1381, 1393, 1426, 1427, 1434, 1439, 1440, 1454, 1456, 1470, 1472, 1474, 1556, 1579, 1617, 1677, 1685, 1691, 1866, 1868, 1869, 1887, 1892, 1894, 1903, 1907, 1916, 1942], "tape": [7, 1939], "system": [7, 8, 14, 15, 17, 21, 42, 52, 55, 933, 947, 1146, 1201, 1225, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1255, 1256, 1260, 1265, 1284, 1312, 1470, 1472, 1474, 1607, 1617, 1619, 1754, 1834, 1870, 1875, 1879, 1889, 1891, 1892, 1899, 1900, 1902, 1906, 1913, 1921, 1942, 1952], "organ": [7, 1893, 1899, 1913, 1944, 1947], "govern": [7, 8, 1865, 1916], "technic": [7, 9, 41, 45, 47, 55, 1193, 1427, 1603, 1604, 1889, 1896, 1902, 1913, 1942], "md": [7, 55, 780, 1913], "healthi": [7, 32, 41], "team": [7, 24, 48, 73, 74, 76, 1905, 1914], "commun": [7, 8, 9, 25, 26, 28, 32, 41, 43, 47, 668, 1607, 1889, 1893, 1907, 1921, 1922, 1944], "project": [7, 26, 1295, 1397, 1433, 1619, 1699, 1864, 1898, 1907, 1953], "ve": [7, 50, 51, 52, 55, 1197, 1849, 1876, 1881, 1889, 1895, 1922, 1930, 1943, 1944, 1947], "come": [7, 8, 9, 21, 29, 30, 31, 38, 41, 45, 48, 52, 940, 1066, 1117, 1123, 1193, 1265, 1366, 1367, 1368, 1372, 1393, 1660, 1873, 1877, 1893, 1895, 1899, 1913, 1921, 1923, 1925, 1941, 1947, 1950], "peopl": [7, 1889, 1916, 1946], "scratch": [7, 1889, 1954], "itch": 7, "acquaint": 7, "tip": [7, 1892, 1944], "tracker": [7, 1266], "confirm": [7, 1864, 1866, 1894, 1910, 1921, 1923], "tend": [7, 891, 1846], "bootcamp": 7, "1hr": 7, "although": [7, 8, 30, 52, 55, 1358, 1359, 1360, 1427, 1435, 1607, 1865, 1869, 1888, 1894, 1903, 1914, 1916, 1952, 1953], "join": [7, 22, 24, 28, 41, 42, 54, 55, 1607, 1864, 1865, 1870, 1881, 1889, 1893, 1902, 1911, 1931], "u": [7, 8, 13, 48, 53, 55, 56, 748, 889, 931, 1230, 1232, 1236, 1240, 1241, 1257, 1283, 1285, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1412, 1414, 1442, 1444, 1445, 1466, 1477, 1619, 1699, 1811, 1812, 1866, 1867, 1876, 1883, 1887, 1889, 1892, 1893, 1894, 1895, 1900, 1913, 1915, 1925, 1929, 1930, 1942, 1944, 1947, 1948, 1949, 1954], "dev": [7, 10, 33, 38, 1941, 1954], "happi": 7, "research": [7, 8, 9, 1607, 1864, 1889, 1897, 1905], "partner": [7, 1936], "speed": [7, 8, 14, 28, 47, 978, 1066, 1122, 1184, 1197, 1203, 1257, 1335, 1433, 1753, 1811, 1889, 1891, 1892, 1893, 1894, 1896, 1898, 1903, 1916, 1921, 1941, 1947], "reach": [7, 8, 9, 21, 22, 24, 25, 32, 41, 45, 48, 1266, 1607, 1682, 1685, 1688, 1689, 1889, 1894, 1902, 1914, 1916, 1917, 1921, 1941], "design": [7, 9, 21, 30, 38, 41, 48, 51, 52, 53, 896, 897, 1193, 1213, 1427, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1822, 1864, 1865, 1879, 1892, 1894, 1898, 1900, 1908, 1913, 1941, 1942, 1944, 1946, 1949, 1954], "comment": [7, 55, 1651, 1749, 1869, 1870, 1894, 1928, 1930, 1948], "crack": 7, "idea": [7, 48, 1066, 1335, 1607, 1892, 1899, 1910, 1922, 1944], "rfc": [7, 1889, 1916, 1922], "big": [7, 1666, 1667, 1670, 1676, 1677, 1793, 1794, 1795, 1796, 1797, 1798, 1892, 1912, 1916, 1942, 1943, 1948], "post": [7, 8, 25, 26, 28, 47, 476, 844, 845, 849, 1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1865, 1873, 1889, 1893, 1894, 1896, 1906, 1925, 1941, 1943, 1954], "standard": [7, 14, 18, 22, 30, 34, 35, 39, 52, 55, 341, 366, 577, 1086, 1339, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1393, 1399, 1466, 1472, 1474, 1655, 1699, 1722, 1768, 1773, 1805, 1806, 1868, 1870, 1884, 1887, 1891, 1892, 1902, 1903, 1907, 1910, 1913, 1926], "lot": [7, 14, 21, 45, 1881, 1889, 1892, 1897, 1902, 1913, 1914, 1920, 1922, 1930, 1942, 1943, 1947, 1948, 1956], "boil": 7, "mostli": [7, 30, 1191, 1607, 1892, 1916, 1925, 1942, 1955], "evid": 7, "peer": [7, 24, 28, 41, 47, 976, 1607, 1892, 1921], "paper": [7, 9, 22, 30, 748, 1335, 1339, 1345, 1346, 1347, 1349, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1369, 1372, 1375, 1376, 1379, 1382, 1385, 1390, 1391, 1392, 1399, 1433, 1439, 1440, 1445, 1454, 1458, 1466, 1470, 1472, 1474, 1475, 1476, 1521, 1522, 1531, 1666, 1667, 1676, 1678, 1685, 1691, 1897, 1914], "framework": [7, 8, 9, 30, 38, 48, 54, 748, 974, 1303, 1379, 1607, 1614, 1679, 1758, 1865, 1901, 1914, 1916, 1922, 1923], "bit": [7, 55, 77, 319, 446, 749, 751, 753, 807, 808, 809, 810, 813, 815, 846, 913, 916, 951, 952, 1119, 1173, 1733, 1734, 1746, 1753, 1775, 1892, 1900, 1903, 1906, 1916, 1919, 1920, 1925, 1928, 1931, 1947, 1948, 1957], "accept": [7, 9, 21, 24, 26, 29, 45, 47, 48, 49, 51, 53, 139, 501, 790, 877, 878, 879, 880, 881, 886, 895, 930, 1009, 1012, 1118, 1134, 1155, 1193, 1197, 1363, 1427, 1434, 1455, 1474, 1626, 1640, 1641, 1647, 1662, 1750, 1788, 1802, 1857, 1869, 1883, 1892, 1894, 1895, 1910, 1912, 1921, 1928, 1930, 1944, 1954], "overwhelm": [7, 1921, 1954], "newli": [7, 47, 55, 1080, 1081, 1370, 1371, 1711, 1712, 1873, 1947], "publish": [7, 9, 33, 38, 41, 1266, 1865], "ground": [7, 9, 1363, 1509, 1930], "break": [7, 30, 50, 55, 668, 881, 940, 942, 1193, 1239, 1427, 1738, 1758, 1865, 1870, 1875, 1893, 1912, 1925, 1933, 1939, 1941, 1942, 1945, 1947, 1948, 1950], "refactor": [7, 55, 1906, 1916], "coordin": [7, 24, 26, 30, 32, 571, 574, 872, 1146, 1155, 1295, 1703, 1796, 1836, 1838, 1889, 1925, 1930, 1944, 1954], "pace": 7, "branch": [7, 13, 45, 55, 56, 59, 61, 63, 64, 1864, 1868, 1869, 1892, 1942, 1951], "fast": [7, 8, 21, 24, 896, 1369, 1390, 1391, 1392, 1458, 1474, 1576, 1691, 1697, 1716, 1738, 1753, 1865, 1891, 1892, 1894, 1898, 1912, 1921, 1925, 1928, 1929, 1936, 1943, 1946, 1948, 1956], "definit": [7, 8, 21, 24, 25, 30, 37, 45, 55, 74, 931, 932, 933, 958, 1009, 1114, 1214, 1223, 1224, 1266, 1393, 1538, 1583, 1654, 1729, 1832, 1864, 1866, 1868, 1870, 1888, 1889, 1894, 1897, 1913, 1916, 1930, 1932, 1947], "fundament": [7, 52, 1868, 1900, 1921, 1925, 1943], "cut": [7, 1944], "guidanc": [7, 9, 15, 49, 1914, 1942], "stage": [7, 18, 22, 28, 38, 47, 54, 1865, 1876, 1884, 1914, 1923, 1954], "piec": [7, 1875, 1884, 1922, 1944, 1947, 1956], "advic": [7, 1944], "readi": [7, 14, 54, 849, 850, 909, 918, 1150, 1151, 1607, 1866, 1893, 1921, 1922, 1939], "draft": 7, "convert": [7, 21, 24, 29, 30, 31, 47, 51, 55, 69, 70, 71, 139, 568, 572, 573, 574, 575, 576, 723, 776, 777, 778, 780, 781, 782, 803, 804, 805, 826, 827, 842, 845, 846, 847, 867, 868, 926, 939, 1050, 1086, 1117, 1193, 1263, 1427, 1437, 1438, 1466, 1473, 1598, 1609, 1610, 1613, 1650, 1660, 1661, 1680, 1711, 1712, 1717, 1793, 1794, 1795, 1796, 1797, 1798, 1866, 1867, 1868, 1869, 1884, 1894, 1898, 1907, 1908, 1910, 1916, 1919, 1925, 1930, 1932, 1935, 1936, 1941, 1944, 1947, 1953, 1954], "press": [7, 55], "button": [7, 1951], "prepend": [7, 14, 21, 24, 28, 55, 218, 1058, 1193, 1288, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1828, 1867, 1890], "titl": [7, 1911, 1915], "wip": 7, "progress": [7, 24, 28, 32, 42, 44, 45, 68, 969, 1305, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1851, 1864, 1878], "ci": [7, 1865, 1951], "folk": 7, "who": [7, 8, 9, 11, 41, 56, 70, 1913, 1947], "regularli": 7, "queue": [7, 32, 43, 1881, 1930], "everyth": [7, 21, 30, 51, 56, 1866, 1881, 1913, 1942, 1944, 1947, 1948, 1954], "happen": [7, 9, 24, 26, 28, 30, 32, 34, 41, 45, 47, 52, 55, 595, 779, 802, 1123, 1466, 1607, 1614, 1682, 1688, 1689, 1695, 1811, 1865, 1879, 1881, 1889, 1892, 1893, 1894, 1895, 1896, 1901, 1902, 1906, 1910, 1916, 1921, 1929, 1939, 1944, 1947], "subsystem": [7, 11, 48, 53, 942, 1865, 1894], "patch": [7, 49, 1374, 1478, 1847, 1945], "feel": [7, 1884, 1910, 1925, 1944], "ll": [7, 52, 55, 748, 808, 809, 849, 850, 931, 932, 933, 1012, 1223, 1379, 1380, 1397, 1398, 1876, 1889, 1892, 1894, 1895, 1902, 1910, 1916, 1922, 1940, 1943, 1948, 1952], "round": [7, 21, 24, 56, 58, 64, 496, 653, 654, 787, 790, 808, 853, 954, 956, 1023, 1061, 1087, 1088, 1089, 1093, 1097, 1098, 1099, 1114, 1239, 1252, 1479, 1537, 1709, 1710, 1729, 1778, 1867, 1869, 1882, 1892, 1911, 1916, 1919, 1925, 1926, 1949, 1956], "trip": [7, 55, 1087, 1088, 1089, 1093, 1097, 1098, 1099], "noth": [7, 14, 32, 55, 668, 1003, 1619, 1666, 1667, 1694, 1866, 1868, 1923], "accompani": [7, 72], "solut": [7, 8, 52, 933, 1238, 1239, 1243, 1251, 1254, 1256, 1260, 1343, 1607, 1834, 1866, 1867, 1887, 1888, 1896, 1902, 1916], "think": [7, 9, 55, 56, 1680, 1866, 1868, 1889, 1912, 1913, 1923, 1943, 1945], "confid": [7, 1930, 1945], "ahead": [7, 45, 1865, 1916, 1936, 1942, 1944], "search": [7, 11, 22, 807, 924, 1385, 1531, 1607, 1661, 1716, 1745, 1866, 1882, 1883, 1910, 1913, 1925, 1940, 1943, 1951, 1956], "repo": [7, 56, 1685, 1864, 1894, 1906], "unabl": [7, 52, 71, 1910, 1912], "similar": [7, 9, 21, 24, 30, 38, 47, 52, 54, 55, 481, 503, 700, 701, 702, 703, 704, 705, 708, 718, 719, 720, 721, 733, 734, 744, 752, 790, 865, 880, 921, 926, 939, 940, 1112, 1113, 1193, 1361, 1362, 1374, 1387, 1390, 1391, 1392, 1427, 1475, 1508, 1640, 1654, 1655, 1680, 1703, 1731, 1738, 1788, 1822, 1828, 1844, 1868, 1869, 1881, 1882, 1884, 1889, 1891, 1892, 1894, 1895, 1897, 1903, 1910, 1913, 1914, 1916, 1921, 1922, 1925, 1926, 1931, 1942, 1943, 1944, 1946, 1947, 1950, 1954, 1957], "reproduc": [7, 21, 52, 302, 310, 503, 505, 911, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1423, 1424, 1425, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1598, 1846, 1864, 1865, 1912, 1913, 1944, 1954], "problemat": [7, 21, 55, 1866, 1903, 1917], "insight": [7, 18, 68, 1956], "individu": [7, 9, 14, 21, 22, 24, 26, 28, 47, 55, 72, 231, 668, 780, 826, 827, 931, 1032, 1084, 1102, 1193, 1350, 1427, 1466, 1607, 1869, 1882, 1888, 1889, 1892, 1894, 1899, 1903, 1904, 1908, 1910, 1919, 1921, 1932, 1939, 1946, 1951, 1956], "intent": [7, 39, 41, 47, 52, 1750, 1876, 1913, 1916, 1950], "lock": [7, 21, 24, 28, 30, 1889, 1892, 1902, 1913, 1922, 1956], "strike": 7, "convers": [7, 446, 568, 571, 781, 925, 1178, 1640, 1865, 1870, 1894, 1898, 1910, 1916, 1917, 1925, 1942, 1943, 1953], "medium": [7, 47, 1753], "prioriti": [7, 9, 10, 24, 668, 842, 972, 1868, 1905], "entranc": [7, 1892], "great": [7, 13, 45, 1889, 1897, 1939, 1942], "deal": [7, 8, 21, 32, 43, 45, 69, 1827, 1881, 1896, 1921, 1942, 1943, 1947, 1948], "welcom": [7, 1884, 1907, 1912, 1925], "aim": [7, 45, 70, 1895, 1925, 1936], "typo": 7, "send": [7, 21, 24, 32, 43, 1005, 1598, 1607, 1881, 1893, 1902, 1906, 1911, 1915, 1921, 1922, 1923, 1933, 1935, 1943, 1946], "forum": [7, 9, 1896, 1902], "share": [7, 10, 14, 21, 25, 28, 30, 31, 41, 42, 47, 52, 210, 300, 329, 446, 471, 508, 512, 605, 847, 867, 868, 885, 896, 897, 940, 967, 969, 1001, 1005, 1117, 1118, 1119, 1163, 1241, 1326, 1327, 1364, 1443, 1607, 1617, 1655, 1727, 1741, 1802, 1825, 1831, 1845, 1867, 1888, 1889, 1891, 1902, 1905, 1906, 1910, 1921, 1925, 1927, 1929, 1934, 1939], "resolv": [7, 8, 9, 26, 30, 47, 55, 71, 72, 1193, 1358, 1359, 1360, 1374, 1424, 1427, 1868, 1869, 1870, 1906, 1913, 1927, 1942, 1955], "challeng": [7, 24, 1922, 1944], "feedback": [7, 18, 22, 47, 48, 1607, 1865, 1925], "direct": [7, 9, 11, 24, 748, 780, 1107, 1108, 1193, 1379, 1397, 1427, 1442, 1651, 1678, 1699, 1716, 1737, 1889, 1892, 1894, 1900, 1921, 1947, 1953], "yourself": [7, 50, 967, 1847, 1894, 1900, 1902, 1944, 1955], "problem": [7, 21, 24, 41, 45, 52, 56, 1066, 1209, 1239, 1251, 1266, 1363, 1434, 1491, 1749, 1881, 1889, 1892, 1896, 1897, 1902, 1906, 1914, 1916, 1917, 1923, 1928, 1936, 1942, 1944, 1954], "area": [7, 9, 1537, 1900, 1916, 1926], "appreci": 7, "strive": 7, "respond": [7, 24], "quickli": [7, 8, 22, 41, 1946], "ey": [7, 30, 180, 197, 932, 933, 1134, 1214, 1223, 1234, 1245, 1248, 1251, 1252, 1259, 1260, 1614, 1709, 1789, 1857, 1867, 1871, 1894, 1911], "everyon": [7, 32, 41], "touch": [7, 39, 55], "versu": [7, 1431], "write": [7, 8, 9, 13, 16, 18, 21, 24, 26, 32, 34, 38, 39, 40, 41, 45, 47, 52, 53, 69, 71, 72, 243, 501, 685, 922, 942, 1118, 1134, 1170, 1204, 1224, 1235, 1236, 1237, 1241, 1242, 1255, 1594, 1741, 1834, 1846, 1857, 1865, 1868, 1879, 1883, 1892, 1895, 1896, 1897, 1908, 1912, 1913, 1916, 1925, 1930, 1936, 1942, 1944, 1946, 1948, 1954], "blog": [7, 8, 13, 1873, 1893, 1894, 1916, 1925], "around": [7, 9, 11, 24, 30, 51, 52, 54, 55, 139, 612, 881, 895, 964, 967, 969, 970, 972, 1041, 1112, 1113, 1123, 1193, 1305, 1607, 1738, 1866, 1881, 1889, 1892, 1910, 1916, 1921, 1939, 1947], "internet": 7, "grow": [7, 8, 55, 1892, 1925], "market": [7, 9], "benefit": [7, 8, 24, 55, 835, 1693, 1881, 1892, 1916, 1925, 1954], "opinion": [7, 8, 1925], "isn": [7, 21, 55, 446, 1190, 1889, 1892, 1894, 1921, 1932, 1943], "categor": [7, 34, 1528, 1865, 1870, 1917, 1921, 1953], "aspect": [7, 24, 55, 1443, 1894, 1900], "seem": [7, 1910], "unusu": [7, 1943], "claim": [7, 1691, 1897], "wast": [7, 1892], "someon": [7, 9, 1191, 1883], "advisori": 7, "fashion": [7, 21, 24, 43, 45, 503, 1271, 1630, 1866], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1954], "wrote": [7, 8], "implicitli": [7, 24, 34, 55, 1049, 1138, 1146, 1209, 1210, 1265, 1340, 1341, 1342, 1420, 1421, 1422, 1750, 1832, 1866, 1868, 1869, 1889, 1894, 1898], "lifetim": [7, 1921, 1943], "immedi": [7, 8, 9, 41, 42, 47, 54, 1193, 1196, 1427, 1869, 1900, 1905, 1912, 1921, 1923, 1942, 1943], "sai": [7, 45, 55, 484, 1126, 1127, 1128, 1193, 1427, 1866, 1888, 1889, 1896, 1913, 1922, 1923, 1925, 1939, 1942, 1947, 1948, 1953], "bugfix": 7, "Or": [7, 32, 55, 868, 935, 1898, 1901, 1910, 1925, 1947], "motiv": [7, 8, 55, 723, 1900, 1922, 1954], "ye": [7, 1910, 1912, 1925, 1944], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1365, 1607], "ok": [7, 34, 39, 51, 940, 1198, 1923, 1944], "sometim": [7, 55, 892, 1023, 1199, 1209, 1374, 1478, 1504, 1505, 1506, 1619, 1865, 1869, 1881, 1889, 1892, 1895, 1896, 1900, 1902, 1913, 1928, 1931, 1942, 1943, 1948, 1955], "obvious": [7, 1943], "broken": [7, 21, 1023, 1910, 1913], "contrari": [7, 1891], "accident": 7, "put": [7, 9, 21, 24, 32, 51, 54, 55, 308, 1086, 1265, 1382, 1685, 1864, 1867, 1881, 1892, 1902, 1911, 1913, 1922, 1923, 1943, 1945], "difficulti": [7, 1887], "nonlinearli": 7, "sign": [7, 30, 330, 517, 872, 953, 1054, 1102, 1114, 1119, 1227, 1252, 1253, 1274, 1419, 1678, 1729, 1761, 1775, 1867, 1882, 1911, 1919, 1925, 1928, 1931, 1932, 1949], "split": [7, 21, 24, 55, 605, 760, 761, 762, 847, 849, 850, 927, 934, 1023, 1064, 1156, 1364, 1378, 1379, 1397, 1433, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1525, 1826, 1858, 1866, 1867, 1882, 1892, 1911, 1913, 1914, 1916, 1921, 1925, 1929, 1952, 1956], "shippabl": 7, "complet": [7, 14, 21, 24, 26, 32, 33, 39, 41, 43, 52, 54, 474, 668, 849, 942, 965, 969, 970, 972, 1042, 1122, 1123, 1196, 1205, 1207, 1212, 1224, 1252, 1305, 1308, 1309, 1314, 1491, 1607, 1616, 1649, 1709, 1753, 1865, 1868, 1869, 1870, 1875, 1881, 1888, 1889, 1892, 1895, 1898, 1904, 1913, 1914, 1921, 1922, 1938, 1945, 1947, 1951, 1952], "subtl": [7, 1390, 1391, 1392, 1894, 1943, 1944, 1954], "nuanc": [7, 1907, 1947], "extra": [7, 14, 21, 22, 24, 28, 30, 45, 47, 55, 1066, 1123, 1134, 1193, 1201, 1204, 1239, 1265, 1427, 1434, 1614, 1807, 1857, 1868, 1883, 1889, 1891, 1893, 1894, 1896, 1899, 1908, 1913, 1915, 1925, 1932, 1933, 1943, 1947, 1948], "understand": [7, 8, 9, 24, 26, 32, 33, 56, 69, 70, 1123, 1251, 1865, 1873, 1887, 1889, 1892, 1898, 1905, 1915, 1930, 1936, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1954], "hack": 7, "answer": [7, 10, 55, 812, 1344, 1632, 1943, 1944], "regress": [7, 1343, 1904, 1939, 1950], "scrutini": 7, "undertak": 7, "rest": [7, 21, 22, 42, 47, 55, 781, 802, 1119, 1259, 1260, 1826, 1883, 1900, 1904, 1913, 1914, 1916, 1921, 1925, 1945, 1947, 1948, 1952], "chanc": [7, 26, 30, 1894, 1943, 1944, 1948], "unrel": [7, 947, 1132, 1888, 1894, 1913], "aid": [7, 55, 1889, 1954], "troubleshoot": [7, 24, 1936, 1944], "mayb": [7, 1130, 1849, 1943], "bracnh": 7, "rebas": 7, "latest": [7, 24, 28, 30, 45, 1626, 1864, 1894, 1898, 1908, 1910], "statu": [7, 9, 32, 1283, 1865, 1870, 1881, 1916], "hud": 7, "risk": [7, 8, 47, 1616, 1619], "anyth": [7, 31, 34, 47, 54, 811, 814, 1205, 1680, 1866, 1873, 1884, 1900, 1913, 1942], "configur": [7, 12, 21, 22, 24, 32, 33, 38, 41, 42, 43, 47, 776, 777, 780, 781, 785, 802, 803, 804, 805, 811, 814, 826, 827, 828, 831, 833, 836, 846, 847, 848, 849, 850, 940, 1023, 1607, 1640, 1754, 1846, 1865, 1875, 1879, 1892, 1893, 1894, 1904, 1906, 1913, 1919, 1921, 1930, 1932, 1942, 1944, 1951, 1952, 1954], "riski": 7, "had": [7, 55, 1209, 1598, 1828, 1889, 1895, 1942], "beforehand": [7, 54, 1944], "hei": 7, "my": [7, 21, 1364, 1899, 1910, 1916], "member": [7, 9, 21, 24, 32, 41, 42, 55, 56, 58, 1193, 1381, 1427, 1523, 1866, 1868, 1869, 1879, 1896, 1915, 1921, 1932, 1933], "sphinx": 7, "folder": [7, 9, 14, 21, 55, 1661, 1864, 1908, 1930, 1946, 1954], "tree": [7, 34, 51, 940, 1427, 1470, 1661, 1910, 1913, 1915, 1923, 1936], "master": [7, 24, 44, 780, 1123, 1470, 1864, 1921], "doxygen": 7, "special": [7, 11, 29, 34, 43, 52, 55, 56, 61, 63, 64, 729, 730, 731, 811, 814, 896, 940, 1059, 1073, 1074, 1075, 1077, 1078, 1087, 1089, 1160, 1161, 1162, 1207, 1265, 1279, 1320, 1364, 1474, 1608, 1609, 1610, 1653, 1680, 1704, 1762, 1773, 1777, 1861, 1865, 1870, 1875, 1883, 1892, 1894, 1897, 1899, 1910, 1913, 1916, 1929, 1930, 1941, 1942, 1943, 1947, 1950], "server": [7, 21, 24, 42, 1197, 1892, 1913, 1916, 1921, 1938], "cppdoc": [7, 15], "cpp": [7, 14, 24, 1317, 1893, 1942], "accomplish": [7, 26, 1900, 1944], "holist": 7, "concept": [7, 52, 55, 1873, 1894, 1895, 1900, 1928, 1945], "galleri": 7, "restructur": [7, 1913], "text": [7, 21, 30, 142, 143, 162, 596, 605, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 686, 733, 734, 744, 746, 748, 752, 756, 757, 758, 760, 761, 762, 768, 772, 808, 809, 853, 869, 870, 871, 872, 873, 908, 909, 910, 913, 916, 918, 920, 929, 932, 933, 935, 952, 953, 955, 956, 958, 1061, 1080, 1081, 1110, 1111, 1115, 1116, 1137, 1149, 1150, 1151, 1152, 1159, 1182, 1190, 1214, 1217, 1218, 1219, 1222, 1223, 1230, 1233, 1239, 1243, 1248, 1251, 1257, 1264, 1273, 1280, 1281, 1282, 1283, 1316, 1317, 1328, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1493, 1494, 1495, 1497, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1512, 1513, 1514, 1519, 1522, 1524, 1525, 1526, 1530, 1531, 1541, 1546, 1550, 1551, 1552, 1556, 1561, 1564, 1569, 1570, 1572, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1586, 1587, 1588, 1612, 1614, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1685, 1702, 1703, 1706, 1709, 1722, 1725, 1728, 1740, 1761, 1763, 1764, 1776, 1778, 1789, 1790, 1800, 1807, 1808, 1811, 1823, 1824, 1860, 1884, 1887, 1897, 1910, 1913, 1919, 1926, 1930, 1932, 1946], "rst": 7, "rebuild": [7, 22], "entir": [7, 14, 21, 24, 32, 42, 55, 685, 896, 897, 1123, 1146, 1366, 1367, 1368, 1372, 1390, 1391, 1392, 1399, 1512, 1513, 1514, 1519, 1607, 1625, 1627, 1651, 1869, 1884, 1889, 1892, 1894, 1895, 1896, 1899, 1900, 1910, 1913, 1916, 1921, 1923, 1925, 1940, 1941, 1942, 1943, 1944, 1947, 1954, 1956], "circleci": 7, "shard": [7, 21, 26, 28, 29, 47, 1607, 1944], "worker": [7, 14, 21, 22, 24, 25, 28, 32, 33, 34, 35, 41, 43, 44, 47, 1607, 1869, 1904, 1914, 1915, 1921, 1922, 1923], "40": [7, 1146, 1266, 1348, 1390, 1614, 1615, 1638, 1639, 1648, 1651, 1822, 1941], "minut": [7, 10, 24, 1930], "netlifi": 7, "noplot": 7, "render": [7, 24, 1930, 1956], "notebook": 7, "rebuilt": [7, 22, 28], "deploi": [7, 13, 32, 41, 1865, 1899, 1905, 1913, 1938], "action": [7, 24, 30, 32, 35, 55, 967, 1001, 1892, 1908, 1913, 1915, 1923, 1956], "document": [8, 9, 10, 17, 21, 24, 45, 47, 48, 55, 668, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 861, 862, 863, 864, 925, 969, 970, 972, 1023, 1066, 1138, 1141, 1142, 1174, 1181, 1193, 1308, 1309, 1324, 1335, 1370, 1371, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1616, 1625, 1634, 1654, 1708, 1735, 1752, 1846, 1864, 1866, 1868, 1869, 1880, 1881, 1882, 1883, 1885, 1888, 1894, 1896, 1900, 1904, 1905, 1910, 1912, 1913, 1916, 1917, 1918, 1921, 1925, 1929, 1933, 1936, 1940, 1945, 1947, 1953], "develop": [8, 9, 10, 14, 22, 24, 55, 1868, 1869, 1876, 1880, 1889, 1894, 1899, 1900, 1904, 1910, 1913, 1916, 1917, 1921, 1925, 1946, 1949, 1954], "meant": [8, 25, 41, 43, 47, 1640, 1888, 1921], "rule": [8, 9, 14, 24, 30, 55, 56, 63, 64, 74, 75, 76, 139, 848, 880, 881, 924, 925, 1049, 1243, 1254, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1745, 1832, 1866, 1868, 1882, 1884, 1889, 1890, 1894, 1897, 1928, 1932, 1943, 1944], "concern": [8, 21, 47, 1881, 1892, 1910, 1952], "disagr": 8, "contribut": [8, 9, 26, 905, 1154, 1155, 1363, 1370, 1371, 1434, 1509, 1517, 1518, 1561, 1607, 1865, 1884, 1894, 1895, 1910, 1914], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 55, 1119, 1339, 1666, 1667, 1896, 1908, 1944, 1945, 1947], "depth": [8, 9, 45, 70, 767, 773, 1027, 1028, 1207, 1342, 1357, 1360, 1422, 1479, 1537, 1595, 1876, 1893, 1900, 1915, 1941, 1956], "primari": [8, 9, 24, 55, 70, 1203, 1870, 1876, 1925, 1943], "goal": [8, 38, 51, 55, 1295, 1876, 1889, 1893, 1897, 1923, 1946], "secondari": 8, "abil": [8, 45, 1741, 1876, 1899, 1908, 1913], "flexibl": [8, 22, 45, 47, 51, 1250, 1607, 1876, 1892, 1894, 1900, 1916, 1947], "abstract": [8, 16, 21, 22, 25, 26, 30, 32, 41, 43, 898, 899, 900, 901, 902, 1621, 1869, 1893, 1916, 1921, 1939, 1947], "critic": [8, 41, 668, 1615, 1648, 1879, 1891, 1892, 1944, 1945, 1947], "concret": [8, 30, 44, 51, 55, 773, 788, 812, 829, 940, 1479, 1564, 1595, 1866, 1869, 1892, 1894, 1902, 1942, 1943, 1947], "manner": [8, 32, 501, 889, 891, 1883, 1885, 1890], "jump": [8, 548, 1928], "regim": 8, "ei": 8, "tradeoff": [8, 22, 45, 1916, 1922, 1944, 1950], "temptat": 8, "impos": [8, 43, 53, 1749, 1881, 1888, 1928], "strict": [8, 889, 890, 891, 892, 893, 894, 1122, 1129, 1193, 1209, 1210, 1427, 1649, 1913, 1930, 1932], "upfront": [8, 1942], "simplifi": [8, 22, 54, 1201, 1417, 1615, 1680, 1876, 1889, 1897, 1900, 1912, 1916, 1922, 1942], "worth": [8, 9, 21, 22, 44, 1123, 1864, 1929, 1947, 1948], "friction": 8, "compel": 8, "narrow": [8, 1263, 1327, 1680, 1768, 1867, 1869, 1882, 1911, 1918, 1929, 1954], "subproblem": 8, "fragment": [8, 991, 1023, 1873, 1892, 1954], "ecosystem": [8, 1899, 1901], "incomprehens": 8, "seamlessli": [8, 1884], "softwar": [8, 1229, 1230, 1257, 1846, 1892, 1898, 1936], "experi": [8, 9, 11, 22, 45, 53, 1134, 1456, 1579, 1607, 1857, 1876, 1894, 1930, 1941], "rich": [8, 1869], "denomin": [8, 675, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1713], "subset": [8, 21, 24, 28, 42, 1205, 1680, 1866, 1868, 1869, 1894, 1907, 1910, 1919, 1949], "borrow": 8, "zen": 8, "implicit": [8, 75, 756, 757, 760, 761, 762, 1138, 1146, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1493, 1494, 1495, 1501, 1502, 1503, 1550, 1551, 1552, 1697, 1867, 1869, 1870, 1910, 1913, 1929, 1949], "concis": [8, 34, 1921], "interchang": [8, 30, 1677, 1831, 1868, 1898, 1908, 1936, 1945], "everydai": 8, "english": 8, "movement": [8, 1929, 1944], "worri": [8, 1921], "placement": [8, 29, 32, 847, 1598, 1916, 1921, 1944], "favor": [8, 24, 773, 774, 775, 931, 942, 1035, 1039, 1193, 1248, 1251, 1283, 1284, 1386, 1427, 1480, 1481, 1595, 1596, 1597, 1599, 1709, 1811, 1834, 1947], "practition": 8, "debugg": [8, 1198, 1897, 1944, 1954], "plug": 8, "ir": [8, 45, 55, 68, 70, 748, 1196, 1197, 1379, 1380, 1661, 1866, 1869, 1908, 1910, 1936, 1942, 1943, 1944, 1954], "classic": [8, 1889], "sort": [8, 28, 32, 55, 578, 597, 864, 865, 886, 1066, 1153, 1315, 1335, 1641, 1642, 1653, 1710, 1745, 1829, 1843, 1867, 1869, 1894, 1896, 1911, 1925, 1942, 1944, 1947, 1949], "distribut": [8, 11, 21, 22, 25, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 47, 54, 162, 247, 275, 366, 442, 469, 596, 668, 683, 684, 807, 910, 1040, 1317, 1335, 1339, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1377, 1381, 1393, 1441, 1445, 1466, 1509, 1511, 1512, 1513, 1514, 1519, 1523, 1524, 1528, 1538, 1569, 1607, 1655, 1702, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1865, 1869, 1883, 1884, 1887, 1888, 1892, 1914, 1915, 1917, 1923, 1926, 1930, 1933], "tldr": 8, "resourc": [8, 14, 21, 32, 37, 41, 45, 55, 1869, 1881, 1902, 1925, 1944, 1951], "characterist": [8, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1812, 1895, 1900], "uniformli": [8, 30, 1720, 1721, 1932], "leak": [8, 881, 887, 1869, 1881, 1889], "smart": [8, 1894, 1913, 1921], "anywai": [8, 1889], "obviou": [8, 1896, 1923, 1943], "extens": [8, 14, 18, 24, 26, 29, 30, 45, 1265, 1266, 1741, 1761, 1865, 1876, 1884, 1888, 1905, 1908, 1913, 1925, 1943, 1944, 1954], "unavoid": 8, "latenc": [8, 38, 1891, 1892, 1944, 1951], "caveat": [8, 47, 1598, 1647, 1876, 1881, 1892, 1900, 1905, 1940, 1950, 1954], "valuabl": 8, "certainli": [8, 1876], "heterogen": [8, 1868], "cluster": [8, 24, 26, 40, 41, 42, 47, 1335, 1930], "focus": [8, 1868, 1869, 1894, 1954], "beaten": 8, "space": [8, 9, 21, 30, 760, 761, 762, 1049, 1084, 1086, 1088, 1089, 1095, 1102, 1146, 1155, 1209, 1210, 1264, 1280, 1335, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1393, 1403, 1404, 1405, 1406, 1407, 1408, 1421, 1422, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1538, 1832, 1867, 1885, 1889, 1897, 1900, 1905, 1956], "innov": 8, "ultim": [8, 9, 14, 34, 43, 45, 1893, 1936], "evidenc": 8, "began": 8, "bind": [8, 14, 24, 55, 1003, 1869, 1870, 1894, 1913], "monolith": 8, "deepli": 8, "integr": [8, 21, 29, 35, 51, 143, 910, 912, 913, 914, 915, 916, 917, 958, 1049, 1154, 1193, 1217, 1261, 1262, 1326, 1427, 1716, 1728, 1832, 1884, 1894, 1899, 1900, 1909, 1912, 1914, 1916, 1926, 1928, 1932, 1940], "numpi": [8, 21, 52, 436, 481, 681, 682, 687, 865, 867, 868, 885, 924, 1061, 1063, 1064, 1066, 1084, 1105, 1106, 1107, 1108, 1112, 1113, 1118, 1134, 1156, 1224, 1225, 1235, 1246, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1295, 1300, 1703, 1728, 1731, 1738, 1750, 1758, 1793, 1794, 1795, 1796, 1797, 1798, 1811, 1813, 1814, 1822, 1825, 1826, 1828, 1854, 1857, 1858, 1876, 1890, 1894, 1895, 1903, 1904, 1906, 1913, 1928, 1929, 1930, 1931, 1932, 1957], "scipi": [8, 928, 1240, 1241, 1566, 1703, 1913, 1924, 1926, 1930], "scikit": [8, 1537], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1906], "year": [8, 1925], "rewrot": 8, "frontend": [8, 15, 51, 55, 1944], "familiar": [8, 15, 55, 967, 1001, 1022, 1866, 1889, 1895, 1913, 1916, 1922, 1923, 1944, 1953], "perhap": [8, 1895, 1947], "importantli": [8, 1947], "huge": [8, 1812, 1879], "scientif": [8, 1758], "pareto": [8, 1865], "close": [8, 15, 24, 41, 55, 56, 59, 63, 1005, 1182, 1229, 1230, 1256, 1257, 1283, 1344, 1458, 1476, 1499, 1676, 1811, 1834, 1879, 1889, 1894, 1903, 1910, 1913, 1916, 1921, 1930, 1932], "curv": [8, 1930], "torchdynamo": [8, 45, 56, 66, 668, 940, 942, 1865, 1875, 1910, 1936, 1940, 1942, 1944, 1946, 1947], "frame": [8, 45, 55, 940, 1190, 1807, 1848, 1896, 1907, 1908, 1930, 1936, 1941, 1942, 1944, 1945, 1954, 1956], "torch_funct": [8, 1894], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 39, 41, 43, 44, 47, 50, 56, 57, 58, 59, 60, 61, 62, 70, 71, 73, 75, 77, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 882, 959, 960, 967, 968, 969, 970, 972, 973, 988, 990, 1001, 1070, 1168, 1191, 1192, 1193, 1208, 1305, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1598, 1607, 1608, 1609, 1610, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1652, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1716, 1755, 1786, 1865, 1866, 1867, 1868, 1882, 1883, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1906, 1908, 1909, 1914, 1916, 1917, 1918, 1921, 1922, 1923, 1929, 1939, 1940, 1941, 1942, 1943, 1946, 1947, 1950, 1953, 1954, 1956], "fx": [8, 13, 45, 71, 668, 735, 803, 804, 805, 806, 848, 1123, 1865, 1907, 1908, 1917, 1918, 1940, 1941, 1942, 1943, 1944, 1947, 1953, 1954], "tracer": [8, 45, 1209, 1910, 1930, 1935, 1947], "functorch": [8, 48, 53, 56, 59, 63, 64, 67, 1940], "anchor": [8, 55, 1475, 1476, 1592, 1593, 1867, 1953], "hackabl": 8, "todai": [8, 48, 53, 940, 1916, 1942], "evolv": [8, 1893, 1908, 1909], "ai": [8, 1910, 1926], "adopt": [9, 24, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 1908], "hierarch": [9, 1930], "pull": [9, 10, 15, 55, 139, 881, 1910, 1913, 1943], "request": [9, 10, 11, 24, 26, 43, 677, 849, 867, 868, 1023, 1266, 1288, 1298, 1543, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1864, 1884, 1888, 1889, 1891, 1892, 1910, 1913, 1921, 1922, 1923, 1925, 1926, 1942, 1956], "overseen": 9, "catch": [9, 34, 1866, 1889, 1895, 1897, 1945], "maker": 9, "strong": 9, "toward": [9, 56, 1061, 1154, 1155, 1266, 1331, 1607, 1688, 1729, 1737, 1738, 1914], "philosophi": [9, 51, 1865], "beyond": [9, 22, 1312, 1363, 1666, 1667, 1676, 1736, 1896, 1900, 1908, 1942], "encourag": [9, 32, 1884, 1916, 1925, 1932], "propos": [9, 1663, 1683, 1684, 1876, 1897, 1912, 1922], "review": [9, 10, 22, 1913, 1946, 1947], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 55], "codebas": [9, 1894], "strictli": [9, 21, 139, 180, 197, 881, 924, 1155, 1193, 1197, 1427, 1889, 1926], "compani": 9, "bui": 9, "addition": [9, 21, 22, 24, 30, 45, 47, 139, 501, 605, 881, 1123, 1127, 1128, 1197, 1257, 1335, 1390, 1391, 1392, 1788, 1896, 1933, 1956], "membership": [9, 32, 40, 41, 1870], "That": [9, 13, 32, 39, 42, 45, 49, 55, 1190, 1264, 1280, 1846, 1877, 1894, 1895, 1896, 1905, 1913, 1921, 1944], "seat": 9, "reserv": [9, 38, 1023, 1870, 1892, 1900, 1956], "emploi": [9, 1679, 1900, 1913, 1914], "directori": [9, 14, 24, 26, 39, 70, 1661, 1864, 1878, 1899, 1913, 1915, 1930, 1944, 1954], "procedur": [9, 30, 847, 1209, 1210, 1266, 1786, 1921, 1954], "disput": 9, "made": [9, 26, 28, 29, 42, 45, 55, 70, 887, 897, 1193, 1427, 1472, 1474, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1726, 1868, 1876, 1889, 1906, 1913, 1930, 1932, 1939, 1942, 1947, 1954, 1955], "public": [9, 10, 1123, 1894, 1955], "relev": [9, 25, 32, 41, 54, 668, 1257, 1399, 1870, 1888, 1889, 1913, 1916, 1944, 1945, 1946, 1947], "resolut": [9, 1439, 1440, 1491, 1526, 1567, 1568, 1832, 1870, 1913, 1957], "conclus": 9, "publicli": [9, 1955], "vision": [9, 1203, 1363, 1509, 1864, 1865, 1946], "roadmap": [9, 10], "parti": [9, 41, 1864, 1865, 1866, 1892, 1895, 1900, 1913], "triag": [9, 10], "meet": [9, 10, 13, 40, 1223, 1892, 1944], "Their": [9, 1058, 1894, 1943], "articul": 9, "cohes": 9, "negoti": [9, 1921], "contenti": 9, "broad": [9, 1900], "stakehold": 9, "power": [9, 13, 40, 1029, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1109, 1217, 1247, 1261, 1395, 1396, 1547, 1548, 1615, 1648, 1663, 1692, 1706, 1730, 1851, 1870, 1892, 1925], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 30, 47, 1295, 1869, 1871, 1888, 1889, 1912, 1916, 1928, 1936, 1938, 1942], "merit": 9, "demonstr": [9, 42, 45, 55, 56, 63, 64, 1350, 1866, 1900, 1905, 1908, 1914, 1921, 1941, 1944, 1946, 1952], "expertis": 9, "continu": [9, 21, 24, 30, 44, 47, 55, 391, 596, 807, 890, 1146, 1229, 1230, 1257, 1349, 1350, 1607, 1870, 1876, 1889, 1905, 1908, 1915, 1933, 1940, 1941, 1944, 1947], "light": [9, 1930], "mainten": [9, 41, 42], "emeritu": [9, 10], "inact": [9, 1023, 1892, 1956], "contact": 9, "item": [9, 21, 26, 45, 56, 65, 66, 571, 572, 573, 577, 780, 781, 782, 802, 803, 804, 805, 1193, 1363, 1427, 1428, 1437, 1619, 1758, 1864, 1866, 1867, 1868, 1869, 1882, 1892, 1910, 1911, 1913, 1921, 1930, 1931, 1939, 1942, 1943, 1947, 1949], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 21, 30, 45, 55, 77, 391, 459, 533, 723, 845, 849, 851, 896, 909, 911, 918, 931, 932, 933, 1082, 1083, 1084, 1085, 1086, 1094, 1096, 1100, 1102, 1119, 1129, 1130, 1133, 1150, 1151, 1185, 1188, 1193, 1196, 1223, 1224, 1235, 1237, 1248, 1251, 1252, 1266, 1286, 1301, 1321, 1326, 1327, 1344, 1355, 1356, 1357, 1362, 1363, 1364, 1371, 1381, 1388, 1427, 1433, 1463, 1470, 1475, 1476, 1491, 1499, 1518, 1523, 1526, 1592, 1593, 1601, 1602, 1603, 1736, 1738, 1789, 1791, 1835, 1836, 1837, 1838, 1845, 1864, 1867, 1882, 1883, 1894, 1895, 1897, 1908, 1910, 1911, 1914, 1920, 1925, 1926, 1932, 1944, 1955, 1957], "neg": [9, 11, 14, 21, 24, 30, 43, 55, 77, 429, 431, 446, 649, 650, 686, 743, 768, 911, 916, 953, 956, 972, 988, 994, 995, 1023, 1035, 1082, 1083, 1084, 1085, 1086, 1087, 1101, 1102, 1103, 1109, 1119, 1183, 1185, 1187, 1247, 1274, 1286, 1308, 1309, 1317, 1321, 1326, 1327, 1335, 1344, 1372, 1381, 1413, 1420, 1421, 1422, 1430, 1434, 1436, 1441, 1458, 1475, 1476, 1519, 1523, 1526, 1528, 1537, 1541, 1550, 1551, 1552, 1561, 1569, 1592, 1593, 1595, 1702, 1703, 1734, 1738, 1773, 1775, 1778, 1790, 1827, 1835, 1836, 1837, 1838, 1845, 1866, 1867, 1882, 1884, 1887, 1889, 1894, 1895, 1910, 1911, 1920, 1925, 1926, 1942, 1944, 1949], "interact": [9, 15, 21, 29, 55, 850, 970, 1003, 1168, 1870, 1893, 1894, 1913, 1916, 1930, 1939, 1944, 1948, 1956], "final": [9, 24, 26, 28, 30, 32, 41, 45, 47, 51, 52, 674, 677, 678, 748, 908, 926, 939, 1066, 1105, 1123, 1146, 1265, 1283, 1288, 1379, 1381, 1397, 1442, 1455, 1598, 1789, 1832, 1866, 1868, 1869, 1870, 1882, 1894, 1897, 1900, 1903, 1905, 1907, 1908, 1910, 1913, 1922, 1923, 1939, 1941, 1942, 1954], "declin": 9, "conflict": [9, 22, 42, 45, 1913], "lack": [9, 11, 1229, 1230, 1257], "unfit": 9, "conduct": [9, 1607, 1699, 1812, 1921], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 905, 1867, 1913], "letter": [9, 1066], "befit": 9, "candidaci": 9, "behind": [9, 1865, 1905, 1922, 1943], "75": [9, 1154, 1415, 1526, 1544, 1663, 1710, 1867, 1926], "choos": [9, 15, 55, 880, 905, 992, 1239, 1252, 1257, 1343, 1887, 1888, 1891, 1913, 1917, 1930], "unforeseen": 9, "circumst": [9, 41, 940, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1892], "perman": [9, 55, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1889, 1923], "unavail": [9, 1868], "rank": [9, 21, 22, 24, 25, 26, 28, 29, 30, 32, 39, 41, 42, 44, 47, 56, 64, 1239, 1240, 1241, 1248, 1283, 1419, 1466, 1607, 1619, 1699, 1812, 1867, 1893, 1902, 1910, 1914, 1921, 1922, 1942, 1954], "elect": 9, "invit": [9, 1864], "convinc": 9, "approach": [9, 22, 24, 55, 76, 928, 1134, 1753, 1786, 1857, 1866, 1881, 1884, 1892, 1894, 1897, 1907, 1908, 1916, 1921, 1944], "interview": 9, "talk": [9, 43, 1894, 1899], "gather": [9, 24, 41, 47, 501, 1822, 1846, 1867, 1894, 1896, 1899, 1911, 1913, 1949], "read": [9, 13, 18, 21, 24, 26, 31, 32, 34, 41, 42, 47, 51, 55, 436, 1025, 1049, 1117, 1118, 1119, 1201, 1265, 1693, 1865, 1882, 1883, 1889, 1890, 1892, 1893, 1895, 1899, 1903, 1907, 1913, 1916, 1921, 1939, 1941, 1944, 1946, 1947], "attend": [9, 723, 1433, 1470], "confer": [9, 1381], "pipelin": [9, 55, 1865, 1921, 1944], "world": [9, 24, 28, 32, 39, 41, 42, 47, 1466, 1607, 1889, 1913, 1916, 1941, 1942], "cover": [9, 48, 55, 56, 1040, 1066, 1420, 1550, 1551, 1552, 1869, 1871, 1883, 1889, 1894, 1897, 1899, 1900, 1921, 1941, 1947, 1948], "push": [9, 33, 1028, 1134, 1259, 1857, 1915, 1947], "codeown": 9, "notifi": [9, 25, 42, 1923], "expert": 9, "strongli": [9, 24, 32, 42, 1366, 1367, 1368, 1372, 1807, 1864], "failur": [9, 24, 30, 32, 33, 34, 38, 39, 40, 41, 44, 668, 896, 897, 940, 1123, 1209, 1210, 1312, 1869, 1875, 1881, 1908, 1914, 1921, 1923, 1932, 1944, 1947, 1954], "revert": [9, 30, 47, 1463, 1584, 1923], "substanti": [9, 22, 1892, 1939], "syntact": [9, 34, 55], "establish": [9, 24, 41, 1889], "seri": [9, 55, 1350, 1390, 1904, 1910, 1939, 1950, 1955], "lf": 9, "llc": 9, "guidelin": [9, 1630, 1902, 1907, 1913, 1916, 1917], "trademark": 9, "www": [9, 1350, 1476, 1930], "lfproject": 9, "acknowledg": [9, 24, 1865, 1923, 1925], "copyright": [9, 1954], "holder": 9, "independ": [9, 21, 24, 41, 47, 54, 142, 143, 767, 773, 889, 890, 891, 892, 893, 894, 972, 1146, 1155, 1252, 1365, 1366, 1367, 1368, 1372, 1512, 1513, 1514, 1519, 1537, 1595, 1651, 1709, 1865, 1866, 1888, 1889, 1892, 1905, 1913], "authorship": 9, "claus": [9, 1896], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 22, 30, 419, 467, 746, 1138, 1214, 1230, 1233, 1252, 1294, 1324, 1393, 1433, 1614, 1697, 1699, 1709, 1710, 1812, 1866, 1867, 1894, 1897, 1904, 1910, 1925, 1926, 1943], "partli": [9, 1869], "domain": [9, 30, 34, 672, 814, 873, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1146, 1884, 1910, 1916], "absolut": [9, 11, 14, 55, 81, 669, 682, 896, 897, 1114, 1182, 1222, 1227, 1248, 1251, 1253, 1274, 1388, 1394, 1458, 1535, 1539, 1580, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1654, 1662, 1703, 1729, 1761, 1867, 1900, 1910, 1911, 1926, 1931, 1932], "health": 9, "success": [9, 26, 30, 32, 38, 55, 1224, 1235, 1237, 1283, 1626, 1793, 1794, 1795, 1797, 1798, 1892, 1900, 1910, 1925, 1954], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1910], "clearli": [9, 1876, 1913], "sponsorship": 9, "foundat": [9, 1908], "ptf": 9, "minor": [9, 994, 1224, 1240, 1925], "committ": 9, "prior": [9, 22, 24, 26, 32, 68, 70, 888, 1266, 1472, 1474, 1576, 1630, 1890, 1892, 1894, 1912, 1916, 1939, 1944], "walkthrough": [9, 1888], "facebook": 9, "infrastructur": [9, 33, 1913, 1942], "employe": 9, "expand": [9, 30, 244, 481, 866, 888, 896, 897, 923, 1246, 1247, 1295, 1433, 1477, 1570, 1842, 1864, 1867, 1875, 1882, 1883, 1890, 1892, 1895, 1908, 1910, 1911, 1913, 1914, 1929, 1949], "deliv": [9, 1915], "offici": [9, 24, 45, 76, 1335, 1916], "showcas": [9, 13, 1423, 1892, 1902], "whenev": [9, 45, 868, 1614, 1615, 1879, 1881, 1919, 1922, 1923, 1943, 1947, 1955], "fix": [10, 18, 21, 24, 29, 30, 32, 41, 45, 49, 52, 55, 71, 72, 251, 783, 789, 1123, 1207, 1239, 1370, 1371, 1445, 1517, 1518, 1537, 1607, 1866, 1867, 1879, 1887, 1888, 1892, 1893, 1896, 1902, 1906, 1908, 1910, 1911, 1912, 1939, 1944, 1952, 1954], "plu": [10, 14, 26, 889, 1119, 1240, 1925], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1266], "ezyang": [10, 1894, 1929], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1699, 1812], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1894], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 25, 28, 30, 47, 1667, 1668, 1670, 1676, 1680, 1912], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1954], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1941], "ansel": [10, 1941], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 13, 1324, 1710, 1892, 1944], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 30], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1266], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1146], "robi": 10, "robieta": 10, "xu": [10, 47], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 24, 47, 55, 1796, 1868, 1883, 1910, 1939, 1950], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1849], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1951], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1335], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 781], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1915, 1944, 1954], "johnson": 10, "peterjc123": [10, 1906], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 30], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 13, 26, 48, 52, 53, 55, 56, 63, 64, 308, 1191, 1194, 1651, 1807, 1870, 1877, 1884, 1889, 1894, 1916, 1942, 1944, 1954, 1955], "bj": 11, "j": [11, 24, 30, 302, 304, 310, 501, 503, 505, 680, 883, 889, 891, 948, 1066, 1082, 1083, 1090, 1096, 1100, 1101, 1135, 1190, 1193, 1229, 1230, 1241, 1257, 1266, 1273, 1281, 1283, 1288, 1366, 1367, 1368, 1372, 1427, 1430, 1512, 1513, 1514, 1519, 1703, 1710, 1790, 1807, 1811, 1854, 1868, 1887, 1889, 1894, 1897, 1905, 1930], "imaginari": [11, 300, 896, 948, 954, 1087, 1089, 1097, 1098, 1099, 1163, 1183, 1185, 1186, 1189, 1807, 1855, 1856, 1870, 1889, 1897, 1932], "satisfi": [11, 19, 22, 30, 605, 682, 748, 782, 890, 896, 897, 924, 1082, 1083, 1085, 1087, 1089, 1097, 1098, 1099, 1114, 1207, 1233, 1259, 1260, 1335, 1350, 1374, 1379, 1397, 1442, 1630, 1647, 1729, 1745, 1786, 1807, 1869, 1889, 1892, 1897, 1912, 1914, 1925, 1928, 1941], "equat": [11, 933, 1066, 1138, 1150, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1256, 1343, 1771, 1834, 1867, 1889, 1897, 1912, 1926], "frequent": [11, 26, 1335, 1865, 1892, 1902, 1903, 1905, 1925, 1936, 1946], "mathemat": [11, 55, 889, 890, 891, 892, 893, 894, 1114, 1146, 1343, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1466, 1545, 1583, 1607, 1654, 1729, 1788, 1789, 1869, 1889, 1903, 1926, 1933], "topic": [11, 45, 1899, 1900, 1941], "tradition": 11, "torchaudio": [11, 1865], "mimick": 11, "assembli": 11, "lapack": [11, 1138, 1224, 1235, 1236, 1237, 1239, 1242, 1255, 1709, 1811], "cubla": [11, 984, 1846, 1904, 1939], "spectral": [11, 1213, 1229, 1257, 1615, 1638, 1648, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1903], "fft": [11, 1865, 1892], "4621": 11, "0303j": 11, "2438": [11, 1239, 1517], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 164, 948, 1109, 1118, 1172, 1193, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1234, 1355, 1356, 1357, 1427, 1501, 1502, 1503, 1660, 1703, 1750, 1927, 1928, 1931, 1932, 1944], "complex64": [11, 167, 932, 933, 948, 1083, 1085, 1086, 1091, 1092, 1118, 1172, 1225, 1248, 1251, 1355, 1356, 1357, 1501, 1502, 1503, 1660, 1703, 1750, 1927, 1928, 1931, 1932, 1944], "apart": [11, 1869, 1889], "linspac": [11, 911, 935, 1087, 1097, 1295, 1867, 1871, 1911], "logspac": [11, 1867, 1871, 1911], "arang": [11, 21, 24, 31, 501, 595, 679, 680, 681, 685, 687, 874, 875, 876, 922, 934, 938, 1049, 1064, 1082, 1086, 1094, 1100, 1102, 1106, 1107, 1108, 1109, 1116, 1117, 1156, 1214, 1215, 1219, 1222, 1246, 1249, 1250, 1263, 1327, 1448, 1449, 1450, 1451, 1452, 1479, 1480, 1481, 1563, 1654, 1655, 1698, 1706, 1710, 1725, 1732, 1737, 1758, 1791, 1799, 1810, 1826, 1827, 1829, 1830, 1832, 1858, 1867, 1876, 1884, 1905, 1911, 1926, 1930, 1931, 1939, 1946, 1949], "switch": [11, 21, 50, 54, 55, 68, 1236, 1237, 1238, 1367, 1526, 1564, 1611, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1741, 1846, 1881, 1889, 1892, 1900, 1902, 1912, 1945], "view_as_r": [11, 1807, 1867, 1911, 1929], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1867, 1882, 1884, 1925], "2250": [11, 1250, 1654], "7546": 11, "1722": 11, "x1": [11, 45, 928, 1241, 1362, 1419, 1475, 1476, 1508, 1565, 1867, 1944, 1949], "3j": [11, 24, 686, 951, 952, 1733, 1734, 1750], "4j": [11, 24, 1761], "0000": [11, 30, 501, 853, 889, 891, 911, 931, 935, 954, 1047, 1053, 1054, 1055, 1080, 1081, 1084, 1086, 1087, 1093, 1094, 1097, 1102, 1114, 1115, 1116, 1146, 1152, 1155, 1159, 1219, 1222, 1223, 1224, 1236, 1237, 1240, 1245, 1246, 1250, 1252, 1264, 1280, 1322, 1370, 1371, 1479, 1480, 1482, 1483, 1517, 1518, 1654, 1703, 1709, 1714, 1715, 1716, 1725, 1729, 1730, 1754, 1761, 1763, 1764, 1766, 1769, 1770, 1771, 1772, 1789, 1834, 1835, 1837, 1860, 1876, 1884, 1892, 1925, 1926, 1931], "6569": [11, 1159], "5708": [11, 1050], "7854": 11, "complex_tensor": 11, "pt": [11, 22, 47, 1198, 1201, 1204, 1211, 1265, 1741, 1866, 1900, 1905, 1913, 1946], "conjug": [11, 319, 446, 680, 896, 932, 933, 951, 952, 1173, 1223, 1224, 1230, 1233, 1236, 1243, 1257, 1262, 1266, 1614, 1697, 1733, 1807, 1811, 1854, 1897, 1912, 1931], "wirting": [11, 896, 1897], "deriv": [11, 24, 47, 139, 726, 727, 728, 729, 730, 731, 769, 788, 812, 881, 895, 896, 897, 1129, 1133, 1146, 1190, 1251, 1283, 1474, 1598, 1865, 1868, 1894, 1895, 1897, 1921, 1925, 1926], "steepest": [11, 1889], "descent": [11, 30, 1663, 1679, 1683, 1684, 1889, 1900], "box": [11, 24, 29, 42, 55, 1134, 1857, 1883, 1889, 1893, 1908, 1940, 1942, 1945, 1946], "fulli": [11, 14, 21, 24, 28, 29, 45, 51, 55, 668, 1029, 1193, 1423, 1424, 1425, 1427, 1869, 1875, 1894, 1913, 1916, 1942, 1947, 1949], "quantiz": [11, 55, 208, 315, 327, 460, 461, 462, 463, 464, 466, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 905, 1051, 1080, 1081, 1711, 1712, 1713, 1714, 1715, 1846, 1865, 1911, 1928, 1931, 1932, 1934, 1935], "parallel_info": [12, 1865, 1891], "pred": [13, 56, 59, 63, 64, 1393, 1607, 1901, 1912, 1921, 1949], "union": [13, 14, 21, 26, 29, 32, 35, 39, 42, 45, 47, 55, 1205, 1265, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1427, 1470, 1472, 1474, 1477, 1619, 1660, 1741, 1849, 1867, 1868, 1869, 1905, 1908, 1910, 1913, 1927, 1932, 1935], "true_fn": [13, 56, 59, 63, 64], "false_fn": [13, 56, 59, 63, 64], "operand": [13, 56, 63, 64, 916, 1066, 1869, 1870, 1894, 1925, 1928], "Its": [13, 24, 55, 958, 981, 1193, 1241, 1259, 1260, 1285, 1427, 1654, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1854, 1869, 1893], "uniqu": [13, 24, 32, 38, 41, 42, 43, 501, 505, 1184, 1229, 1230, 1234, 1240, 1241, 1243, 1252, 1254, 1256, 1257, 1294, 1301, 1788, 1811, 1844, 1864, 1866, 1875, 1878, 1894, 1913, 1915, 1921, 1922, 1923, 1925, 1930, 1939, 1956], "aibilti": 13, "predic": [13, 56, 61, 63, 64], "unlock": [13, 1876], "flexibilti": 13, "architectur": [13, 55, 993, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1363, 1470, 1509, 1754, 1892, 1903, 1916, 1925, 1938], "prototyp": [13, 18, 24, 45, 668, 889, 891, 895, 896, 897, 1203, 1474, 1865, 1875, 1876, 1879, 1883, 1884, 1900, 1905, 1919, 1921, 1925, 1928, 1933, 1934, 1935], "classif": [13, 1344, 1350, 1363, 1430, 1432, 1434, 1459, 1510, 1865, 1887, 1917], "co": [13, 45, 53, 56, 60, 61, 63, 64, 65, 66, 190, 623, 624, 671, 918, 940, 1009, 1124, 1127, 1128, 1133, 1150, 1151, 1245, 1361, 1362, 1365, 1683, 1684, 1691, 1703, 1765, 1766, 1769, 1770, 1771, 1772, 1774, 1793, 1794, 1795, 1797, 1798, 1867, 1882, 1911, 1912, 1925, 1930, 1932, 1940, 1946, 1949], "sin": [13, 14, 45, 52, 53, 56, 60, 61, 63, 64, 65, 66, 520, 657, 658, 869, 940, 1009, 1124, 1126, 1127, 1128, 1130, 1133, 1151, 1245, 1295, 1703, 1766, 1772, 1867, 1882, 1889, 1911, 1925, 1926, 1930, 1940, 1944, 1946, 1949, 1952], "dynamicshapecondpred": 13, "dyn_shape_mod": 13, "eagerli": [13, 998, 1004, 1892, 1942, 1944], "vari": [13, 45, 807, 1199, 1458, 1640, 1767, 1879, 1902, 1903, 1912, 1916, 1917, 1925, 1942, 1943, 1944, 1954, 1956], "inp2": 13, "assert": [13, 21, 22, 30, 45, 49, 51, 52, 53, 55, 56, 62, 64, 612, 899, 901, 902, 1124, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1191, 1196, 1197, 1203, 1576, 1660, 1857, 1868, 1870, 1894, 1895, 1900, 1905, 1913, 1916, 1932, 1942, 1953, 1954], "export": [13, 15, 18, 24, 31, 44, 56, 58, 61, 63, 64, 70, 668, 904, 969, 1196, 1198, 1199, 1205, 1211, 1641, 1642, 1661, 1662, 1865, 1866, 1868, 1869, 1894, 1911, 1915, 1921, 1942, 1952, 1953], "deploy": [13, 32, 41, 45, 1865, 1945], "dim_batch": 13, "dim": [13, 24, 29, 30, 45, 52, 53, 55, 56, 58, 63, 64, 101, 103, 104, 105, 107, 123, 124, 125, 173, 193, 196, 199, 200, 201, 202, 203, 204, 218, 222, 249, 253, 270, 301, 302, 303, 304, 305, 306, 310, 311, 343, 369, 381, 396, 398, 399, 400, 403, 417, 418, 419, 420, 424, 425, 441, 450, 458, 467, 479, 480, 482, 493, 494, 500, 501, 502, 503, 504, 505, 506, 507, 525, 526, 529, 530, 532, 535, 540, 541, 543, 548, 553, 561, 566, 567, 571, 572, 573, 575, 576, 578, 593, 594, 597, 598, 599, 600, 603, 605, 681, 683, 684, 685, 687, 862, 863, 864, 891, 892, 894, 927, 934, 949, 957, 966, 981, 983, 1045, 1046, 1047, 1048, 1049, 1058, 1064, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1124, 1134, 1135, 1146, 1156, 1164, 1165, 1166, 1167, 1170, 1215, 1225, 1226, 1246, 1250, 1260, 1262, 1263, 1273, 1281, 1291, 1293, 1294, 1296, 1299, 1301, 1315, 1322, 1323, 1324, 1325, 1326, 1327, 1335, 1362, 1363, 1364, 1367, 1371, 1373, 1378, 1393, 1398, 1417, 1433, 1434, 1435, 1460, 1462, 1474, 1476, 1477, 1508, 1509, 1525, 1528, 1537, 1545, 1550, 1551, 1552, 1561, 1562, 1564, 1566, 1570, 1576, 1582, 1583, 1591, 1607, 1615, 1621, 1625, 1627, 1634, 1635, 1648, 1651, 1654, 1700, 1707, 1710, 1730, 1731, 1736, 1737, 1742, 1743, 1744, 1747, 1748, 1779, 1782, 1783, 1787, 1790, 1792, 1799, 1802, 1804, 1805, 1806, 1807, 1810, 1822, 1826, 1827, 1828, 1829, 1832, 1833, 1841, 1842, 1843, 1844, 1845, 1852, 1853, 1857, 1858, 1865, 1866, 1867, 1883, 1884, 1895, 1896, 1905, 1908, 1910, 1911, 1925, 1926, 1928, 1934, 1942, 1949], "batch": [13, 22, 24, 30, 42, 44, 45, 47, 48, 49, 52, 53, 55, 56, 63, 64, 571, 572, 573, 575, 576, 674, 690, 691, 692, 693, 694, 695, 723, 748, 767, 773, 895, 896, 897, 908, 920, 921, 928, 931, 932, 933, 940, 966, 1054, 1056, 1066, 1127, 1128, 1134, 1190, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1266, 1274, 1283, 1284, 1288, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1361, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1418, 1419, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1440, 1441, 1442, 1444, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1491, 1496, 1498, 1499, 1509, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1520, 1523, 1536, 1537, 1538, 1561, 1569, 1576, 1594, 1595, 1598, 1607, 1614, 1640, 1641, 1643, 1644, 1646, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1684, 1685, 1691, 1697, 1699, 1709, 1713, 1793, 1794, 1795, 1797, 1798, 1802, 1807, 1811, 1812, 1831, 1834, 1835, 1837, 1854, 1857, 1865, 1882, 1883, 1884, 1888, 1892, 1895, 1896, 1900, 1902, 1914, 1916, 1921, 1925, 1930, 1931, 1942, 1943, 1944, 1948, 1952, 1954], "min": [13, 21, 24, 34, 41, 45, 55, 56, 65, 66, 105, 174, 175, 176, 177, 289, 683, 684, 685, 746, 758, 759, 768, 790, 807, 808, 809, 810, 813, 863, 935, 936, 1009, 1046, 1080, 1081, 1153, 1225, 1239, 1240, 1246, 1250, 1252, 1257, 1263, 1283, 1317, 1349, 1386, 1413, 1415, 1435, 1447, 1454, 1500, 1537, 1541, 1570, 1572, 1577, 1595, 1678, 1683, 1684, 1693, 1697, 1699, 1709, 1811, 1835, 1836, 1837, 1838, 1867, 1879, 1882, 1910, 1911, 1916, 1919, 1921, 1944, 1949, 1957], "ep": [13, 45, 700, 701, 702, 703, 704, 705, 711, 712, 724, 725, 737, 739, 740, 741, 742, 783, 807, 808, 809, 810, 813, 814, 896, 897, 1203, 1279, 1331, 1345, 1346, 1347, 1362, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1436, 1441, 1466, 1470, 1472, 1474, 1475, 1496, 1508, 1523, 1527, 1528, 1536, 1540, 1562, 1565, 1569, 1592, 1615, 1648, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1693, 1713, 1867, 1894, 1897, 1926, 1949, 1957], "dynamic_shap": [13, 45, 1908, 1951], "graphmodul": [13, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 847, 848, 849, 850, 1916, 1935, 1940, 1941, 1943, 1947, 1953, 1954], "arg0_1": [13, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "f32": [13, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "s0": [13, 45, 56, 63, 64, 1942, 1954], "sym_siz": [13, 56, 63, 64, 65, 66, 1911, 1949], "sym": [13, 56, 63, 64, 65, 66, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774], "gt": [13, 56, 63, 64, 285, 1147, 1867, 1882, 1897, 1911, 1949], "true_graph_0": [13, 56, 59, 63, 64], "false_graph_0": [13, 56, 59, 63, 64], "symbol": [13, 14, 20, 45, 56, 58, 64, 68, 69, 72, 73, 76, 612, 805, 942, 1208, 1262, 1397, 1442, 1834, 1854, 1865, 1869, 1908, 1942, 1943, 1944], "sub": [13, 34, 47, 54, 56, 59, 63, 64, 550, 802, 849, 850, 1205, 1209, 1210, 1291, 1294, 1296, 1439, 1440, 1470, 1471, 1473, 1730, 1809, 1826, 1843, 1864, 1866, 1867, 1882, 1884, 1889, 1902, 1910, 1911, 1925, 1928, 1949, 1953], "exmapl": 13, "dependet": 13, "datadependentcondpredicact": 13, "sum_1": [13, 55, 1940, 1941], "b8": [13, 56, 59, 63], "flatten": [13, 22, 45, 47, 55, 56, 62, 862, 863, 1055, 1155, 1250, 1263, 1478, 1654, 1662, 1710, 1726, 1731, 1736, 1822, 1842, 1843, 1844, 1867, 1882, 1883, 1887, 1908, 1910, 1911, 1918, 1929, 1942], "flat": [13, 1731, 1774, 1867, 1884, 1910, 1925], "_higher_order_op": 13, "condition": [13, 41, 1755], "compil": [13, 14, 15, 45, 47, 48, 55, 668, 968, 993, 997, 1009, 1010, 1123, 1191, 1193, 1194, 1197, 1198, 1205, 1206, 1207, 1209, 1210, 1211, 1427, 1865, 1866, 1868, 1869, 1870, 1871, 1875, 1888, 1891, 1893, 1899, 1906, 1909, 1910, 1921, 1933, 1938, 1939, 1940, 1941, 1942, 1943, 1946, 1948, 1949, 1950, 1951], "constraint": [13, 24, 29, 45, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 782, 783, 890, 1001, 1012, 1128, 1607, 1615, 1640, 1680, 1865, 1869, 1884, 1895, 1897, 1900, 1925, 1939, 1942], "met": [13, 605, 1233, 1240, 1241, 1252, 1266, 1474, 1796], "true_branch": 13, "false_branch": 13, "consist": [13, 21, 24, 26, 29, 30, 41, 42, 45, 55, 896, 931, 932, 933, 1193, 1223, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1261, 1263, 1427, 1474, 1616, 1619, 1662, 1709, 1811, 1866, 1869, 1876, 1883, 1884, 1895, 1900, 1902, 1904, 1910, 1912, 1915, 1925, 1940, 1941, 1948, 1954], "aka": [13, 24, 56, 63, 64, 905, 1388, 1889, 1908, 1928, 1942], "add_": [13, 24, 45, 50, 52, 210, 476, 1123, 1867, 1882, 1890, 1925], "tempor": [13, 1345, 1347, 1350, 1466, 1479, 1510, 1537, 1595], "pytre": [13, 55, 56, 1895], "cppextens": [14, 1865], "setuptool": 14, "bare": 14, "buildextens": [14, 1865], "ext_modul": 14, "extra_compile_arg": [14, 1906], "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 1865], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 997, 1954], "o2": 14, "arch": 14, "card": [14, 1906], "visibl": [14, 24, 26, 38, 991, 1036, 1428, 1429, 1437, 1438, 1942, 1945], "ptx": 14, "road": 14, "recompil": [14, 55, 668, 940, 1207, 1875, 1898, 1941, 1942, 1947, 1950], "cc": [14, 24, 1892], "newest": [14, 51, 1907], "torch_cuda_arch_list": 14, "6": [14, 18, 21, 22, 24, 30, 39, 55, 56, 57, 61, 62, 63, 64, 65, 66, 302, 304, 306, 310, 390, 391, 459, 475, 487, 501, 505, 548, 595, 673, 674, 679, 685, 729, 730, 731, 733, 734, 746, 749, 751, 753, 889, 890, 892, 893, 894, 911, 919, 924, 930, 934, 938, 958, 978, 1025, 1029, 1043, 1044, 1045, 1049, 1050, 1061, 1064, 1065, 1082, 1090, 1095, 1096, 1100, 1101, 1103, 1105, 1106, 1109, 1116, 1146, 1156, 1158, 1159, 1182, 1204, 1215, 1219, 1230, 1246, 1250, 1251, 1252, 1259, 1260, 1264, 1266, 1295, 1299, 1325, 1326, 1327, 1340, 1351, 1354, 1359, 1362, 1370, 1371, 1380, 1381, 1382, 1384, 1385, 1423, 1424, 1428, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1470, 1471, 1473, 1475, 1478, 1484, 1493, 1523, 1530, 1531, 1563, 1565, 1572, 1598, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1664, 1678, 1698, 1699, 1702, 1709, 1710, 1716, 1717, 1720, 1726, 1736, 1737, 1741, 1745, 1758, 1779, 1783, 1788, 1791, 1793, 1794, 1799, 1810, 1812, 1813, 1814, 1821, 1826, 1827, 1828, 1829, 1830, 1832, 1835, 1837, 1841, 1846, 1858, 1859, 1866, 1869, 1870, 1876, 1884, 1887, 1889, 1894, 1895, 1900, 1905, 1910, 1921, 1922, 1925, 1926, 1928, 1931, 1932, 1941, 1944, 1949, 1951, 1954, 1955], "build_my_extens": 14, "7": [14, 21, 22, 24, 30, 55, 56, 61, 222, 249, 302, 304, 306, 310, 390, 391, 459, 501, 548, 595, 605, 673, 685, 733, 734, 892, 894, 916, 919, 924, 930, 932, 934, 938, 1049, 1061, 1063, 1064, 1067, 1082, 1105, 1106, 1109, 1112, 1116, 1146, 1156, 1170, 1215, 1219, 1229, 1234, 1236, 1237, 1240, 1241, 1245, 1246, 1250, 1257, 1325, 1326, 1327, 1333, 1334, 1337, 1338, 1340, 1351, 1370, 1415, 1423, 1424, 1448, 1449, 1450, 1451, 1452, 1475, 1478, 1493, 1564, 1632, 1637, 1647, 1654, 1669, 1716, 1720, 1726, 1736, 1737, 1738, 1745, 1758, 1761, 1763, 1774, 1775, 1783, 1791, 1793, 1794, 1799, 1811, 1813, 1814, 1821, 1826, 1827, 1830, 1832, 1841, 1854, 1858, 1866, 1870, 1876, 1883, 1884, 1890, 1892, 1894, 1903, 1905, 1910, 1911, 1916, 1925, 1928, 1929, 1930, 1931, 1932, 1946, 1951], "older": [14, 1892, 1905, 1913], "modestli": [14, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680], "imag": [14, 21, 729, 730, 731, 849, 850, 948, 1333, 1337, 1338, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1374, 1375, 1376, 1391, 1399, 1434, 1439, 1440, 1461, 1478, 1480, 1481, 1491, 1502, 1503, 1505, 1506, 1520, 1521, 1526, 1537, 1594, 1595, 1734, 1865, 1867, 1884, 1897, 1911, 1914, 1916, 1929, 1930, 1942, 1944, 1945, 1949], "11": [14, 24, 310, 501, 668, 930, 934, 1012, 1064, 1156, 1214, 1250, 1264, 1280, 1335, 1351, 1376, 1424, 1522, 1654, 1655, 1661, 1783, 1826, 1858, 1866, 1870, 1876, 1883, 1892, 1905, 1906, 1910, 1911, 1925, 1926, 1941, 1954], "pars": [14, 24, 44, 903, 1869, 1913, 1921], "window": [14, 21, 24, 55, 340, 544, 909, 918, 1150, 1151, 1190, 1213, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1423, 1424, 1425, 1493, 1521, 1522, 1550, 1551, 1552, 1714, 1715, 1807, 1865, 1867, 1879, 1892, 1942], "workaround": [14, 21, 29, 55, 1197, 1864, 1904, 1910, 1916, 1944], "pure": [14, 15, 45, 52, 1196, 1866, 1894], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 30, 55, 71, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1528, 1883, 1899, 1900, 1925], "rdc": 14, "dc": 14, "anymor": [14, 24, 47, 210], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 668, 1916, 1947, 1948], "lib": [14, 1906], "nvshmem": 14, "ninja": [14, 1906], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 32, 39, 77, 366, 442, 1080, 1081, 1112, 1113, 1114, 1655, 1703, 1729, 1768, 1773, 1806, 1844, 1867, 1882, 1887, 1892, 1899, 1906, 1911, 1949], "17": [14, 24, 673, 1190, 1246, 1424, 1783, 1866, 1910, 1911, 1925, 1944, 1954], "mix": [14, 22, 30, 45, 47, 1012, 1607, 1865, 1889, 1891, 1916, 1925, 1941, 1942, 1944], "use_ninja": 14, "greatli": [14, 55, 1892, 1942], "fallback": [14, 24, 41, 45, 50, 76, 1207, 1257, 1888, 1892, 1905, 1939, 1944, 1954], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 1906], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 55, 811, 814, 1608, 1889, 1896, 1946], "torch_extensions_dir": 14, "subfold": [14, 1954], "o3": 14, "cuh": 14, "Such": [14, 21, 22, 45, 54, 1851, 1925], "lib64": 14, "cudart": [14, 1906], "fine": [14, 24, 26, 28, 31, 45, 846, 849, 1117, 1209, 1576, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1864, 1881, 1889, 1892, 1894, 1910, 1913, 1914, 1916, 1925, 1936, 1946, 1954], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 1868], "linker": 14, "workspac": [14, 940], "header": [14, 39, 1906, 1932], "automat": [14, 22, 24, 41, 42, 45, 55, 75, 139, 577, 877, 879, 940, 1003, 1012, 1155, 1203, 1209, 1295, 1473, 1576, 1608, 1728, 1758, 1847, 1864, 1865, 1868, 1869, 1877, 1878, 1882, 1883, 1889, 1890, 1892, 1894, 1900, 1902, 1910, 1913, 1914, 1916, 1917, 1921, 1930, 1931, 1942, 1943, 1944, 1946, 1954], "construct": [14, 15, 21, 24, 26, 28, 29, 30, 41, 45, 47, 49, 51, 52, 55, 56, 61, 62, 65, 66, 139, 436, 780, 781, 812, 866, 867, 881, 895, 948, 1053, 1069, 1134, 1155, 1193, 1205, 1209, 1210, 1217, 1224, 1264, 1265, 1280, 1295, 1370, 1371, 1427, 1517, 1598, 1607, 1609, 1610, 1640, 1647, 1699, 1703, 1750, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1812, 1825, 1828, 1857, 1865, 1866, 1879, 1892, 1893, 1900, 1902, 1905, 1908, 1913, 1916, 1921, 1923, 1928, 1930, 1931, 1932, 1944, 1947], "plain": [14, 1344, 1428, 1437, 1614, 1795, 1894, 1925, 1943], "standalon": [14, 40, 41, 42, 805, 1205, 1209, 1866, 1948], "torch_lib_path": 14, "load_inlin": [14, 1865], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 24, 54, 55, 302, 310, 481, 503, 505, 829, 1133, 1209, 1423, 1424, 1425, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1868, 1869, 1876, 1889, 1895, 1900, 1904, 1913, 1921, 1925], "exactli": [14, 22, 24, 30, 43, 896, 897, 934, 979, 983, 1066, 1112, 1113, 1190, 1193, 1235, 1371, 1374, 1375, 1376, 1427, 1455, 1458, 1518, 1528, 1607, 1654, 1662, 1753, 1876, 1882, 1889, 1892, 1893, 1894, 1897, 1898, 1910, 1913, 1914, 1939, 1947], "filenam": [14, 21, 45, 55, 1192, 1201, 1204, 1864, 1867, 1878, 1889, 1913, 1927, 1930, 1946, 1956], "typic": [14, 21, 22, 24, 30, 31, 32, 34, 41, 42, 43, 47, 55, 72, 958, 967, 1109, 1117, 1193, 1214, 1217, 1265, 1361, 1387, 1427, 1598, 1607, 1666, 1667, 1753, 1793, 1794, 1795, 1797, 1798, 1864, 1865, 1866, 1869, 1875, 1889, 1891, 1892, 1903, 1904, 1905, 1910, 1912, 1914, 1916, 1921, 1929, 1938, 1940, 1942, 1943, 1952, 1954, 1956, 1957], "inlin": [14, 45, 54, 56, 58, 62, 65, 66, 1009, 1193, 1197, 1209, 1891, 1944], "concaten": [14, 21, 24, 29, 891, 927, 938, 981, 1065, 1158, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1371, 1397, 1510, 1518, 1611, 1619, 1804, 1859, 1867, 1870, 1910, 1911, 1925], "furthermor": [14, 39, 51, 1229, 1230, 1257, 1283, 1365, 1882, 1883, 1889, 1904, 1919, 1921], "cuda_runtim": 14, "se": 14, "warn": [14, 18, 22, 24, 28, 73, 74, 76, 668, 889, 895, 930, 978, 1025, 1029, 1040, 1043, 1044, 1134, 1174, 1209, 1251, 1295, 1433, 1470, 1471, 1472, 1473, 1474, 1616, 1619, 1752, 1760, 1846, 1857, 1864, 1875, 1879, 1890, 1894, 1908, 1911, 1913, 1920, 1947, 1954], "macro": [14, 1898], "pybind": 14, "_safe_foo": 14, "redirect": [14, 32, 39, 1933], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 1865], "get_compiler_abi_compatibility_and_vers": [14, 1865], "abi": [14, 15], "alongsid": [14, 1193, 1427, 1894, 1947], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 1865], "is_ninja_avail": [14, 1865], "embed": [15, 55, 723, 734, 883, 1057, 1335, 1361, 1371, 1387, 1399, 1433, 1476, 1518, 1576, 1680, 1748, 1867, 1891, 1911, 1916, 1918, 1921, 1925, 1930, 1949], "modif": [15, 47, 55, 70, 210, 768, 885, 1118, 1119, 1193, 1427, 1607, 1889, 1894, 1900, 1913, 1916, 1944], "submodul": [15, 45, 47, 55, 69, 779, 785, 802, 826, 827, 828, 846, 849, 850, 1132, 1193, 1197, 1199, 1204, 1205, 1364, 1427, 1428, 1429, 1455, 1605, 1866, 1868, 1869, 1877, 1900, 1905, 1913, 1916, 1921, 1935, 1940, 1953], "preprocess": [15, 45, 68, 484, 1193], "augment": [15, 1870, 1932], "walk": [15, 55, 1873, 1894, 1913, 1922, 1923, 1929, 1954], "interfac": [15, 22, 26, 31, 33, 38, 41, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 733, 734, 744, 749, 750, 751, 752, 753, 782, 1119, 1598, 1752, 1807, 1846, 1869, 1879, 1880, 1894, 1899, 1912, 1919, 1925, 1930, 1949], "opencv": [15, 1526, 1537], "struct": [15, 1133, 1134, 1857, 1877, 1899], "explain": [15, 24, 45, 1680, 1753, 1864, 1869, 1888, 1892, 1895, 1902, 1925, 1944, 1954], "reshap": [15, 24, 30, 486, 487, 501, 532, 605, 680, 938, 1049, 1064, 1065, 1105, 1156, 1214, 1246, 1250, 1259, 1260, 1263, 1327, 1374, 1448, 1449, 1450, 1451, 1452, 1478, 1615, 1648, 1654, 1791, 1792, 1799, 1826, 1827, 1832, 1858, 1859, 1867, 1876, 1883, 1884, 1910, 1911, 1918, 1929, 1930, 1949], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 1873, 1946, 1947, 1948], "cpp_autograd": 15, "workflow": [15, 1864, 1894, 1916, 1917, 1933, 1936, 1942, 1943, 1948, 1951], "undesir": [15, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1894], "overview": [15, 24, 38, 1607, 1865, 1876, 1881, 1889, 1897, 1900, 1909, 1914, 1916, 1921, 1936, 1937, 1941], "cpp_frontend": 15, "library_root": 15, "libtorch": 15, "linux": [15, 24, 1864], "gcc": 15, "pre": [15, 24, 28, 47, 55, 895, 902, 1193, 1427, 1602, 1604, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1864, 1866, 1869, 1877, 1889, 1891, 1900, 1908, 1910, 1914, 1931, 1943, 1944, 1950, 1954], "cxx11": 15, "facilit": [16, 25, 30, 52, 959, 960, 961, 962, 963, 964, 965, 970, 1054, 1750, 1864, 1866, 1869, 1904], "earli": [18, 22, 32, 54, 1366, 1367, 1368, 1372, 1865, 1916, 1917, 1934, 1935, 1943, 1947], "introduc": [18, 30, 52, 748, 1266, 1379, 1397, 1442, 1537, 1736, 1864, 1869, 1890, 1893, 1901, 1910, 1913, 1914, 1915, 1921, 1925, 1931, 1936, 1944, 1950, 1954], "race": [18, 24, 1889], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 24, 28, 1891, 1892, 1902, 1921, 1922], "uniniti": [18, 433, 487, 1067, 1068, 1598, 1609, 1610, 1647, 1884, 1911], "overwrit": [18, 21, 24, 55, 1428, 1437, 1869, 1889, 1939], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 128, 984, 1443, 1892, 1893, 1899, 1921, 1923, 1943], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 55], "stacksummari": 18, "extract": [18, 55, 824, 932, 933, 1370, 1374, 1478, 1517, 1594, 1908, 1915, 1921, 1935, 1938, 1940, 1941, 1944, 1945], "10000": [18, 22, 682, 1691, 1738, 1896, 1900, 1925, 1930, 1946], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 47, 970, 1111, 1945], "id": [18, 21, 24, 28, 32, 40, 41, 42, 47, 55, 762, 812, 967, 1002, 1466, 1552, 1591, 1607, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1869, 1899, 1910, 1911, 1913, 1920, 1921, 1922, 1927, 1947, 1951, 1954], "faulti": [18, 24], "schema": [18, 24, 26, 74, 1866, 1867, 1869, 1873, 1910, 1949, 1953], "current_stream": [18, 969, 1865, 1892], "wait_stream": [18, 24, 970, 972, 1892], "default_stream": [18, 24, 1865], "suspect": [18, 1680, 1892, 1954], "cudnn": [19, 20, 748, 1203, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1397, 1442, 1443, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1753, 1865, 1867, 1892, 1903, 1904, 1948], "float16": [19, 22, 26, 47, 286, 674, 677, 748, 811, 814, 822, 838, 839, 846, 908, 920, 1118, 1175, 1193, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1414, 1427, 1442, 1537, 1576, 1666, 1667, 1738, 1849, 1888, 1900, 1916, 1918, 1925, 1927, 1928, 1931, 1932, 1957], "v100": [19, 748, 1379, 1397, 1442, 1892], "packedsequ": [19, 748, 1379, 1397, 1442, 1641, 1642, 1643, 1645], "rnn": [20, 722, 748, 749, 750, 751, 753, 846, 1379, 1380, 1397, 1398, 1443, 1444, 1608, 1617, 1640, 1871, 1896, 1900, 1918, 1930], "enforc": [20, 22, 54, 783, 878, 1193, 1397, 1427, 1442, 1869, 1900, 1929], "cuda_launch_block": [20, 1397, 1442, 1892], "colon": [20, 1397, 1442, 1921], "cublas_workspace_config": [20, 1397, 1442, 1846, 1892, 1904], "4096": [20, 1397, 1442, 1846, 1892, 1910], "heart": [21, 1947], "dataload": [21, 484, 1607, 1684, 1685, 1691, 1892, 1896, 1902, 1906, 1912, 1930], "batch_siz": [21, 30, 51, 53, 880, 1124, 1132, 1134, 1433, 1640, 1642, 1643, 1645, 1857, 1867, 1895, 1896, 1904, 1910, 1930], "shuffl": [21, 1865, 1930], "batch_sampl": 21, "num_work": [21, 32, 1904, 1906], "drop_last": 21, "timeout": [21, 24, 41, 1881, 1921], "worker_init_fn": [21, 1896, 1904], "prefetch_factor": 21, "persistent_work": 21, "__getitem__": [21, 1846], "__len__": [21, 55, 1867], "protocol": [21, 26, 31, 41, 43, 868, 1117, 1119, 1741, 1894, 1906, 1908, 1910, 1921, 1955], "possibli": [21, 41, 45, 47, 1193, 1209, 1236, 1241, 1427, 1607, 1866, 1873, 1904, 1913, 1943, 1956], "sampl": [21, 26, 30, 45, 48, 53, 55, 77, 142, 143, 366, 442, 469, 596, 767, 910, 958, 978, 1012, 1025, 1029, 1043, 1044, 1084, 1102, 1124, 1134, 1146, 1190, 1210, 1283, 1317, 1339, 1343, 1344, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1381, 1387, 1390, 1391, 1392, 1393, 1394, 1412, 1414, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1445, 1458, 1459, 1466, 1475, 1491, 1498, 1499, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1536, 1537, 1538, 1561, 1569, 1607, 1615, 1655, 1684, 1699, 1702, 1716, 1718, 1720, 1722, 1724, 1789, 1805, 1806, 1807, 1852, 1853, 1857, 1865, 1879, 1887, 1888, 1892, 1899, 1900, 1913, 1916, 1917, 1930, 1954], "idx": [21, 55, 886, 1193, 1199, 1335, 1370, 1427, 1615, 1843, 1867, 1883], "th": [21, 143, 302, 304, 310, 748, 889, 891, 910, 930, 1053, 1058, 1167, 1190, 1215, 1233, 1241, 1247, 1283, 1317, 1366, 1367, 1368, 1372, 1379, 1387, 1397, 1442, 1512, 1513, 1514, 1519, 1710, 1807, 1894, 1906, 1926, 1928, 1956], "iterabledataset": [21, 1899], "__iter__": [21, 1870], "suitabl": [21, 30, 924, 1213, 1680, 1745, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1903, 1915, 1917, 1930, 1945], "improb": 21, "fetch": [21, 54, 55, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1660, 1921], "stream": [21, 24, 32, 39, 47, 54, 139, 474, 881, 895, 960, 961, 965, 967, 968, 969, 970, 973, 974, 975, 983, 986, 987, 1001, 1007, 1039, 1042, 1305, 1308, 1309, 1314, 1731, 1865, 1867, 1869, 1908, 1921, 1944, 1956], "databas": 21, "remot": [21, 24, 28, 32, 1607, 1914, 1921, 1922], "real": [21, 30, 55, 73, 674, 675, 676, 677, 678, 680, 686, 896, 908, 932, 933, 948, 954, 1012, 1082, 1083, 1085, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1183, 1185, 1186, 1189, 1190, 1214, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1243, 1246, 1248, 1250, 1251, 1252, 1253, 1257, 1258, 1262, 1263, 1264, 1274, 1280, 1394, 1436, 1439, 1440, 1476, 1614, 1807, 1811, 1854, 1855, 1856, 1864, 1865, 1867, 1869, 1889, 1892, 1908, 1911, 1913, 1916, 1921, 1923, 1929, 1931, 1932, 1940, 1942, 1943, 1944, 1946, 1947, 1949, 1955], "replica": [21, 22, 24, 28, 39, 1364, 1607, 1893], "duplic": [21, 304, 308, 459, 532, 909, 918, 939, 1150, 1151, 1193, 1427, 1843, 1844, 1910, 1925], "yield": [21, 22, 45, 47, 55, 1054, 1056, 1193, 1240, 1241, 1427, 1860, 1869, 1870, 1876, 1914, 1916, 1926, 1944], "stochast": [21, 30, 1375, 1376, 1521, 1522, 1663, 1665, 1666, 1668, 1679, 1683, 1684, 1900, 1912], "decent": 21, "randomli": [21, 733, 734, 744, 752, 897, 1339, 1365, 1366, 1367, 1368, 1372, 1445, 1511, 1512, 1513, 1514, 1519, 1627, 1884, 1899, 1900], "permut": [21, 45, 56, 64, 1066, 1240, 1241, 1260, 1283, 1285, 1724, 1865, 1867, 1883, 1911, 1918, 1929, 1931, 1949], "mini": [21, 767, 773, 1345, 1346, 1347, 1370, 1371, 1382, 1387, 1390, 1391, 1392, 1399, 1419, 1430, 1432, 1466, 1475, 1517, 1518, 1537, 1595, 1914], "neither": [21, 24, 783, 884, 887, 1049, 1109, 1433, 1474, 1654, 1832, 1894, 1903, 1921], "nor": [21, 24, 32, 47, 783, 887, 1229, 1230, 1257, 1433, 1474, 1607, 1654, 1708, 1811, 1894, 1910, 1943], "notion": [21, 896, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1947], "collat": 21, "minibatch": [21, 756, 757, 760, 761, 762, 1283, 1335, 1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1479, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1538, 1550, 1551, 1552, 1561, 1569, 1914], "loader": [21, 1912], "essenti": [21, 24, 29, 32, 55, 1283, 1883, 1892, 1906, 1925, 1939], "dummi": [21, 28, 1873, 1889, 1894, 1908, 1954, 1955], "infinit": [21, 1185, 1266, 1343, 1350, 1510, 1703, 1894, 1903, 1921, 1943], "drop": [21, 51, 53, 55, 1012, 1198, 1252, 1257, 1339, 1649, 1753, 1807, 1866, 1883, 1902, 1947, 1956], "roughli": [21, 1393, 1893, 1952, 1953], "dataset_it": 21, "pad": [21, 22, 45, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 723, 726, 727, 728, 729, 730, 731, 756, 757, 760, 761, 762, 767, 770, 771, 773, 940, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1190, 1340, 1341, 1342, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1448, 1449, 1450, 1451, 1452, 1453, 1473, 1474, 1478, 1482, 1483, 1484, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1517, 1518, 1520, 1526, 1537, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1595, 1641, 1643, 1644, 1646, 1714, 1715, 1807, 1865, 1867, 1884, 1896, 1910, 1911, 1916, 1930, 1942, 1949], "length": [21, 22, 24, 26, 30, 249, 302, 304, 310, 340, 421, 422, 571, 572, 573, 723, 748, 802, 881, 895, 939, 983, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1119, 1134, 1167, 1190, 1209, 1213, 1326, 1327, 1345, 1350, 1355, 1364, 1371, 1374, 1379, 1395, 1397, 1433, 1442, 1470, 1478, 1501, 1502, 1503, 1510, 1518, 1537, 1576, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1716, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1791, 1793, 1794, 1795, 1797, 1798, 1807, 1832, 1857, 1867, 1869, 1876, 1883, 1884, 1890, 1896, 1925, 1932, 1942, 1944, 1949, 1954], "certain": [21, 22, 24, 38, 39, 45, 52, 54, 55, 73, 674, 677, 723, 908, 920, 991, 1054, 1168, 1190, 1193, 1201, 1265, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1427, 1433, 1478, 1527, 1538, 1540, 1653, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1869, 1876, 1883, 1889, 1890, 1892, 1894, 1899, 1900, 1903, 1910, 1914, 1915, 1921, 1922, 1925, 1943, 1944, 1947, 1948, 1954], "cheaper": [21, 54], "bulk": [21, 1943], "arrai": [21, 32, 436, 748, 808, 809, 867, 868, 911, 929, 954, 958, 1066, 1110, 1118, 1119, 1127, 1128, 1265, 1295, 1374, 1379, 1380, 1397, 1398, 1520, 1731, 1738, 1758, 1793, 1794, 1795, 1797, 1798, 1822, 1825, 1832, 1840, 1851, 1866, 1870, 1892, 1900, 1925, 1927, 1931, 1932, 1944], "untouch": 21, "slightli": [21, 24, 30, 45, 47, 1654, 1699, 1812, 1864, 1892, 1894, 1897, 1903, 1913, 1944], "default_col": 21, "channel": [21, 50, 460, 461, 462, 767, 773, 796, 810, 813, 821, 833, 841, 1080, 1345, 1346, 1347, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1374, 1382, 1390, 1391, 1392, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1415, 1435, 1461, 1466, 1478, 1479, 1480, 1481, 1496, 1512, 1513, 1514, 1519, 1536, 1537, 1544, 1570, 1595, 1625, 1626, 1627, 1634, 1635, 1651, 1711, 1883, 1885, 1887, 1889, 1916, 1917, 1919, 1930], "class_index": 21, "namedtupl": [21, 45, 55, 884, 1045, 1046, 1138, 1193, 1205, 1215, 1235, 1285, 1291, 1294, 1296, 1299, 1323, 1335, 1427, 1699, 1709, 1783, 1811, 1829, 1834, 1866, 1868, 1869, 1916], "situat": [21, 30, 43, 55, 74, 76, 940, 954, 1619, 1881, 1894, 1895, 1902, 1903, 1913, 1916, 1923, 1942, 1943, 1944, 1955], "gil": [21, 24, 28, 1889, 1892, 1921], "integ": [21, 24, 30, 41, 45, 77, 278, 433, 435, 437, 487, 533, 548, 554, 673, 674, 675, 676, 677, 678, 754, 755, 773, 775, 853, 880, 908, 909, 918, 929, 953, 970, 972, 988, 994, 995, 1023, 1061, 1064, 1066, 1067, 1068, 1069, 1109, 1110, 1111, 1112, 1113, 1114, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1136, 1150, 1151, 1154, 1155, 1156, 1204, 1207, 1216, 1217, 1224, 1235, 1237, 1247, 1266, 1316, 1335, 1350, 1355, 1356, 1357, 1399, 1485, 1486, 1487, 1488, 1489, 1490, 1597, 1640, 1655, 1658, 1687, 1690, 1694, 1699, 1711, 1712, 1718, 1720, 1721, 1722, 1724, 1729, 1738, 1750, 1799, 1808, 1812, 1826, 1827, 1840, 1846, 1858, 1862, 1868, 1869, 1870, 1882, 1895, 1897, 1914, 1916, 1917, 1919, 1925, 1926, 1928, 1931, 1932, 1942, 1957], "descriptor": [21, 24, 1475, 1476, 1870, 1910], "parent": [21, 34, 39, 43, 47, 668, 776, 777, 805, 1427, 1881, 1906, 1913, 1923, 1930], "simplest": [21, 26, 32, 55, 846, 1340, 1341, 1342, 1355, 1356, 1357, 1420, 1421, 1422, 1617, 1893, 1894, 1900, 1908, 1916, 1923, 1925, 1944, 1947], "refcount": [21, 1881, 1902], "panda": 21, "pyarrow": 21, "13246": 21, "enumer": [21, 30, 45, 55, 1193, 1427, 1429, 1438, 1684, 1867, 1868, 1888, 1892, 1906, 1930, 1953], "get_worker_info": [21, 1921], "seed": [21, 77, 1004, 1013, 1014, 1034, 1169, 1286, 1307, 1699, 1716, 1812, 1849, 1865, 1867, 1896, 1902, 1904, 1920], "naiv": [21, 1914, 1939, 1942, 1944], "shut": [21, 1921], "garbag": [21, 1923], "subtleti": [21, 56, 1364, 1894, 1896], "multiprocess": [21, 22, 24, 25, 27, 32, 34, 42, 43, 1364, 1607, 1865, 1883, 1893, 1922], "unix": [21, 39, 968, 1881], "fork": [21, 39, 1212, 1607, 1869, 1891, 1892, 1896, 1899, 1902, 1906, 1920, 1921, 1923], "child": [21, 32, 34, 47, 779, 1193, 1427, 1626, 1881, 1900, 1906, 1923], "address": [21, 24, 41, 44, 52, 205, 896, 897, 975, 1876, 1881, 1892, 1921, 1922, 1939, 1956], "maco": [21, 24, 1881, 1901], "spawn": [21, 22, 25, 32, 33, 39, 43, 1196, 1607, 1865, 1888, 1893, 1902, 1906, 1922], "__name__": [21, 22, 24, 33, 34, 42, 1893, 1894, 1902, 1906, 1913, 1922], "__main__": [21, 22, 24, 33, 34, 42, 1890, 1893, 1902, 1906, 1922], "bytecod": [21, 45, 668, 1875, 1907, 1908, 1913, 1940, 1941, 1944, 1947, 1954], "base_se": 21, "worker_id": [21, 43, 1904], "therebi": [21, 30, 1912, 1916], "mandatorili": 21, "faq": [21, 1364, 1643, 1865], "initial_se": [21, 77, 1865, 1904, 1920], "host": [21, 24, 32, 34, 40, 41, 42, 43, 185, 198, 568, 591, 865, 1193, 1427, 1607, 1619, 1653, 1892, 1914, 1921, 1922, 1927, 1939, 1943, 1956], "recogn": [21, 70, 1869, 1921, 1925, 1943], "simplecustombatch": 21, "transposed_data": 21, "zip": [21, 26, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1864, 1867, 1868, 1878, 1892, 1899, 1925], "tgt": [21, 1470, 1471, 1472], "collate_wrapp": 21, "float32": [21, 22, 24, 45, 47, 56, 61, 64, 65, 66, 256, 568, 605, 807, 808, 809, 810, 813, 814, 868, 948, 1080, 1081, 1118, 1140, 1142, 1175, 1331, 1344, 1470, 1479, 1480, 1481, 1493, 1666, 1667, 1703, 1708, 1716, 1720, 1735, 1750, 1751, 1753, 1796, 1855, 1884, 1888, 1892, 1903, 1908, 1910, 1918, 1925, 1926, 1927, 1928, 1931, 1932, 1944, 1954, 1957], "tensordataset": 21, "batch_ndx": 21, "is_pin": [21, 1640, 1867, 1882, 1911, 1927, 1944], "multiprocessing_context": 21, "pin_memory_devic": 21, "reshuffl": 21, "draw": [21, 143, 910, 1029, 1317, 1716, 1930, 1952], "mutual": [21, 24, 32, 723, 1932], "subprocess": [21, 24, 39, 41, 43, 1896, 1902], "incomplet": [21, 889, 1871, 1926], "divis": [21, 571, 605, 675, 760, 761, 762, 934, 1061, 1111, 1114, 1204, 1237, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1382, 1394, 1418, 1436, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1562, 1729, 1799, 1826, 1869, 1888, 1892], "smaller": [21, 55, 487, 533, 958, 1397, 1607, 1693, 1708, 1753, 1799, 1892, 1905, 1913, 1940, 1956, 1957], "basecontext": 21, "randomsampl": 21, "prefetch": [21, 47], "unpickl": [21, 24, 1265, 1913], "practic": [21, 24, 30, 47, 1865, 1866, 1876, 1881, 1883, 1889, 1894, 1897, 1900, 1905, 1913, 1921, 1936, 1943, 1944], "len": [21, 24, 26, 55, 56, 61, 207, 533, 683, 684, 1085, 1089, 1092, 1096, 1099, 1103, 1133, 1197, 1260, 1281, 1293, 1322, 1325, 1364, 1564, 1625, 1627, 1643, 1684, 1691, 1796, 1799, 1805, 1806, 1810, 1851, 1852, 1853, 1866, 1867, 1869, 1894, 1911, 1925, 1930, 1953], "proper": [21, 32, 54, 55, 1057, 1748, 1868, 1889, 1892, 1894, 1902, 1906], "guess": 21, "trust": [21, 24, 1265, 1864, 1913], "inaccur": [21, 22, 1537], "kwd": 21, "__getitems__": 21, "speedup": [21, 22, 1433, 1474, 1936, 1939, 1947, 1951], "myiterabledataset": 21, "worker_info": 21, "iter_start": 21, "iter_end": 21, "per_work": 21, "ceil": [21, 166, 621, 622, 756, 757, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1550, 1551, 1552, 1714, 1715, 1738, 1867, 1882, 1892, 1911, 1925, 1949], "mult": 21, "12": [21, 22, 24, 47, 310, 505, 605, 674, 729, 730, 731, 733, 734, 930, 934, 1064, 1082, 1156, 1197, 1213, 1230, 1252, 1335, 1351, 1359, 1374, 1375, 1376, 1424, 1439, 1440, 1461, 1470, 1478, 1521, 1522, 1562, 1567, 1568, 1615, 1648, 1698, 1709, 1758, 1773, 1783, 1826, 1842, 1858, 1864, 1866, 1867, 1870, 1876, 1892, 1901, 1905, 1910, 1911, 1925, 1932, 1941, 1951, 1952], "overall_start": 21, "overall_end": 21, "stackdataset": 21, "assembl": [21, 1941], "imagedataset": 21, "textdataset": 21, "tuple_stack": 21, "dict_stack": 21, "concatdataset": 21, "chaindataset": 21, "chain": [21, 22, 30, 54, 55, 139, 881, 930, 1249, 1371, 1455, 1681, 1694, 1869, 1889, 1892, 1894, 1897, 1900, 1912, 1953], "fly": [21, 1009, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1889], "whole": [21, 24, 26, 1134, 1193, 1427, 1455, 1466, 1607, 1857, 1889, 1893, 1902, 1903, 1913, 1943, 1945, 1947, 1950, 1951], "_util": [21, 1952], "collate_fn_map": 21, "registri": [21, 1865, 1905, 1908, 1910], "default_collate_fn_map": 21, "insert": [21, 24, 30, 47, 54, 55, 735, 780, 781, 849, 850, 1428, 1429, 1437, 1607, 1745, 1748, 1758, 1779, 1804, 1845, 1866, 1877, 1892, 1908, 1911, 1916, 1953], "collate_tensor_fn": 21, "custom_col": 21, "collate_map": 21, "outer": [21, 679, 889, 1066, 1124, 1128, 1133, 1139, 1867, 1869, 1911], "unchang": [21, 487, 501, 503, 723, 802, 1105, 1193, 1427, 1470, 1730, 1802, 1888, 1903, 1916], "byte": [21, 24, 30, 41, 231, 423, 546, 868, 974, 1015, 1017, 1019, 1021, 1119, 1192, 1265, 1302, 1303, 1660, 1669, 1741, 1868, 1869, 1870, 1882, 1905, 1913, 1925, 1927, 1956], "k": [21, 24, 26, 30, 42, 55, 275, 343, 494, 501, 503, 505, 578, 605, 748, 933, 1053, 1066, 1122, 1135, 1155, 1215, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1266, 1284, 1288, 1340, 1342, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1375, 1376, 1379, 1380, 1397, 1398, 1412, 1414, 1415, 1420, 1422, 1433, 1434, 1442, 1444, 1509, 1521, 1522, 1544, 1561, 1614, 1697, 1699, 1709, 1737, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1797, 1798, 1807, 1829, 1834, 1867, 1868, 1887, 1892, 1894, 1906, 1925, 1926, 1928, 1944, 1947, 1948, 1949, 1954], "v_i": [21, 1233], "v_1": 21, "v_2": 21, "v1_i": 21, "v2_i": 21, "v1_1": 21, "v1_2": 21, "v2_1": 21, "v2_2": 21, "elem": [21, 1867], "customtyp": 21, "collate_customtype_fn": 21, "custotyp": 21, "default_convert": 21, "np": [21, 928, 1061, 1066, 1106, 1107, 1108, 1566, 1703, 1895, 1904, 1910, 1930, 1931, 1932, 1944], "fraction": [21, 30, 1036, 1109, 1115, 1312, 1358, 1359, 1360, 1375, 1376, 1433, 1474, 1521, 1522, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1710, 1887, 1944], "workerinfo": [21, 1921], "random_split": 21, "floor": [21, 56, 58, 64, 260, 635, 636, 756, 757, 1061, 1111, 1204, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1550, 1551, 1552, 1714, 1715, 1729, 1738, 1807, 1867, 1869, 1882, 1902, 1905, 1911, 1925, 1949], "frac": [21, 30, 268, 366, 637, 638, 675, 748, 760, 761, 762, 853, 909, 918, 954, 958, 1061, 1111, 1146, 1150, 1151, 1213, 1225, 1229, 1230, 1233, 1245, 1257, 1264, 1280, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1374, 1379, 1380, 1381, 1382, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1412, 1414, 1415, 1416, 1417, 1420, 1421, 1422, 1430, 1431, 1432, 1434, 1442, 1444, 1445, 1457, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1478, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1546, 1562, 1564, 1566, 1576, 1578, 1582, 1584, 1586, 1587, 1664, 1665, 1668, 1670, 1676, 1683, 1684, 1713, 1725, 1728, 1740, 1761, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1790, 1805, 1806, 1807, 1811, 1832, 1852, 1853, 1867, 1882, 1887, 1889, 1897, 1911, 1925, 1926], "remaind": [21, 478, 1114, 1146, 1867, 1911, 1941, 1949], "robin": [21, 24], "generator1": 21, "manual_se": [21, 52, 77, 1865, 1867, 1882, 1900, 1902, 1904, 1910, 1911, 1920], "42": [21, 812, 918, 1316, 1765, 1892, 1900, 1941], "generator2": 21, "30": [21, 24, 30, 32, 41, 433, 605, 708, 716, 717, 744, 752, 1146, 1216, 1348, 1350, 1354, 1414, 1478, 1484, 1501, 1510, 1598, 1687, 1689, 1695, 1712, 1822, 1894, 1910, 1912, 1921, 1941], "data_sourc": 21, "accedingsequencelengthsampl": 21, "argsort": [21, 1822, 1867, 1895, 1911], "tolist": [21, 341, 1869, 1911, 1927], "accedingsequencelengthbatchsampl": 21, "sequentialsampl": 21, "num_sampl": [21, 409, 1317, 1867], "drawn": [21, 162, 247, 275, 1317, 1655, 1716, 1720, 1721, 1887, 1932, 1933], "subsetrandomsampl": 21, "weightedrandomsampl": 21, "probabl": [21, 47, 143, 748, 910, 1154, 1271, 1317, 1335, 1339, 1343, 1350, 1363, 1365, 1366, 1367, 1368, 1372, 1379, 1381, 1397, 1433, 1434, 1442, 1498, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1528, 1538, 1561, 1576, 1709, 1881, 1894, 1906, 1910, 1926, 1930, 1942, 1943, 1944, 1945, 1950], "row": [21, 22, 29, 30, 197, 302, 304, 310, 573, 576, 681, 687, 865, 889, 891, 928, 954, 958, 1049, 1079, 1107, 1108, 1128, 1134, 1155, 1215, 1241, 1249, 1252, 1257, 1281, 1283, 1291, 1293, 1294, 1296, 1299, 1317, 1323, 1324, 1325, 1517, 1518, 1566, 1614, 1653, 1707, 1710, 1730, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1810, 1829, 1832, 1836, 1838, 1851, 1857, 1859, 1867, 1897, 1925, 1930], "05": [21, 28, 55, 102, 333, 682, 700, 701, 702, 703, 704, 705, 711, 712, 724, 725, 737, 739, 740, 741, 742, 896, 897, 1080, 1182, 1209, 1210, 1280, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1470, 1472, 1474, 1496, 1527, 1536, 1540, 1607, 1682, 1688, 1689, 1695, 1767, 1768, 1773, 1866, 1867, 1912, 1922, 1932], "batchsampl": 21, "distributedsampl": [21, 1607], "num_replica": 21, "world_siz": [21, 22, 24, 25, 28, 32, 41, 42, 44, 47, 1607, 1893, 1914, 1921, 1922], "evenli": [21, 571, 572, 573, 683, 684, 1064, 1156, 1264, 1280, 1858], "set_epoch": 21, "is_distribut": [21, 1867, 1911, 1944], "start_epoch": 21, "n_epoch": 21, "vanilla": [22, 1876], "allreduc": [22, 24, 1607, 1892, 1893, 1911], "besid": [22, 24, 1892, 1893, 1908, 1930, 1940], "register_comm_hook": [22, 28, 47, 1607], "mainli": [22, 30, 815, 1350, 1510, 1934], "bucket": [22, 28, 29, 1335, 1607, 1867, 1893, 1911, 1944, 1954], "gradbucket": [22, 1607], "decompos": [22, 45, 55, 1116, 1123, 1238, 1889, 1894, 1910, 1949], "get_per_parameter_tensor": 22, "wise": [22, 24, 30, 675, 676, 686, 746, 758, 759, 768, 772, 872, 952, 1066, 1071, 1112, 1113, 1136, 1137, 1149, 1158, 1216, 1218, 1275, 1276, 1277, 1278, 1282, 1292, 1295, 1297, 1328, 1349, 1360, 1367, 1369, 1383, 1384, 1385, 1386, 1388, 1413, 1416, 1426, 1435, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1463, 1465, 1467, 1468, 1500, 1515, 1524, 1525, 1529, 1530, 1531, 1532, 1535, 1539, 1541, 1546, 1556, 1557, 1570, 1571, 1572, 1577, 1578, 1579, 1580, 1584, 1586, 1587, 1588, 1791, 1859, 1891, 1894, 1925, 1926, 1929, 1951], "_distributed_c10d": [22, 24], "1d": [22, 29, 30, 47, 690, 693, 726, 729, 760, 770, 939, 954, 958, 1049, 1063, 1154, 1155, 1170, 1190, 1249, 1250, 1295, 1324, 1332, 1336, 1340, 1350, 1355, 1358, 1363, 1366, 1367, 1371, 1395, 1419, 1420, 1432, 1434, 1479, 1485, 1488, 1491, 1493, 1501, 1504, 1512, 1518, 1547, 1550, 1710, 1711, 1714, 1807, 1822, 1832, 1854], "is_last": 22, "set_buff": 22, "stateless": [22, 52, 1885, 1900], "ddp_comm_hook": [22, 28], "default_hook": 22, "allreduce_hook": 22, "process_group": [22, 25, 26, 28, 47, 1466, 1607], "aggreg": [22, 24, 26, 34, 47, 1371, 1518, 1607, 1630, 1879, 1914, 1944, 1954], "henc": [22, 28, 32, 40, 41, 44, 47, 54, 910, 1119, 1423, 1424, 1425, 1479, 1796, 1884, 1889, 1892, 1893, 1921, 1923, 1939], "unaffect": [22, 487, 488, 1381], "ddp_model": [22, 24, 1607, 1893], "fp16_compress_hook": 22, "compress": [22, 47, 197, 575, 576, 1088, 1089, 1098, 1099, 1607, 1793, 1794, 1795, 1797, 1798, 1831, 1865, 1951], "decompress": [22, 1864, 1878], "bf16_compress_hook": 22, "nccl": [22, 25, 26, 42, 47, 1607, 1898], "brain": [22, 1928, 1931], "wrapper": [22, 24, 29, 30, 47, 54, 55, 56, 612, 745, 778, 812, 964, 967, 969, 970, 972, 1039, 1041, 1112, 1113, 1132, 1193, 1305, 1364, 1866, 1868, 1869, 1879, 1881, 1892, 1893, 1910, 1914, 1939], "fp16_compress_wrapp": 22, "powersgdst": 22, "matrix_approximation_rank": 22, "start_powersgd_it": 22, "powersgd_hook": 22, "bf16_compress_wrapp": 22, "wikipedia": [22, 1563, 1889, 1897, 1957], "bfloat16_float": 22, "point_format": 22, "vogel": 22, "et": [22, 30, 47, 1350, 1439, 1440, 1475, 1476, 1679, 1774, 1812, 1887], "al": [22, 30, 47, 1350, 1439, 1440, 1475, 1476, 1679, 1774, 1812, 1887], "neurip": [22, 30], "2019": [22, 30, 1023], "bandwidth": [22, 24, 40, 42, 1916, 1921, 1946, 1948], "hyperparamet": [22, 47, 55, 1930], "1000": [22, 1081, 1086, 1112, 1113, 1335, 1370, 1476, 1711, 1738, 1758, 1825, 1889, 1905, 1910, 1930], "min_compression_r": 22, "use_error_feedback": 22, "warm_start": 22, "orthogonalization_epsilon": 22, "random_se": 22, "compression_stats_logging_frequ": 22, "batch_tensors_with_same_shap": 22, "tune": [22, 24, 28, 1023, 1230, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1889, 1892, 1901, 1916, 1954], "stronger": [22, 45, 56], "threshold": [22, 55, 1248, 1251, 1388, 1458, 1463, 1584, 1590, 1693, 1758, 1867, 1888, 1892, 1911, 1930], "exponenti": [22, 247, 1076, 1245, 1271, 1272, 1273, 1281, 1349, 1369, 1515, 1865, 1869, 1911, 1912, 1926, 1933], "grid": [22, 1086, 1295, 1491, 1526, 1867, 1892, 1930, 1949], "satisfactori": 22, "nlp": [22, 1390, 1391, 1392, 1399, 1944], "appendix": [22, 1865], "defer": [22, 47, 1892, 1914], "hybrid": [22, 47, 207, 531, 571, 572, 573, 575, 576, 1157], "scheme": [22, 41, 466, 790, 807, 808, 809, 810, 813, 815, 1900], "sensit": [22, 1388, 1458, 1910, 1913, 1922, 1943], "suboptim": [22, 1946], "trajectori": 22, "irrecover": 22, "impact": [22, 24, 70, 1023, 1753, 1877, 1879, 1889, 1916, 1929, 1944, 1950, 1954], "warm": [22, 28, 1012, 1683, 1684, 1892, 1915, 1939, 1944, 1952], "num_row": 22, "num_col": 22, "1e": [22, 55, 102, 333, 682, 700, 701, 702, 703, 704, 705, 711, 712, 724, 725, 737, 739, 740, 741, 742, 743, 896, 897, 931, 932, 933, 1182, 1209, 1210, 1260, 1345, 1346, 1347, 1362, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1436, 1441, 1466, 1470, 1472, 1474, 1475, 1496, 1508, 1523, 1527, 1528, 1536, 1540, 1562, 1565, 1569, 1592, 1615, 1648, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1680, 1693, 1701, 1754, 1866, 1867, 1894, 1900, 1910, 1912, 1926, 1932], "orthogon": [22, 1230, 1233, 1252, 1257, 1266, 1697, 1709, 1887, 1889, 1900, 1925], "div": [22, 225, 1062, 1111, 1114, 1335, 1439, 1440, 1729, 1839, 1867, 1873, 1882, 1911, 1925, 1928, 1949, 1953], "epsilon": [22, 55, 807, 808, 809, 810, 813, 853, 1248, 1251, 1345, 1346, 1347, 1362, 1382, 1390, 1391, 1392, 1399, 1436, 1466, 1508, 1562, 1615, 1648, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1713, 1867, 1926], "bucket_cap_mb": [22, 1607, 1893], "footprint": [22, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1908, 1925, 1951], "bottleneck": [22, 1865, 1900, 1946], "memor": 22, "compens": 22, "apex": 22, "uncompress": [22, 1925], "p": [22, 26, 30, 47, 55, 143, 223, 275, 413, 414, 441, 476, 479, 480, 596, 674, 677, 908, 910, 920, 928, 1060, 1214, 1225, 1231, 1232, 1240, 1241, 1283, 1285, 1288, 1298, 1320, 1339, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1393, 1395, 1396, 1432, 1436, 1438, 1475, 1476, 1492, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1547, 1548, 1558, 1562, 1565, 1566, 1592, 1611, 1617, 1619, 1625, 1634, 1654, 1679, 1730, 1788, 1867, 1868, 1888, 1889, 1892, 1896, 1897, 1902, 1915, 1925, 1926, 1948, 1949], "pq": 22, "mq": [22, 1916, 1935], "tp": [22, 29], "awai": [22, 55, 943, 1526, 1865, 1883, 1889, 1895, 1942], "config": [22, 47, 55, 780, 781, 782, 783, 847, 849, 940, 1893, 1906, 1919, 1944, 1946, 1947, 1948, 1954], "comm": [22, 24, 1893], "handler": [22, 24, 34, 35, 1626, 1879, 1899, 1913, 1955], "batched_powersgd_hook": 22, "destroi": [22, 41, 1364, 1889, 1921], "squar": [22, 30, 539, 727, 728, 729, 730, 767, 773, 782, 958, 1053, 1055, 1190, 1225, 1227, 1229, 1230, 1231, 1234, 1235, 1239, 1241, 1243, 1245, 1247, 1251, 1253, 1254, 1256, 1257, 1261, 1274, 1283, 1333, 1337, 1341, 1342, 1356, 1357, 1359, 1360, 1375, 1376, 1388, 1396, 1418, 1421, 1422, 1425, 1458, 1470, 1493, 1502, 1505, 1521, 1522, 1526, 1535, 1537, 1557, 1580, 1595, 1614, 1664, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1740, 1800, 1834, 1851, 1867, 1911, 1925], "truncat": [22, 1111, 1753, 1840, 1884, 1887, 1896, 1903], "impli": [22, 41, 47, 1881, 1889, 1910, 1914, 1919, 1921, 1943], "debugging_hook": 22, "noop_hook": 22, "noop": [22, 1607], "headroom": 22, "desynchron": [22, 24], "trainer": [22, 32, 34, 39, 42, 43, 1607, 1921], "restart": [22, 32, 40, 42, 44, 1683, 1684, 1881, 1930, 1941], "__setstate__": 22, "__getstate__": 22, "reload": [22, 28, 47, 1864], "sy": [22, 33, 42, 44, 1864, 1892, 1913], "tempfil": 22, "mp": [22, 24, 25, 43, 1305, 1607, 1865, 1893, 1894, 1902, 1916, 1922, 1927, 1928, 1935], "simplemodel": 22, "24": [22, 24, 30, 913, 1252, 1415, 1491, 1647, 1709, 1753, 1827, 1866, 1887, 1891, 1926, 1941], "fc2": [22, 1598, 1908, 1914], "master_addr": [22, 24, 32, 42, 44, 1893, 1914, 1921, 1922], "localhost": [22, 24, 41, 42, 1893, 1914, 1921, 1922], "master_port": [22, 24, 32, 42, 44, 1893, 1914, 1921, 1922], "12355": 22, "init_process_group": [22, 24, 25, 28, 32, 42, 44, 1607, 1892, 1893, 1921], "cleanup": 22, "destroy_process_group": 22, "run_demo": 22, "demo_fn": 22, "nproc": [22, 24, 39, 40, 42, 1881, 1893, 1922], "demo_seri": 22, "gettempdir": 22, "device_id": [22, 24, 25, 28, 42, 47, 1265, 1364, 1466, 1591, 1607, 1893], "powersgd_st": 22, "lr": [22, 25, 28, 47, 476, 1598, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1892, 1893, 1900, 1902, 1912, 1922, 1930], "001": [22, 896, 897, 1203, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1692, 1893, 1910], "comm_hook": 22, "comm_hook_st": 22, "barrier": [22, 32, 41, 1911], "map_loc": [22, 1197, 1201, 1265, 1607, 1864, 1878, 1913], "new_ddp_model": 22, "n_gpu": 22, "device_count": [22, 24, 1849, 1865], "got": [22, 24, 879, 1849, 1894, 1932], "thank": [22, 30, 1894, 1914], "author": [22, 41, 42, 47, 1134, 1676, 1716, 1857, 1888, 1941, 1944, 1946, 1950, 1951, 1954], "thij": 22, "par": 22, "home": [23, 1892], "brief": [24, 1607, 1881, 1921], "introduct": [24, 30, 1001, 1607, 1865, 1866, 1870, 1882, 1890, 1900, 1910, 1921, 1925, 1930], "mpi": [24, 1607], "gloo": [24, 42, 1607, 1893, 1898, 1921], "recv": [24, 1607, 1911, 1922], "broadcast": [24, 28, 30, 47, 52, 86, 185, 387, 389, 390, 391, 501, 503, 505, 554, 673, 674, 675, 676, 677, 678, 679, 685, 723, 872, 908, 913, 916, 920, 921, 922, 923, 953, 980, 1009, 1060, 1061, 1066, 1071, 1111, 1112, 1113, 1114, 1135, 1137, 1149, 1159, 1218, 1219, 1226, 1239, 1243, 1248, 1249, 1251, 1254, 1262, 1282, 1287, 1288, 1298, 1316, 1319, 1328, 1331, 1344, 1362, 1381, 1433, 1499, 1508, 1570, 1607, 1662, 1698, 1706, 1729, 1731, 1808, 1827, 1832, 1860, 1865, 1869, 1882, 1883, 1884, 1893, 1910, 1911, 1926, 1944, 1949], "all_reduc": [24, 43, 1607], "all_gath": 24, "scatter": [24, 28, 47, 501, 503, 505, 1364, 1846, 1867, 1896, 1911, 1921, 1949], "reduce_scatt": [24, 1911], "all_to_al": 24, "v1": [24, 47, 1262, 1698, 1864, 1893, 1921], "init_method": [24, 1607, 1921], "adher": [24, 1869, 1925], "some_fil": 24, "machine_nam": 24, "share_folder_nam": 24, "tcpstore": [24, 41], "past": [24, 55, 978, 1025, 1029, 1043, 1044, 1607, 1896, 1946, 1948, 1951], "ask": [24, 51, 52, 1864, 1865, 1895, 1897, 1936, 1956], "infiniband": [24, 1607, 1921], "interconnect": 24, "gpudirect": 24, "ethernet": 24, "ip": [24, 41], "ib": 24, "upcom": [24, 1888], "nccl_socket_ifnam": 24, "eth0": 24, "gloo_socket_ifnam": 24, "comma": [24, 1066, 1869, 1875], "eth1": 24, "eth2": 24, "eth3": 24, "imper": 24, "nccl_debug": 24, "info": [24, 32, 35, 39, 668, 880, 969, 970, 972, 1224, 1235, 1237, 1238, 1242, 1255, 1283, 1308, 1309, 1660, 1865, 1867, 1875, 1893, 1894, 1895, 1910, 1913, 1941, 1942, 1943, 1954], "nccl_debug_subsi": 24, "coll": 24, "hang": [24, 25, 28, 1607, 1893], "topologi": [24, 26, 29, 32], "effort": [24, 45, 1921, 1948], "socket": [24, 1881, 1921], "nccl_socket_nthread": 24, "nccl_nsocks_perthread": 24, "cloud": [24, 1925, 1930], "aw": [24, 33, 958], "gcp": [24, 1951], "primit": [24, 28, 41, 45, 1265, 1866, 1868, 1870, 1891, 1901, 1910, 1921, 1949], "kind": [24, 35, 45, 55, 668, 1213, 1608, 1661, 1708, 1773, 1864, 1873, 1894, 1902, 1910, 1913, 1916, 1926, 1928, 1947], "connect": [24, 32, 41, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1455, 1881, 1921, 1952], "advantag": [24, 41, 42, 1344, 1388, 1893, 1896, 1907, 1908, 1921, 1925, 1939], "redund": [24, 47, 1082, 1083, 1085, 1087, 1101, 1103, 1807], "averag": [24, 28, 723, 754, 755, 756, 757, 809, 810, 905, 907, 958, 1029, 1043, 1193, 1332, 1333, 1334, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1371, 1381, 1387, 1393, 1394, 1395, 1396, 1400, 1401, 1402, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1466, 1475, 1485, 1486, 1487, 1493, 1494, 1495, 1498, 1499, 1509, 1523, 1538, 1547, 1548, 1561, 1569, 1607, 1663, 1664, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1832, 1865, 1893, 1915], "elimin": [24, 45, 55, 598, 1843, 1844, 1904, 1946, 1953], "thrash": 24, "recurr": [24, 748, 749, 1209, 1350, 1364, 1379, 1380, 1397, 1442, 1617, 1643, 1677, 1865, 1892], "use_distribut": 24, "datetim": [24, 1879, 1944], "timedelta": [24, 41, 1879], "1800": 24, "group_nam": [24, 38], "pg_option": 24, "url": [24, 41, 904, 1864, 1878, 1921], "discov": [24, 1921], "encod": [24, 32, 38, 41, 47, 55, 1241, 1265, 1308, 1309, 1343, 1344, 1470, 1471, 1472, 1473, 1474, 1607, 1753, 1793, 1794, 1795, 1797, 1798, 1866, 1869, 1870, 1894, 1905, 1913, 1922, 1925], "ucc": 24, "lowercas": 24, "deadlock": [24, 1607], "job": [24, 32, 34, 35, 37, 38, 40, 41, 42, 43, 1607, 1685, 1691, 1892, 1899, 1915, 1930, 1956], "exchang": [24, 41, 970, 1054, 1892, 1907], "nccl_blocking_wait": 24, "nccl_async_error_handl": [24, 1892], "throw": [24, 25, 29, 54, 55, 179, 312, 317, 533, 602, 1178, 1193, 1234, 1283, 1427, 1607, 1609, 1610, 1643, 1654, 1705, 1846, 1884, 1889, 1904, 1921, 1931, 1944, 1954], "abort": [24, 1892], "crash": [24, 34, 41, 1230, 1881, 1889, 1921, 1923, 1930, 1942], "caught": [24, 1607, 1881], "littl": [24, 1894, 1923, 1947], "watch": [24, 1941], "dog": 24, "processgroupopt": 24, "processgroupnccl": [24, 1893], "is_high_priority_stream": 24, "backend_nam": [24, 1849], "custom_backend": 24, "is_initi": [24, 1865], "is_mpi_avail": 24, "is_nccl_avail": 24, "is_gloo_avail": 24, "is_torchelastic_launch": 24, "elast": [24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 1865], "torchelast": [24, 27, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44], "torchelastic_run_id": [24, 42], "proxi": [24, 26, 1916, 1921, 1947], "rendezv": [24, 27, 32, 38, 40, 44, 1893, 1921], "null": [24, 33, 35, 38, 56, 60], "discoveri": [24, 41, 1892, 1913], "reachabl": 24, "multicast": 24, "20": [24, 28, 30, 310, 673, 708, 716, 717, 722, 726, 727, 728, 729, 730, 731, 734, 744, 748, 749, 750, 751, 752, 753, 760, 1146, 1191, 1194, 1205, 1216, 1250, 1316, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1379, 1380, 1382, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1414, 1420, 1421, 1422, 1424, 1425, 1427, 1442, 1444, 1455, 1463, 1466, 1469, 1470, 1471, 1472, 1484, 1501, 1503, 1504, 1506, 1510, 1521, 1522, 1528, 1584, 1614, 1615, 1639, 1648, 1651, 1669, 1684, 1712, 1822, 1866, 1867, 1884, 1893, 1894, 1903, 1908, 1912, 1921, 1925, 1941, 1943, 1947], "23456": 24, "clean": [24, 32, 45, 55, 947, 1005, 1864, 1881, 1913], "fcntl": 24, "nf": 24, "init": [24, 32, 34, 47, 1193, 1427, 1435, 1454, 1647, 1865, 1871, 1889, 1894, 1899, 1900, 1942], "brand": [24, 1894], "succe": [24, 29, 41, 45, 52, 1892, 1894, 1906, 1954, 1956], "unexpect": [24, 31, 55, 966, 1117, 1119, 1122, 1193, 1427, 1649, 1662, 1802, 1866, 1889, 1894, 1903, 1943, 1944, 1947], "unsuccess": 24, "mnt": 24, "sharedfil": 24, "port": [24, 32, 40, 41, 42, 1898], "backend_str": 24, "uppercas": 24, "classmethod": [24, 41, 56, 58, 720, 726, 727, 728, 733, 734, 744, 752, 780, 781, 782, 803, 804, 805, 812, 842, 969, 1370, 1371, 1466, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1660, 1869, 1870, 1894, 1916, 1921, 1927, 1955], "register_backend": [24, 1921, 1940], "extended_api": 24, "instanti": [24, 28, 40, 41, 42, 47, 55, 829, 1371, 1518, 1616, 1640, 1647, 1864, 1866, 1868, 1869, 1892, 1894, 1900, 1908, 1927], "3rd": [24, 30, 41, 605, 1693, 1890], "processgroup": [24, 26, 28, 47, 1607], "four": [24, 1239, 1356, 1894, 1897, 1921, 1923], "c10d": [24, 32, 40, 42, 44, 1607, 1893, 1911], "distributedbackendopt": 24, "get_backend": [24, 41], "get_rank": [24, 47, 1466], "get_world_s": 24, "filestor": [24, 41], "hashstor": 24, "client": [24, 28, 41, 1023, 1913, 1944], "host_nam": 24, "hostnam": [24, 32, 41, 1915], "listen": 24, "is_mast": 24, "300": [24, 32, 1271, 1344, 1644, 1646, 1912], "wait_for_work": 24, "multi_ten": 24, "tcpserver": 24, "master_listen_fd": 24, "server_stor": 24, "127": [24, 782, 1883, 1916, 1930], "1234": [24, 41, 1170], "client_stor": 24, "first_kei": 24, "first_valu": 24, "hashmap": 24, "file_nam": [24, 1864, 1878, 1913], "store1": 24, "store2": 24, "prefixstor": 24, "old": [24, 31, 55, 842, 1117, 1367, 1651, 1659, 1693, 1741, 1863, 1865, 1866, 1889, 1892, 1894, 1906, 1916, 1930, 1943, 1947], "whose": [24, 30, 45, 47, 55, 532, 847, 883, 930, 953, 1054, 1066, 1071, 1119, 1137, 1146, 1149, 1155, 1193, 1199, 1210, 1218, 1264, 1280, 1282, 1328, 1427, 1607, 1655, 1703, 1761, 1828, 1869, 1889, 1894, 1897, 1913, 1925, 1930, 1932, 1942, 1954], "quantiti": [24, 48, 53, 1229, 1230, 1257, 1393, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1693, 1895, 1897], "compare_set": 24, "arg2": 24, "expected_valu": 24, "desired_valu": 24, "second_valu": 24, "overload": [24, 45, 55, 605, 1868, 1869, 1873, 1908], "bad_kei": 24, "num_kei": 24, "written": [24, 34, 52, 904, 1025, 1364, 1679, 1866, 1868, 1876, 1877, 1889, 1893, 1894, 1895, 1900, 1905, 1908, 1910, 1913, 1915, 1927, 1930, 1936, 1941, 1942, 1946, 1948, 1953, 1954], "destruct": [24, 1879, 1921, 1923], "delete_kei": 24, "successfulli": [24, 32, 38, 1200, 1754, 1881, 1900, 1905, 1921, 1954], "set_timeout": 24, "grain": [24, 45, 846, 849, 1576, 1889, 1910, 1925, 1936, 1946, 1954], "plai": [24, 1941, 1944], "new_group": [24, 47, 1466], "opaqu": [24, 31, 967, 1001, 1002, 1117, 1950], "pattern": [24, 26, 780, 781, 782, 784, 842, 849, 1009, 1364, 1643, 1789, 1866, 1869, 1889, 1892, 1894, 1896, 1898, 1905, 1917, 1918, 1925, 1939, 1942, 1943, 1953, 1956], "use_local_synchron": 24, "enqueu": [24, 54, 970, 972, 973, 1892, 1922], "significantli": [24, 45, 47, 890, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1753, 1925, 1940], "taken": [24, 30, 45, 54, 55, 56, 61, 853, 1087, 1089, 1112, 1113, 1350, 1363, 1371, 1434, 1510, 1518, 1758, 1791, 1887, 1889, 1891, 1892, 1894, 1896, 1899, 1905, 1910, 1913, 1915, 1954, 1956], "get_group_rank": 24, "global_rank": [24, 32], "translat": [24, 1146, 1889, 1907, 1908, 1923, 1947], "get_global_rank": 24, "group_rank": [24, 32, 42], "get_process_group_rank": 24, "dst": [24, 1864, 1913], "destin": [24, 26, 35, 38, 47, 198, 404, 405, 591, 981, 982, 1135, 1193, 1300, 1301, 1427, 1867, 1908, 1921, 1922, 1927], "unspecifi": [24, 469, 808, 809, 810, 813, 896, 897, 1460, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1790, 1796, 1876, 1925, 1930], "sender": [24, 1923], "isend": 24, "irecv": 24, "is_complet": 24, "finish": [24, 26, 32, 38, 39, 41, 43, 54, 1123, 1892, 1893, 1906, 1915, 1921, 1923, 1956], "batch_isend_irecv": 24, "p2p_op_list": 24, "p2pop": 24, "op_list": 24, "send_tensor": 24, "recv_tensor": 24, "send_op": 24, "recv_op": 24, "req": 24, "pg": [24, 1607], "set_devic": [24, 26, 47, 1607, 1749, 1865, 1921, 1928], "p2p": [24, 41], "async_op": 24, "onto": [24, 47, 55, 56, 58, 1028, 1201, 1204, 1265, 1619, 1847, 1864, 1881, 1892, 1895, 1896, 1900, 1915, 1947, 1953, 1956], "get_futur": [24, 1607], "regard": [24, 1358, 1359, 1360, 1370, 1371, 1517, 1518, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1866, 1923, 1925, 1948], "101": [24, 1335], "overwrot": 24, "sent": [24, 26, 1005, 1869, 1881, 1902, 1921, 1922, 1923], "broadcast_object_list": 24, "object_list": 24, "picklabl": [24, 1193, 1427, 1913], "current_devic": [24, 26, 47, 978, 986, 987, 994, 995, 1011, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1042, 1043, 1044, 1849, 1865, 1928, 1941], "insecur": [24, 1265], "malici": [24, 1265, 1913], "ineffici": [24, 47, 1892, 1916], "redoptyp": 24, "bitwis": [24, 912, 914, 915, 917, 1870, 1903, 1917, 1933], "reduceop": 24, "int64": [24, 73, 180, 197, 302, 310, 382, 853, 911, 924, 1067, 1080, 1081, 1118, 1509, 1640, 1720, 1724, 1725, 1745, 1793, 1794, 1795, 1797, 1798, 1892, 1925, 1927, 1928, 1931, 1957], "1j": [24, 686, 951, 952, 1189, 1733, 1734, 1854, 1889, 1897, 1905], "2j": [24, 686, 951, 952, 1733, 1734, 1761, 1854, 1889], "tensor_list": [24, 1884], "all_gather_into_tensor": 24, "output_tensor": 24, "input_tensor": [24, 1946], "accommod": [24, 1423, 1424, 1425], "ii": [24, 954, 1066, 1397, 1398], "tensor_in": 24, "tensor_out": 24, "tensor_out2": 24, "all_gather_object": 24, "obj": [24, 55, 56, 58, 868, 990, 1179, 1180, 1199, 1200, 1205, 1741, 1850, 1867, 1905, 1906, 1913], "pickabl": 24, "popul": [24, 30, 39, 47, 54, 55, 324, 483, 491, 492, 1294, 1323, 1892, 1894, 1943, 1953], "responsibl": 24, "gather_object": 24, "gather_list": 24, "object_gather_list": 24, "scatter_list": 24, "tensor_s": 24, "t_one": 24, "t_five": 24, "scatter_object_list": 24, "scatter_object_output_list": 24, "scatter_object_input_list": 24, "output_list": 24, "input_list": 24, "reduce_scatter_tensor": 24, "all_to_all_singl": 24, "output_split_s": 24, "input_split_s": 24, "13": [24, 863, 934, 1064, 1067, 1111, 1146, 1156, 1197, 1283, 1351, 1375, 1376, 1424, 1461, 1521, 1522, 1783, 1826, 1858, 1866, 1870, 1911, 1925, 1941, 1948, 1954], "14": [24, 56, 63, 64, 310, 505, 933, 1009, 1010, 1049, 1064, 1156, 1246, 1252, 1321, 1351, 1424, 1709, 1716, 1783, 1826, 1827, 1832, 1858, 1866, 1870, 1911, 1925, 1929, 1930, 1941], "15": [24, 55, 605, 1064, 1136, 1146, 1156, 1216, 1230, 1351, 1424, 1425, 1644, 1646, 1701, 1774, 1783, 1830, 1858, 1866, 1867, 1870, 1910, 1925], "uneven": [24, 25, 28, 1607], "18": [24, 310, 433, 673, 1067, 1146, 1190, 1266, 1424, 1866, 1908, 1910, 1911, 1925, 1941], "21": [24, 30, 673, 930, 1049, 1252, 1709, 1832, 1866, 1925], "22": [24, 30, 310, 605, 1266, 1598, 1644, 1646, 1866, 1904, 1925, 1941], "23": [24, 501, 1266, 1769, 1866, 1925, 1954], "31": [24, 916, 1342, 1422, 1598, 1769, 1910], "33": [24, 726, 727, 728, 729, 730, 731, 760, 1193, 1355, 1356, 1357, 1359, 1360, 1425, 1427, 1501, 1503, 1504, 1506, 1866, 1910], "34": [24, 1941, 1947, 1954], "35": [24, 1252, 1346, 1347, 1391, 1392, 1466, 1709], "36": [24, 310, 1109, 1146, 1941, 1947], "input_split": 24, "output_split": 24, "5j": 24, "6j": 24, "7j": 24, "8j": 24, "9j": 24, "10j": 24, "11j": 24, "12j": 24, "13j": 24, "14j": 24, "15j": 24, "16j": 24, "output_tensor_list": 24, "input_tensor_list": 24, "monitored_barri": [24, 1911], "wait_all_rank": 24, "band": 24, "bor": 24, "bxor": 24, "premul_sum": 24, "suppos": [24, 55, 1190, 1694, 1876, 1925, 1943, 1944, 1945], "_make_nccl_premul_sum": 24, "all_reduce_multigpu": 24, "__members__": 24, "reduce_op": 24, "mention": [24, 45, 1864, 1868, 1869, 1883, 1889, 1892, 1900, 1910, 1925, 1929, 1936, 1947, 1948, 1954], "revisit": 24, "broadcast_multigpu": 24, "reduce_multigpu": 24, "all_gather_multigpu": 24, "reduce_scatter_multigpu": 24, "distributed_test": 24, "dev_idx": 24, "src_tensor": 24, "resid": [24, 47, 54, 185, 278, 326, 1265, 1607, 1892, 1914, 1921], "dst_tensor": 24, "cpp_extens": [24, 1865, 1894], "cpp_c10d_extens": 24, "torchrun": [24, 27, 33, 40, 44], "benefici": [24, 1900], "nproc_per_nod": [24, 33], "num_gpus_you_hav": 24, "your_training_script": [24, 40, 42], "arg3": 24, "192": [24, 605, 1910], "168": 24, "nnode": [24, 40, 42], "offer": [24, 47, 50, 1607, 1846, 1892, 1898, 1913, 1921, 1925, 1940, 1944, 1949], "local_process_rank": 24, "local_rank": [24, 32, 34, 39, 42, 44, 1466], "argpars": [24, 42, 1892], "parser": [24, 42, 1892], "argumentpars": [24, 42, 1892], "add_argu": [24, 42, 1892], "parse_arg": [24, 33, 42, 44, 1892, 1910], "output_devic": [24, 28, 42, 1364, 1466, 1591, 1607], "adjust": [24, 26, 28, 30, 47, 1865, 1891, 1917, 1956], "launcher": [24, 42], "filesystem": [24, 26, 968, 1864, 1913], "12042": 24, "imagenet": [24, 1887], "inconsist": [24, 47, 853, 1725, 1894], "suit": [24, 1866, 1868, 1869, 1910, 1917, 1921, 1951], "group_gloo": 24, "29501": 24, "monitoredbarri": 24, "transport": [24, 1921], "598": 24, "2401": 24, "db00": 24, "eef0": 24, "1100": 24, "3560": 24, "1c05": 24, "25d": 24, "8594": 24, "torch_cpp_log_level": 24, "twolinlayernet": 24, "ddp": [24, 25, 26, 28, 29, 47, 1466, 1607, 1865, 1892, 1893, 1921, 1944], "i0607": 24, "739390": 24, "515217": 24, "logger": [24, 1934, 1935], "173": 24, "broadcast_buff": [24, 1607], "bucket_cap_byt": 24, "26214400": 24, "find_unused_paramet": [24, 1607, 1893], "gradient_as_bucket_view": [24, 1607], "is_multi_device_modul": 24, "num_parameter_tensor": 24, "total_parameter_size_byt": 24, "440": 24, "bucket_s": 24, "cuda_visible_devic": [24, 1035, 1607, 1892], "module_nam": [24, 55, 805, 842, 1913], "nccl_ib_timeout": 24, "nccl_nthread": 24, "58": [24, 1948], "085681": 24, "544067": 24, "344": 24, "unused_parameter_s": 24, "40838608": 24, "5983335": 24, "4326421": 24, "comp": [24, 30], "4207652": 24, "085693": 24, "544066": 24, "42850427": 24, "3885553": 24, "2357981": 24, "2234674": 24, "enhanc": [24, 47, 1607, 1942], "unus": [24, 28, 55, 895, 1005, 1019, 1198, 1205, 1389, 1607, 1662, 1866, 1868, 1869, 1892, 1893, 1898, 1913], "went": [24, 55], "wasn": [24, 1265, 1866], "va": 24, "lue": 24, "indirectli": 24, "outstand": [24, 1921], "stuck": [24, 32, 43], "uninform": 24, "root": [24, 26, 34, 41, 42, 45, 47, 55, 781, 1131, 1231, 1232, 1677, 1740, 1800, 1877, 1889, 1913, 1921, 1922, 1925, 1944], "nontrivi": [24, 1892, 1942], "reveal": [24, 1893], "default_pg": 24, "opt": [24, 28, 1205, 1681, 1682, 1688, 1692, 1694, 1866, 1897], "longtensor": [24, 123, 124, 125, 304, 306, 308, 440, 459, 501, 503, 505, 862, 863, 1135, 1167, 1215, 1317, 1370, 1371, 1430, 1517, 1518, 1563, 1653, 1745, 1783, 1796, 1821, 1829, 1860, 1928, 1931], "set_debug_level": 24, "set_debug_level_from_env": 24, "get_debug_level": 24, "torch_show_cpp_stacktrac": 24, "disterror": 24, "distbackenderror": 24, "thrown": [24, 29, 54, 605, 866, 868, 1023, 1064, 1156, 1193, 1224, 1233, 1235, 1237, 1240, 1241, 1252, 1427, 1611, 1858, 1908, 1913, 1947], "distnetworkerror": 24, "ex": [24, 33, 1607, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1879, 1953], "diststoreerror": 24, "outlin": [25, 1914, 1922, 1944], "joinabl": [25, 28, 1607, 1865], "joinhook": [25, 1865], "throw_on_early_termin": [25, 1607], "shadow": [25, 28, 1607, 1934, 1935], "notify_join_context": 25, "zeroredundancyoptim": [25, 28, 1607, 1865], "01": [25, 28, 43, 476, 743, 768, 809, 810, 1067, 1109, 1413, 1541, 1542, 1598, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1685, 1691, 1711, 1765, 1767, 1768, 1773, 1774, 1867, 1887, 1899, 1910, 1912, 1949], "yet": [25, 32, 45, 47, 52, 54, 55, 69, 71, 72, 969, 1040, 1196, 1198, 1211, 1299, 1607, 1621, 1625, 1627, 1666, 1667, 1865, 1868, 1869, 1875, 1883, 1884, 1892, 1910, 1911, 1916, 1921, 1923, 1925, 1926, 1928, 1939, 1943, 1944, 1947, 1950, 1954], "vacuou": 25, "inherit": [25, 1632, 1866, 1868, 1884, 1894, 1900, 1902], "join_hook": [25, 28, 1607], "join_devic": 25, "join_process_group": 25, "repeatedli": [25, 1892, 1925], "main_hook": 25, "post_hook": 25, "is_last_join": 25, "dcp": 26, "reshard": [26, 29, 47], "storag": [26, 47, 210, 300, 328, 331, 332, 423, 446, 471, 487, 508, 512, 546, 547, 572, 573, 575, 576, 866, 883, 885, 990, 1057, 1163, 1167, 1179, 1193, 1201, 1265, 1287, 1326, 1327, 1364, 1427, 1443, 1727, 1741, 1748, 1779, 1784, 1788, 1802, 1825, 1831, 1847, 1864, 1865, 1867, 1878, 1881, 1889, 1892, 1902, 1905, 1913, 1921, 1925, 1928, 1929, 1931, 1939, 1943], "entrypoint": [26, 29, 32, 34, 39, 42, 45, 1881], "storage_read": 26, "coordinator_rank": 26, "no_dist": 26, "planner": 26, "spmd": 26, "style": [26, 29, 31, 55, 865, 1061, 1117, 1653, 1676, 1866, 1868, 1869, 1910, 1913, 1930, 1945], "fullfil": 26, "shardedtensor": [26, 47], "po": [26, 1910], "storageread": [26, 1865], "rank0": [26, 47], "my_model": [26, 1607, 1866, 1939, 1944, 1954], "mymodul": [26, 45, 47, 55, 1197, 1198, 1200, 1204, 1205, 1211, 1428, 1429, 1437, 1438, 1866, 1868, 1869, 1896, 1905, 1921], "adagrad": [26, 1370, 1876, 1912, 1921], "model_state_dict": [26, 1908], "fs_storage_read": 26, "filesystemread": [26, 1865], "save_state_dict": [26, 1865], "storage_writ": 26, "fsdp": [26, 29, 47, 1865, 1944], "shardingstrategi": [26, 47, 1865], "hybrid_shard": [26, 47], "shard_group": 26, "storagewrit": [26, 1865], "fs_storage_writ": 26, "filesystemwrit": [26, 1865], "act": [26, 30, 32, 39, 52, 846, 1344, 1428, 1429, 1438, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1846, 1892, 1900, 1904, 1912, 1947], "told": [26, 1868], "role": [26, 32, 33, 41, 42, 1947], "read_metadata": 26, "set_up_storage_read": 26, "prepare_local_plan": 26, "prepare_global_plan": 26, "read_data": 26, "central": [26, 56, 1146, 1897, 1899], "loadplan": [26, 1865], "storage_data": 26, "loadplann": [26, 1865], "load_byt": 26, "bytesio": [26, 45, 1201, 1204, 1265, 1741, 1910, 1916], "resolve_tensor": 26, "storagelay": 26, "schedul": [26, 32, 34, 40, 54, 668, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1875, 1893, 1899, 1915, 1944], "is_coordin": 26, "set_up_storage_writ": 26, "write_data": 26, "mark": [26, 41, 45, 54, 55, 56, 61, 64, 814, 885, 886, 943, 1308, 1309, 1607, 1661, 1866, 1868, 1889, 1893, 1894, 1900, 1905, 1913, 1915, 1922, 1931, 1936, 1944, 1945], "recover": 26, "writeresult": 26, "saveplan": [26, 1865], "saveplann": [26, 1865], "resolve_data": 26, "assumpt": [26, 38, 42, 45, 896, 943, 1350, 1381, 1889, 1893, 1897, 1921, 1922, 1925, 1942, 1944, 1950, 1954], "writeitem": [26, 1865], "tensor_data": 26, "set_up_plann": 26, "create_local_plan": 26, "create_global_plan": 26, "commit_tensor": 26, "defaultloadplann": [26, 1865], "rewrit": [26, 45, 52, 56, 58, 63, 64, 71, 72, 1877, 1889, 1897, 1907, 1908, 1910, 1941], "requit": 26, "intrincaci": 26, "renameplann": 26, "original_state_dict": 26, "foo_": [26, 1123], "v": [26, 38, 45, 51, 55, 475, 476, 532, 883, 890, 892, 893, 894, 924, 1122, 1132, 1134, 1190, 1207, 1229, 1233, 1257, 1261, 1266, 1433, 1475, 1476, 1517, 1562, 1646, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1699, 1732, 1792, 1796, 1811, 1812, 1857, 1866, 1867, 1868, 1869, 1879, 1889, 1897, 1906, 1913, 1925, 1930, 1938], "flatten_sharded_tensor": 26, "_flatten_sharded_tensor": 26, "flatten_state_dict": 26, "read_item": 26, "dest_index": 26, "fqn": [26, 29, 45, 1935], "metamodelmateri": 26, "defaultsaveplann": [26, 1865], "empty_lik": [26, 1846, 1867, 1871, 1882, 1884, 1911, 1925], "global_plan": 26, "finish_plan": 26, "central_plan": 26, "alia": [26, 30, 35, 80, 81, 100, 176, 177, 342, 395, 424, 425, 432, 511, 529, 670, 854, 855, 856, 857, 858, 859, 860, 877, 936, 949, 950, 1052, 1059, 1062, 1073, 1074, 1075, 1077, 1078, 1104, 1139, 1147, 1148, 1160, 1161, 1162, 1171, 1191, 1193, 1220, 1221, 1228, 1244, 1248, 1251, 1279, 1289, 1290, 1300, 1318, 1320, 1330, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1537, 1610, 1640, 1656, 1696, 1701, 1704, 1739, 1762, 1777, 1780, 1782, 1809, 1813, 1814, 1833, 1839, 1861, 1869, 1894, 1911, 1926, 1927, 1931, 1943, 1949], "readitem": [26, 1865], "planner_data": 26, "loaditemtyp": 26, "metadataindex": 26, "dest_offset": 26, "storage_index": 26, "storage_offset": [26, 127, 508, 605, 866, 1867, 1911, 1944, 1949], "tandem": 26, "fp16planner": 26, "write_item": 26, "writeitemtyp": 26, "byte_io": 26, "itertool": [26, 30, 926, 939], "islic": 26, "dataclass": [26, 45, 1947, 1953], "ddploadbalancingplann": 26, "all_plan": 26, "saveextradataplann": 26, "merged_data": 26, "new_plan": 26, "idempot": [26, 1921, 1923], "hi": [26, 1397, 1398, 1866, 1868, 1897], "peak": [26, 28, 47, 1015, 1017, 1023, 1030, 1031, 1032, 1607, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1685, 1691, 1914, 1951], "late": [26, 41], "tensorwritedata": 26, "nonetyp": [26, 45, 1867, 1869], "single_file_per_rank": 26, "sync_fil": 26, "thread_count": 26, "per_thread_copy_ahead": 26, "10000000": 26, "simplif": [26, 1942], "atom": [26, 41, 55, 1870], "distributedtensor": [26, 29], "dedup_replicated_tensor": 26, "lookup_object": 26, "transform_object": 26, "lookup_tensor": 26, "transform_tensor": 26, "fault": [27, 32, 40, 41, 1119], "toler": [27, 32, 40, 41, 55, 682, 896, 897, 1182, 1209, 1210, 1248, 1251, 1266, 1662, 1669, 1866, 1932], "quickstart": 27, "agent": [27, 33, 34, 35, 38, 40, 42, 43, 1921], "expir": 27, "metric": [27, 1015, 1017, 1023, 1693, 1879, 1900, 1915, 1930, 1944, 1951], "kubernet": 27, "distributedoptim": [28, 1607, 1865, 1921, 1922], "rref": [28, 1607, 1865, 1869, 1914, 1922], "optimizer_class": 28, "params_rref": 28, "get_gradi": [28, 1911, 1921, 1922], "multithread": [28, 1892], "dist_autograd": [28, 1607, 1921, 1922], "rpc": [28, 54, 1607, 1865, 1869, 1914, 1922, 1923], "context_id": [28, 1607, 1921, 1922], "rref1": [28, 1921, 1922], "worker1": [28, 54, 1607, 1921, 1922], "rref2": [28, 1921, 1922], "to_her": [28, 1607, 1911, 1921, 1922, 1923], "dist_optim": [28, 1607, 1922], "postlocalsgdoptim": [28, 1865], "afer": 28, "modelaverag": 28, "localsgd": 28, "model_averag": 28, "post_localsgd_hook": 28, "postlocalsgdst": 28, "subgroup": 28, "start_localsgd_it": 28, "warmup_step": 28, "local_optim": 28, "periodicmodelaverag": 28, "intra": [28, 47, 1891, 1893, 1914], "unnecessari": [28, 1647, 1869, 1889, 1892, 1894, 1905, 1913, 1929], "parameters_as_bucket_view": 28, "overlap_with_ddp": 28, "consumpt": [28, 51, 1652, 1925, 1930, 1936], "partit": [28, 29, 1335, 1832, 1910, 1911, 1914, 1922, 1923, 1944, 1953], "registr": [28, 29, 54, 71, 1009, 1600, 1605, 1606, 1607, 1616, 1619, 1873, 1908, 1913, 1940], "offset": [28, 32, 214, 215, 216, 217, 328, 508, 546, 734, 866, 1054, 1055, 1056, 1057, 1119, 1228, 1371, 1518, 1607, 1711, 1712, 1791, 1836, 1838, 1867, 1869, 1941, 1947, 1949], "intact": [28, 1921], "ddp_zero_hook": 28, "disjointli": 28, "trail": [28, 1642, 1644, 1884, 1887, 1890, 1894], "wari": 28, "static_graph": [28, 1607, 1893], "third": [28, 30, 1065, 1066, 1283, 1335, 1342, 1357, 1360, 1422, 1691, 1865, 1866, 1892, 1895, 1900, 1913, 1915], "add_param_group": [28, 1619, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "param_group": [28, 47, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1676, 1677, 1678, 1679, 1680, 1687, 1690], "frozen": [28, 47, 1197, 1203, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1870, 1906], "trainabl": [28, 1012, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1676, 1677, 1678, 1679, 1680, 1894], "consolidate_state_dict": 28, "consolid": [28, 47, 1914], "pertain": 28, "preced": [28, 32, 47, 668, 1602, 1691, 1831, 1870, 1891, 1912, 1916], "dtensor": [29, 47], "rowwis": 29, "colwis": 29, "pairwis": [29, 30, 1387, 1436, 1475], "parallelize_modul": [29, 1865], "device_mesh": [29, 47], "parallelize_plan": 29, "tp_mesh_dim": 29, "sub_modul": 29, "parallelstyl": 29, "devicemesh": 29, "mesh": [29, 1930], "prepar": [29, 47, 55, 785, 827, 829, 845, 847, 849, 850, 851, 1132, 1203, 1870, 1910, 1934, 1935], "pairwiseparallel": [29, 1865], "finer": [29, 1944], "granular": [29, 47, 69, 1207, 1888, 1952], "rowwiseparallel": [29, 1865], "_prepare_input": 29, "make_input_shard_1d_last_dim": [29, 1865], "_prepare_output": 29, "make_output_tensor": [29, 1865], "colwiseparallel": [29, 1865], "make_input_replicate_1d": [29, 1865], "make_sharded_output_tensor": 29, "megatron": 29, "lm": 29, "arxiv": [29, 30, 1397, 1445, 1446, 1473, 1651, 1699, 1753, 1812, 1889], "ab": [29, 30, 79, 80, 613, 614, 670, 928, 1066, 1225, 1246, 1247, 1249, 1250, 1263, 1266, 1397, 1446, 1473, 1476, 1478, 1566, 1651, 1654, 1693, 1699, 1703, 1753, 1865, 1867, 1869, 1882, 1883, 1884, 1892, 1900, 1911, 1925, 1931, 1939, 1940, 1941, 1944, 1947, 1949, 1954], "1909": [29, 866], "08053": 29, "multiheadattent": [29, 1470, 1472, 1474, 1916], "mlp": [29, 1598, 1908, 1916], "sequenceparallel": [29, 1865], "pdf": [29, 1350, 1445, 1774, 1889], "2205": 29, "05198": 29, "expectedli": 29, "make_input_reshard_repl": [29, 1865], "make_input_shard_1d": [29, 1865], "make_output_replicate_1d": [29, 1865], "make_output_reshard_tensor": [29, 1865], "make_output_shard_1d": [29, 1865], "head": [29, 723, 1335, 1433, 1470, 1472, 1474], "compos": [29, 30, 51, 55, 726, 727, 728, 729, 730, 731, 754, 755, 760, 761, 762, 770, 771, 931, 1124, 1126, 1127, 1128, 1134, 1193, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1427, 1475, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1714, 1715, 1857, 1865, 1866, 1869, 1882, 1894, 1895, 1900, 1908, 1910, 1913, 1930, 1947, 1949], "fullyshardeddataparallel": [29, 1865], "enable_2d_with_fsdp": [29, 1865], "pre_dp_module_transform": [29, 1865], "dp": 29, "preforward": 29, "parameteriz": 30, "tensorflow": [30, 1677, 1889, 1930], "backpropag": [30, 897, 1678, 1709, 1896, 1936], "surrog": 30, "likelihood": [30, 1335, 1381, 1434, 1441, 1523, 1561, 1569], "ratio": [30, 32, 605, 1375, 1376, 1521, 1522, 1867, 1925, 1951], "reinforc": [30, 1456, 1579], "polici": [30, 32, 34, 47, 1685, 1691], "reparameter": [30, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1638, 1639, 1651], "trick": [30, 892, 1344, 1528, 1889, 1897, 1899, 1944], "autoencod": 30, "whilst": [30, 1892], "densiti": [30, 290, 1154, 1155, 1774, 1867, 1926], "log_prob": [30, 1335, 1350, 1510, 1867], "theta": [30, 1491, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1867], "alpha": [30, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 140, 141, 301, 302, 476, 542, 549, 550, 551, 552, 673, 674, 677, 678, 679, 732, 758, 763, 908, 1009, 1010, 1150, 1164, 1339, 1349, 1369, 1415, 1454, 1492, 1500, 1515, 1516, 1526, 1544, 1577, 1663, 1677, 1770, 1771, 1784, 1789, 1803, 1808, 1809, 1867, 1889, 1894, 1910, 1912, 1944, 1949], "partial": [30, 32, 41, 45, 47, 50, 55, 829, 1012, 1056, 1133, 1146, 1240, 1241, 1242, 1284, 1423, 1424, 1425, 1553, 1554, 1555, 1607, 1626, 1785, 1791, 1869, 1870, 1883, 1889, 1894, 1897, 1908, 1910, 1923, 1932, 1950], "pi": [30, 162, 366, 686, 918, 1150, 1151, 1245, 1377, 1441, 1524, 1569, 1683, 1684, 1703, 1765, 1766, 1769, 1770, 1771, 1772, 1807, 1868, 1869, 1913, 1926], "reward": 30, "ascent": 30, "prob": [30, 1867], "policy_network": 30, "next_stat": 30, "rsampl": 30, "parameter": [30, 366, 442, 1200, 1885, 1925], "has_rsampl": 30, "batch_shap": 30, "event_shap": 30, "validate_arg": 30, "arg_constraint": 30, "cdf": 30, "cumul": [30, 1045, 1046, 1047, 1048, 1049, 1273, 1345, 1346, 1347, 1377, 1400, 1401, 1402, 1466, 1524], "mass": 30, "enumerate_support": 30, "discret": [30, 46, 469, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1101, 1103, 1528, 1774, 1930, 1933], "cardin": [30, 1295], "univari": 30, "singleton": [30, 243, 1399, 1845, 1890], "cartesian": [30, 926, 1295, 1703], "_instanc": 30, "icdf": 30, "perplex": 30, "sample_shap": 30, "sample_n": 30, "set_default_validate_arg": 30, "mimic": [30, 1691], "stddev": 30, "varianc": [30, 958, 1345, 1346, 1347, 1372, 1381, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1519, 1523, 1676, 1677, 1713, 1722, 1723, 1852, 1853, 1887, 1900], "exp_famili": 30, "famili": 30, "p_": [30, 930, 1285, 1679], "langl": 30, "rangl": 30, "denot": [30, 45, 55, 958, 1214, 1233, 1239, 1252, 1262, 1355, 1356, 1393, 1616, 1619, 1679, 1793, 1794, 1795, 1797, 1798, 1854, 1897, 1919, 1922, 1925], "carrier": 30, "analyt": [30, 896, 897, 1517, 1925], "bregman": 30, "courtesi": 30, "frank": 30, "nielsen": 30, "richard": 30, "nock": 30, "logit": [30, 380, 1344, 1363, 1499, 1509, 1528, 1867, 1911, 1926], "70": [30, 1252, 1709, 1884], "odd": [30, 1087, 1088, 1089, 1097, 1098, 1099, 1501, 1502, 1503], "lower_bound": 30, "upper_bound": 30, "has_enumerate_support": 30, "param_shap": 30, "concentration1": 30, "concentration0": 30, "concentr": 30, "1046": 30, "1st": [30, 1890], "2nd": [30, 605, 1435, 1461, 1564, 1890], "greaterthan": 30, "total_count": 30, "71": 30, "trial": 30, "integergreaterthan": 30, "ldot": [30, 1225, 1233, 1264, 1280, 1295, 1399, 1420, 1421, 1422, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "dimension": [30, 501, 503, 868, 874, 875, 876, 919, 926, 938, 1054, 1056, 1057, 1066, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1100, 1101, 1103, 1105, 1107, 1108, 1119, 1146, 1155, 1156, 1157, 1226, 1231, 1232, 1233, 1234, 1259, 1264, 1280, 1288, 1295, 1335, 1352, 1353, 1354, 1363, 1364, 1370, 1371, 1399, 1417, 1434, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1462, 1466, 1482, 1483, 1484, 1509, 1561, 1564, 1596, 1597, 1614, 1653, 1716, 1793, 1794, 1795, 1796, 1797, 1798, 1807, 1822, 1825, 1826, 1832, 1869, 1884, 1887, 1890, 1897, 1903, 1925, 1927, 1928, 1931, 1933, 1942], "unnorm": [30, 1363, 1499, 1509, 1528], "likewis": [30, 1831], "25": [30, 484, 574, 575, 576, 928, 1154, 1261, 1266, 1373, 1430, 1432, 1435, 1598, 1607, 1644, 1646, 1669, 1691, 1710, 1851, 1866, 1925, 1926], "independentconstraint": 30, "simplex": 30, "loc": [30, 1265], "lorentz": 30, "3214": 30, "width": [30, 767, 773, 846, 1153, 1154, 1155, 1341, 1342, 1356, 1357, 1359, 1360, 1396, 1421, 1422, 1434, 1461, 1479, 1537, 1595, 1883, 1925], "df": 30, "chi": 30, "continuous_bernoulli": 30, "lim": [30, 1190], "499": 30, "501": 30, "2538": [30, 1225], "pervas": 30, "loaiza": 30, "ganem": 30, "cunningham": 30, "jp": 30, "1907": 30, "06845": 30, "8954": 30, "greaterthaneq": 30, "df1": 30, "df2": 30, "fisher": 30, "snedecor": 30, "2453": 30, "degre": [30, 958, 1043, 1050, 1193, 1231, 1232, 1427, 1436, 1475, 1607, 1717, 1737, 1805, 1806, 1852, 1853, 1867, 1897, 1911, 1925], "freedom": [30, 958, 1805, 1806, 1852, 1853, 1897], "0124": 30, "half_cauchi": 30, "half_norm": 30, "base_distribut": 30, "reinterpreted_batch_ndim": 30, "reinterpret": [30, 487, 1943], "diagon": [30, 52, 213, 249, 583, 584, 585, 586, 919, 954, 958, 1053, 1054, 1055, 1057, 1066, 1079, 1127, 1128, 1138, 1223, 1235, 1237, 1240, 1252, 1256, 1566, 1576, 1791, 1830, 1834, 1835, 1836, 1837, 1838, 1867, 1894, 1911, 1929], "multivari": [30, 1926], "multivariate_norm": 30, "mvn": 30, "scale_tril": 30, "diag": [30, 53, 1126, 1127, 1128, 1229, 1230, 1257, 1699, 1791, 1811, 1812, 1867, 1911], "diagn": 30, "1729": [30, 1900], "lkj_choleski": 30, "lkj": 30, "matric": [30, 249, 674, 677, 908, 920, 921, 930, 931, 932, 933, 1054, 1138, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1266, 1274, 1283, 1285, 1298, 1378, 1436, 1491, 1525, 1614, 1619, 1697, 1699, 1709, 1758, 1784, 1788, 1789, 1811, 1812, 1834, 1835, 1837, 1867, 1882, 1897, 1903, 1925, 1931], "eta": [30, 1663, 1665, 1678], "proport": [30, 1395, 1396, 1433, 1474], "det": [30, 1231, 1232, 1253, 1274, 1867, 1911], "l": [30, 723, 748, 909, 918, 924, 931, 932, 933, 1066, 1150, 1151, 1193, 1213, 1223, 1224, 1229, 1230, 1231, 1232, 1236, 1240, 1241, 1283, 1285, 1340, 1343, 1344, 1345, 1355, 1363, 1366, 1367, 1374, 1379, 1387, 1388, 1390, 1393, 1394, 1397, 1409, 1418, 1420, 1427, 1429, 1433, 1434, 1442, 1458, 1475, 1476, 1478, 1576, 1625, 1634, 1642, 1644, 1669, 1745, 1807, 1867, 1869, 1889, 1930, 1941, 1954], "lkjcorr": 30, "onion": 30, "3x3": [30, 1049, 1832], "3516": 30, "9361": 30, "1899": [30, 1296], "4748": 30, "8593": 30, "vine": 30, "2009": [30, 1699, 1812], "lewandowski": 30, "dorota": 30, "kurowicka": 30, "harri": [30, 1774], "joe": 30, "journal": [30, 1716], "1016": 30, "jmva": 30, "04": [30, 1109, 1271, 1767, 1774], "008": 30, "corrcholeski": 30, "log_norm": [30, 1911], "lowrank_multivariate_norm": 30, "cov_factor": 30, "cov_diag": 30, "covari": [30, 921, 954, 958, 1345, 1346, 1347, 1466, 1699], "covariance_matrix": 30, "2102": 30, "5429": [30, 1834], "woodburi": 30, "lemma": 30, "formula": [30, 77, 756, 757, 877, 879, 909, 918, 1150, 1151, 1219, 1285, 1286, 1441, 1494, 1495, 1583, 1679, 1712, 1894, 1897, 1915, 1920, 1925, 1942], "capacit": 30, "precision_matrix": 30, "mixture_same_famili": 30, "mixture_distribut": 30, "component_distribut": 30, "rightmost": [30, 921, 1154, 1155, 1869], "gaussian": [30, 1377, 1381, 1456, 1523, 1524, 1579, 1773, 1926], "gmm": 30, "bivari": 30, "categori": [30, 34, 73, 1317, 1869, 1871, 1910, 1912, 1915, 1917, 1928, 1948, 1950], "innermost": [30, 55, 222, 1146, 1155, 1745], "1338": 30, "mathbf": [30, 1214, 1615, 1648, 1651, 1678], "sigma": [30, 162, 366, 748, 1344, 1378, 1379, 1380, 1397, 1398, 1456, 1457, 1525, 1579, 1615, 1648, 1768, 1805, 1806, 1852, 1853, 1867], "triangular": [30, 931, 932, 933, 1223, 1224, 1230, 1232, 1240, 1241, 1248, 1251, 1252, 1254, 1256, 1566, 1685, 1709, 1834, 1835, 1836, 1837, 1838], "decomposit": [30, 55, 70, 931, 932, 933, 1138, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1235, 1240, 1241, 1242, 1243, 1248, 1252, 1253, 1257, 1258, 1283, 1285, 1614, 1697, 1699, 1703, 1709, 1811, 1812, 1865, 1903, 1942, 1943, 1953], "positivedefinit": 30, "lowercholeski": 30, "negative_binomi": 30, "halfopeninterv": 30, "mu": [30, 366, 1677, 1679], "one_hot_categor": 30, "onehot": 30, "5623": 30, "nonneg": [30, 1476, 1699, 1812, 1926], "pmf": 30, "mathrm": [30, 910, 1231, 1232, 1233, 1234, 1245, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1436, 1441, 1466, 1614, 1666, 1667, 1668, 1678, 1713, 1889, 1926], "relaxed_bernoulli": 30, "temperatur": [30, 1528, 1865], "parametr": [30, 1122, 1616, 1623, 1648, 1649, 1651, 1885, 1894], "relax": [30, 967, 1001, 1209, 1210, 1619, 1916, 1944], "reparametriz": 30, "99": [30, 1205, 1677, 1866], "2951": [30, 1293], "3442": 30, "8918": 30, "9021": 30, "maddison": 30, "2017": [30, 1470, 1472, 1474, 1792, 1906], "reparametr": [30, 1528, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1651], "jang": 30, "relaxed_categor": 30, "1294": [30, 931], "2324": [30, 1193, 1427], "3859": 30, "2523": 30, "student": 30, "transformed_distribut": 30, "composit": [30, 52, 1126, 1241, 1614, 1866, 1869, 1895, 1900, 1910], "basedistribut": 30, "dx": [30, 1049, 1343, 1832, 1867, 1894, 1895, 1926], "dy": 30, "logist": [30, 1456, 1459, 1579, 1926], "sigmoidtransform": 30, "affinetransform": 30, "invert": [30, 55, 1184, 1225, 1234, 1235, 1241, 1247, 1254, 1256, 1259, 1260, 1274, 1423, 1424, 1425, 1834, 1867, 1903, 1921], "3418": 30, "upper": [30, 45, 170, 171, 172, 582, 783, 919, 924, 931, 932, 933, 935, 1080, 1081, 1153, 1154, 1223, 1224, 1230, 1232, 1240, 1241, 1252, 1256, 1445, 1566, 1574, 1575, 1685, 1691, 1709, 1724, 1745, 1834, 1837, 1838, 1867, 1887, 1911, 1926, 1932], "von_mis": 30, "circular": [30, 1355, 1356, 1357, 1403, 1404, 1405, 1564], "von": 30, "mise": 30, "unconstrain": [30, 1619], "angl": [30, 743, 872, 1050, 1274, 1413, 1703, 1717, 1761, 1865, 1867, 1911, 1925], "9777": 30, "radian": [30, 686, 872, 1050, 1717, 1867, 1911], "nichola": 30, "simul": [30, 476, 787, 789, 1916, 1919, 1942], "1979": 30, "152": [30, 605], "157": 30, "4784": [30, 1298], "symmetr": [30, 790, 808, 909, 918, 931, 932, 933, 1087, 1088, 1089, 1094, 1096, 1100, 1101, 1103, 1150, 1151, 1213, 1223, 1224, 1229, 1230, 1232, 1236, 1237, 1238, 1245, 1248, 1251, 1257, 1266, 1614, 1619, 1691, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1916, 1919], "x_ij": 30, "wu": [30, 1266], "chu": 30, "2018": [30, 1266, 1707], "sawyer": 30, "2007": 30, "anderson": 30, "w": [30, 53, 139, 748, 877, 879, 881, 887, 895, 909, 918, 958, 1124, 1135, 1150, 1151, 1190, 1233, 1333, 1334, 1341, 1342, 1344, 1346, 1347, 1351, 1356, 1357, 1363, 1367, 1368, 1370, 1371, 1372, 1379, 1391, 1392, 1399, 1410, 1411, 1421, 1422, 1432, 1433, 1434, 1439, 1440, 1461, 1477, 1478, 1480, 1481, 1491, 1499, 1517, 1518, 1526, 1561, 1567, 1568, 1615, 1648, 1651, 1867, 1882, 1883, 1887, 1889, 1894, 1897, 1912, 1913, 1930, 1952], "2003": 30, "ed": [30, 52, 1366, 1367, 1889, 1913, 1952, 1955], "odel": 30, "feiveson": 30, "1966": 30, "samplecovari": 30, "jasa": 30, "61": 30, "313": 30, "199": 30, "203": [30, 605], "ku": 30, "bloomfield": 30, "2010": [30, 1887], "ox": 30, "max_try_correct": 30, "bartlett": [30, 909], "singular": [30, 1225, 1239, 1240, 1246, 1248, 1250, 1251, 1257, 1258, 1266, 1274, 1283, 1615, 1619, 1699, 1811, 1812, 1903], "accordingli": [30, 55, 1203, 1397, 1619, 1884, 1921], "kl_diverg": 30, "kullback": [30, 1393, 1538], "leibler": [30, 1393, 1538], "notimplementederror": [30, 1913, 1947], "register_kl": 30, "type_p": 30, "type_q": 30, "kl_normal_norm": 30, "ambigu": [30, 55, 1178, 1358, 1359, 1360, 1374, 1423, 1424, 1425, 1479, 1869], "runtimewarn": 30, "basep": 30, "derivedq": 30, "kl_version1": 30, "derivedp": 30, "baseq": 30, "kl_version2": 30, "tie": 30, "abstransform": 30, "cache_s": [30, 1947], "event_dim": 30, "pointwis": [30, 940, 1127, 1128, 1271, 1272, 1393, 1882, 1890, 1943, 1946, 1948], "affin": [30, 47, 460, 461, 462, 463, 464, 737, 739, 740, 741, 790, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1491, 1892, 1900], "cattransform": 30, "tseq": 30, "functor": [30, 1009, 1010], "submatrix": 30, "x0": [30, 1946], "t0": [30, 45, 1146, 1663, 1868], "exptransform": 30, "identity_transform": 30, "composetransform": 30, "corrcholeskytransform": 30, "uncontrain": 30, "euclidean": [30, 928, 1562], "x_i": [30, 52, 935, 1045, 1046, 1047, 1048, 1262, 1269, 1417, 1436, 1460, 1462, 1475, 1546, 1582, 1706, 1790, 1805, 1806, 1832, 1852, 1853, 1854, 1926], "stickbreakingtransform": 30, "r_i": 30, "tanh": [30, 565, 748, 753, 783, 873, 1377, 1379, 1380, 1397, 1398, 1426, 1442, 1444, 1468, 1524, 1556, 1588, 1867, 1882, 1883, 1887, 1911, 1918, 1925, 1949], "unsign": [30, 1919, 1928, 1931, 1932, 1944], "z_i": 30, "s_i": 30, "y_i": [30, 935, 1045, 1046, 1047, 1048, 1262, 1269, 1475, 1832, 1854, 1897], "sqrt": [30, 55, 366, 537, 661, 662, 748, 954, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1159, 1213, 1295, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1377, 1379, 1380, 1382, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1412, 1414, 1442, 1444, 1466, 1524, 1576, 1619, 1664, 1665, 1666, 1667, 1670, 1676, 1677, 1713, 1740, 1773, 1805, 1806, 1867, 1882, 1887, 1888, 1889, 1911, 1925, 1926, 1932, 1949], "cumulativedistributiontransform": 30, "copula": 30, "base_dist": 30, "independenttransform": 30, "base_transform": 30, "log_abs_det_jacobian": 30, "lowercholeskytransform": 30, "positivedefinitetransform": 30, "powertransform": 30, "expon": [30, 257, 258, 269, 456, 457, 1109, 1116, 1217, 1247, 1335, 1415, 1562, 1706, 1716, 1753, 1867, 1928, 1931, 1949], "reshapetransform": 30, "in_shap": 30, "out_shap": 30, "softplustransform": 30, "tanhtransform": 30, "softmaxtransform": 30, "biject": 30, "hmc": 30, "stacktransform": 30, "stick": 30, "aris": [30, 55, 1889, 1942], "primarili": [30, 54, 803, 804, 805, 811, 1327, 1879, 1916], "memoiz": [30, 1943], "_call": 30, "_invers": 30, "codomain": [30, 1889], "iff": [30, 1433], "weaker": [30, 1892], "pseudoinvers": [30, 1234, 1251, 1259], "monoton": [30, 1426, 1556, 1745], "forward_shap": 30, "inverse_shap": 30, "corr_choleski": 30, "greater_than": 30, "greater_than_eq": 30, "integer_interv": 30, "less_than": 30, "lower_choleski": 30, "lower_triangular": 30, "nonnegative_integ": 30, "one_hot": [30, 1867, 1911], "positive_integ": 30, "positive_semidefinit": 30, "positive_definit": 30, "real_vector": 30, "unit_interv": 30, "is_discret": 30, "constrain": [30, 45, 1463, 1869, 1900], "_cat": 30, "dependent_properti": 30, "_dependentproperti": 30, "_greaterthan": 30, "_greaterthaneq": 30, "_independentconstraint": 30, "_integerinterv": 30, "_interv": 30, "half_open_interv": 30, "_halfopeninterv": 30, "_lessthan": 30, "_multinomi": 30, "_stack": [30, 1911], "constraintregistri": 30, "biject_to": 30, "transform_to": 30, "overparameter": 30, "rotat": [30, 1737, 1811], "hamiltonian": 30, "mont": 30, "carlo": 30, "invari": [30, 45, 1640, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1923, 1925, 1939, 1953], "potential_energi": 30, "cheap": [30, 1335], "svi": 30, "fewer": [30, 45, 52, 681, 683, 684, 687, 934, 1214, 1215, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1381, 1508, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1707, 1792, 1805, 1806, 1810, 1828, 1852, 1853, 1875, 1890, 1905, 1932, 1956], "my_constraint": 30, "my_transform": 30, "myconstraintclass": 30, "my_factori": 30, "mytransform": 30, "param1": [30, 1900], "param2": [30, 1900], "constraint_registri": 30, "my_registri": 30, "construct_transform": 30, "myconstraint": 30, "from_dlpack": [31, 868, 1865], "ext_tensor": [31, 1117], "extern": [31, 970, 1117, 1209, 1849, 1879, 1891, 1892, 1903, 1910, 1936], "immut": [31, 1117, 1869], "__dlpack__": [31, 1117], "capsul": [31, 868, 1117], "ndarrai": [31, 446, 867, 1117, 1118, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1910, 1930, 1932, 1944], "pycapsul": [31, 1117], "to_dlpack": [31, 1117, 1865], "t2": [31, 675, 676, 868, 1117, 1146, 1607, 1921, 1922, 1944, 1954], "dltensor": [31, 1117], "t3": [31, 1117, 1922], "legaci": [31, 42, 45, 1528, 1915, 1928], "idiomat": 31, "inde": [31, 1866, 1876, 1913, 1923, 1947], "plane": [32, 41, 726, 727, 728, 729, 730, 731, 754, 755, 756, 757, 760, 761, 762, 770, 771, 1054, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1399, 1415, 1420, 1421, 1422, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1651, 1714, 1715, 1737], "monitor": [32, 42, 43, 75, 969, 1305, 1693, 1865, 1892, 1898], "unhealthi": 32, "tear": 32, "react": 32, "decentr": 32, "diagram": [32, 41, 1193, 1427, 1916, 1923, 1941, 1944, 1954], "elasticag": 32, "quad": [32, 1343, 1344, 1363, 1394, 1418, 1434, 1476], "group_result": 32, "is_fail": [32, 33], "exit_cod": 32, "return_valu": [32, 33, 39, 1941], "get_worker_group": 32, "workergroup": [32, 42], "mutabl": [32, 1209, 1866, 1913, 1930], "implementor": 32, "defens": 32, "retri": [32, 34, 43, 1023, 1921, 1923], "max_restart": [32, 33, 42], "runresult": 32, "workerspec": [32, 33, 42, 43], "local_world_s": [32, 33, 42], "rdzv_handler": [32, 33, 41], "monitor_interv": [32, 33], "local_addr": [32, 41], "tee": [32, 39], "blueprint": 32, "spec": [32, 33, 43, 56, 781, 782, 807, 808, 809, 812, 813, 814, 1908, 1918], "homogen": [32, 42], "rendezvoushandl": [32, 33, 41, 42], "rdzv": [32, 40, 42], "chose": [32, 1888, 1942], "consol": [32, 35, 38, 39, 42, 1930], "get_entrypoint_nam": 32, "__qualname__": 32, "workerst": 32, "unknown": [32, 1609, 1610, 1923], "unrecover": 32, "interrupt": [32, 1881, 1952], "succeed": [32, 41, 1283, 1944], "termin": [32, 41, 43, 55, 1669, 1881, 1921, 1946], "uncaught": [32, 34], "unhandl": 32, "recov": [32, 883, 1087, 1253, 1285, 1607, 1640, 1807, 1888, 1892, 1896, 1897, 1917], "is_run": 32, "role_rank": [32, 42], "role_world_s": [32, 42], "pid": [32, 34, 42, 43, 1466, 1896, 1915], "local_elastic_ag": 32, "localelasticag": [32, 33, 43], "start_method": [32, 33, 39, 43, 1881], "exit_barrier_timeout": 32, "log_dir": [32, 39, 1879, 1930], "inter": [32, 34, 47, 1143, 1756, 1891, 1893, 1914, 1921], "safeti": [32, 55, 942, 943, 1866, 1869, 1883, 1945], "advis": [32, 532, 605, 853, 1902], "pipe": [32, 43, 1865, 1921], "torchelastic_enable_file_tim": 32, "torchelastic_timer_fil": 32, "shared_queu": 32, "get_context": [32, 43, 1902], "nproc_per_process": 32, "foobar": [32, 34, 38, 39], "other_param": [32, 43], "usr": [32, 39, 41, 1892], "bin": [32, 39, 41, 289, 290, 807, 911, 1153, 1154, 1155, 1867, 1869, 1911, 1930, 1951], "simpleelasticag": 32, "scaffold": 32, "_assign_worker_rank": 32, "group_world_s": 32, "_exit_barri": 32, "guard": [32, 45, 56, 61, 64, 668, 940, 1875, 1902, 1911, 1913, 1933, 1936, 1944, 1950, 1954, 1955], "_initialize_work": 32, "worker_group": 32, "fresh": [32, 1057, 1748, 1779, 1864], "start_work": 32, "_stop_work": 32, "optimist": 32, "deleg": 32, "_monitor_work": 32, "_rendezv": 32, "_restart_work": 32, "_shutdown": 32, "death_sig": 32, "sigterm": 32, "_start_work": 32, "gracefulli": [32, 42, 52, 1224, 1895, 1944], "meaning": [32, 34, 35, 1023, 1892, 1948], "canon": [32, 34, 1866, 1940, 1943], "meaningless": 32, "intention": [32, 1063, 1854, 1898, 1921], "ship": [33, 1123, 1891, 1921], "programmat": [33, 55, 1900], "my_launch": 33, "argv": [33, 44], "trainer_entrypoint_fn": 33, "fn_arg": 33, "run_result": 33, "tricki": [33, 48, 53, 1889, 1900, 1923, 1939], "myrendezvoushandl": 33, "elastic_ag": 33, "servic": [33, 1893, 1942], "metrichandl": [33, 38], "mymetrichandl": 33, "metric_data": [33, 38], "metricdata": 33, "sink": [33, 38, 1879], "eventhandl": 33, "cloudwatch": 33, "nulleventhandl": 33, "myeventhandl": 33, "invalid": [34, 39, 943, 1193, 1317, 1427, 1888, 1889, 1910, 1913, 1914, 1943, 1947], "infra": [34, 1953], "start_process": [34, 39, 1881], "torchelastic_error_fil": 34, "smallest": [34, 929, 1215, 1225, 1246, 1250, 1266, 1708, 1829, 1932, 1954, 1957], "timestamp": [34, 35, 38, 42, 1879, 1915, 1930, 1954], "error_handl": 34, "sugar": [34, 1868], "get_error_handl": 34, "childfailederror": 34, "get_first_failur": 34, "dump_error_fil": 34, "error_fil": [34, 39], "exitcod": [34, 42], "nanni": 34, "accur": [34, 969, 1146, 1269, 1305, 1369, 1716, 1832, 1892, 1922, 1936, 1943], "diagnost": [34, 68, 69, 70, 71, 72, 75, 668, 1866], "torchelastic_ag": 34, "trainer_0": 34, "trainer_1": 34, "json": [34, 39, 43, 1899, 1915, 1948, 1952], "trainer_n": 34, "errorhandl": 34, "record_except": 34, "processfailur": 34, "test_ev": 35, "eventsourc": 35, "get_logging_handl": 35, "millisecond": [35, 38, 969, 1305, 1879], "eventmetadatavalu": 35, "readm": [36, 37, 780, 1884], "telemetri": 38, "timeseri": 38, "metric_group": 38, "metric_nam": 38, "sensibl": 38, "my_modul": [38, 47, 55, 1866, 1913], "nullmetricshandl": 38, "consolemetricshandl": 38, "my_method": 38, "put_metr": 38, "calculate_lat": 38, "succinctli": 38, "baz": [38, 55, 842, 1913, 1932], "leaf_modul": 38, "classnam": [38, 1869], "threw": [38, 1956], "my_app": 38, "consolemetrichandl": 38, "toi": [38, 1954], "stdout": [38, 39, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1910], "stdoutmetrichandl": 38, "1574213883": 38, "4182858": 38, "my_metr": 38, "1574213940": 38, "5237644": 38, "nullmetrichandl": 38, "class_nam": [38, 55], "def_nam": 38, "leaf": [38, 139, 211, 324, 436, 476, 491, 492, 779, 826, 828, 867, 881, 1132, 1661, 1825, 1884, 1888, 1889, 1910, 1935, 1943], "metric_valu": 38, "metric_group_nam": 38, "popen": 39, "stderr": [39, 1864, 1878], "err": 39, "echo": 39, "hello": [39, 52, 1868, 1913], "pcontext": 39, "multiprocesscontext": 39, "subprocesscontext": 39, "keyset": 39, "bitmask": 39, "mask": [39, 388, 389, 390, 391, 392, 532, 723, 896, 897, 1287, 1339, 1350, 1372, 1433, 1470, 1471, 1472, 1473, 1474, 1519, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1680, 1865, 1867, 1882, 1883, 1925, 1944], "miss": [39, 677, 1122, 1193, 1288, 1298, 1361, 1390, 1391, 1392, 1427, 1543, 1649, 1894, 1906, 1910, 1925, 1942, 1945, 1947], "bar0": 39, "bar1": 39, "file1": 39, "file2": 39, "caution": [39, 1945], "short": [39, 55, 722, 751, 1066, 1190, 1350, 1397, 1398, 1510, 1660, 1758, 1807, 1868, 1882, 1889, 1890, 1900, 1921, 1927, 1928, 1931, 1941], "ing": 39, "cmd": [39, 42], "forkserv": [39, 1607, 1881, 1902], "tee_stdout": 39, "tee_stderr": 39, "processcontext": [39, 1881], "superset": [39, 42], "runprocsresult": 39, "num_nod": [40, 42], "trainers_per_nod": 40, "num_allowed_failur": 40, "job_id": [40, 41, 42], "endpoint": [40, 41, 42], "host_node_addr": [40, 42], "min_siz": [40, 42], "num_allowed_failures_or_membership_chang": 40, "node1": [40, 42], "29400": [40, 42], "sidecar": [40, 41], "agre": [41, 1252, 1923], "resum": [41, 1685, 1691, 1693, 1921, 1923, 1930, 1941], "retryabl": 41, "announc": 41, "previous": [41, 45, 47, 48, 51, 52, 53, 55, 210, 686, 780, 781, 1134, 1201, 1805, 1806, 1852, 1853, 1857, 1866, 1890, 1892, 1900, 1913, 1914, 1920, 1921, 1926, 1947, 1956], "lose": [41, 44, 47, 180, 197, 1883], "train_loop": [41, 850], "arriv": [41, 42, 1921, 1923], "dynamicrendezvoushandl": 41, "rendezvousbackend": 41, "c10drendezvousbackend": 41, "etcdrendezvousbackend": 41, "supersed": 41, "etcdrendezvoushandl": 41, "my_run_id": 41, "from_backend": 41, "run_id": [41, 42], "min_nod": 41, "max_nod": 41, "rendezvousparamet": 41, "admit": [41, 42, 1892], "get_as_bool": 41, "get_as_int": 41, "rendezvoushandlerregistri": 41, "create_handl": 41, "creator": [41, 1889, 1921, 1923], "get_run_id": 41, "is_clos": 41, "set_clos": 41, "next_rendezv": 41, "rendezvousclosederror": 41, "rendezvousconnectionerror": 41, "rendezvousstateerror": 41, "rendezvoustimeouterror": 41, "num_nodes_wait": 41, "shutdown": [41, 1921, 1922], "rendezvouserror": 41, "dynamic_rendezv": 41, "join_timeout": 41, "600": 41, "last_call_timeout": 41, "close_timeout": 41, "rendezvoustimeout": 41, "get_stat": [41, 77], "fenc": 41, "token": [41, 967, 1001, 1002, 1864, 1870, 1946], "set_stat": [41, 77], "last_cal": 41, "heartbeat": 41, "keep_al": 41, "c10d_rendezvous_backend": 41, "create_backend": 41, "store_typ": 41, "tcp": [41, 42, 1921], "read_timeout": 41, "60": [41, 43, 1381, 1695, 1822, 1827, 1879, 1921, 1941], "is_host": 41, "cname": 41, "fqdn": [41, 42], "etcd_rendezvous_backend": 41, "ssl_cert": 41, "ssl": 41, "certif": 41, "ssl_cert_kei": 41, "privat": [41, 47, 1892, 1894, 1913, 1939, 1944], "ca_cert": 41, "rool": 41, "key_prefix": 41, "ttl": 41, "hour": 41, "etcd_rendezv": 41, "rdzv_impl": 41, "etcdrendezv": 41, "etcd_address": 41, "min_work": 41, "max_work": 41, "noqa": 41, "w605": 41, "2379": [41, 1291], "etcd_prefix": 41, "etcdstor": 41, "etcd_stor": 41, "etcd_client": 41, "etcd_store_prefix": 41, "c10": [41, 1899, 1942], "piggyback": 41, "num": [41, 733, 734, 748, 1317, 1379, 1382, 1397, 1433, 1442, 1470, 1902], "lookuperror": 41, "override_timeout": 41, "etcdserv": 41, "cumbersom": [41, 1869], "highli": [41, 1335, 1607, 1864, 1901, 1908, 1910, 1925, 1932], "etcd_serv": 41, "data_dir": 41, "v3": [41, 42], "substitut": [41, 55, 70, 1206, 1889, 1928], "torchelastic_etcd_binary_path": 41, "get_client": 41, "etcd_binary_path": 41, "entry_point": [42, 1940], "migrat": [42, 48, 1295, 1651, 1919], "train_script": 42, "aforment": 42, "suffic": [42, 55], "compliant": [42, 44], "num_train": 42, "wors": [42, 1846, 1944], "port_k": 42, "etcd": 42, "v2": [42, 1262, 1698, 1864], "revis": 42, "physic": [42, 222, 1084, 1102, 1870, 1891, 1902, 1925, 1944], "localworkergroup": 42, "rdzv_id": 42, "rdzv_backend": [42, 44], "rdzv_endpoint": [42, 44], "max_nnod": 42, "torchelastic_restart_count": 42, "far": [42, 1203, 1526, 1942], "torchelastic_max_restart": 42, "python_exec": 42, "gang": 42, "departur": 42, "surviv": 42, "kill": [42, 43, 1881, 1896], "frequenc": [42, 911, 958, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1190, 1335, 1370, 1371, 1517, 1518, 1685, 1807, 1953], "ness": [42, 1943], "load_checkpoint": [42, 44], "checkpoint_path": [42, 44], "dataset": [42, 44, 56, 786, 1335, 1344, 1393, 1865, 1896, 1899, 1902, 1906, 1912, 1916, 1917, 1930], "train_step": 42, "should_checkpoint": 42, "save_checkpoint": [42, 44], "acquir": [43, 55, 1900, 1923, 1925], "deadlin": 43, "message_queu": 43, "localtimerserv": 43, "max_interv": 43, "trainer_func": 43, "localtimercli": 43, "expiri": 43, "timer_cli": 43, "countdown": 43, "timefram": [43, 1921], "elig": [43, 1923], "reap": 43, "timerserv": 43, "mp_queue": 43, "daemon": [43, 1881], "filetimerserv": 43, "file_path": 43, "log_ev": [43, 1879], "filetimercli": 43, "fifo": 43, "watchdog": 43, "filetimerrequest": 43, "sigkil": 43, "named_pip": 43, "mkfifo": 43, "timercli": 43, "timerrequest": 43, "scope_id": 43, "expiration_tim": 43, "acquisit": 43, "whatev": [43, 55, 436, 1607, 1749, 1834, 1869, 1895, 1943, 1944], "request_queu": 43, "entiti": [43, 55], "clear_tim": 43, "get_expired_tim": 43, "register_tim": 43, "timer_request": 43, "use_env": 44, "expositori": 44, "worst": [44, 1894], "total_num_epoch": 44, "visit": [44, 1910, 1947, 1948], "WILL": 45, "BE": 45, "aot": [45, 668, 942, 1875, 1936, 1944, 1945, 1954], "example_arg": 45, "exported_program": 45, "exportedprogram": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "arg1_1": [45, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67], "exportgraphsignatur": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "user_input": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "user_output": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "inputs_to_paramet": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "inputs_to_buff": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "buffers_to_mut": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "backward_signatur": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "assertion_dep_token": [45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "sound": [45, 55, 942, 943, 1455, 1873, 1930, 1945], "convent": [45, 47, 55, 324, 929, 1066, 1084, 1086, 1110, 1132, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1738, 1741, 1840, 1864, 1878, 1884, 1889, 1897, 1900, 1905], "opset": [45, 1908, 1910, 1911, 1940, 1949], "alias": [45, 47, 883, 1123, 1134, 1537, 1857, 1868, 1869, 1873, 1894, 1943], "stacktrac": [45, 56, 64], "leverag": [45, 940, 1907, 1908, 1921, 1936, 1938, 1946], "_dynamo": [45, 56, 66, 940, 1893, 1936, 1939, 1940, 1941, 1942, 1947, 1952, 1954], "massiv": [45, 1947], "pt2": [45, 1942, 1943], "artifact": [45, 668, 1875, 1899, 1913, 1952, 1954], "untrac": [45, 55], "disjoint": [45, 1866], "usabl": [45, 54, 1869, 1909, 1910, 1941], "traceabl": [45, 55, 612, 805, 1866, 1916, 1942], "symbolic_trac": [45, 55, 1916], "comprehens": [45, 70, 1774, 1869, 1870, 1883, 1892, 1898, 1916], "simpler": [45, 53, 1134, 1857, 1866, 1889, 1894, 1897, 1900], "straight": [45, 1343, 1528], "conv": [45, 55, 690, 691, 692, 693, 694, 695, 696, 697, 698, 780, 781, 784, 802, 842, 848, 1193, 1203, 1209, 1210, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1428, 1434, 1877, 1887, 1892, 1903, 1910, 1916, 1917, 1918, 1919, 1948, 1950], "in_channel": [45, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408], "out_channel": [45, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408], "kernel_s": [45, 700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 756, 757, 770, 771, 1193, 1203, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1478, 1493, 1494, 1495, 1504, 1505, 1506, 1520, 1521, 1522, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1714, 1715, 1867, 1930, 1949], "maxpool": [45, 784, 1375, 1376, 1521, 1522, 1910], "maxpool2d": [45, 771, 1424, 1428, 1551, 1554, 1910, 1918], "256": [45, 1350, 1706, 1892, 1910], "example_kwarg": 45, "arg2_1": [45, 56, 59, 61, 62, 63, 64], "arg3_1": [45, 56, 62], "max_pool2d_with_indic": [45, 1867, 1911, 1949], "getitem": [45, 56, 64, 67, 1953], "85": [45, 55, 1430, 1691, 1948, 1952], "l__self___conv": 45, "lift": [45, 53, 1134, 1857, 1883, 1911, 1943], "get_attr": [45, 55, 69], "branch1": 45, "64": [45, 50, 51, 53, 940, 1127, 1128, 1132, 1332, 1333, 1334, 1336, 1337, 1338, 1344, 1455, 1576, 1746, 1848, 1884, 1906, 1910, 1916, 1920, 1925, 1928, 1930, 1931, 1944, 1946], "branch2": 45, "128": [45, 605, 708, 716, 717, 744, 752, 782, 807, 808, 1348, 1362, 1389, 1414, 1436, 1475, 1476, 1508, 1576, 1883, 1884, 1916, 1918, 1919, 1921, 1925, 1928, 1931, 1952], "x2": [45, 56, 62, 928, 1241, 1419, 1475, 1476, 1508, 1565, 1867, 1944, 1949], "out1": [45, 1123, 1867, 1944], "out2": [45, 1123, 1867, 1944], "arg4_1": [45, 56, 62], "arg5_1": [45, 56, 62], "arg6_1": [45, 56, 62], "permute_1": 45, "addmm_1": 45, "relu_1": [45, 55], "l__self___buff": 45, "rangeconstraint": [45, 56, 63, 64, 65, 66], "min_val": [45, 56, 63, 64, 65, 66, 766, 1386, 1532, 1533, 1867, 1949], "max_val": [45, 56, 63, 64, 65, 66, 766, 1386, 1532, 1533, 1867, 1949], "9223372036854775806": [45, 56, 63, 64], "inputdim": 45, "input_nam": [45, 1910], "range_constraint": 45, "equality_constraint": 45, "dynamic_dim": 45, "saved_exported_program": 45, "example_input": [45, 805, 806, 849, 850, 1205, 1209, 1916, 1935, 1940, 1941, 1943, 1947], "rewritten": [45, 1897], "const": [45, 1381, 1899], "add_1": [45, 55, 56, 59, 61, 63, 64, 1123], "add_2": [45, 55, 56, 59, 61], "shot": 45, "nearli": [45, 139, 881, 895, 1699, 1902, 1921, 1954], "imposs": [45, 1134, 1857, 1888], "unsupport": [45, 52, 56, 58, 64, 70, 71, 73, 76, 1866, 1870, 1883, 1908, 1921, 1925, 1944, 1947, 1950], "exportdb": [45, 1933], "combinatori": 45, "explod": [45, 1458], "cond": [45, 52, 56, 59, 64, 1903], "slice": [45, 55, 56, 64, 66, 595, 683, 684, 1345, 1346, 1347, 1460, 1462, 1466, 1582, 1583, 1730, 1747, 1748, 1779, 1790, 1841, 1866, 1870, 1884, 1892, 1910, 1911, 1925, 1926, 1929, 1931, 1944, 1949], "constrain_as_s": [45, 56, 65, 66], "constrain_as_valu": [45, 56, 65, 66], "undergo": [45, 68], "refin": [45, 1200, 1883], "fake": [45, 55, 73, 700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 781, 787, 788, 798, 800, 826, 849, 850, 1080, 1081, 1908, 1913, 1916, 1919, 1936], "fatal": [45, 1881, 1902], "dim0_x": [45, 56, 58, 63, 64], "verbatim": 45, "register_dataclass": 45, "ordereddict": [45, 1193, 1427, 1428, 1437, 1455, 1598, 1630, 1867, 1900, 1905, 1932, 1947], "unbound": 45, "t1": [45, 675, 676, 868, 1146, 1607, 1868, 1921, 1922], "hint": [45, 56, 65, 66, 668, 967, 1001, 1194, 1433, 1470, 1471, 1472, 1473, 1474, 1866, 1868, 1869, 1892, 1894, 1908, 1921, 1942, 1944, 1947], "soundli": 45, "wihout": 45, "exc": 45, "placehold": [45, 55, 69, 822, 1389, 1892, 1940, 1941, 1953], "max_1": [45, 55], "call_funct": [45, 55, 69, 71, 72, 1940, 1941, 1944, 1947, 1953, 1954], "_local_scalar_dens": [45, 56, 65, 66, 1911, 1949], "ge": [45, 56, 65, 66, 274, 1148, 1287, 1379, 1384, 1385, 1397, 1530, 1531, 1867, 1882, 1911, 1949], "scalar_tensor": [45, 56, 65, 66, 1867, 1911, 1949], "_assert_async": [45, 56, 65, 66, 1911], "msg": [45, 56, 65, 66, 1026, 1028, 1915, 1932], "le": [45, 56, 65, 66, 349, 1221, 1384, 1385, 1530, 1531, 1867, 1882, 1911, 1932, 1949], "scalar_tensor_1": [45, 56, 65, 66], "_assert_async_1": [45, 56, 65, 66], "sym_constrain_range_for_s": [45, 56, 65, 66, 1867, 1911], "layout": [45, 55, 56, 61, 64, 65, 66, 139, 180, 197, 222, 331, 332, 423, 433, 434, 435, 436, 437, 446, 532, 569, 570, 571, 572, 573, 575, 576, 605, 677, 853, 881, 883, 909, 918, 982, 1067, 1068, 1069, 1079, 1084, 1102, 1120, 1121, 1150, 1151, 1213, 1264, 1280, 1288, 1298, 1327, 1543, 1658, 1659, 1680, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1831, 1836, 1838, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1884, 1892, 1911, 1913, 1925, 1930, 1931, 1932, 1944, 1949], "bypass": [45, 942, 1066, 1873, 1884, 1892, 1894, 1945], "aforement": [45, 1892, 1902], "1024": [45, 1891, 1892, 1944], "usererror": 45, "f0": 45, "unhint": 45, "sym_constrain_rang": [45, 56, 65, 66, 1867, 1911], "extra_fil": [45, 1201, 1204], "opset_vers": [45, 1908, 1910, 1911], "pathlib": 45, "txt": [45, 1201, 1204, 1913, 1954], "decod": [45, 47, 1265, 1470, 1471, 1472, 1607, 1913], "utf": [45, 1265, 1910, 1913], "expected_opset_vers": 45, "rb": [45, 1201, 1265], "seek": [45, 1201, 1265, 1913, 1916], "typ": 45, "inputdataclass": 45, "outputdataclass": 45, "polymorph": [45, 1868], "graph_signatur": 45, "call_spec": 45, "module_call_graph": 45, "dialect": [45, 1898], "named_buff": [45, 47, 1193, 1427, 1900, 1905], "named_paramet": [45, 47, 49, 51, 1122, 1193, 1197, 1427, 1900, 1905], "exportbackwardsignatur": 45, "gradients_to_paramet": 45, "gradients_to_user_input": 45, "loss_output": 45, "gurante": 45, "getattr": [45, 55, 1867, 1894, 1905, 1921, 1941, 1947], "parameters_buff": 45, "flattened_user_input": 45, "mutated_input": 45, "flattened_user_output": 45, "custommodul": [45, 826, 1916], "my_paramet": [45, 1868], "register_buff": [45, 1193, 1427, 1600, 1866, 1868, 1894, 1900], "my_buffer1": 45, "my_buffer2": 45, "add_tensor": 45, "mul_tensor": 45, "mul_tensor_1": 45, "add_tensor_1": 45, "add_tensor_2": 45, "l__self___my_paramet": 45, "l__self___my_buffer1": 45, "l__self___my_buffer2": 45, "ie": 45, "mangl": 45, "l__self___my_my_buffer1": 45, "argumentkind": 45, "argumentspec": 45, "modulecallsignatur": 45, "in_spec": 45, "_pytre": [45, 56], "treespec": 45, "out_spec": 45, "modulecallentri": 45, "sharding_strategi": 47, "cpu_offload": 47, "auto_wrap_polici": 47, "backward_prefetch": 47, "backwardprefetch": [47, 1865], "backward_pr": [47, 1193, 1427], "mixed_precis": [47, 1607], "ignored_modul": 47, "param_init_fn": 47, "sync_module_st": 47, "forward_prefetch": 47, "limit_all_gath": 47, "use_orig_param": 47, "ignored_st": 47, "inspir": [47, 1669, 1894, 1946], "deepspe": 47, "shorten": 47, "sharded_modul": 47, "0001": [47, 55, 1047, 1238, 1415, 1544, 1663, 1693, 1867, 1912], "stale": 47, "dev_id": 47, "no_sync": [47, 1607], "offload": 47, "ping": 47, "77724": 47, "isol": [47, 55, 1598, 1881, 1914, 1954], "summon_full_param": 47, "illeg": [47, 1892, 1942], "shard_grad_op": 47, "unshard": 47, "full_shard": 47, "with_grad": 47, "reacquir": 47, "gap": [47, 853, 1725, 1865, 1916, 1952], "delai": [47, 1607, 1923, 1944], "nccl_cross_nic": 47, "cpuoffload": [47, 1865], "modulewrappolici": 47, "custompolici": 47, "proceed": [47, 969, 1305, 1381, 1922, 1923], "nonwrapped_numel": 47, "travers": [47, 824, 1607, 1893, 1894, 1922, 1934, 1935, 1947], "subtre": 47, "size_based_auto_wrap_polici": 47, "exce": [47, 1271, 1892, 1902], "100m": 47, "numel": [47, 423, 432, 938, 958, 1097, 1178, 1867, 1882, 1889, 1911, 1925], "custom_auto_wrap_polici": 47, "min_num_param": 47, "1e8": 47, "my_auto_wrap_polici": 47, "functool": [47, 50, 56, 829, 1785, 1894, 1932], "1e5": 47, "mixedprecis": [47, 1865], "meta": [47, 51, 55, 325, 1873, 1908, 1921, 1930, 1932, 1942, 1943, 1945, 1946, 1953], "is_meta": [47, 1911, 1944], "reset_paramet": 47, "torchdistx": 47, "deferred_init": 47, "materialize_modul": 47, "my_init_fn": 47, "fsdp_model": 47, "fullstatedictconfig": [47, 1865], "flatparamet": 47, "unifi": [47, 1865, 1883], "norm_typ": [47, 733, 734, 1370, 1371, 1395, 1396, 1517, 1518, 1547, 1548, 1611, 1867], "infin": [47, 956, 1183, 1185, 1187, 1188, 1321, 1343, 1420, 1421, 1422, 1550, 1551, 1552, 1611, 1668, 1778, 1790, 1925, 1926], "no_shard": 47, "promot": [47, 70, 673, 913, 916, 925, 1009, 1061, 1109, 1111, 1112, 1113, 1114, 1316, 1366, 1367, 1368, 1372, 1508, 1708, 1728, 1729, 1735, 1750, 1808, 1869, 1908, 1928, 1932, 1943, 1944, 1949], "fp32": [47, 769, 782, 805, 1051, 1607, 1892, 1903, 1916, 1917, 1919, 1946], "flatten_sharded_optim_state_dict": 47, "sharded_optim_state_dict": 47, "shard_full_optim_state_dict": 47, "unflatten": [47, 1867, 1882, 1883, 1911, 1929], "fsdp_modul": 47, "root_onli": 47, "full_optim_state_dict": 47, "optim_input": 47, "rank0_onli": 47, "get_state_dict_typ": 47, "state_dict_typ": 47, "statedictset": [47, 1865], "optim_state_dict": 47, "assertionerror": [47, 55, 73, 722, 1661, 1932, 1954], "differen": 47, "intercept": [47, 55, 1894, 1945], "occurr": [47, 391, 1191, 1294, 1640, 1843, 1844, 1942], "oom": [47, 1896, 1956], "statedicttyp": 47, "fulloptimstatedictconfig": [47, 1865], "set_state_dict_typ": 47, "full_state_dict": 47, "save_a_checkpoint": 47, "load_a_checkpoint": 47, "optim_state_dict_to_load": 47, "is_named_optim": 47, "load_directli": 47, "original_osd": 47, "namedoptim": 47, "keyedoptim": 47, "torchrec": [47, 1865], "gossipgrad": [47, 1607], "latter": [47, 675, 779, 1193, 1397, 1427, 1434, 1895, 1900, 1902, 1904], "rekey_optim_state_dict": 47, "optim_state_key_typ": 47, "loadabl": [47, 1864], "wrapped_model": 47, "wrapped_optim": 47, "full_osd": 47, "nonwrapped_model": 47, "nonwrapped_optim": 47, "rekeyed_osd": 47, "optimstatekeytyp": 47, "param_id": 47, "osd": 47, "param_nam": 47, "sharded_osd": 47, "scatter_full_optim_state_dict": 47, "new_model": 47, "new_optim": 47, "remap": [47, 77, 1197, 1201, 1265, 1286, 1864, 1878, 1920], "state_dict_config": 47, "optim_state_dict_config": 47, "descend": [47, 55, 125, 530, 864, 1193, 1257, 1258, 1427, 1783, 1811, 1867, 1949], "transpar": [47, 1893, 1914, 1921, 1923], "sharded_state_dict": 47, "shardedstatedictconfig": [47, 1865], "offload_to_cpu": 47, "optimstatedictconfig": [47, 1865], "param_state_dict": 47, "statedictconfig": [47, 1865], "writeback": 47, "summon": 47, "portion": [47, 1115, 1364, 1458, 1566, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1917, 1945, 1954], "discard": [47, 1190, 1251, 1617, 1864, 1868, 1879], "redundantli": [47, 1888], "materi": [47, 888, 951, 1609, 1610, 1680, 1733, 1734, 1894], "throughput": [47, 1866, 1891], "backward_post": 47, "altogeth": [47, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680], "contend": 47, "volum": [47, 1155], "_hybrid_shard_zero2": 47, "freed": [47, 139, 881, 895, 975, 1023, 1881, 1892, 1898, 1921, 1939, 1956], "param_dtyp": 47, "reduce_dtyp": 47, "buffer_dtyp": 47, "keep_low_precision_grad": 47, "cast_forward_input": 47, "cast_root_forward_input": 47, "_module_classes_to_ignor": 47, "batchnorm": [47, 688, 689, 1131, 1193, 1203, 1427, 1466, 1607, 1877, 1889, 1900, 1912, 1914, 1916, 1918, 1919], "_batchnorm": 47, "kept": [47, 51, 55, 685, 767, 773, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1537, 1595, 1869, 1881, 1919, 1925], "permit": [47, 1925], "thereaft": 47, "local_state_dict": 47, "upcast": 47, "recast": 47, "offload_param": 47, "cfg": 47, "finetun": [47, 1193, 1427], "model_fn": 47, "my_checkpoint": 47, "_use_dtensor": 47, "localstatedictconfig": [47, 1865], "shardedoptimstatedictconfig": [47, 1865], "localoptimstatedictconfig": [47, 1865], "jax": [48, 51, 52, 53, 1889, 1895, 1944], "love": 48, "hear": 48, "vmap": [48, 50, 51, 55, 889, 891, 895, 896, 897, 1124, 1127, 1128, 1130, 1132], "arbitrarili": [48, 53, 501, 1196, 1491, 1869, 1889, 1894, 1895], "stock": [48, 53], "ensembl": [48, 51, 53, 1132], "maml": [48, 53], "vjp": [48, 51, 52, 877, 878, 1128, 1134, 1857, 1894, 1895], "whirlwind": 48, "tour": 48, "ux": [48, 53, 1916, 1947], "jacrev": [49, 51, 52, 891, 1126, 1127, 1895], "functional_cal": [49, 51, 1132, 1944], "running_mean": [50, 1131, 1193, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1496, 1536, 1867, 1900, 1905, 1949], "running_var": [50, 1131, 1193, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1496, 1536, 1867, 1905, 1949], "groupnorm": [50, 1527], "anywher": [50, 1888], "batchnorm2d": [50, 701, 704, 706, 711, 802, 1203, 1364, 1401, 1496, 1877, 1889, 1900, 1916, 1918], "track_running_stat": [50, 739, 740, 741, 1131, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1905], "resnet": [50, 1864, 1866, 1868, 1900, 1913, 1930, 1934], "regnet": 50, "norm_lay": 50, "resnet18": [50, 55, 1864, 1866, 1868, 1878, 1913, 1952], "num_group": [50, 737, 1382, 1527, 1867], "attach": [50, 54, 55, 128, 700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 781, 826, 828, 852, 1598, 1864, 1866, 1868, 1882, 1889, 1894, 1916, 1922, 1934, 1942], "fragil": 50, "replace_all_batch_norm_modules_": 50, "upstream": [51, 1906], "reflect": [51, 446, 508, 544, 1118, 1119, 1122, 1190, 1355, 1356, 1357, 1403, 1404, 1405, 1448, 1449, 1450, 1526, 1564, 1649, 1694, 1807, 1866, 1867, 1896, 1929, 1939], "coupl": [51, 70, 1866, 1899, 1907, 1922, 1939, 1953], "jvp": [51, 52, 878, 882, 883, 884, 888, 1130, 1894], "jacfwd": [51, 52, 891, 1126, 1895], "carefulli": [51, 54, 1895, 1913, 1943, 1945], "make_functional_with_buff": 51, "hurri": 51, "gist": [51, 781, 1897, 1947, 1948], "emul": [51, 787, 1870, 1894], "fmodel": 51, "compute_loss": [51, 53, 1122, 1124], "predict": [51, 1335, 1344, 1381, 1509, 1912, 1930], "And": [51, 785, 812, 1045, 1046, 1122, 1193, 1215, 1291, 1296, 1350, 1427, 1847, 1849, 1889, 1894, 1895, 1906, 1910, 1916, 1935, 1940, 1945, 1946, 1947], "argnum": [51, 1124, 1125, 1126, 1127, 1128], "stack_module_st": 51, "num_model": [51, 1132], "in_featur": [51, 708, 716, 717, 720, 721, 744, 752, 1132, 1193, 1335, 1412, 1414, 1427, 1598, 1614, 1615, 1647, 1648, 1651, 1900], "out_featur": [51, 708, 716, 717, 720, 721, 744, 752, 1132, 1193, 1348, 1412, 1414, 1427, 1598, 1614, 1615, 1647, 1648, 1651, 1900], "base_model": 51, "deepcopi": [51, 1916, 1935], "clearer": [51, 1250, 1680, 1894, 1908], "call_single_model": 51, "aotautograd": [51, 668, 1875, 1893, 1943, 1944, 1945, 1954], "stori": [51, 1897], "grad_x": [52, 1895, 1944], "has_aux": [52, 1124, 1125, 1127, 1128, 1129, 1133], "mental": [52, 1123], "absenc": 52, "unbind": [52, 1134, 1857, 1865, 1867, 1882, 1911, 1929], "presenc": [52, 55, 1203, 1322, 1902, 1913, 1925, 1950], "pop": [52, 1027, 1428, 1437, 1911, 1914, 1915, 1947], "lst": 52, "in_dim": [52, 53, 880, 1124, 1134, 1857, 1895], "batchedtensor": 52, "batched_tensor_input": 52, "new_": [52, 1892, 1931], "new_zero": [52, 1867, 1911], "new_empti": [52, 1867, 1911], "diag_emb": [52, 1056, 1229, 1230, 1257, 1811, 1867, 1911], "vec": [52, 96, 97, 412, 678, 1319, 1650, 1867, 1925, 1949], "copy_": [52, 210, 1123, 1479, 1866, 1867, 1882, 1892, 1927], "arithmet": [52, 913, 916, 930, 1249, 1735, 1870, 1879, 1882, 1883, 1903, 1916, 1928], "extra_arg": 52, "theoret": 52, "custom_dot": 52, "lax": 52, "while_loop": 52, "is_nonzero": [52, 1867, 1911, 1925, 1944], "rag": 52, "unclear": [52, 605], "add_nois": 52, "prng": 52, "cos_x": [53, 1124], "neg_sin_x": [53, 1124], "hide": [53, 1134, 1857, 1895], "feature_s": [53, 1124, 1134, 1857], "feature_vec": [53, 1124, 1134, 1857], "mseloss": [53, 1124, 1388, 1458, 1557, 1892, 1893], "grad_weight_per_exampl": [53, 1124], "cotang": [53, 1133], "vjp_fn": [53, 1133], "out_tang": 53, "hessian0": 53, "hessian1": 53, "hess": [53, 1126], "encapsul": [54, 55, 1908, 1921, 1939], "rpc_async": [54, 1869, 1911, 1921, 1923], "add_done_callback": 54, "fut": [54, 1196, 1607, 1891, 1921], "set_result": [54, 1607, 1921], "haven": [54, 1900], "set_except": 54, "baseexcept": 54, "valueerror": [54, 56, 73, 1191, 1619, 1620, 1640, 1643, 1894, 1908, 1914, 1932, 1953], "slow_set_futur": 54, "sleep": 54, "cb1": 54, "cb2": 54, "dedic": [54, 1892], "pool": [54, 754, 755, 756, 757, 770, 771, 967, 1001, 1002, 1012, 1023, 1302, 1303, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1521, 1522, 1547, 1548, 1550, 1551, 1552, 1714, 1715, 1865, 1891, 1892, 1894, 1900, 1902, 1918, 1921, 1939], "didn": [54, 1894, 1906, 1912], "cb_fut": 54, "chain_cb_fut": 54, "cb": [54, 1921], "held": [54, 967, 991, 1019, 1304, 1888, 1946], "collect_al": [54, 1865], "fut0": 54, "fut1": [54, 1921], "fut_list": 54, "wait_al": [54, 1865], "toolkit": 55, "clamp": [55, 175, 176, 787, 790, 936, 1200, 1343, 1381, 1526, 1537, 1595, 1867, 1877, 1882, 1910, 1911, 1916, 1918, 1919, 1926, 1932, 1949], "num_us": 55, "call_modul": [55, 69, 1953], "call_method": [55, 69, 1940, 1941, 1947], "feed": [55, 1866, 1896, 1900, 1934, 1943], "theses": 55, "callsit": 55, "constitut": 55, "tracer_class": 55, "gm": [55, 1940, 1941, 1943, 1947, 1953, 1954], "treatment": 55, "topk": [55, 1867, 1882, 1911, 1949], "print_tabular": [55, 1940, 1941, 1947], "opcod": [55, 1913, 1940, 1941, 1947], "linear_weight": 55, "linear_1": 55, "topk_1": 55, "pose": [55, 1922], "explor": [55, 68, 1864, 1889, 1900, 1913, 1956], "edit": [55, 1913, 1929], "lint": 55, "inserting_aft": [55, 1953], "new_nod": 55, "replace_all_uses_with": [55, 1953], "tediou": 55, "unwieldi": 55, "fusion": [55, 780, 802, 848, 849, 940, 1195, 1202, 1207, 1208, 1209, 1210, 1877, 1900, 1916, 1944, 1946, 1953, 1954], "machineri": [55, 1894, 1944], "imagin": [55, 1921, 1945], "requisit": 55, "relu_decomposit": 55, "decomposition_rul": 55, "constitu": [55, 1884], "new_graph": 55, "graphappendingtrac": 55, "proxy_arg": 55, "output_proxi": 55, "node_copi": 55, "ari": [55, 1910], "unari": [55, 1127, 1128, 1470, 1472, 1474, 1870, 1882], "organiz": 55, "shapeprop": 55, "mod": [55, 709, 710, 720, 726, 727, 728, 733, 734, 744, 752, 798, 799, 800, 801, 824, 825, 852, 1122, 1196, 1197, 1203, 1210, 1649, 1850, 1868, 1869, 1913, 1934, 1940, 1954], "named_modul": [55, 1193, 1427, 1900], "args_it": 55, "load_arg": 55, "map_arg": 55, "fetch_attr": 55, "target_atom": 55, "attr_itr": 55, "hasattr": [55, 1847, 1867, 1894, 1916, 1941, 1947], "referenc": [55, 970, 1193, 1427, 1834, 1868, 1889, 1910, 1921, 1941, 1947], "nonexist": [55, 1868, 1869], "elif": [55, 1200, 1393, 1868, 1869, 1898, 1908, 1947, 1953], "self_obj": 55, "encompass": 55, "prove": [55, 1881], "disprov": 55, "led": [55, 1956], "auxiliari": [55, 1124, 1125, 1127, 1128, 1129, 1133, 1864, 1899], "nondeterminist": [55, 302, 304, 310, 487, 503, 505, 911, 1067, 1068, 1069, 1215, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1423, 1424, 1425, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1752, 1846, 1940], "unord": [55, 1428, 1437], "nondetermin": [55, 897, 1904], "dedupl": [55, 1910], "straightforward": [55, 1876, 1884, 1900, 1912, 1925, 1940, 1947], "torchvis": [55, 1864, 1865, 1866, 1868, 1910, 1913, 1916, 1930, 1934, 1952], "transformed_resnet18": 55, "input_imag": 55, "224": [55, 849, 850, 1866, 1868, 1910, 1952], "margin": [55, 1361, 1387, 1419, 1430, 1432, 1475, 1476, 1507, 1534, 1549, 1558, 1592, 1593, 1867, 1930], "commut": 55, "toolbox": 55, "tradit": [55, 1474, 1907, 1908], "luckili": 55, "my_pass": 55, "my_module_transform": 55, "input_valu": 55, "prompt": [55, 1864, 1906], "set_trac": [55, 1198, 1205, 1211, 1866], "examin": [55, 1900, 1910, 1915, 1956], "undergon": 55, "subclassm": 55, "pre_trac": 55, "post_trac": 55, "sake": 55, "tabular": [55, 668, 1875], "transform_graph": 55, "session": 55, "luck": 55, "input_nod": 55, "stepwis": 55, "breakpoint": [55, 1869, 1953], "excel": [55, 1945], "onlin": [55, 1665], "realpython": 55, "pycharm": 55, "vscode": 55, "graphic": [55, 1880, 1906, 1952], "parlanc": 55, "func_to_trac": 55, "dyn": 55, "155": 55, "__bool__": [55, 1867, 1869], "to_bool": 55, "traceerror": [55, 1916], "hyper": [55, 1458, 1868, 1930], "do_activ": 55, "512": [55, 1470, 1471, 1472, 1473, 1474, 1892, 1938], "without_activ": 55, "with_activ": 55, "traced_without_activ": 55, "traced_with_activ": 55, "concrete_arg": 55, "truli": [55, 1907, 1910], "__torch_function__": [55, 1955], "161": 55, "len_1": 55, "sqrt_1": 55, "truediv": [55, 1940, 1941], "mycustomtrac": 55, "traced_graph": 55, "runnabl": [55, 1888, 1910, 1930, 1954], "myspecialsubmodul": 55, "submod": 55, "neg_1": 55, "is_leaf_modul": [55, 1935], "sparse_coo_tensor": [55, 532, 569, 1792, 1867, 1871, 1911, 1925], "ones_lik": [55, 1127, 1128, 1133, 1867, 1884, 1892, 1895, 1900, 1911], "zeros_lik": [55, 886, 888, 1867, 1871, 1884, 1892, 1911, 1925], "viabl": [55, 1892], "torch_randn": 55, "gotcha": 55, "bake": [55, 56, 64, 1197, 1203, 1666, 1667, 1912], "dropoutrepro": 55, "assert_clos": [55, 1083, 1085, 1086, 1091, 1092, 1097, 1098, 1099, 1101, 1103, 1865, 1866, 1932], "greatest": [55, 1136, 1321, 1910, 1932], "6207983493804932": 55, "dropoutrepro2": 55, "overspeci": [55, 940, 1942], "ph": 55, "shouldn": [55, 967, 1913, 1925, 1929], "fn_or_nam": 55, "callfunct": 55, "my_custom_funct": 55, "fn_to_be_trac": 55, "reassign": [55, 1892], "regener": 55, "unset": [55, 1903], "add_submodul": 55, "subpath": 55, "get_submodul": [55, 1193, 1427], "delete_all_unused_submodul": 55, "delete_submodul": 55, "print_read": [55, 1941], "print_output": 55, "date": [55, 1913], "pythoncod": 55, "fxmodul": 55, "pathlik": [55, 1265, 1741, 1913], "owning_modul": 55, "tracer_cl": 55, "tracer_extra": 55, "the_funct": 55, "type_expr": 55, "create_nod": 55, "method_nam": 55, "0th": [55, 1134, 1857], "inserting_befor": 55, "influenc": [55, 1908, 1925], "eliminate_dead_cod": 55, "dead": [55, 1953], "topolog": [55, 1910], "attr_1": 55, "is_impur": 55, "bad": [55, 56, 1881, 1910, 1913, 1916, 1943, 1952], "erase_nod": 55, "to_eras": 55, "eras": [55, 56, 61, 62, 1942], "qualified_nam": 55, "graph_copi": 55, "val_map": 55, "return_output_nod": 55, "memory_format": [55, 144, 159, 161, 164, 167, 168, 169, 178, 184, 195, 198, 222, 229, 256, 286, 314, 320, 382, 487, 488, 513, 568, 937, 1067, 1068, 1121, 1193, 1427, 1607, 1659, 1719, 1721, 1723, 1863, 1865, 1867, 1932, 1949], "opoverload": [55, 1873], "companion": 55, "__exit__": [55, 1869, 1870, 1913], "arg_transform": 55, "value_remap": 55, "_node_list": 55, "doubli": 55, "on_generate_cod": 55, "make_transform": 55, "transformcodefunc": 55, "insert_pdb": 55, "bodi": [55, 56, 64, 67, 1205, 1866, 1868, 1869, 1870, 1908, 1941, 1954], "current_tran": 55, "stuff": [55, 1943], "default_valu": 55, "_not_": 55, "tabul": 55, "process_input": 55, "process_output": 55, "python_cod": 55, "root_modul": [55, 781, 1918], "set_codegen": 55, "codegen": [55, 1894, 1944, 1948, 1954], "return_typ": [55, 685, 1045, 1046, 1155, 1215, 1253, 1291, 1294, 1296, 1299, 1323, 1783, 1829, 1834], "printout": [55, 1011, 1024, 1941], "all_input_nod": 55, "format_nod": 55, "placeholder_nam": 55, "maybe_return_typenam": 55, "autogener": [55, 1895], "impur": 55, "normalized_argu": 55, "arg_typ": 55, "kwarg_typ": 55, "normalize_to_only_use_kwarg": 55, "vararg": 55, "argskwargspair": 55, "bx": 55, "ax": [55, 933, 1225, 1239, 1243, 1254, 1255, 1256, 1284, 1295, 1435, 1445, 1834, 1910, 1944], "prev": [55, 1678], "replace_with": 55, "delete_user_cb": 55, "propagate_meta": 55, "replace_input_with": 55, "old_input": 55, "new_input": 55, "create_proxi": 55, "record_stack_trac": 55, "dynamo": [55, 68, 668, 1875, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1951, 1952, 1954], "outputgraph": [55, 1947], "update_arg": 55, "update_kwarg": 55, "autowrap_modul": 55, "autowrap_funct": 55, "create_arg": 55, "create_args_for_root": 55, "root_fn": 55, "is_modul": 55, "introspect": [55, 942, 1944], "disallow": [55, 1913, 1921, 1928, 1944, 1945], "proxy_factory_fn": 55, "attr": [55, 56, 58, 139, 881, 1295, 1738], "attr_val": 55, "parameter_proxy_cach": 55, "module_qualified_nam": [55, 1935], "path_of_modul": 55, "some_hyperparamet": 55, "indexed_item": 55, "proxied_valu": 55, "garbage_collect_valu": 55, "run_nod": 55, "swap": [55, 605, 776, 777, 778, 781, 785, 852, 1199, 1283, 1475, 1476, 1592, 1593, 1831, 1867, 1870, 1892, 1916, 1925, 1927, 1934], "vice": [55, 446, 591, 1118, 1119, 1419, 1889, 1919, 1927, 1942], "versa": [55, 446, 591, 1118, 1119, 1419, 1889, 1919, 1927, 1942], "negsigmswapinterpret": 55, "call_self": 55, "args_tail": 55, "boxed_run": 55, "args_list": 55, "promptli": [55, 1266], "fetch_args_kwargs_from_env": 55, "map_nodes_to_valu": 55, "initial_env": 55, "enable_io_process": 55, "negsigmswapxform": 55, "nodes_map": [55, 1953], "subgraph_rewrit": [55, 1953], "w1": 55, "w2": 55, "m1": [55, 1855, 1856], "m2": [55, 1647, 1855, 1856, 1916], "traced_modul": [55, 1905, 1953], "despit": [55, 1209, 1210, 1897], "stack_1": 55, "stack_2": 55, "sum_2": 55, "max_2": 55, "exhaust": [56, 1607], "wih": 56, "escap": [56, 65], "hatch": [56, 65], "assumeconstantresult": [56, 66], "burn": [56, 66, 1939], "tracabl": [56, 66], "get_item": [56, 66], "i64": [56, 61, 62, 65, 66], "slice_1": [56, 64, 66], "myautogradfunct": 56, "autogradfunct": 56, "allow_in_graph": [56, 1944], "cl": [56, 58, 128, 1894, 1916, 1921, 1955], "mul_1": [56, 62, 1940], "control_flow": [56, 59, 63, 64, 67], "mysubmodul": [56, 63, 64], "condbranchclassmethod": [56, 63, 64], "subm": [56, 63, 64], "higher_ord": [56, 59, 63, 64], "inner_true_fn": [56, 63, 64], "inner_false_fn": [56, 63, 64], "my_tensor_var": [56, 63, 64], "my_primitive_var": [56, 63, 64], "nonloc": [56, 59, 63, 64, 1870], "_lifted_tensor_constant0": [56, 63, 64], "lift_fresh_copi": [56, 63, 64, 1911], "sub_1": [56, 63, 64], "condclosedovervari": [56, 59, 63], "val": [56, 59, 63, 1009, 1199, 1200, 1867, 1869, 1887, 1943, 1947], "_export": [56, 65, 66, 1916], "i4": [56, 65, 66], "ge_1": [56, 65, 66], "scalar_tensor_2": [56, 65, 66], "_assert_async_2": [56, 65, 66], "le_1": [56, 65, 66], "scalar_tensor_3": [56, 65, 66], "_assert_async_3": [56, 65, 66], "i0": [56, 65, 66, 295, 1213, 1773, 1867, 1911, 1926], "i1": [56, 65, 66, 1926], "i2": [56, 65, 66], "i3": [56, 65, 66], "test_decor": 56, "dynamicshapeifguard": [56, 61, 64], "body_graph_0": [56, 64, 67], "map_impl": [56, 64, 67], "slice_2": [56, 64], "9223372036854775807": [56, 64, 1191, 1640, 1879, 1956], "new_x_shap": [56, 64], "pos0": [56, 62], "tuple0": [56, 62], "myarg": [56, 62], "mykw0": [56, 62], "mykwarg": [56, 62], "input0": [56, 62], "input1": [56, 62, 748, 1348, 1361, 1362, 1419, 1436, 1497, 1507, 1508, 1549, 1867, 1888, 1910], "arg7_1": [56, 62], "mul_2": [56, 62], "mul_3": [56, 62], "mul_4": [56, 62], "mul_5": [56, 62], "mul_6": [56, 62], "monkei": [56, 57, 62, 64, 1847], "cow": [56, 57, 62, 64], "pig": [56, 57, 62, 64], "contextlib": [56, 60], "nullcontext": [56, 60], "tree_flatten": 56, "dim1_x": [56, 64], "anim": 56, "moo": 56, "specializedattribut": 56, "staticforloop": [56, 61], "unrol": [56, 61, 1868, 1869, 1910, 1944], "ret": [56, 61, 1894, 1921], "add_3": [56, 61], "add_4": [56, 61], "add_5": [56, 61], "add_6": [56, 61], "add_7": [56, 61], "add_8": [56, 61], "add_9": [56, 61], "staticif": [56, 61], "setattr": [56, 58, 1869], "not_supported_yet": [56, 58, 64], "overli": [56, 58], "type_reflection_method_rewrit": [56, 58], "gain": [68, 1680, 1887, 1936, 1946, 1948], "fxe0010": [68, 1908], "diagnosticopt": [68, 70, 1908], "verbosity_level": [68, 70, 1908], "torch_log": [68, 70, 668, 940, 1875, 1941, 1942, 1954], "onnx_diagnost": [68, 70, 668], "fxe0008": [68, 1908], "onnxscript": [69, 1908, 1909, 1910], "torchlib": [69, 73], "fxonnxinterpret": 69, "onnx": [70, 71, 73, 74, 75, 668, 1641, 1642, 1660, 1661, 1662, 1865, 1883, 1916, 1936], "streamlin": 70, "endors": 70, "noteworthi": 70, "_intern": [70, 75, 1927], "todo": [71, 72, 814, 847, 849, 850, 1894, 1935, 1939, 1943, 1950], "dynamo_export": [71, 1908, 1910], "disregard": [73, 74, 76], "indexerror": [73, 1625, 1627], "typeerror": [73, 1630, 1894, 1914, 1932, 1955], "opschema": [73, 1908], "onnxfunct": [74, 76, 1908], "perfect": 74, "nearest": [74, 767, 773, 775, 1324, 1479, 1481, 1526, 1537, 1595, 1597, 1710, 1738, 1892], "highest": [74, 668, 1335, 1720, 1721, 1753, 1917, 1932], "stringent": 74, "op_level_debug": [74, 76, 1908], "elementwise_dtyp": 75, "_ref": 75, "type_promot": 75, "absent": [76, 1893], "signifi": 76, "g_cpu": 77, "g_cuda": 77, "bytetensor": [77, 998, 999, 1037, 1038, 1145, 1306, 1313, 1759, 1849, 1920, 1928, 1931], "2147483647": 77, "0x8000_0000_0000_0000": [77, 1286, 1920], "0xffff_ffff_ffff_ffff": [77, 1286, 1920], "random_devic": 77, "1516516984916": 77, "new_stat": [77, 1037, 1038, 1313, 1759, 1849, 1920], "void": [77, 968, 1010, 1892, 1899, 1944], "g_cpu_oth": 77, "abs_": [81, 1867, 1882, 1931], "acosh": [85, 111, 855, 1867, 1882, 1911, 1949], "batch1": [88, 89, 140, 141, 674, 908, 1867], "batch2": [88, 89, 140, 141, 158, 674, 908, 1867], "tensor1": [90, 91, 92, 93, 675, 676, 1288, 1735, 1867], "tensor2": [90, 91, 92, 93, 303, 393, 675, 676, 1288, 1735, 1867], "mat1": [94, 95, 542, 677, 1157, 1214, 1298, 1784, 1788, 1789, 1803, 1867, 1949], "mat2": [94, 95, 402, 542, 677, 920, 1157, 1214, 1298, 1784, 1788, 1789, 1803, 1867, 1949], "mat": [96, 97, 528, 678, 1319, 1716, 1781, 1784, 1803, 1867, 1930], "vec1": [98, 99, 679, 1867], "vec2": [98, 99, 277, 449, 679, 1139, 1698, 1867], "keepdim": [101, 103, 104, 105, 107, 123, 124, 343, 381, 396, 398, 399, 400, 403, 417, 418, 419, 420, 441, 458, 467, 543, 553, 603, 681, 683, 684, 685, 687, 862, 863, 1215, 1246, 1250, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1436, 1565, 1654, 1707, 1710, 1805, 1806, 1810, 1852, 1853, 1867, 1882, 1926, 1949], "rtol": [102, 333, 682, 896, 897, 1182, 1248, 1251, 1662, 1866, 1867, 1932], "atol": [102, 333, 682, 896, 897, 1182, 1248, 1251, 1260, 1662, 1866, 1867, 1894, 1932], "08": [102, 333, 682, 918, 1182, 1240, 1362, 1441, 1569, 1666, 1667, 1668, 1670, 1676, 1677, 1680, 1693, 1765, 1867], "equal_nan": [102, 333, 682, 1182, 1867, 1932], "arcco": [110, 1867, 1911, 1932], "acosh_": [112, 1867, 1882], "arccosh": [112, 1867, 1911], "arcsin": [114, 869, 1867, 1911, 1925], "arcsinh": [116, 1867, 1911], "atan2_": [119, 1867, 1882], "arctan2": [119, 1867, 1911], "arctan": [120, 1867, 1911], "arctanh": [122, 1867, 1911], "asinh": [132, 857, 1867, 1882, 1911, 1925, 1949], "atan": [136, 619, 620, 858, 1867, 1882, 1911, 1925, 1949], "atanh": [138, 860, 1867, 1882, 1911, 1925, 1949], "wrt": [139, 896, 897], "60521": [139, 881], "issuecom": [139, 881], "867061780": [139, 881], "texttt": [142, 143, 682, 1182, 1335, 1932], "bernoulli": [143, 748, 1339, 1365, 1366, 1367, 1368, 1372, 1379, 1397, 1511, 1512, 1513, 1514, 1519, 1865, 1867, 1882, 1911, 1933], "preserve_format": [144, 159, 161, 164, 167, 168, 169, 178, 195, 198, 229, 256, 286, 314, 382, 513, 568, 937, 1068, 1121, 1659, 1719, 1721, 1723, 1863, 1928], "minlength": [145, 911, 1867], "bitwise_and": [147, 1867, 1911, 1949], "bitwise_left_shift": [149, 1867, 1911], "bitwise_not": [151, 1867, 1882, 1911, 1949], "bitwise_or": [153, 1867, 1911, 1949], "bitwise_right_shift": [155, 1867, 1911], "bitwise_xor": [157, 1867, 1911, 1949], "uint8": [161, 231, 605, 681, 687, 1118, 1708, 1711, 1712, 1735, 1916, 1927, 1928, 1930, 1931, 1957], "cauchi": [162, 1865, 1889, 1897, 1911, 1933], "dfrac": [162, 366, 596, 1362, 1508, 1615, 1648, 1651], "complex32": [168, 1355, 1356, 1357, 1501, 1502, 1503, 1660, 1931, 1932], "int8": [169, 436, 717, 912, 913, 914, 915, 916, 917, 1118, 1275, 1276, 1277, 1278, 1916, 1919, 1925, 1927, 1928, 1931, 1957], "input2": [172, 447, 448, 505, 748, 1348, 1361, 1362, 1419, 1436, 1497, 1507, 1508, 1549, 1867, 1888, 1910], "clamp_": [177, 1867, 1882], "uncoalesc": [179, 317, 1796], "coo": [179, 312, 317, 331, 602, 1157, 1784, 1788, 1793, 1794, 1795, 1796, 1797, 1798, 1865, 1876, 1928, 1932], "inttensor": [180, 197, 1167, 1283, 1284, 1370, 1928, 1931], "csr": [180, 197, 332, 571, 576, 1371, 1784, 1788, 1789, 1795, 1798, 1876, 1932], "sparse_csr": [180, 197, 571, 576, 1788, 1789, 1791, 1795, 1798, 1925], "nnz": [180, 532, 571, 572, 573, 575, 576, 896, 1327, 1786, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1925], "int32": [180, 197, 302, 310, 314, 435, 605, 924, 1068, 1080, 1081, 1116, 1118, 1119, 1224, 1235, 1236, 1237, 1255, 1283, 1350, 1708, 1745, 1916, 1925, 1927, 1928, 1931, 1957], "mkl": [180, 197, 1865, 1891, 1906, 1911, 1925], "routin": [180, 197, 864, 1266, 1783, 1811, 1925], "downcast": [180, 197], "to_sparse_csr": [180, 197, 572, 573, 1785, 1788, 1789, 1867, 1911, 1925], "conj_phys": [183, 951, 1867, 1911, 1925, 1949], "contiguous_format": [184, 320, 487, 488, 1067, 1607, 1928], "non_block": [185, 198, 568, 591, 1193, 1427, 1640, 1867, 1892, 1927, 1949], "copysign": [187, 1867, 1911], "fweight": [194, 958, 1867], "aweight": [194, 958, 1867], "sparse_dim": [207, 533, 534, 1784, 1788, 1792, 1796, 1867, 1911, 1925], "resize_": [210, 488, 1123, 1215, 1846, 1866, 1867, 1868, 1882, 1918, 1927], "resize_as_": [210, 1867, 1882, 1925], "set_": [210, 487, 1867], "transpose_": [210, 1867, 1925], "zero_": [210, 1239, 1517, 1867, 1882, 1883, 1900, 1925], "dim1": [214, 216, 217, 557, 580, 581, 1054, 1056, 1057, 1228, 1814, 1831, 1867], "dim2": [214, 216, 217, 1054, 1056, 1057, 1228, 1867], "digamma": [220, 1867, 1882, 1911, 1926, 1949], "laid": 222, "outermost": [222, 1146], "channels_last": [222, 1193, 1427, 1607, 1928], "rounding_mod": [224, 225, 226, 227, 1061, 1062, 1111, 1114, 1729, 1839, 1867, 1949], "split_size_or_sect": [230, 291, 607, 1799], "eq": [233, 1867, 1882, 1911, 1949], "erf": [236, 627, 628, 1867, 1882, 1911, 1925, 1926, 1949], "erfc": [238, 629, 630, 1867, 1882, 1911, 1926, 1949], "front": [243, 940, 1266, 1430, 1883, 1895], "lambd": [247, 287, 1383, 1464, 1529, 1585, 1663, 1867], "fill_valu": [249, 434, 1120, 1121, 1350, 1867, 1892, 1949], "tall": [249, 1252, 1257, 1894], "start_dim": [252, 1105, 1373, 1867], "end_dim": [252, 1105, 1373, 1867], "float_pow": [258, 1867, 1911], "floor_divid": [262, 1061, 1867, 1911, 1925], "divisor": [265, 266, 477, 478, 756, 757, 1061, 1111, 1114, 1136, 1341, 1342, 1374, 1478, 1494, 1495, 1729, 1839], "fmod": [266, 1729, 1867, 1911, 1949], "mantissa": [269, 469, 1116, 1217, 1753, 1867, 1892, 1903], "gcd": [272, 1867, 1911, 1949], "geometr": [275, 767, 773, 1526, 1537, 1595, 1851, 1865, 1911, 1933, 1951], "ordin": [278, 1793, 1794, 1795, 1797, 1798, 1928], "greater_equ": [283, 1867, 1911], "hypot": [293, 1867, 1911, 1949], "igamma": [297, 1867, 1911, 1949], "igammac": [299, 1867, 1911, 1949], "3100": [300, 471, 1163, 1727], "3553j": [300, 471, 1163, 1727], "5445": [300, 471, 1163, 1727], "7896j": [300, 471, 1163, 1727], "6492": [300, 471, 1163, 1727], "0633j": [300, 471, 1163, 1727], "0638": [300, 471, 1163, 1727], "8119j": [300, 471, 1163, 1727], "3553": [300, 1163], "7896": [300, 1163], "0633": [300, 1163, 1240, 1884], "8119": [300, 1163], "index_add_": [301, 886, 1164, 1165, 1867, 1904], "index_copy_": [303, 1867], "index_fill_": [305, 1867, 1882], "index_put_": [307, 1867], "include_self": [310, 504, 505, 1166, 1744, 1867, 1949], "identit": 310, "amax": [310, 505, 684, 685, 1788, 1867, 1911, 1949], "amin": [310, 505, 683, 685, 1788, 1867, 1911, 1949], "fill_": [310, 1193, 1219, 1427, 1730, 1867, 1882, 1900, 1927], "72": [310, 605, 1146, 1916], "uint8_t": [315, 1660], "retain_grad": [324, 1867, 1889, 1911], "requires_grad_": [324, 436, 1193, 1350, 1427, 1510, 1785, 1788, 1825, 1867, 1882, 1889, 1931, 1954], "n_fft": [340, 544, 1190, 1807, 1867], "hop_length": [340, 544, 1190, 1807, 1867], "win_length": [340, 544, 1190, 1807, 1867], "center": [340, 544, 767, 773, 1086, 1190, 1491, 1526, 1537, 1595, 1677, 1699, 1767, 1807, 1867, 1889, 1911, 1930], "onesid": [340, 544, 1190, 1807, 1867, 1949], "return_complex": [340, 544, 1190, 1807, 1867], "element_s": [342, 423, 1867, 1882, 1911, 1927], "lcm": [345, 1867, 1911], "ldexp": [347, 1116, 1867, 1911], "lerp": [351, 1867, 1911], "lt": [352, 384, 1220, 1866, 1867, 1882, 1911, 1940, 1941, 1949], "less_equ": [355, 1867, 1911], "lgamma": [357, 639, 640, 1867, 1911, 1949], "ln": [366, 1222, 1926], "logical_and": [372, 1867, 1911, 1949], "logical_not": [374, 1576, 1867, 1882, 1884, 1911, 1949], "logical_or": [376, 1867, 1911, 1949], "logical_xor": [378, 1867, 1911, 1949], "pivot": [385, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1283, 1284, 1285, 1709, 1867], "get_info": [385, 1283], "lu_data": [386, 1284, 1285, 1867], "lu_pivot": [386, 1284, 1285, 1867], "masked_fill_": [388, 1576, 1867, 1882, 1883], "booltensor": [389, 391, 723, 1287, 1470, 1860, 1928, 1931], "masked_scatter_": [390, 1867], "mvlgamma": [414, 1867, 1911], "posinf": [415, 416, 1321, 1867], "neginf": [415, 416, 1321, 1867], "nan_to_num": [416, 1867, 1911], "interpol": [419, 467, 773, 774, 775, 807, 1219, 1324, 1479, 1480, 1481, 1491, 1526, 1595, 1596, 1597, 1710, 1846, 1867, 1918], "ne": [427, 1615, 1648, 1656, 1867, 1882, 1911, 1949], "8182e": 433, "5765e": 433, "41": [433, 1069, 1252, 1598, 1647, 1709], "0545e": 433, "0949e": 433, "4842e": [433, 1069], "0000e": [433, 1069, 1109, 1271, 1280, 1321, 1647, 1765, 1767, 1768, 1773, 1774], "00": [433, 1069, 1109, 1271, 1280, 1321, 1647, 1661, 1765, 1767, 1768, 1773, 1774, 1866, 1910], "141592": [434, 1120], "1416": [434, 1050, 1120, 1825], "from_numpi": [436, 867, 868, 1825, 1944], "array_lik": [436, 867, 1793, 1794, 1795, 1796, 1797, 1798, 1825, 1884], "nextaft": [439, 1867, 1911, 1949], "fro": [441, 1225, 1246, 1250, 1263, 1625, 1634, 1654, 1867], "not_equ": [444, 1867, 1911], "resolve_conj": [446, 951, 1867, 1911], "resolve_neg": [446, 1867, 1911], "shorthand": [446, 1213], "input3": [448, 1867], "transpos": [448, 581, 582, 605, 680, 729, 730, 731, 932, 933, 1066, 1133, 1223, 1224, 1230, 1233, 1236, 1243, 1254, 1257, 1358, 1359, 1360, 1478, 1504, 1505, 1506, 1576, 1614, 1643, 1697, 1811, 1813, 1814, 1820, 1834, 1867, 1882, 1884, 1889, 1903, 1910, 1911, 1918, 1925, 1929, 1931, 1949], "polygamma": [454, 1867, 1911, 1926], "q_per_channel_axi": [461, 462, 1867, 1911], "zero_point": [462, 464, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 758, 760, 761, 762, 763, 765, 768, 769, 787, 790, 807, 808, 809, 810, 813, 840, 1080, 1081, 1711, 1712, 1713, 1714, 1715, 1867, 1916, 1917], "qtensor": [466, 1867], "uniform": [469, 596, 910, 1363, 1445, 1509, 1718, 1719, 1767, 1865, 1887, 1911, 1933, 1949], "queu": [474, 973, 1892], "life": [474, 970], "cycl": [474, 881, 970, 1685, 1691, 1889, 1915], "unexpectedli": [474, 1931], "enable_grad": [476, 1871, 1933], "0100": [476, 863, 1247, 1711], "0200": 476, "0300": [476, 1905], "maxnorm": [479, 480, 1730, 1867], "tile": [481, 1867, 1892, 1911, 1925, 1944], "repeat_interleav": [481, 1846, 1867, 1911, 1918], "output_s": [482, 729, 730, 731, 754, 755, 1332, 1333, 1334, 1336, 1337, 1338, 1359, 1374, 1375, 1376, 1423, 1424, 1425, 1478, 1485, 1486, 1487, 1488, 1489, 1490, 1520, 1521, 1522, 1553, 1554, 1555, 1731, 1867, 1884, 1949], "is_leaf": [483, 1867, 1882, 1884, 1911, 1944], "saved_weight": 484, "loaded_weight": 484, "5503": 484, "4926": [484, 1900], "1158": 484, "8303": 484, "1007": 484, "9853": 484, "2316": 484, "6606": 484, "resiz": [487, 488, 512, 533, 534, 1118, 1119, 1123, 1479, 1526, 1537, 1867, 1882, 1911, 1927, 1949], "shift": [493, 913, 916, 1086, 1093, 1339, 1345, 1346, 1347, 1372, 1466, 1519, 1736, 1867, 1870, 1949], "decim": [495, 496, 1738, 1867, 1903, 1957], "scatter_": [500, 503, 1742, 1867], "scatter_add_": [501, 502, 1743, 1846, 1867], "scatter_reduce_": [501, 504, 1744, 1867], "axi": [501, 503, 505, 810, 813, 950, 1065, 1080, 1106, 1135, 1158, 1711, 1731, 1736, 1737, 1859, 1867, 1895, 1910, 1914, 1916, 1944, 1949, 1953], "4600": 501, "2300": 501, "scatter_reduc": [505, 1846, 1867, 1911, 1949], "sgn": [510, 1115, 1763, 1867, 1882, 1884, 1911, 1925], "int16": [513, 1118, 1276, 1925, 1927, 1928, 1931, 1957], "dense_dim": [531, 533, 534, 571, 572, 573, 575, 576, 1796, 1867, 1911, 1925], "nse": [532, 1925], "randint": [532, 911, 958, 1109, 1299, 1350, 1476, 1509, 1510, 1792, 1867, 1871, 1883, 1911, 1930, 1933], "6550": 532, "2397": 532, "1611": 532, "0779": [532, 1230, 1706, 1860], "2326": 532, "0558": 532, "4711": 532, "9678": 532, "5138": 532, "0411": 532, "9417": 532, "5158": 532, "0793": 532, "0036": [532, 1291], "2569": 532, "1055": 532, "sparse_coo": [532, 571, 1327, 1788, 1791, 1792, 1796, 1925, 1928], "split_siz": [535, 1799, 1867, 1949], "squeez": [541, 681, 683, 684, 685, 687, 1215, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1508, 1707, 1792, 1805, 1806, 1810, 1852, 1853, 1867, 1882, 1910, 1911, 1918, 1929, 1949], "pad_mod": [544, 1807, 1867], "typedstorag": [545, 1865, 1905, 1927], "untypedstorag": [545, 601, 1865, 1905, 1927], "untyped_storag": 545, "compute_uv": [555, 1257, 1258, 1811, 1867], "axis0": [556, 1813, 1867], "axis1": [556, 1813, 1867], "dim0": [557, 580, 581, 1814, 1831, 1867], "indices_or_sect": [566, 1064, 1156, 1826, 1858], "5044": 568, "0005": [568, 1689, 1695], "3310": 568, "0584": [568, 1811], "cuda0": [568, 1892, 1898, 1931], "masked_grad": [569, 1867], "sparse_mask": [569, 1867, 1911], "mkldnn": [570, 1203, 1865, 1911], "sparsedim": 571, "blocksiz": [571, 572, 573, 1793, 1794, 1795, 1867, 1925], "sparse_csc": [571, 575, 1791, 1795, 1797, 1925], "sparse_bsr": [571, 573, 1794, 1795, 1925], "sparse_bsc": [571, 572, 1793, 1795, 1925], "bsr": [571, 573, 1794, 1795, 1932], "bsc": [571, 572, 1793, 1795, 1932], "csc": [571, 575, 1795, 1797, 1932], "minu": [571, 572, 573, 575, 576, 1926], "crow_indic": [571, 573, 576, 1786, 1788, 1789, 1791, 1794, 1795, 1798, 1867, 1911, 1925, 1932], "col_indic": [571, 573, 576, 1788, 1789, 1791, 1794, 1795, 1798, 1867, 1911, 1925, 1932], "sparsecsr": [571, 1831, 1925], "row_indic": [572, 575, 1793, 1797, 1867, 1911, 1925, 1932], "ccol_indic": [572, 575, 1793, 1797, 1867, 1911, 1925, 1932], "_nnz": [574, 575, 576, 1911], "012766935862600803": 577, "5415473580360413": 577, "08909505605697632": 577, "7729271650314331": 577, "unitriangular": [582, 1256, 1834, 1867], "tril": [584, 1576, 1867, 1911, 1944], "triu": [586, 1619, 1834, 1867, 1910, 1911, 1944], "trunc": [590, 665, 666, 675, 1061, 1104, 1111, 1114, 1738, 1867, 1882, 1911, 1925, 1949], "sizedim": 595, "return_invers": [597, 598, 1843, 1844, 1867], "return_count": [597, 598, 1843, 1844, 1867], "unsqueez": [600, 1086, 1214, 1254, 1370, 1446, 1619, 1828, 1867, 1894, 1911, 1918, 1925, 1929, 1930, 1949], "subspac": [605, 1257, 1433, 1699, 1811, 1812], "span": [605, 1027, 1028, 1363, 1811, 1915, 1921], "foral": 605, "proportion": [605, 773, 1479, 1595], "9482": [605, 1170], "0310": 605, "4999": 605, "5316": 605, "1520": 605, "7472": 605, "5617": 605, "8649": 605, "4724": [605, 1900], "0334": 605, "2976": 605, "8499": 605, "2109": 605, "9913": 605, "9607": 605, "6123": 605, "1064483442": 605, "1124191867": 605, "1069546515": 605, "1089989247": 605, "1105482831": 605, "1061112040": 605, "1057999968": 605, "1084397505": 605, "1071760287": 605, "1123489973": 605, "1097310419": 605, "1084649136": 605, "1101533110": 605, "1073668768": 605, "1082790149": 605, "1088634448": 605, "1000000000": 605, "0047": 605, "0310j": 605, "5316j": 605, "7472j": 605, "8649j": 605, "0334j": 605, "8499j": 605, "9913j": 605, "6123j": 605, "202": 605, "154": [605, 1906], "59": [605, 1836, 1838], "182": 605, "243": [605, 1190, 1811], "253": 605, "188": 605, "185": [605, 1954], "252": [605, 1906], "191": 605, "63": [605, 1906, 1916], "240": 605, "227": 605, "165": 605, "190": 605, "146": 605, "106": 605, "205": 605, "112": [605, 1954], "206": 605, "189": 605, "95": [605, 1687, 1690, 1691], "147": 605, "89": [605, 1717, 1948], "43": 605, "246": [605, 1954], "87": 605, "235": 605, "226": 605, "254": [605, 1906], "111": [605, 1661, 1910], "117": 605, "177": 605, "28": [605, 734, 1049, 1832, 1910, 1941, 1948], "xlogi": [610, 1867, 1911, 1926], "inductor": [668, 940, 1875, 1911, 1936, 1939, 1940, 1941, 1942, 1944, 1946, 1948, 1951, 1952, 1954, 1956], "aot_graph": [668, 1875], "aot_joint_graph": [668, 1875], "ddp_graph": [668, 1875], "graph_cod": [668, 1875], "graph_break": [668, 1875, 1939, 1944, 1945, 1952], "graph_siz": 668, "trace_sourc": 668, "trace_cal": 668, "output_cod": [668, 1875, 1946, 1954], "perf_hint": [668, 940], "toggl": [668, 1892], "supress": 668, "silenc": 668, "lowest": [668, 930, 1321, 1624, 1625, 1633, 1634, 1720, 1721, 1894, 1932], "notset": 668, "torchinductor": [668, 1875, 1936, 1941, 1942, 1944, 1946], "joint": [668, 1875], "ddpoptim": [668, 1875], "unregist": [668, 1875, 1879, 1910], "cosin": [671, 672, 955, 956, 1361, 1362, 1508, 1683, 1684, 1691, 1769, 1912, 1944], "3348": 671, "5889": 671, "2005": [671, 1853, 1954], "1584": 671, "2294": [671, 1293], "2004": 671, "3690": 671, "7298": [671, 1728], "hyperbol": [672, 870, 873, 956, 1467, 1778, 1824], "uniform_": [672, 873, 910, 1865, 1867, 1882, 1887, 1894, 1926, 1933], "3192": 672, "9915": 672, "9674": 672, "7151": 672, "7791": 672, "3120": [672, 953], "2979": 672, "1341": 672, "_i": [673, 674, 675, 676, 677, 908, 910, 913, 916, 920, 935, 1061, 1111, 1217, 1219, 1316, 1475, 1702, 1706, 1725, 1761, 1808, 1860, 1926], "0202": 673, "0985": 673, "3506": [673, 1283], "6056": 673, "19": [673, 734, 933, 1424, 1866, 1910, 1925, 1948], "3944": 673, "9732": 673, "3497": 673, "6245": [673, 1225], "4022": [673, 1048, 1811], "3743": 673, "7724": 673, "5811": 673, "8017": 673, "7695": 673, "3930": 673, "3672": [673, 966, 1226], "1450": [673, 1792], "6971": 673, "0736": [673, 1900], "0994": 673, "3216": 673, "7845": 673, "1610": 673, "1868": 673, "4090": 673, "9902": [673, 966, 1226], "3667": [673, 953], "3925": 673, "6147": 673, "sum_": [674, 1190, 1245, 1262, 1340, 1341, 1342, 1355, 1356, 1357, 1363, 1395, 1396, 1415, 1430, 1434, 1436, 1805, 1806, 1807, 1827, 1832, 1852, 1853, 1854, 1926], "mathbin": [674, 677, 678, 908, 920, 1789], "doubletensor": [674, 675, 676, 677, 678, 908, 1751, 1928, 1931], "tensorfloat32": [674, 677, 908, 920, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1414, 1501, 1502, 1503, 1504, 1505, 1506, 1543, 1753, 1892, 1903], "rocm": [674, 677, 908, 920, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1865], "6311": 674, "0503": 674, "9768": [674, 1900], "0362": 674, "1653": 674, "8185": 674, "4255": [674, 1316], "6760": 674, "9453": 674, "5743": 674, "8202": 674, "3691": 674, "0943": 674, "1109": [674, 1381, 1774], "4730": [674, 1827], "histor": [675, 1023, 1367, 1891, 1900, 1905], "2312": [675, 1792], "6496": 675, "1312": 675, "0428": 675, "4292": 675, "1030": 675, "5369": 675, "9829": 675, "0430": 675, "8635": 676, "6391": 676, "6174": 676, "7617": 676, "5879": 676, "7388": 676, "8353": 676, "6249": 676, "6511": 676, "8716": 677, "4671": 677, "3746": 677, "7573": 677, "9555": 677, "8681": 677, "3768": 678, "5565": 678, "otim": [679, 1214, 1378, 1525], "conj": [680, 952, 1082, 1083, 1085, 1087, 1094, 1096, 1100, 1101, 1103, 1223, 1224, 1230, 1232, 1251, 1733, 1734, 1867, 1894, 1897, 1911, 1931, 1949], "mh": [680, 931, 932, 933, 1230, 1811, 1867, 1911, 1929, 1931], "lvert": [682, 1182, 1475, 1562, 1932], "rvert": [682, 1182, 1932], "leq": [682, 909, 910, 953, 1084, 1086, 1182, 1214, 1218, 1233, 1239, 1350, 1369, 1430, 1432, 1434, 1510, 1561, 1564, 1764, 1807, 1887, 1926], "elementwis": [682, 953, 982, 1009, 1010, 1109, 1111, 1331, 1390, 1391, 1392, 1464, 1585, 1851, 1869, 1884, 1897, 1926], "07": [682, 807, 808, 809, 810, 813, 931, 1069, 1231, 1234, 1239, 1251, 1252, 1258, 1281, 1284, 1614, 1662, 1669, 1768, 1773, 1811, 1910], "09": [682, 1669, 1681, 1894, 1932], "8177": 683, "4878": 683, "2491": 683, "9130": 683, "7158": 683, "1775": 683, "0992": 683, "4817": 683, "0053": 683, "0164": 683, "3738": 683, "0507": [683, 1910], "9700": 683, "1106": 683, "0318": 683, "0816": [683, 1283], "6451": 684, "4866": 684, "2987": 684, "3312": 684, "5744": 684, "2980": [684, 1884], "8397": 684, "2713": 684, "9128": 684, "9214": 684, "7268": 684, "2995": 684, "9023": [684, 1224], "4853": 684, "9075": 684, "6165": 684, "180": [686, 1050, 1717], "14159": [686, 1825], "135": 686, "45": [686, 1346, 1347, 1391, 1392, 1466, 1647, 1910], "ao": [688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 1916, 1917, 1918], "batch_norm": [688, 689, 1203, 1867, 1911], "fuse": [688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 780, 781, 790, 792, 793, 794, 802, 835, 847, 848, 940, 1207, 1208, 1576, 1666, 1667, 1753, 1877, 1882, 1910, 1912, 1916, 1917, 1918, 1919, 1944, 1946, 1953], "3d": [689, 692, 695, 723, 728, 731, 755, 757, 762, 767, 1295, 1334, 1338, 1342, 1345, 1347, 1357, 1360, 1367, 1368, 1374, 1376, 1390, 1392, 1422, 1433, 1479, 1487, 1490, 1491, 1495, 1503, 1506, 1514, 1520, 1522, 1537, 1552, 1564, 1595, 1884, 1903, 1916, 1925, 1930], "bn": [690, 691, 692, 693, 694, 695, 802, 848, 1066, 1203, 1905, 1912, 1916, 1917], "qat": [700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 718, 719, 720, 721, 780, 781, 834, 1916, 1917, 1918], "dilat": [700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 760, 761, 762, 770, 771, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1520, 1550, 1551, 1552, 1594, 1714, 1715, 1867, 1910, 1949], "padding_mod": [700, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 718, 719, 726, 727, 728, 729, 730, 731, 760, 761, 762, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1526, 1867, 1949], "momentum": [700, 701, 702, 703, 704, 705, 711, 712, 724, 725, 739, 740, 741, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1496, 1536, 1670, 1677, 1679, 1685, 1691, 1693, 1867, 1900, 1902, 1912, 1949], "freeze_bn": [700, 701, 702, 703, 704, 705], "qconfig": [700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 776, 777, 779, 782, 783, 784, 785, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 849, 850, 1935], "batchnorm1d": [700, 703, 1400, 1466, 1496, 1905, 1918], "fakequant": [700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 721, 790, 850], "weight_fake_qu": [700, 701, 702, 703, 704, 705, 706, 707, 718, 719], "quant": [700, 701, 702, 703, 704, 705, 706, 707, 708, 718, 719, 720, 778, 780, 781, 826, 849, 850, 1080, 1081, 1916, 1917], "batchnorm3d": [702, 705, 707, 712, 1402, 1466, 1496, 1918], "num_featur": [711, 712, 724, 725, 739, 740, 741, 1193, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1528, 1900], "qint8": [716, 717, 744, 749, 752, 753, 760, 761, 762, 769, 780, 782, 787, 808, 829, 846, 847, 849, 850, 1660, 1711, 1712, 1916, 1918, 1919, 1927, 1931, 1932], "highlight": [718, 719, 1869], "from_float": [720, 726, 727, 728, 733, 734, 744, 752, 785, 805, 811, 814, 826, 1916], "qparams_dict": [720, 726, 727, 728, 752], "hidden_s": [722, 748, 749, 753, 1379, 1380, 1397, 1398, 1442, 1443, 1444, 1867], "num_lay": [722, 748, 1379, 1397, 1442, 1443, 1471, 1473, 1867, 1900], "batch_first": [722, 723, 748, 1379, 1397, 1433, 1442, 1443, 1470, 1472, 1474, 1641, 1643, 1644, 1646, 1867, 1896], "bidirect": [722, 748, 1379, 1397, 1442, 1443, 1867], "_lstmlayer": 722, "nnqa": 722, "h0": [722, 748, 750, 1379, 1397, 1442], "c0": [722, 750, 1397, 1954], "hn": [722, 748, 750, 1379, 1380, 1397, 1442], "cn": [722, 750, 1193, 1397], "weight_ih": [722, 1380, 1398, 1444], "weight_hh": [722, 1380, 1398, 1444], "embed_dim": [723, 1433], "num_head": [723, 1433, 1867], "add_bias_kv": [723, 1433], "add_zero_attn": [723, 1433, 1867], "kdim": [723, 1433], "vdim": [723, 1433], "dequant": [723, 776, 778, 780, 781, 787, 789, 849, 1867, 1911, 1917, 1919, 1932, 1934], "mha": [723, 1433], "conver": 723, "key_padding_mask": [723, 1433, 1867], "need_weight": [723, 1433, 1867], "attn_mask": [723, 1433, 1576, 1867], "average_attn_weight": [723, 1433, 1867], "is_caus": [723, 1433, 1473, 1474, 1576, 1867], "attn_output_weight": [723, 1433], "unmask": [723, 1470], "causal": [723, 1433, 1470, 1471, 1472, 1473, 1474, 1576], "attn_weight": [723, 1433, 1576], "attn_output": [723, 1433], "quint8": [726, 727, 728, 729, 730, 731, 733, 734, 744, 760, 761, 762, 769, 780, 782, 787, 807, 808, 809, 810, 813, 815, 847, 849, 1660, 1711, 1712, 1713, 1714, 1715, 1916, 1918, 1919, 1927, 1931, 1932], "learnabl": [726, 727, 728, 729, 730, 731, 733, 734, 744, 748, 752, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1435, 1442, 1444, 1466, 1518, 1570, 1900], "q_input": [726, 727, 728, 729, 730, 731, 760, 761, 762], "quantize_per_tensor": [726, 727, 728, 729, 730, 731, 744, 745, 746, 760, 761, 762, 1713, 1714, 1715, 1867, 1911, 1916], "unequ": [727, 728, 729, 730, 731, 1356, 1357, 1359, 1360], "50": [727, 729, 730, 731, 760, 812, 1249, 1299, 1341, 1342, 1350, 1355, 1356, 1357, 1359, 1360, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1477, 1503, 1504, 1506, 1510, 1521, 1522, 1678, 1822, 1884, 1892, 1944], "56": [728, 1925, 1948], "output_pad": [729, 730, 731, 1358, 1359, 1360, 1406, 1407, 1408, 1504, 1505, 1506, 1867, 1949], "qnnpack": [729, 730, 744, 752, 843, 844, 847, 849, 850, 1916, 1918], "convtranspose2d": [729, 1407, 1505, 1846, 1918], "nnq": [729, 730, 731, 776, 777, 778, 852, 1916], "downsampl": [729, 730, 731, 1359, 1479, 1491, 1526, 1537], "upsampl": [729, 730, 731, 767, 774, 775, 807, 1359, 1480, 1481, 1491, 1526, 1537, 1596, 1597], "fbgemm": [730, 731, 744, 752, 821, 843, 844, 847, 849, 850, 1916, 1917, 1944, 1945], "cubic": [731, 1376, 1522, 1526], "num_embed": [733, 734, 1370, 1371, 1518], "embedding_dim": [733, 734, 1370, 1371, 1399, 1517, 1518], "padding_idx": [733, 1370, 1371, 1517, 1518, 1867, 1949], "scale_grad_by_freq": [733, 734, 1370, 1371, 1517, 1518, 1867, 1949], "_weight": [733, 734, 1370, 1371, 1670, 1676, 1953], "overwritten": [733, 734, 744, 752, 785, 829, 849, 1889, 1894, 1932, 1939], "_embed": [733, 734], "_dim": [733, 734, 1370], "include_last_offset": [734, 1371, 1518, 1867, 1949], "embedding_bag": [734, 1867, 1911], "floatfunct": [735, 1916], "activation_post_process": [735, 787, 1916], "add_relu": [735, 736, 745, 1877, 1911, 1934], "add_scalar": [735, 736, 745, 1911, 1930, 1934], "mul_scalar": [735, 736, 745, 1911, 1934], "collector": 736, "f_add": 736, "num_channel": [737, 1382, 1883], "normalized_shap": [742, 1399, 1540, 1867, 1884, 1949], "elementwise_affin": [742, 1399], "negative_slop": [743, 768, 1413, 1541, 1542, 1867, 1887, 1949], "slope": [743, 768, 1413, 1458, 1887], "bias_": [744, 752], "_featur": [744, 752, 769, 1335, 1348, 1412, 1414, 1497, 1543], "from_refer": [744, 752], "ref_qlinear": [744, 752], "output_scal": [744, 747, 1713, 1867], "output_zero_point": [744, 747, 1713, 1867], "q_add": 745, "qint32": [745, 746, 1660, 1711, 1712, 1916, 1919, 1927, 1931, 1932], "x_0": [746, 1832], "gate": [748, 749, 1378, 1379, 1380, 1397, 1456, 1525, 1579], "r_t": [748, 1379, 1676], "w_": [748, 1333, 1334, 1337, 1338, 1341, 1342, 1344, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1363, 1375, 1376, 1379, 1380, 1396, 1397, 1398, 1421, 1422, 1424, 1425, 1434, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1479, 1480, 1481, 1482, 1483, 1484, 1522, 1526], "x_t": [748, 882, 884, 1345, 1346, 1347, 1379, 1390, 1391, 1392, 1397, 1442, 1466, 1664], "b_": [748, 1379, 1380, 1397, 1398, 1415, 1442, 1444, 1827, 1925], "hr": [748, 1379, 1380, 1397, 1897], "h_": [748, 1333, 1334, 1337, 1338, 1341, 1342, 1348, 1353, 1354, 1356, 1357, 1359, 1360, 1375, 1376, 1379, 1380, 1396, 1397, 1414, 1421, 1422, 1423, 1424, 1425, 1439, 1440, 1442, 1444, 1449, 1450, 1452, 1453, 1479, 1480, 1481, 1483, 1484, 1497, 1522, 1526], "z_t": [748, 1379], "iz": [748, 1379, 1380], "hz": [748, 978, 1379, 1380, 1930], "n_t": [748, 1379], "h_t": [748, 1379, 1397, 1442], "hadamard": [748, 1379, 1380, 1397, 1398], "multilay": [748, 1379, 1397, 1908], "_t": [748, 1379, 1397, 1677, 1679, 1894, 1912], "b_ih": [748, 1379, 1380, 1397, 1398, 1442, 1444, 1867], "b_hh": [748, 1379, 1380, 1397, 1398, 1442, 1444, 1867], "h_0": [748, 1379, 1397, 1398, 1442], "seq_len": [748, 1379, 1397, 1433, 1442], "pack_padded_sequ": [748, 1379, 1397, 1442, 1640, 1642, 1643, 1896], "num_direct": [748, 1379, 1397, 1442], "h_n": [748, 1379, 1397, 1442], "_size": [748, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1379, 1380, 1395, 1396, 1397, 1398, 1420, 1421, 1422, 1423, 1424, 1425, 1442, 1444, 1478, 1522], "_layer": [748, 1379, 1397, 1442], "_direct": 748, "output1": [748, 1335, 1888, 1910], "output2": [748, 1335], "weight_ih_l": [748, 1379, 1397, 1442], "w_ir": [748, 1379], "w_iz": [748, 1379], "w_in": [748, 1379], "weight_hh_l": [748, 1379, 1397, 1442], "w_hr": [748, 1379], "w_hz": [748, 1379], "w_hn": [748, 1379], "bias_ih_l": [748, 1379, 1397, 1442], "b_ir": [748, 1379], "b_iz": [748, 1379], "b_in": [748, 1379], "bias_hh_l": [748, 1379, 1397, 1442], "b_hr": [748, 1379], "b_hz": [748, 1379], "b_hn": [748, 1379], "mathcal": [748, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1379, 1380, 1397, 1398, 1412, 1414, 1442, 1444, 1445, 1466, 1722, 1887, 1897], "subtli": [748, 1379, 1679], "gru": [749, 1380, 1443, 1867, 1892, 1911, 1916, 1918], "cell": [749, 751, 753, 1379, 1380, 1397, 1398, 1442, 1444], "hx": [749, 751, 753, 1380, 1398, 1444, 1867], "cx": [751, 1398, 1867], "nonlinear": [753, 1343, 1361, 1387, 1442, 1444, 1454, 1865, 1887, 1925], "elman": [753, 1442, 1444], "adaptiveavgpool2d": [754, 1486, 1846, 1918], "adaptiveavgpool3d": [755, 1487, 1846, 1918], "ceil_mod": [756, 757, 770, 771, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1547, 1548, 1550, 1551, 1552, 1714, 1715, 1867, 1949], "count_include_pad": [756, 757, 1340, 1341, 1342, 1493, 1494, 1495, 1867, 1949], "divisor_overrid": [756, 757, 1341, 1342, 1494, 1495, 1867, 1949], "kh": [756, 757, 761, 762, 1341, 1342, 1375, 1376, 1421, 1422, 1494, 1495, 1502, 1503, 1505, 1506, 1521, 1522, 1551, 1552], "kw": [756, 757, 761, 762, 1341, 1342, 1375, 1376, 1421, 1422, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1550, 1551, 1552], "sh": [756, 757, 761, 762, 1494, 1495, 1502, 1503, 1505, 1506, 1551, 1552, 1954], "sw": [756, 757, 760, 761, 762, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552], "avgpool2d": [756, 1494, 1918], "_channel": [756, 757, 760, 761, 762, 1355, 1356, 1357, 1358, 1359, 1360, 1382, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1921], "ih": [756, 757, 761, 762, 1442, 1444, 1494, 1495, 1502, 1503, 1505, 1506, 1551, 1552], "iw": [756, 757, 760, 761, 762, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552], "padh": [756, 757, 761, 762, 1494, 1495, 1502, 1503, 1505, 1506], "padw": [756, 757, 760, 761, 762, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506], "kd": [757, 762, 1342, 1422], "sd": [757, 762], "padd": [757, 762], "formul": [758, 1349, 1369, 1383, 1417, 1463, 1464, 1545, 1562, 1576, 1897, 1925], "min_": [759, 1229, 1230, 1239, 1257, 1811], "max_": [759, 1420, 1421, 1422, 1615, 1648], "convolv": [760, 761, 762, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1501, 1502, 1503, 1504, 1505, 1506], "dw": [760, 761, 762, 1501, 1502, 1503, 1504, 1505, 1506], "qf": [760, 761, 762], "dtype_input": [760, 761, 762], "dtype_filt": [760, 761, 762], "q_filter": [760, 761, 762], "dh": [761, 762, 1502, 1503, 1505, 1506], "dd": 762, "scale_factor": [767, 773, 774, 775, 1479, 1480, 1481, 1537, 1576, 1595, 1596, 1597, 1867, 1949], "align_corn": [767, 773, 774, 1479, 1480, 1491, 1526, 1537, 1595, 1596, 1867, 1949], "height": [767, 773, 1341, 1342, 1356, 1357, 1359, 1360, 1396, 1421, 1422, 1434, 1461, 1479, 1537, 1595, 1883], "spatial": [767, 773, 774, 775, 928, 1086, 1346, 1374, 1399, 1439, 1440, 1461, 1478, 1479, 1480, 1481, 1491, 1526, 1537, 1566, 1567, 1568, 1595, 1596, 1597], "pixel": [767, 773, 775, 1356, 1363, 1366, 1367, 1368, 1372, 1434, 1439, 1440, 1479, 1491, 1526, 1537, 1595, 1597], "corner": [767, 773, 919, 1479, 1491, 1526, 1537, 1595, 1908], "edg": [767, 773, 1146, 1154, 1155, 1537, 1595, 1874, 1895, 1922, 1950], "leakyrelu": [768, 1428, 1541, 1900, 1918], "_slope": [768, 1413, 1541, 1887], "xa": [769, 1243, 1254, 1255, 1256, 1414, 1543], "return_indic": [770, 771, 1336, 1337, 1338, 1375, 1376, 1420, 1421, 1422, 1423, 1424, 1425, 1488, 1489, 1490, 1521, 1522, 1550, 1551, 1552, 1867], "maxpool1d": [770, 1423, 1550, 1553, 1918], "linearli": [773, 1130, 1252, 1479, 1595, 1688, 1709, 1896, 1912, 1919], "neighbour": [775, 1415, 1537, 1597], "stub": [776, 777, 1913], "quantstub": [778, 1916], "dequantstub": [778, 1916], "quantwrapp": 779, "backend_config": [780, 781, 782, 783, 784, 805, 806, 847, 848, 849, 850, 1935], "acycl": [780, 1889], "backendpatternconfig": [780, 849], "blob": [780, 1123, 1897, 1899, 1930, 1953], "dtypeconfig": [780, 781, 783, 849], "observationtyp": [780, 781, 849, 1918], "weighted_int8_dtype_config": [780, 849], "input_dtyp": [780, 782, 849, 1918], "output_dtyp": [780, 782, 849, 1918, 1949], "weight_dtyp": [780, 782, 849, 1918], "bias_dtyp": [780, 782, 1918], "fuse_conv2d_relu": 780, "is_qat": [780, 781], "convrelu2d": [780, 1918], "linear_config": 780, "set_observation_typ": [780, 781, 849], "output_use_different_observer_as_input": [780, 781, 784, 849, 1918], "add_dtype_config": [780, 781, 849], "set_root_modul": [780, 781], "set_qat_modul": [780, 781], "set_reference_quantized_modul": [780, 781], "conv_relu_config": 780, "set_fused_modul": [780, 781], "set_fuser_method": [780, 781], "fused_conv_relu_config": 780, "my_backend": [780, 1940], "set_backend_pattern_config": [780, 849], "from_dict": [780, 781, 782, 803, 804, 805, 842], "backend_config_dict": [780, 1916], "set_nam": 780, "to_dict": [780, 781, 782, 803, 804, 805, 842], "backendconfig": [781, 806, 847, 849, 1919], "dtype_config": [781, 1918], "backend_pattern_config_dict": 781, "observation_typ": [781, 1918], "qat_modul": [781, 1918], "reference_quantized_modul": 781, "fused_modul": [781, 1918], "fuser_method": [781, 802, 1918], "pattern_complex_format": 781, "set_dtype_config": 781, "fuser": [781, 1207, 1866], "fuse_linear_relu": 781, "linearrelu": [781, 1918], "8bea7180a8ba3c279f2c9b050f2a69a6": 781, "understood": [781, 927], "output_share_observer_with_input": [781, 784, 1918], "renam": [781, 1847, 1849, 1867, 1882, 1883, 1911, 1948], "quantdequantstub": 781, "set_pattern": 781, "is_dynam": [782, 814, 1918], "quant1": 782, "dequant1": 782, "fp32_linear": 782, "quant2": 782, "dequant2": 782, "bracket": [782, 1922], "dtype_config1": 782, "dtype_config2": 782, "dtypewithconstraint": [782, 1918], "quant_min_lower_bound": [782, 783, 1918], "quant_max_upper_bound": [782, 783, 1918], "255": [782, 790, 1080, 1081, 1119, 1526, 1537, 1595, 1916, 1918, 1930], "input_dtype_with_constraint": 782, "scale_min_lower_bound": [782, 783, 1918], "scale_max_upper_bound": [782, 783, 1918], "dtype_config_dict": 782, "bias_typ": [782, 849], "scale_exact_match": [783, 1918], "zero_point_exact_match": [783, 1918], "quant_min": [783, 787, 790, 807, 808, 809, 810, 813, 814, 1080, 1081, 1867, 1916], "quant_max": [783, 787, 790, 807, 808, 809, 810, 813, 814, 1080, 1081, 1867, 1916], "fixedqparamsobserv": 783, "fixedqparamsfakequant": 783, "input_output_not_observ": [784, 1918], "remove_qconfig": 785, "is_refer": 785, "convert_custom_config_dict": [785, 803, 1916], "from_observ": [785, 803, 1916], "observed_to_quantized_custom_module_class": [785, 803, 1916], "observedcustommodul": [785, 803, 805, 826, 1916], "quantizedcustommodul": [785, 803], "calib_data": 786, "fake_quant": [787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 850, 1080, 1081, 1935], "movingaverageminmaxobserv": [787, 790, 810], "observer_kwarg": [787, 790], "x_out": [787, 790], "fake_quant_en": 787, "observer_en": 787, "calculate_qparam": [788, 807, 808, 812], "qscheme": [790, 807, 808, 809, 810, 813, 814, 815, 1867, 1911, 1916, 1919, 1932], "fake_qu": [791, 795, 796, 797, 1916], "default_fake_qu": 792, "default_per_channel_weight_fake_qu": 793, "default_weight_fake_qu": 794, "histogram": [795, 807, 819, 1153, 1155, 1867, 1911, 1930], "memoryless": [796, 797], "averaging_const": [796, 797, 809, 810, 1867], "modules_to_fus": 802, "fuser_func": 802, "fuse_known_modul": 802, "fuse_custom_config_dict": [802, 804], "convmodul": 802, "bnmodul": 802, "convbnmodul": 802, "additional_fuser_method_map": 802, "fuse_conv_bn": [802, 1918], "conv1": [802, 1205, 1427, 1455, 1866, 1916, 1930], "bn1": 802, "relu1": [802, 1455, 1598], "fused_m": 802, "custom_config": [803, 804, 805, 806], "convert_fx": [803, 1916, 1935], "convert_custom_config": [803, 847, 1916], "set_observed_to_quantized_map": 803, "set_preserved_attribut": [803, 804, 805], "attr1": [803, 804, 805, 1910], "attr2": [803, 804, 805, 1910], "floatcustommodul": [803, 805], "weight_onli": [803, 847, 1916], "preserved_attribut": [803, 804, 805], "observed_class": [803, 805], "quantized_class": 803, "quant_typ": [803, 805], "quanttyp": [803, 805], "fuse_fx": [804, 1916], "fuse_custom_config": [804, 848], "convertcustomconfig": [804, 847], "prepare_fx": [805, 828, 847, 850, 1916, 1935], "prepare_qat_fx": [805, 847, 1916], "prepare_custom_config": [805, 806, 849, 850, 1916], "set_standalone_module_nam": 805, "module1": [805, 842, 1892], "qconfig_map": [805, 806, 842, 843, 844, 847, 849, 850, 1916], "child_prepare_custom_config": 805, "set_standalone_module_class": 805, "mystandalonemodul": 805, "set_float_to_observed_map": 805, "set_non_traceable_module_nam": 805, "module2": [805, 842, 1892], "module3": [805, 1892], "set_non_traceable_module_class": 805, "nontraceablemodule1": 805, "nontraceablemodule2": 805, "set_input_quantized_index": 805, "set_output_quantized_index": 805, "prepare_custom_config_dict": [805, 826, 828, 1916], "standalone_module_nam": 805, "standalone_module_class": 805, "module_class": 805, "float_to_observed_custom_module_class": [805, 826, 1916], "non_traceable_module_nam": 805, "non_traceable_module_class": 805, "input_quantized_idx": 805, "output_quantized_idx": 805, "float_class": 805, "qconfigmap": [806, 843, 844, 847, 849, 1916, 1919], "preparecustomconfig": [806, 849], "2048": [807, 1470, 1472, 1474, 1892], "upsample_r": 807, "per_tensor_affin": [807, 808, 809, 1712, 1713, 1714, 1715, 1916, 1919], "reduce_rang": [807, 808, 809, 810, 813, 815, 1867, 1916, 1917], "factory_kwarg": [807, 808, 813], "1920928955078125e": [807, 808, 809, 810, 813], "finfo": [807, 808, 809, 810, 813, 1248, 1251, 1331, 1865, 1932], "minmaxobserv": [807, 809, 813, 829, 849, 850, 1919], "x_": [808, 809, 958, 1076, 1267, 1268, 1270, 1273, 1281, 1344, 1363, 1417, 1434, 1460, 1462, 1582, 1788, 1790, 1832, 1889, 1919, 1926], "q_": [808, 1919], "x_orig": 808, "reset_min_max_v": [808, 813], "ch_axi": [810, 813, 1867], "per_channel_affin": [810, 813, 1711, 1916, 1919], "custom_op_nam": [811, 814], "with_arg": [812, 829, 849, 850], "_callable_arg": 812, "_with_arg": 812, "foo_build": 812, "foo_instance1": 812, "foo_instance2": 812, "with_callable_arg": 812, "_with_callable_arg": 812, "cur_tim": 812, "get_time_func": 812, "dan": 812, "creation_tim": 812, "compute_dtyp": 814, "ptq": [819, 1916, 1917, 1919], "obs_dict": 825, "get_observer_state_dict": 825, "allow_list": [826, 1934], "observer_non_leaf_module_list": 826, "preemptiv": [826, 827, 1607], "propagate_qconfig_": 828, "qconfig_dict": [828, 842], "my_qconfig": 829, "default_observ": 829, "default_qat_config": 835, "set_glob": [842, 847, 849, 1916], "set_object_typ": [842, 847, 849], "set_module_name_regex": 842, "regex": 842, "set_module_nam": [842, 847, 849], "set_module_name_object_type_ord": 842, "global_qconfig": 842, "qconfig1": 842, "qconfig2": 842, "qconfig3": 842, "object_typ": 842, "module_name_regex": 842, "module_name_object_type_ord": 842, "conv0": 842, "x86": [843, 844, 1754, 1916, 1918], "run_arg": [845, 851], "counterpart": [845, 852, 1263, 1607, 1869, 1877, 1933, 1934, 1942, 1944], "qconfig_spec": 846, "quantize_fx": [847, 848, 849, 850, 1916, 1935], "graph_modul": [847, 1941, 1953], "_remove_qconfig": 847, "qconfig_from_prepar": 847, "prepared_model": [847, 849, 850], "xnnpack": [847, 1877, 1916], "get_default_backend_config": [847, 849, 850], "quantized_model": 847, "fusion_pattern": 848, "fusecustomconfig": 848, "_equalization_config": 849, "get_default_qconfig_map": [849, 1916], "float_model": [849, 850, 1916, 1934], "data_load": [849, 850, 1685, 1691, 1902, 1916], "get_default_qconfig": [849, 850, 1916], "linear_pattern_config": 849, "suer": 849, "sample_inference_data": [849, 1916], "get_default_qat_qconfig_map": [850, 1916], "load_weight": 850, "train_data": 850, "get_default_qat_qconfig": [850, 1916], "custom_module_class_map": 852, "lceil": [853, 929], "rceil": [853, 929], "adjac": [853, 919, 1366, 1367, 1368, 1372, 1725, 1925], "set_default_tensor_typ": [853, 909, 918, 1067, 1069, 1079, 1084, 1102, 1120, 1140, 1150, 1151, 1213, 1264, 1280, 1658, 1718, 1720, 1722, 1724, 1725, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1793, 1794, 1795, 1796, 1797, 1798, 1836, 1838, 1862], "get_default_dtyp": [853, 1264, 1280, 1660, 1725, 1927, 1928, 1957], "5000": [853, 868, 874, 875, 876, 911, 935, 1084, 1086, 1087, 1094, 1097, 1102, 1112, 1114, 1115, 1116, 1146, 1152, 1155, 1219, 1245, 1264, 1322, 1324, 1352, 1353, 1371, 1479, 1710, 1714, 1715, 1716, 1725, 1729, 1926, 1931], "maxim": [862, 1291, 1361, 1423, 1424, 1425, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1677, 1678, 1679, 1680, 1925, 1944, 1954], "3398": 862, "2663": [862, 1892], "2686": 862, "2450": 862, "7401": 862, "8805": 862, "3402": 862, "1936": 862, "4907": [862, 1281], "3948": [862, 953], "0691": 862, "3132": 862, "6092": 862, "5419": 862, "2993": [862, 1810], "3195": 862, "1139": 863, "2254": 863, "1381": [863, 1810], "3687": 863, "1975": [863, 1884], "0102": 863, "4732": 863, "9240": 863, "1207": [863, 1316], "7506": 863, "0213": 863, "7809": 863, "2960": 863, "9384": 863, "1438": 863, "ascend": [864, 1086, 1230, 1232, 1261, 1315, 1745, 1783, 1843], "0785": 864, "5267": 864, "8521": 864, "4065": 864, "1598": 864, "0788": 864, "0745": 864, "2700": 864, "2208": 864, "0722": 864, "7064": 864, "2564": 864, "0669": 864, "2318": 864, "8229": 864, "9280": 864, "lexicograph": [865, 1653, 1869, 1925], "9039": 866, "6291": 866, "0795": [866, 1710, 1900], "1586": 866, "1939": 866, "4900": 866, "7503": 866, "9355": 866, "histori": [867, 868, 1132, 1669, 1825, 1865, 1876, 1884, 1894, 1896, 1922], "dlpack": [868, 1117, 1865], "frombuff": 868, "data_ptr": [868, 1882, 1927, 1929], "addbackward0": [868, 1900, 1905], "__array_interface__": [868, 1944], "5962": 869, "4985": 869, "4396": 869, "4525": [869, 1884], "6387": 869, "4552": 869, "sine": [870, 1766, 1776, 1778], "1606": 870, "4267": 870, "0899": 870, "0250": 870, "1599": 870, "1534": 870, "9435": 870, "8990": [870, 1061], "arctang": [871, 872], "2341": 871, "2539": 871, "6256": 871, "6448": 871, "2299": 871, "2487": 871, "5591": [871, 893], "5727": 871, "quadrant": 872, "9041": [872, 928], "0196": [872, 928], "3108": [872, 928], "4423": [872, 928], "9833": 872, "0811": 872, "9743": 872, "4151": 872, "tangent": [873, 883, 884, 1129, 1130, 1467, 1823, 1824], "9385": 873, "2968": 873, "8591": 873, "1871": 873, "7253": 873, "3060": 873, "2899": 873, "1893": 873, "needs_input_grad": [877, 1894], "setup_context": [878, 1895], "save_for_forward": [878, 1895], "grad_input": [879, 886, 888, 901, 1193, 1427, 1603, 1894, 1900], "underneath": 880, "generate_vmap_rul": [880, 1895], "out_dim": [880, 1134, 1857, 1867, 1883, 1895], "grad_tensor": [881, 895, 1867, 1892], "grad_vari": 881, "forward_ad": 882, "dual": [882, 883, 884, 1652, 1895], "make_du": [882, 884], "your_fn": 882, "unpack_du": [882, 883], "grad_aft": 882, "dual_level": [883, 884], "primal": [884, 1125, 1129, 1130, 1133], "x_npy": 885, "once_differenti": [885, 886, 887, 888, 1894], "g1": [886, 888, 1892, 1923], "g2": [886, 888, 1892, 1923], "oppos": [887, 1895], "weren": 887, "grad_out": [887, 1867, 1897, 1949], "gx": 887, "gy": 887, "gz": 887, "simplefunc": 888, "induc": [888, 1526, 1564, 1887, 1942], "outer_jacobian_strategi": 889, "disconnect": [889, 890, 891, 892, 893, 894], "said": [889, 890, 891, 892, 893, 894, 1876, 1903], "cliff": [889, 891, 895], "_debug_only_display_vmap_fallback_warn": [889, 895], "pow_reduc": [889, 890, 893], "2265": 889, "8221": 889, "9456": [889, 910], "2550": 889, "viewbackward": [889, 891], "pow_adder_reduc": [889, 890, 893], "func_output": [890, 892, 893, 894], "1448": 890, "0239": 890, "6456": 890, "4988": 890, "4310": 890, "sumbackward0": [890, 893], "3030": 890, "vhp": 890, "batched_grad": 891, "exp_reduc": [891, 892, 894], "4917": 891, "4352": 891, "4369": 891, "3799": 891, "exp_add": 891, "8052": 891, "3963": 891, "3090": 892, "6742": 892, "9114": 892, "2106": 892, "sumbackward1": [892, 894], "squeezebackward1": 892, "adder": [892, 894], "2399": 892, "5005": 892, "0689": 893, "2431": 893, "0989": 893, "4456": 893, "8053": [893, 1740], "7817": 894, "2458": 894, "7830": 894, "7782": 894, "4458": 894, "3962": 894, "3042": [894, 1251], "6354": 894, "1288": [894, 1769], "0652": 894, "5483": 894, "5035": 894, "2046": [894, 953], "1292": 894, "1432": 894, "3059": 894, "3225": 894, "6652": 894, "7753": 894, "0152": 894, "4225": 894, "3340": 894, "only_input": 895, "allow_unus": [895, 1867], "is_grads_batch": 895, "materialize_grad": 895, "require_grad": [895, 1869, 1889], "06": [896, 897, 1234, 1239, 1240, 1251, 1252, 1257, 1381, 1436, 1475, 1478, 1523, 1592, 1664, 1678, 1811, 1867, 1932], "raise_except": [896, 897], "check_sparse_nnz": 896, "nondet_tol": [896, 897], "check_undefined_grad": [896, 897], "check_grad_dtyp": [896, 897], "check_batched_grad": [896, 897], "check_batched_forward_grad": 896, "check_forward_ad": 896, "check_backward_ad": 896, "fast_mod": [896, 897, 1897], "differenc": [896, 1894], "perturb": [896, 897, 1897], "sparsetensor": [896, 1796], "gradgradcheck": [896, 1894], "gen_non_contig_grad_output": 897, "check_fwd_over_rev": 897, "check_rev_over_rev": 897, "noncontigu": [897, 1009, 1932], "inaccuraci": 897, "clonebackward0": 899, "gi": [901, 902, 1900], "removablehandl": [901, 902, 1193, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1913], "eventlist": [904, 905], "chrome": [904, 1915, 1948, 1952], "group_by_stack_n": [905, 1915], "roof": 905, "functioneventavg": [905, 907], "window_length": [909, 918, 1150, 1151, 1213, 1867], "2n": [909, 1764, 1925], "trim": [909, 918, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1150, 1151, 1190], "_length": [909, 918, 1150, 1151, 1190, 1350, 1807], "sim": [910, 1441, 1569, 1702, 1722], "pseudorandom": [910, 1317, 1655, 1699, 1702, 1718, 1720, 1722, 1724, 1812], "1737": 910, "0950": [910, 1789], "3609": 910, "7148": 910, "0289": [910, 1835], "2676": 910, "8937": 910, "7202": 910, "2500": [911, 1084, 1086, 1087, 1097, 1102, 1264, 1479, 1716], "7500": [911, 1087, 1097, 1116, 1146, 1249, 1264, 1479, 1716, 1772], "AND": [912, 1275, 1869, 1889], "OR": [915, 1277, 1869], "xor": [917, 1278, 1869], "blackman": [918, 1774], "arrang": 919, "broadcast_tensor": [921, 1867, 1911], "out_int32": [924, 1745, 1867], "opposit": [924, 1087, 1089, 1811, 1831], "formal": [924, 1745, 1876, 1883], "eg": [924, 1738, 1745, 1953], "tensor_a": [926, 939], "tensor_b": 926, "6580": 927, "0969": 927, "4614": 927, "1034": [927, 1066], "5790": 927, "1497": 927, "compute_mod": [928, 1949], "use_mm_for_euclid_dist_if_necessari": 928, "distanc": [928, 1190, 1229, 1230, 1257, 1387, 1436, 1475, 1476, 1566, 1685, 1807, 1811, 1865], "infti": [928, 1190, 1245, 1343, 1395, 1396, 1458, 1566, 1676, 1926], "use_mm_for_euclid_dist": 928, "donot_use_mm_for_euclid_dist": 928, "minkowski": [928, 1566], "ham": [928, 1150, 1566, 1770], "closest": [928, 1566], "xn": [928, 1566], "4821": [928, 931], "059": 928, "0590": 928, "1763": [928, 1728], "4713": [928, 1728], "6986": [928, 1728], "3702": [928, 1728], "1193": [928, 1283], "0959": 928, "7138": 928, "8322": 928, "2830": [928, 1837], "3791": 928, "6341": 929, "4208": 929, "0900": 929, "5826": 929, "clr": [930, 1685], "3375": 930, "9790": 930, "1119": 930, "6577": 930, "5609": [930, 1517], "5095": 930, "2614": 930, "4038": 930, "3378": [930, 1837], "4982": 930, "2457": [930, 1296], "2561": 930, "4684": 930, "7163": 930, "9647": 930, "8917": [930, 1274], "3213": [930, 1270], "2284": [930, 1046], "8615": 930, "2816": 930, "tu": 931, "mt": [931, 1223, 1230, 1232, 1236, 1237, 1238, 1243, 1252, 1709, 1811, 1867, 1876, 1911, 1929, 1931], "4112": 931, "7486": 931, "4551": 931, "3544": 931, "6724": 931, "5528": 931, "0592": [931, 1900], "9371": 931, "5487": 931, "7023": 931, "03": [931, 1271, 1767, 1768, 1773], "3842e": [931, 1239], "hermitian": [932, 933, 954, 1082, 1083, 1085, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1223, 1224, 1229, 1230, 1232, 1236, 1237, 1238, 1248, 1251, 1257, 1867], "9314": 932, "2251": [932, 966, 1226, 1268], "0889": 932, "4439": 932, "2122": 932, "1412": 932, "6358e": 932, "lh": [933, 1239], "1625": 933, "6097": 933, "8398": 933, "2387": [933, 954], "3771": [933, 1240], "4173": 933, "1626": [933, 966, 1226], "6881e": 933, "tensor_split": [934, 1064, 1156, 1858, 1867, 1911, 1929], "min_valu": [935, 1386], "max_valu": [935, 1386, 1867], "_valu": [935, 1335, 1612, 1796, 1894, 1911, 1925], "7120": 935, "1734": [935, 1167], "0478": [935, 1860], "0922": 935, "3333": [935, 1146, 1155, 1479, 1480, 1825], "horizont": [938, 1156, 1158, 1912, 1914, 1944], "hstack": [938, 1867, 1911, 1925], "with_replac": [939, 1867], "combinations_with_replac": 939, "fullgraph": [940, 1944, 1954], "cache_size_limit": [940, 1944, 1947, 1954], "subgraph": [940, 1661, 1889, 1893, 1910, 1913, 1935, 1941, 1943, 1954], "list_backend": [940, 1936, 1940, 1946], "autotun": [940, 1948], "cudagraph": [940, 1001, 1892, 1936, 1944, 1946, 1948, 1951], "realloc": [940, 1167], "triton": [940, 1895, 1936, 1939, 1941, 1944, 1946, 1954], "_inductor": [940, 1944, 1954], "list_mode_opt": 940, "notabl": [940, 1869], "epilogue_fus": 940, "templat": [940, 1009, 1010, 1912], "max_autotun": 940, "fallback_random": [940, 1944, 1954], "shape_pad": 940, "graph_diagram": 940, "pictur": 940, "list_opt": 940, "_glibcxx_use_cxx11_abi": 941, "exclude_tag": 946, "flip": [951, 1107, 1108, 1261, 1867, 1911, 1912, 1944, 1949], "lazi": [951, 1206, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1598, 1865, 1942], "writeabl": [951, 952], "is_conj": [951, 1733, 1867, 1911, 1944], "geq": [953, 1137, 1225, 1233, 1363, 1413, 1434, 1435, 1445, 1509, 1561, 1614, 1887, 1926], "signbit": [953, 1867, 1911, 1925, 1949], "2557": 953, "0026": 953, "5387": 953, "4740": 953, "9244": 953, "7079": 953, "2778": 953, "0249": [953, 1269], "5719": 953, "0059": 953, "2600": 953, "4475": 953, "9567": [953, 1229, 1810], "5757": 953, "1751": 953, "0742": 953, "2998": 953, "1054": 953, "2373": 953, "3190": [953, 1892], "1128": [953, 1251, 1397], "pearson": 954, "coeffici": [954, 1150, 1664, 1666, 1667, 1668, 1670, 1676, 1680, 1769, 1770, 1771, 1834], "r_": [954, 1827], "ij": [954, 1066, 1273, 1281, 1295, 1430, 1788], "c_": [954, 1355, 1356, 1357, 1358, 1359, 1360, 1397, 1439, 1440], "jj": 954, "cov": [954, 1867, 1911], "2678": [954, 1370], "0908": 954, "3766": 954, "2780": 954, "5812": 954, "1535": [954, 1370], "2350": 954, "3582": 954, "4309": 955, "2706": 955, "8562": 955, "9796": [955, 1239], "1395": 955, "2957": 955, "6553": 955, "5574": 955, "1632": 956, "1835": 956, "6979": 956, "7325": [956, 1056], "0133": 956, "7860": 956, "2536": 956, "2805": 956, "sleef": [956, 1778], "y_": [958, 1076, 1267, 1268, 1270, 1344, 1363, 1393, 1788, 1832, 1889, 1926], "_w": 958, "w_i": [958, 1233], "mu_x": 958, "mu_i": [958, 1670], "w_ia_i": 958, "whichev": [958, 1134, 1526, 1710, 1857, 1892], "w_ix_": 958, "mathbb": [958, 1146, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1363, 1434, 1614], "bessel": [958, 1213, 1773, 1805, 1806, 1852, 1853, 1926], "unbias": [958, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1805, 1806, 1852, 1853, 1867, 1949], "corrcoef": [958, 1867, 1911], "6667": [958, 1155, 1479, 1480, 1730, 1764, 1905], "fw": 958, "4282": 958, "0255": [958, 1053], "4144": [958, 1892], "4169": 958, "streamcontext": [964, 1041, 1865], "abstractcontextmanag": 964, "3956": [966, 1226], "1455": [966, 1226, 1906], "6895": [966, 1226], "5849": [966, 1226], "3599": [966, 1226], "7180": [966, 1226], "0521": [966, 1226], "1339": [966, 1226], "0225": [966, 1226, 1239], "0257": [966, 1226], "4725": [966, 1226], "1479": [966, 1226], "7005": [966, 1226], "9757": [966, 1226], "3904": [966, 1226], "3726": [966, 1226], "1836": [966, 1226], "9688": [966, 1226], "7153": [966, 1226, 1926], "2159": [966, 1226], "0844": [966, 1226], "5281": [966, 1226], "6120": [966, 1226], "4490": [966, 1226], "5687": [966, 1226], "9792": [966, 1047, 1226], "8304": [966, 1226], "3037": [966, 1226, 1900], "5650": [966, 1226], "2329": [966, 1226], "9883": [966, 1226], "0551": [966, 1226], "capture_begin": [967, 1892], "capture_error_mod": [967, 1001], "make_graphed_cal": [967, 1892], "graph_pool_handl": [967, 1001], "other_graph_inst": [967, 1001], "cudastreamcapturemod": [967, 1001], "thread_loc": [967, 1001], "cudamalloc": [967, 1001, 1023, 1892, 1956], "unsaf": [967, 1001, 1265, 1616, 1619, 1867, 1892, 1913], "capture_end": [967, 1892], "replai": [967, 1001, 1892, 1908, 1939, 1954], "debug_dump": 967, "debug_path": 967, "enable_debug_mod": 967, "path_to_so_fil": 968, "alloc_fn_nam": 968, "free_fn_nam": 968, "ctype": [968, 1944], "change_current_alloc": [968, 1892], "ssize_t": [968, 1892], "cudastream_t": [968, 970, 1892], "ptr": [968, 1892], "size_t": 968, "oss": 968, "enable_tim": [969, 1305, 1892], "interprocess": 969, "marker": [969, 1305], "elapsed_tim": [969, 1305, 1892], "end_ev": [969, 1305, 1892], "elaps": [969, 1305, 1879], "from_ipc_handl": 969, "reconstruct": [969, 1283, 1343, 1344, 1897, 1905, 1913], "ipc": [969, 1005], "ipc_handl": 969, "cudaeventsynchron": 969, "cudastreamwaitev": [969, 970, 972], "stream_ptr": 970, "record_ev": [970, 972], "cudastreamsynchron": [970, 972], "wait_ev": [970, 972], "interoper": 974, "caching_allocator_delet": 974, "mem_ptr": 975, "caching_allocator_alloc": 975, "peer_devic": 976, "_cudaalloc": 977, "clock": 978, "sm": 978, "hertz": 978, "smi": [978, 991, 1019, 1025, 1029, 1043, 1044, 1892, 1896, 1898], "buffer_s": 980, "10485760": 980, "chunk_siz": [983, 1128, 1134, 1857], "cublashandle_t": 984, "unoccupi": [991, 1304], "pytorch_cuda_alloc_conf": [992, 1892], "cudamallocasync": [992, 1023, 1892], "_cudadeviceproperti": 996, "gencod": 997, "cuda_graph": 1001, "ordinari": [1003, 1607, 1849, 1888], "code_str": [1009, 1010], "temp": 1009, "typenam": [1009, 1010], "my_kernel": [1009, 1010], "jitted_fn": [1009, 1010], "create_jit_fn": [1009, 1010], "util_fn": 1009, "gelu": [1009, 1456, 1470, 1472, 1474, 1579, 1867, 1884, 1911, 1949], "my_gelu": 1009, "my_lib": [1009, 1873, 1906], "impl": [1009, 1199, 1873], "num_output": 1010, "sample_arg": 1012, "num_warmup_it": 1012, "allow_unused_input": 1012, "datadistributedparallel": 1012, "amp": [1012, 1849, 1865, 1888, 1948, 1951, 1954], "autocast": [1012, 1433, 1865, 1892, 1894, 1954], "insuffici": [1013, 1942, 1954], "manual_seed_al": [1013, 1849], "occupi": [1015, 1019, 1030, 1302, 1415, 1544, 1892, 1898, 1957], "reset_peak_memory_stat": [1015, 1017, 1030, 1031], "max_memory_reserv": [1016, 1892, 1898], "cudamemgetinfo": 1018, "memory_reserv": [1020, 1892, 1898], "snapshot": [1022, 1865, 1869, 1892, 1898], "large_pool": 1023, "small_pool": 1023, "allocated_byt": 1023, "reserved_byt": 1023, "active_byt": 1023, "inactive_split": 1023, "inactive_split_byt": 1023, "octob": 1023, "1mb": [1023, 1956], "num_alloc_retri": 1023, "num_oom": 1023, "assist": [1023, 1893], "max_split_s": 1023, "oversize_alloc": 1023, "oversize_seg": 1023, "requested_byt": 1023, "abbrevi": 1024, "percent": [1025, 1044, 1948], "instantan": [1026, 1915], "ascii": [1026, 1028, 1265, 1869, 1915], "sensor": [1029, 1043], "mw": 1029, "milliwatt": 1029, "fermi": 1029, "max_memory_alloc": [1030, 1892, 1898], "max_memory_cach": 1031, "memory_stat": [1032, 1892, 1898], "seed_al": 1033, "environment": [1035, 1948], "total_memori": [1036, 1312], "debug_mod": [1040, 1752], "centigrad": 1043, "x_1": [1045, 1046, 1047, 1048, 1261, 1348, 1361, 1362, 1497, 1508, 1832], "x_2": [1045, 1046, 1047, 1048, 1261, 1348, 1361, 1362, 1497, 1508], "x_3": [1045, 1046, 1047, 1048, 1261], "3449": 1045, "5447": 1045, "0685": 1045, "5104": [1045, 1892], "1706": 1045, "2259": 1045, "4696": 1045, "3284": 1045, "9946": 1045, "8209": [1045, 1048], "6628": 1046, "0975": 1046, "2680": [1046, 1891], "3298": [1046, 1053], "4220": 1046, "3885": 1046, "1762": 1046, "9165": 1046, "6684": [1046, 1170], "6001": 1047, "2069": 1047, "1919": 1047, "6727": [1047, 1060], "0062": 1047, "4126": 1047, "2129": 1047, "4206": 1047, "1968": [1047, 1926], "1241": 1047, "0238": 1047, "0233": [1047, 1717], "0157": 1047, "0158": [1047, 1811], "0065": 1047, "0014": [1047, 1926], "0006": 1047, "8286": 1048, "4890": 1048, "5155": 1048, "8443": 1048, "1865": 1048, "1752": [1048, 1056], "0595": 1048, "1850": 1048, "1571": [1048, 1900, 1905], "4243": 1048, "3175": 1048, "8020": [1048, 1707], "0423": 1048, "2289": 1048, "0537": 1048, "0058": 1048, "9780": 1048, "trapezoid": [1049, 1833, 1867, 1911], "360": 1050, "2832": 1050, "diagflat": [1053, 1867, 1911], "5950": 1053, "0872": 1053, "4264": 1053, "1064": [1053, 1900], "8795": 1053, "2429": 1053, "1374": 1053, "1029": 1053, "6482": 1053, "6300": 1053, "5410": 1054, "2934": 1054, "1788": [1054, 1926], "5684": 1054, "0845": [1054, 1778, 1900], "3986": 1054, "2956": [1055, 1226], "9068": 1055, "1695": 1055, "2094": [1055, 1892], "3018": 1055, "1516": 1055, "9342": 1055, "0854": 1056, "1431": 1056, "8536": 1056, "0905": 1056, "0360": [1056, 1316], "6927": 1056, "3735": 1056, "4945": 1056, "2631": [1056, 1315, 1892], "3755": 1056, "5977": 1056, "8172": 1056, "1065": [1056, 1900], "0401": 1056, "2235": [1056, 1810], "7938": 1056, "3081": 1056, "6166": 1056, "2335": 1056, "0500": 1056, "7336": 1056, "3836": 1056, "1015": 1056, "emb": [1057, 1748, 1779], "5393": 1060, "8675": 1060, "5916": 1060, "6321": 1060, "0967": 1060, "0511": 1060, "6295": 1060, "8360": 1060, "6973": 1060, "6537": 1060, "dividend": [1061, 1111, 1114, 1729, 1839], "true_divid": [1061, 1867, 1911], "3810": [1061, 1154], "2774": 1061, "2972": 1061, "3719": 1061, "4637": 1061, "7620": 1061, "5548": 1061, "5944": 1061, "7438": 1061, "9274": 1061, "3711": 1061, "9353": 1061, "4605": 1061, "2917": 1061, "1815": [1061, 1274], "0111": [1061, 1767], "9805": 1061, "5923": 1061, "1062": 1061, "4581": [1061, 1233], "7759": 1061, "2344": 1061, "1830": 1061, "0313": 1061, "1908": 1061, "4757": 1061, "8032": 1061, "2930": 1061, "8113": 1061, "2308": 1061, "4620": [1061, 1860], "6051": 1061, "5676": 1061, "2639": 1061, "2260": 1061, "4509": [1061, 1247], "2086": 1061, "1322": 1061, "9764": 1061, "9564": 1061, "3484": 1061, "2278": 1061, "1068": [1061, 1167], "4678": 1061, "3938": [1061, 1820], "depthwis": [1064, 1065, 1355, 1356, 1357], "atleast_3d": [1065, 1867, 1911], "notat": [1066, 1393, 1758, 1870, 1900, 1931], "einstein": 1066, "summat": [1066, 1190, 1273, 1281, 1925], "subscript": [1066, 1870, 1902], "jk": [1066, 1948], "ik": [1066, 1266, 1788], "za": 1066, "alphabet": [1066, 1510, 1921], "arrow": [1066, 1923], "ki": 1066, "ellipsi": [1066, 1869, 1870, 1883], "fourth": 1066, "whitespac": [1066, 1870], "opt_einsum": [1066, 1865], "_the_": 1066, "disclaim": 1066, "sublist": [1066, 1954], "52": 1066, "op1": [1066, 1869], "sublist1": 1066, "op2": [1066, 1869], "sublist2": 1066, "subslist_out": 1066, "2104": 1066, "7952": 1066, "2433": 1066, "4545": 1066, "1156": 1066, "2897": [1066, 1900], "3918": 1066, "4963": 1066, "3744": 1066, "9381": 1066, "2685": 1066, "6070": 1066, "7208": 1066, "8058": 1066, "4419": 1066, "0936": 1066, "1713": 1066, "4291": 1066, "5802": 1066, "7350": [1066, 1926], "5704": 1066, "4290": 1066, "9323": 1066, "4480": 1066, "bij": 1066, "bjk": 1066, "bik": 1066, "0564": 1066, "5904": 1066, "2023": 1066, "1271": 1066, "6706": [1066, 1710], "8097": 1066, "8025": 1066, "1183": 1066, "2239": [1066, 1253], "3107": 1066, "5756": 1066, "2354": 1066, "4558": 1066, "3460": 1066, "5087": 1066, "8530": [1066, 1352, 1482], "8153": 1066, "8787": 1066, "3839": [1066, 1856], "2112": [1066, 1835], "3728": 1066, "1131": [1066, 1707], "0921": 1066, "8305": 1066, "ji": 1066, "anm": 1066, "bm": 1066, "ba": 1066, "3430": [1066, 1274], "2405": 1066, "4494": 1066, "3311": 1066, "5201": 1066, "0356": 1066, "4064e": 1067, "8000e": 1067, "3493e": 1067, "5751e": 1067, "1428e": 1067, "5955e": 1067, "9683e": 1069, "1239e": 1069, "0705e": 1069, "orig_func": [1070, 1652], "set_grad_en": [1070, 1867, 1911, 1933], "doubler": [1070, 1168, 1652], "tripler": [1070, 1652], "elsewher": [1071, 1079, 1137, 1149, 1183, 1185, 1186, 1189, 1218, 1282, 1328, 1789, 1864], "_max": [1080, 1081, 1916], "_min": [1080, 1081, 1916], "nearbi": [1080, 1081], "_int": [1080, 1081], "_point": [1080, 1081], "2525": 1080, "0466": 1080, "3491": [1080, 1247], "2168": [1080, 1827], "5906": [1080, 1926], "6258": 1080, "6444": 1080, "0542": 1080, "0475": [1080, 1926], "0486": 1080, "3405": 1080, "6134": [1080, 1296], "6323": 1080, "0552": 1081, "9730": 1081, "3973": 1081, "0780": 1081, "4000": [1081, 1084, 1093, 1102, 1479, 1713, 1764], "fourier": [1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1190, 1774, 1807, 1865], "rfft": [1082, 1087, 1097, 1101, 1102, 1103], "compact": [1082, 1083, 1085, 1236, 1238, 1241, 1894, 1910, 1916], "chalf": [1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1099, 1867, 1911, 1931], "sm53": [1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103], "ortho": [1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1266], "orthonorm": [1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1257, 1614, 1811], "ifft": [1082, 1086, 1087, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099], "fftn": [1083, 1086, 1092, 1095, 1103], "rfft2": [1083, 1098], "ifft2": [1083, 1095], "two_fft": [1083, 1085, 1095, 1101, 1103], "check_strid": [1083, 1085, 1086, 1091, 1092, 1097, 1098, 1099, 1101, 1103, 1932], "nyquist": [1084, 1086, 1094, 1096, 1100, 1101, 1102, 1103], "i_1": [1085, 1103, 1214], "i_n": [1085, 1103, 1134, 1214, 1827, 1857], "rfftn": [1085, 1089, 1095, 1099, 1101], "ifftn": [1085, 1091, 1096], "reorder": [1086, 1249], "rearrang": [1086, 1093, 1351, 1439, 1440, 1567, 1568, 1883], "fftfreq": [1086, 1093, 1102], "9000": [1086, 1825], "8000": [1086, 1322, 1479, 1710, 1764], "uncent": 1086, "ifftshift": 1086, "x_center": 1086, "x_uncent": 1086, "fft_uncent": 1086, "fft_center": 1086, "x_centered_2": 1086, "ihfft": [1087, 1095, 1096], "irfft": [1087, 1099, 1100], "symmetri": [1087, 1089, 1807], "transformed_dim_s": [1087, 1097], "0000j": [1087, 1094, 1097, 1223, 1224, 1229, 1230, 1232, 1703, 1761], "1250": [1087, 1315], "1720j": 1087, "0406j": 1087, "2809": 1087, "6250": [1087, 1097, 1116, 1479], "9691": 1087, "hfftn": [1088, 1096], "last_dim_s": [1088, 1089, 1098, 1099, 1949], "ihfft2": 1088, "roundtrip": [1088, 1089, 1097, 1098, 1099], "ihfftn": [1089, 1095], "irfftn": [1089, 1098, 1103], "fft2": [1091, 1101], "two_ifft": [1091, 1092, 1096], "fftshift": 1093, "hfft": 1094, "6882j": 1094, "1625j": 1094, "hfft2": 1095, "8602j": 1097, "2031j": 1097, "1562": 1097, "3511": 1097, "7812": 1097, "2114": 1097, "irfft2": 1101, "wider": [1109, 1866, 1869, 1912, 1925], "49": [1109, 1249, 1891], "2500e": 1109, "1000e": 1109, "7656e": 1109, "lfloor": [1110, 1115, 1335, 1340, 1341, 1342, 1355, 1356, 1357, 1374, 1395, 1396, 1420, 1421, 1422, 1478, 1479, 1480, 1481, 1495, 1564, 1725, 1807], "rfloor": [1110, 1115, 1335, 1340, 1341, 1342, 1355, 1356, 1357, 1374, 1395, 1396, 1420, 1421, 1422, 1478, 1479, 1480, 1481, 1495, 1564, 1725, 1807], "8166": 1110, "5308": 1110, "2530": 1110, "2091": 1110, "7000": [1112, 1371, 1763], "3000": [1113, 1370, 1763, 1892], "entrywis": [1114, 1729], "modulu": [1114, 1253, 1729], "operatornam": [1115, 1229, 1230, 1231, 1232, 1249, 1257, 1343, 1344, 1350, 1387, 1388, 1394, 1418, 1458, 1476, 1763], "8750": [1116, 1479], "char": [1119, 1660, 1882, 1927, 1944], "parameter_and_buffer_dict": 1122, "tie_weight": [1122, 1649], "submodule_nam": [1122, 1649], "parameter_nam": [1122, 1649], "ti": [1122, 1649, 1738, 1943], "ty": [1122, 1649], "foo_ti": [1122, 1649], "new_a": [1122, 1649], "mutlipl": 1122, "grad_weight": [1122, 1894], "detached_param": 1122, "parameters_and_buffer_dict": 1122, "reparamater": [1122, 1649], "paramat": 1122, "intermediate_upd": 1123, "mutations_and_view": 1123, "intermeid": 1123, "proxy_tensor": [1123, 1943, 1954], "make_fx": [1123, 1942, 1954], "inpt": 1123, "f_trace": 1123, "f_no_mutations_trac": 1123, "f_no_mutations_and_views_trac": 1123, "a_1": [1123, 1214], "view_1": 1123, "view_copi": [1123, 1867, 1911, 1933], "view_copy_1": 1123, "as_strid": [1123, 1867, 1911, 1929, 1949], "writ": 1123, "native_funct": [1123, 1894, 1949], "yaml": [1123, 1894, 1949], "aux": [1124, 1125, 1127, 1128, 1129, 1133], "my_loss_func": 1124, "y_pred": [1124, 1892], "loss_per_sampl": 1124, "y_true": 1124, "autodiff": [1127, 1128, 1129, 1252], "jacobian_f": [1127, 1128], "f_x": [1127, 1128], "jacboian": [1127, 1128], "expectedx": [1127, 1128], "expectedi": [1127, 1128], "_preallocate_and_copi": 1128, "stand": [1129, 1133, 1868, 1913, 1923], "jvp_out": 1129, "jvp_fn": 1130, "requr": 1130, "optimiz": [1132, 1866], "l1": [1132, 1387, 1388, 1458, 1535, 1580, 1624, 1633, 1900, 1905], "l2": [1132, 1388, 1418, 1458, 1663, 1664, 1665, 1666, 1668, 1670, 1676, 1677, 1679, 1888], "vjpfunc": 1133, "unsuccessfulli": [1134, 1857], "rummag": [1134, 1857], "batched_dot": [1134, 1857], "jacobian_row": [1134, 1857], "get_vjp": [1134, 1857], "n1": [1134, 1731, 1857], "n0": [1134, 1857], "batched_pow": [1134, 1857], "autobatch": [1134, 1857], "sparse_grad": [1135, 1867, 1949], "tau": [1138, 1233, 1528, 1665, 1679, 1696, 1697, 1767, 1867], "elementari": [1138, 1889, 1897], "reflector": [1138, 1614, 1697], "household": [1138, 1233, 1614, 1697], "householder_product": [1138, 1614, 1696], "gel": [1138, 1239], "set_default_dtyp": 1140, "set_deterministic_debug_mod": [1141, 1846], "set_float32_matmul_precis": 1142, "edge_ord": [1146, 1867], "rightarrow": 1146, "closer": [1146, 1476, 1710, 1894, 1900, 1916, 1946, 1947, 1948], "interior": 1146, "theorem": 1146, "h_l": 1146, "h_r": 1146, "neighbor": [1146, 1190, 1479, 1481, 1807], "xi_1": 1146, "xi_2": 1146, "approx": [1146, 1812, 1897], "80": [1146, 1249, 1689, 1758, 1892, 1912], "halv": 1146, "coord": 1146, "54": [1150, 1389, 1770], "46": [1150, 1769], "hann_window": [1150, 1807, 1867, 1871, 1911], "hann": [1151, 1770], "hist": [1154, 1155, 1867], "bin_edg": [1154, 1155, 1867], "9524": 1154, "leftmost": [1155, 1884], "leg": 1159, "triangl": [1159, 1930], "hypotenus": 1159, "4031": 1159, "gammainc": [1161, 1926], "gammaincc": [1162, 1926], "index_reduce_": [1166, 1867], "1427": 1167, "0231": 1167, "5414": 1167, "0009": 1167, "4664": [1167, 1827], "2647": 1167, "1228": 1167, "6571": 1167, "7230": 1167, "6004": 1167, "inferencemod": [1168, 1889], "bump": 1168, "_version": [1168, 1911], "multidimension": [1170, 1263, 1390], "8173": 1170, "0874": 1170, "1784": 1170, "3279": 1170, "7894": 1170, "4682": 1170, "7159": 1170, "1506": 1170, "4034": 1170, "3657": 1170, "0387": 1170, "9892": 1170, "1774": 1170, "3261": 1170, "3917": 1170, "4537": [1170, 1598], "7493": 1170, "1724": 1170, "2291": 1170, "5749": 1170, "2267": 1170, "7920": 1170, "3607": 1170, "3701": 1170, "3666": 1170, "5850": [1170, 1224], "7242": 1170, "9837": 1170, "1560": 1170, "2907": 1170, "6785": 1170, "5671": [1170, 1225], "5452": 1170, "6912": 1170, "5509": 1170, "1782": 1170, "9843": 1170, "7366": 1170, "5672": [1170, 1655], "5115": 1170, "4864": 1170, "2476": 1170, "4337": 1170, "6347": 1170, "1748": 1170, "3567": [1170, 1224], "6558": 1170, "2469": [1170, 1900], "5787": [1170, 1274], "typecheck": [1180, 1911], "mypi": [1180, 1868, 1869], "warn_alwai": 1181, "set_warn_alwai": 1181, "nonfinit": 1182, "test_el": [1184, 1867], "assume_uniqu": [1184, 1867], "0j": [1189, 1854], "nola": 1190, "envelop": 1190, "hop": [1190, 1807], "shorter": [1190, 1910, 1921], "griffin": 1190, "ieee": [1190, 1381, 1774, 1903], "tran": 1190, "assp": 1190, "vol": [1190, 1381, 1774], "pp": [1190, 1381, 1774], "236": 1190, "apr": 1190, "1984": 1190, "slide": [1190, 1340, 1341, 1342, 1374, 1420, 1421, 1422, 1478, 1520, 1550, 1551, 1552, 1594, 1714, 1715, 1807], "fft_size": 1190, "scriptmodul": [1191, 1192, 1197, 1201, 1203, 1204, 1205, 1209, 1210, 1662, 1866, 1868, 1877, 1910], "implic": [1191, 1209, 1894, 1921, 1925], "attributemodul": 1191, "names_ag": 1191, "get_debug_st": 1192, "graphexecutorst": 1192, "_extra_fil": [1192, 1193, 1201, 1204, 1899], "save_to_buff": 1192, "add_modul": [1193, 1427], "init_weight": [1193, 1427, 1900], "buf": [1193, 1427], "20l": [1193, 1427], "1l": [1193, 1427], "5l": [1193, 1427], "pretti": [1193, 1661, 1758, 1866, 1940, 1943, 1947], "syntax": [1193, 1866, 1869, 1913, 1945], "code_with_const": 1193, "constmap": 1193, "extra_repr": [1193, 1427, 1894], "get_buff": [1193, 1427], "attributeerror": [1193, 1427, 1894, 1916], "get_extra_st": [1193, 1427], "set_extra_st": [1193, 1427], "get_paramet": [1193, 1427], "net_b": [1193, 1427], "net_c": [1193, 1427], "transit": [1193, 1295, 1427, 1807, 1865, 1866, 1936, 1947], "inlined_graph": 1193, "ipu": [1193, 1427, 1905], "missing_kei": [1193, 1427], "unexpected_kei": [1193, 1427], "remove_dupl": [1193, 1427], "named_children": [1193, 1427, 1900], "conv4": [1193, 1427], "conv5": [1193, 1427], "memo": [1193, 1427, 1943], "register_backward_hook": [1193, 1427, 1603], "register_full_backward_hook": [1193, 1427, 1900], "register_forward_hook": [1193, 1427, 1601, 1900], "with_kwarg": [1193, 1427], "always_cal": [1193, 1427, 1601], "fire": [1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680, 1893, 1899, 1950], "register_module_forward_hook": [1193, 1427, 1900], "register_forward_pre_hook": [1193, 1364, 1427, 1602, 1900], "forward_pr": [1193, 1427], "register_module_forward_pre_hook": [1193, 1427, 1900], "register_module_full_backward_hook": [1193, 1427, 1599, 1889, 1900], "register_full_backward_pre_hook": [1193, 1427, 1900], "register_module_full_backward_pre_hook": [1193, 1427, 1900], "register_load_state_dict_post_hook": [1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "incompatible_kei": [1193, 1427], "register_modul": [1193, 1427, 1605], "register_paramet": [1193, 1427, 1606, 1894, 1900], "register_state_dict_pre_hook": [1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "keep_var": [1193, 1427], "gan": [1193, 1427, 1615, 1648], "witch": 1193, "share_memori": [1193, 1427, 1902], "share_memory_": [1193, 1427, 1881, 1927], "shallow": [1193, 1364, 1427, 1475, 1476, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "4d": [1193, 1346, 1374, 1391, 1427, 1479, 1520, 1537, 1564, 1595, 1713], "1913": [1193, 1427], "3420": [1193, 1427], "5113": [1193, 1427, 1827], "2325": [1193, 1226, 1427], "gpu1": [1193, 1427], "1914": [1193, 1427], "5112": [1193, 1427, 1892], "3741": [1193, 1427], "2382": [1193, 1316, 1427], "5593": [1193, 1427], "4443": [1193, 1427], "6122": [1193, 1427], "1150": [1193, 1427], "to_empti": [1193, 1427], "dst_type": [1193, 1427], "set_to_non": [1193, 1427, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1892], "the_typ": 1194, "the_valu": 1194, "script_bar": 1196, "addmod": 1196, "preserved_attr": 1197, "optimize_numer": 1197, "optimize_for_infer": [1197, 1940], "run_frozen_optim": 1197, "scripted_modul": [1197, 1205, 1905], "frozen_modul": 1197, "modified_tensor": 1197, "mymodule2": 1197, "dump_alias_db": 1197, "pdb": [1198, 1205, 1211, 1866, 1868], "training_method": 1198, "interfacetyp": 1199, "impl1": 1199, "impl2": 1199, "user_fn": 1199, "user_fn_jit": 1199, "target_typ": 1200, "testcod": [1200, 1868], "key1": 1200, "val1": 1200, "key2": 1200, "val2": 1200, "_restore_shap": 1201, "scriptfunct": [1201, 1205, 1206, 1209, 1910], "readlin": [1201, 1265, 1913], "retrac": 1201, "other_method": 1203, "lesser": [1203, 1889, 1891], "extent": [1203, 1891, 1925], "frozen_mod": 1203, "offlin": 1204, "_frames_up": 1205, "_rcb": 1205, "scriptdict": 1205, "scriptlist": 1205, "test_sum": 1205, "scripted_fn": [1205, 1866], "conv2": [1205, 1427, 1455, 1866, 1916], "some_entry_point": 1205, "python_only_fn": 1205, "testnnmodul": 1205, "pdt_model": 1205, "scripted_model": [1205, 1913], "un": [1207, 1350, 1916], "unfus": 1207, "nb": 1207, "check_trac": [1209, 1210], "check_input": [1209, 1210, 1866], "check_toler": [1209, 1210], "_force_outplac": [1209, 1210], "_module_class": [1209, 1210], "_compilation_unit": [1209, 1210], "compilationunit": [1209, 1210], "example_kwarg_input": 1209, "_store_input": [1209, 1210], "trace_modul": [1209, 1866, 1869], "untrack": 1209, "checker": [1209, 1210, 1869, 1910], "diverg": [1209, 1210, 1393, 1538, 1865, 1869], "traced_foo": [1209, 1866], "example_weight": [1209, 1210], "example_forward_input": [1209, 1210], "example_inputs_is_kwarg": 1210, "method2": 1210, "example_method2_input": 1210, "weighted_kernel_sum": 1210, "use_memory_effici": 1211, "memory_effici": 1211, "scriptabl": 1211, "kaiser": [1213, 1470, 1472, 1474], "i_0": [1213, 1214, 1773, 1827, 1926], "zeroth": [1213, 1773, 1926], "out_i": 1213, "kroneck": 1214, "a_0": 1214, "a_n": 1214, "b_0": 1214, "b_1": 1214, "b_n": 1214, "k_0": [1214, 1827], "k_1": 1214, "k_n": 1214, "j_0": 1214, "j_1": 1214, "j_n": 1214, "k_t": 1214, "i_t": [1214, 1397, 1678], "b_t": 1214, "j_t": 1214, "bmatrix": 1214, "a_": [1214, 1285, 1415, 1827], "cdot": [1214, 1239, 1251, 1343, 1344, 1362, 1363, 1385, 1393, 1430, 1431, 1432, 1433, 1434, 1470, 1508, 1531, 1703, 1807, 1926, 1932], "vdot": [1214, 1261, 1262, 1867, 1911], "ddot": [1214, 1261], "kth": 1215, "full_lik": [1219, 1867, 1871, 1911], "logarithm": [1222, 1227, 1253, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1280, 1350, 1510, 1545, 1787, 1926], "gamma": [1222, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1679, 1681, 1685, 1686, 1689, 1694, 1695, 1713, 1865, 1867, 1910, 1911, 1912, 1926], "5724": [1222, 1926], "1208": [1222, 1926], "mathrlap": [1223, 1229, 1230, 1231, 1232, 1240, 1243, 1252, 1254, 1256, 1257, 1614], "qquad": [1223, 1225, 1229, 1230, 1231, 1232, 1233, 1240, 1243, 1252, 1254, 1256, 1257, 1614], "eigenvalu": [1223, 1229, 1230, 1231, 1232, 1245, 1248, 1251, 1256, 1257, 1266, 1699, 1867], "resp": [1223, 1230, 1232, 1256, 1257, 1274], "5266": 1223, "9586": 1223, "0626j": 1223, "4160": 1223, "5895": 1223, "2322": 1223, "2976j": 1223, "4928": [1223, 1827], "4692e": 1223, "8747e": 1223, "check_error": [1224, 1235, 1237, 1242, 1255, 1867], "opportun": [1224, 1866, 1922, 1943, 1944], "performantli": 1224, "3792": 1224, "9831j": 1224, "8757": 1224, "5425": 1224, "6374j": 1224, "kappa": 1225, "_p": [1225, 1436], "frobeniu": [1225, 1239, 1246, 1250, 1654], "nuc": [1225, 1246, 1250, 1263, 1625, 1634, 1654], "nuclear": [1225, 1246, 1250, 1654], "sigma_1": [1225, 1239, 1248, 1251], "sigma_n": 1225, "kappa_2": 1225, "kappa_": 1225, "4142": [1225, 1250, 1654, 1703], "1623": [1225, 1246], "2426": [1225, 1250, 1654], "7071": [1225, 1766], "5917": 1225, "9941": 1226, "5132": 1226, "5681": 1226, "4653": 1226, "4507": 1226, "4119": 1226, "6163": 1226, "1073": 1226, "3957": 1226, "9666": [1226, 1517], "0840": 1226, "3357": 1226, "2139": 1226, "slogdet": [1227, 1274, 1867, 1911], "0934": 1227, "1990": [1227, 1274], "4099": [1227, 1274], "7386": [1227, 1274], "diagonaliz": [1229, 1231], "eigenvector": [1229, 1230, 1266, 1867], "neq": [1229, 1230, 1233, 1257, 1328, 1430, 1432, 1664, 1665, 1666, 1668, 1670, 1676, 1677, 1679, 1683, 1811], "phi": [1229, 1230, 1257, 1377, 1524, 1811], "shall": [1229, 1230, 1257, 1616, 1620], "lambda_i": [1229, 1230, 1245], "lambda_j": [1229, 1230], "eigval": [1229, 1867], "9828": [1229, 1835, 1900], "3889j": 1229, "4617": 1229, "3010j": 1229, "1662": 1229, "7435j": 1229, "6139": 1229, "0562j": 1229, "1226": [1229, 1231], "5738j": [1229, 1231], "7537": [1229, 1231], "1286j": [1229, 1231], "9218": 1229, "1882": 1229, "2220j": 1229, "0270": 1229, "3867j": 1229, "7119e": 1229, "2841e": 1229, "uplo": [1230, 1232, 1867], "unitari": [1230, 1233, 1252, 1257, 1614, 1697], "ill": [1230, 1491, 1903], "eigvalsh": [1230, 1248], "9228": [1230, 1232], "2029": [1230, 1232], "0862j": [1230, 1232], "3464": [1230, 1232], "3277": [1230, 1232], "9415": [1230, 1232], "0846": 1230, "9964": 1230, "9170": 1230, "3898j": 1230, "0331j": 1230, "1062e": 1230, "5423e": 1230, "polynomi": [1231, 1232, 1692, 1944], "_n": [1231, 1232, 1234, 1614, 1894], "4576e": [1231, 1258], "5797": 1232, "4629": 1232, "1605": 1232, "3780": 1232, "1113": [1232, 1900], "7381": 1232, "h_1h_2": 1233, "h_k": 1233, "h_i": [1233, 1461], "_m": [1233, 1614], "tau_i": 1233, "8034": 1233, "4184j": 1233, "2588": 1233, "0174j": 1233, "6853": 1233, "7953j": 1233, "0790": 1233, "5620j": 1233, "6989j": 1233, "5360": 1233, "1193j": 1233, "3877": 1233, "6691j": 1233, "3512": 1233, "3024j": 1233, "4766": 1233, "5783j": 1233, "0361": [1233, 1900], "6587j": 1233, "6396": [1233, 1900], "1612j": 1233, "3693": 1233, "4481j": 1233, "aa": 1234, "pinv": [1234, 1239, 1701], "moor": [1234, 1251], "penros": [1234, 1251], "ainv": [1234, 1235, 1255, 1259], "1921e": 1234, "9073e": [1234, 1478], "5107e": 1234, "ldl": [1236, 1238], "indefinit": 1236, "ld": [1236, 1237, 1238, 1867], "sytrf": [1236, 1237], "ldl_solv": 1236, "ldl_factor_ex": [1236, 1238], "2079": [1236, 1237, 1926], "2414": [1236, 1237], "9428": [1236, 1237], "4554": [1236, 1237], "3264": [1236, 1237], "3823": [1236, 1237], "5884": [1236, 1237], "9595": [1236, 1237, 1766], "2695": [1236, 1237], "8513": [1236, 1237], "1633": [1236, 1237], "ldl_factor": 1237, "rcond": [1239, 1251, 1701, 1867], "_f": 1239, "gelsi": 1239, "gelsd": 1239, "gelss": 1239, "mind": [1239, 1257, 1370, 1889, 1895, 1897, 1916, 1944, 1947, 1952], "tridiagon": 1239, "sigma_i": [1239, 1257, 1811], "residu": [1239, 1266, 1867, 1900], "singular_valu": [1239, 1867], "rh": [1239, 1284], "0838": [1239, 1900], "2275": [1239, 1315], "3844": 1239, "5499": 1239, "1175": 1239, "9102": 1239, "0870": 1239, "6772": 1239, "7758": 1239, "5109": 1239, "4382": 1239, "3769": 1239, "1818": 1239, "3450": 1239, "0806": [1239, 1900], "3967": 1239, "3994": 1239, "1521": 1239, "1473": 1239, "9194": 1239, "0458": 1239, "6705": [1239, 1298], "1802": 1239, "4086": 1239, "5152e": 1239, "almost": [1240, 1241, 1906, 1943], "5007": 1240, "9755": 1240, "0489": 1240, "9644": [1240, 1293], "9605e": 1240, "0376e": 1240, "lu_factor_ex": [1241, 1283], "lu_unpack": [1241, 1283, 1867, 1911], "b1": 1241, "b2": [1241, 1892, 1898], "a_factor": 1241, "getrf": [1242, 1255], "adjoint": [1243, 1867, 1911, 1929, 1931], "_exp": 1245, "7183": [1245, 1900], "3891": 1245, "8660": 1245, "ord": [1246, 1250, 1263, 1654, 1867, 1869, 1911], "la": [1246, 1250, 1263, 1900], "2829": 1246, "2627": 1246, "0756": 1247, "4980": 1247, "6617": 1247, "4994": 1247, "9980": 1247, "2731": 1247, "8001": 1247, "2640": 1247, "4571": 1247, "5511": 1247, "0163": [1247, 1293], "5292": 1247, "4899": 1247, "0822": 1247, "2773": [1247, 1884], "varepsilon": [1248, 1251, 1475], "tol": [1248, 1266, 1867], "fewest": 1249, "nd": [1249, 1903], "bc": [1249, 1912], "75000": 1249, "26": [1249, 1684, 1941, 1954], "148": 1249, "vector_norm": [1250, 1654], "matrix_norm": [1250, 1263, 1615, 1654], "7460": [1250, 1654], "3485": 1250, "8570e": 1250, "8480": 1250, "2361": [1250, 1654, 1655], "7417": [1250, 1654], "computation": [1251, 1897], "5495": [1251, 1315], "0979": 1251, "4092": 1251, "4132": [1251, 1772], "1143": 1251, "3662": 1251, "6374": 1251, "9294": 1251, "3269": [1251, 1900], "5745": [1251, 1805, 1806, 1852, 1853], "0382": [1251, 1316], "5922": 1251, "6759": 1251, "0600": 1251, "1933": 1251, "2090": 1251, "0903": 1251, "0817": 1251, "4752": [1251, 1810], "7124": 1251, "1631": 1251, "2272": 1251, "1356": 1251, "3933": 1251, "5023": 1251, "0308": 1251, "1725": 1251, "5216": 1251, "apinv": 1251, "5633e": 1251, "0830e": 1251, "wide": [1252, 1257, 1614, 1768, 1891, 1894, 1900, 1912, 1944], "51": [1252, 1425, 1709], "167": [1252, 1709], "68": [1252, 1709, 1866, 1868], "8571": [1252, 1709], "3943": [1252, 1709], "3314": [1252, 1709], "4286": [1252, 1709], "9029": [1252, 1709], "0343": [1252, 1709], "2857": [1252, 1709], "1714": [1252, 1709, 1900], "9429": [1252, 1709], "175": [1252, 1709], "q2": 1252, "r2": [1252, 1466], "6099e": 1252, "2158e": 1252, "logabsdet": [1253, 1867], "0032": 1253, "1219": [1253, 1728], "6690": 1253, "1161": 1253, "4053": 1253, "6218": [1253, 1824], "9273": 1253, "0082": 1253, "7576": 1253, "logdet": [1253, 1867, 1911], "linalg_slogdet": [1253, 1867, 1911], "2776": 1253, "solve_triangular": [1254, 1834], "expand_a": [1254, 1867, 1894, 1911, 1929], "rectangular": [1256, 1257, 1285, 1887, 1908], "triu_": [1256, 1867], "tril_": [1256, 1867], "full_matric": [1257, 1258, 1619, 1811, 1867, 1949], "vh": [1257, 1619, 1811, 1867, 1949], "gesvdj": [1257, 1258, 1811], "jacobi": 1257, "gesvda": [1257, 1258], "gesvd": [1257, 1258, 1811], "u_k": 1257, "v_k": 1257, "sigma_j": [1257, 1811], "eigendecomposit": 1257, "0486e": 1257, "0957e": 1257, "5139": 1258, "1087": 1258, "1066": 1258, "ind": [1259, 1260, 1867, 1895], "tensorsolv": 1259, "ndim": [1259, 1260, 1882, 1884, 1925, 1931, 1941], "atensorinv": 1259, "movedim": [1260, 1300, 1867, 1895, 1911, 1929], "tensorinv": 1260, "vandermond": [1261, 1851], "pmatrix": 1261, "x_n": [1261, 1343, 1344, 1387, 1388, 1394, 1418, 1458, 1832, 1889], "125": [1261, 1445, 1851, 1867], "overlin": [1262, 1854], "3223": 1262, "2815": 1262, "1944": [1262, 1900], "4345": 1263, "pickle_modul": [1265, 1741], "weights_onli": [1265, 1864, 1878], "mmap": [1265, 1881], "pickle_load_arg": 1265, "register_packag": [1265, 1905], "binaryio": [1265, 1741, 1913], "mmape": 1265, "untrust": [1265, 1864, 1878, 1913], "tamper": [1265, 1913], "ram": [1265, 1892], "surg": 1265, "unicodedecodeerror": 1265, "codec": 1265, "0x": 1265, "latin1": 1265, "byte_arrai": 1265, "niter": [1266, 1699, 1812], "ortho_iparam": 1266, "ortho_fparam": 1266, "ortho_bparam": 1266, "knyazev": 1266, "knyazev2001": 1266, "stathopoulosetal2002": 1266, "converg": [1266, 1458, 1614, 1666, 1667, 1691, 1888, 1900, 1903], "precondition": 1266, "eigenpair": 1266, "criterion": [1266, 1343, 1344, 1361, 1363, 1388, 1394, 1418, 1419, 1430, 1431, 1432, 1458, 1459, 1475, 1476, 1509, 1684, 1716, 1896], "fep": 1266, "eigenproblem": 1266, "iparam": 1266, "fparam": 1266, "bparam": 1266, "ivar": 1266, "fvar": 1266, "bvar": 1266, "tvar": 1266, "istep": 1266, "converged_count": 1266, "rerr": 1266, "force_stop": 1266, "2001": 1266, "precondit": 1266, "eigensolv": 1266, "siam": 1266, "sci": 1266, "517": 1266, "541": 1266, "epub": 1266, "doi": [1266, 1381, 1774], "1137": 1266, "s1064827500366124": 1266, "andrea": 1266, "stathopoulo": 1266, "kesheng": 1266, "2002": [1266, 1774], "2165": 1266, "2182": 1266, "s1064827500370883": 1266, "duerschetal2018": 1266, "jed": 1266, "duersch": 1266, "meiyu": 1266, "shao": 1266, "chao": 1266, "ming": 1266, "gu": 1266, "c655": 1266, "c676": 1266, "17m1129830": 1266, "log_": [1267, 1268, 1269, 1270, 1867, 1882], "7767": 1267, "3234": 1267, "2156": 1267, "2411": 1267, "5739": 1267, "5637": 1267, "4640": 1267, "1952": 1267, "4226": 1267, "5204": [1267, 1718], "5224": 1268, "9354": 1268, "7257": 1268, "1301": 1268, "2820": 1268, "0290": 1268, "1392": 1268, "8857": 1268, "6476": 1268, "0090": [1269, 1329, 1705, 1926], "9923": 1269, "5372": 1269, "2492": 1269, "8653": 1269, "7055": 1269, "7705": 1269, "2225": 1269, "8419": 1270, "8003": [1270, 1904], "9971": 1270, "5287": 1270, "0490": 1270, "2483": 1270, "0042": 1270, "9196": 1270, "3504": [1270, 1827], "logsumexp": [1271, 1867, 1882, 1911, 1926], "3069": 1271, "6867": 1271, "8731": 1271, "30000": 1271, "1269e": 1271, "log_2": 1272, "logaddexp": [1272, 1867, 1911], "limits_": 1273, "42296738": 1273, "04462666": 1273, "86278635": 1273, "94622083": 1273, "05277811": 1273, "39202815": 1273, "83525007": 1273, "84492621": 1273, "06084887": 1273, "06844475": 1273, "2611": [1274, 1824], "9254": 1274, "6213": [1274, 1900], "6843": 1274, "3242": 1274, "9665": 1274, "4539": 1274, "0887": [1274, 1926], "1336": 1274, "4025": 1274, "7089": [1274, 1370], "9032": 1274, "3031": 1274, "2589": 1280, "1135": 1280, "5481": [1280, 1293, 1900], "9566": 1280, "sum_j": [1281, 1417, 1460, 1462, 1582, 1790, 1926], "0593": [1281, 1900], "5696": 1281, "6859e": 1281, "compute_pivot": 1283, "transposit": [1283, 1831, 1925], "perm": 1283, "a_lu": 1283, "5558": 1283, "1684": 1283, "1551": 1283, "1940": 1283, "6189": 1283, "5497": 1283, "4526": 1283, "2526": 1283, "3285": 1283, "7988": 1283, "7175": 1283, "9701": 1283, "2634": 1283, "9255": 1283, "3459": 1283, "00000e": 1284, "8312": 1284, "unpack_data": [1285, 1867], "unpack_pivot": [1285, 1867], "l_": [1285, 1332, 1336, 1340, 1344, 1355, 1356, 1357, 1358, 1395, 1420], "u_": [1285, 1664, 1668], "3552": [1287, 1518], "3825": 1287, "8297": 1287, "3477": 1287, "2035": [1287, 1805, 1806, 1852, 1853], "2252": [1287, 1926], "5002": 1287, "6248": [1287, 1296], "1307": 1287, "0608": [1287, 1783], "1244": 1287, "0139": 1287, "6763": 1291, "7445": 1291, "2369": 1291, "argmax": [1291, 1335, 1420, 1550, 1551, 1552, 1822, 1867, 1911, 1949], "max_indic": 1291, "2360": 1291, "2942": 1291, "1222": [1291, 1900], "8475": 1291, "1949": 1291, "1127": 1291, "6702": 1291, "5717": 1291, "9207": 1291, "1297": 1291, "8768": 1291, "6172": 1291, "6060": 1291, "2432": 1291, "3288": 1293, "3367": 1293, "nanmean": [1293, 1867, 1911], "3841": 1293, "6320": 1293, "4254": 1293, "7384": 1293, "0131": 1293, "6549": [1293, 1766], "4279": 1293, "3350": 1293, "7694": 1293, "5600": [1293, 1479], "0842": 1293, "9580": 1293, "3623": 1293, "2343": [1293, 1884], "5085": 1293, "4599": 1293, "1807": 1293, "5219": 1294, "5212": 1294, "2202": 1294, "2505": 1294, "3982": 1294, "9948": 1294, "3518": 1294, "3131": 1294, "3180": [1294, 1925], "6993": 1294, "0436": 1294, "0438": 1294, "2270": 1294, "2751": 1294, "7303": 1294, "2192": 1294, "3321": 1294, "2488": 1294, "0778": 1294, "9510": 1294, "7048": 1294, "4742": [1294, 1840, 1926], "7125": [1294, 1792], "plot": [1295, 1891, 1915, 1930, 1956], "t_0": [1295, 1684], "t_": [1295, 1376, 1522, 1683, 1684, 1867, 1925, 1943], "s_0": 1295, "s_": [1295, 1333, 1334, 1373, 1477], "g_0": 1295, "g_": [1295, 1668, 1678, 1679], "g_i": 1295, "t_i": 1295, "0d": [1295, 1419], "xy": 1295, "50276": 1295, "cartesian_prod": [1295, 1867, 1911], "grid_x": 1295, "grid_i": 1295, "dstack": [1295, 1867, 1911, 1925], "matplotlib": [1295, 1930], "pyplot": [1295, 1930], "plt": 1295, "plot_surfac": 1295, "6750": 1296, "0857": [1296, 1837], "7197": [1296, 1860], "argmin": [1296, 1867, 1911, 1949], "min_indic": [1296, 1867], "1334": 1296, "2803": 1296, "4644": [1296, 1805, 1806, 1852, 1853], "2635": [1296, 1900], "3651": 1296, "0384": 1296, "0128": 1296, "7015": 1296, "1153": 1296, "9849": 1296, "1458": [1296, 1926], "5788": 1296, "deduc": [1298, 1925], "4851": 1298, "5037": 1298, "3633": 1298, "0760": 1298, "3362": [1300, 1301], "8437": [1300, 1301], "9627": [1300, 1301], "1727": [1300, 1301], "5173": [1300, 1301], "1398": [1300, 1301], "mpsalloc": [1302, 1303], "metal": [1303, 1312, 1877, 1880, 1901], "mpsgraph": 1303, "wait_until_complet": [1308, 1309], "signpost": [1308, 1309, 1310], "xcode": 1309, "recommendedmaxworkingsets": 1312, "unlimit": [1312, 1892], "1321": 1315, "4370": [1315, 1925], "1289": 1315, "0527": 1315, "3077": [1315, 1801], "0881": 1315, "1259": 1315, "0284": 1315, "2015": [1316, 1887, 1900], "6087": 1316, "1494": 1316, "5491": 1316, "260": 1316, "8663": 1316, "3137": 1316, "0700": 1316, "8378": 1316, "5146": 1316, "1216": 1316, "5244": 1316, "5767": 1316, "1363": 1316, "5877": 1316, "5083": 1316, "1614": 1316, "1645": 1316, "7021": 1316, "0085": 1316, "0367": 1316, "1567": 1316, "4312": 1316, "1019": 1316, "4394": 1316, "8753": 1316, "_sampl": 1317, "thtensorrandom": 1317, "320": [1317, 1453], "0404": 1319, "6361": 1319, "multigammaln": [1320, 1926], "4028e": 1321, "38": [1321, 1941], "1400e": 1321, "isnan": [1322, 1867, 1911, 1925, 1949], "midpoint": [1324, 1710], "weakli": [1326, 1327, 1926], "to_spars": [1327, 1788, 1867, 1904, 1911, 1925], "2262": [1329, 1705], "0682": [1329, 1705], "2866": [1329, 1705], "3940": [1329, 1705], "5x7": [1333, 1337], "7x7": [1333, 1337], "10x7": [1333, 1337], "cube": [1334, 1338, 1716], "d_": [1334, 1338, 1342, 1354, 1357, 1360, 1422, 1425, 1450, 1453, 1479, 1484, 1526, 1835, 1836, 1837, 1838], "5x7x9": [1334, 1338], "7x7x7": [1334, 1338], "7x9x8": [1334, 1338], "n_class": 1335, "cutoff": [1335, 1887], "div_valu": 1335, "head_bia": 1335, "edouard": 1335, "grave": [1335, 1350], "armand": 1335, "joulin": 1335, "moustapha": 1335, "ciss\u00e9": 1335, "grangier": 1335, "herv\u00e9": 1335, "j\u00e9gou": 1335, "imbalanc": 1335, "zipf": 1335, "law": 1335, "102": [1335, 1948], "1001": 1335, "1002": 1335, "_class": 1335, "maxunpool1d": [1336, 1420, 1553, 1846], "maxunpool2d": [1337, 1375, 1421, 1554, 1846], "maxunpool3d": [1338, 1376, 1422, 1555, 1846], "selu": [1339, 1372, 1519, 1867, 1887, 1910, 1911], "n_i": [1340, 1341, 1342, 1355, 1356, 1357, 1420, 1421, 1422, 1475, 1476], "c_j": [1340, 1341, 1342, 1420, 1421, 1422], "size_averag": [1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1498, 1499, 1507, 1509, 1534, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1867], "unreduc": [1343, 1344, 1363, 1388, 1394, 1418, 1434, 1458, 1476], "ell": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "l_1": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "l_n": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "w_n": [1343, 1344, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774], "y_n": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1832, 1889], "lim_": [1343, 1889], "secondli": 1343, "rescal": [1343, 1344, 1363, 1431, 1432, 1434, 1460, 1462, 1498, 1499, 1509, 1561, 1619, 1648], "nbatch": [1343, 1344], "meantim": [1343, 1344, 1361, 1363, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1954], "pos_weight": [1344, 1499, 1867], "recal": [1344, 1894, 1930, 1947], "ell_c": 1344, "l_c": 1344, "p_c": 1344, "pai": [1344, 1499, 1906, 1929], "spacial": [1344, 1499], "random_": [1344, 1363, 1434, 1499, 1867, 1882, 1933], "hat": [1345, 1346, 1347, 1390, 1391, 1392, 1466], "terminologi": [1345, 1346, 1347, 1466], "5d": [1347, 1392, 1479, 1526, 1537, 1564, 1595], "volumetr": [1347, 1466, 1479, 1526, 1537, 1595, 1596, 1597], "spatio": [1347, 1466], "in1_featur": 1348, "in2_featur": 1348, "in1": [1348, 1497], "in2": [1348, 1497], "blank": [1350, 1510, 1867, 1870], "zero_infin": [1350, 1510, 1867], "connectionist": [1350, 1510], "unseg": 1350, "longest": [1350, 1641, 1643, 1644, 1896], "input_length": [1350, 1510, 1867, 1896], "target_length": [1350, 1510, 1867], "s_n": 1350, "target_n": 1350, "unbatch": [1350, 1363, 1374, 1379, 1390, 1397, 1433, 1442, 1470, 1520], "s_min": 1350, "toronto": 1350, "edu": [1350, 1716], "icml_2006": 1350, "background": [1350, 1358, 1526, 1564, 1902, 1921], "channel_shuffl": [1351, 1867, 1911], "_left": [1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1482, 1483, 1484, 1564], "_right": [1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1482, 1483, 1484, 1564], "0491": [1352, 1482], "7152": [1352, 1482], "0749": [1352, 1482], "3287": [1352, 1482], "8966": [1352, 1482], "1466": [1352, 1482], "2771": [1352, 1482], "6616": [1352, 1482], "4523": [1352, 1482], "1255": [1352, 1482], "6372": [1352, 1482, 1811], "1182": [1352, 1482], "8652": [1352, 1482], "_top": [1353, 1354, 1449, 1450, 1452, 1453, 1483, 1484, 1564], "_bottom": [1353, 1354, 1449, 1450, 1452, 1453, 1483, 1484, 1564], "6585": 1353, "4320": [1353, 1820], "8701": 1353, "4649": 1353, "_front": [1354, 1450, 1453, 1484, 1564], "_back": [1354, 1450, 1453, 1484, 1564], "_j": [1355, 1356], "star": [1355, 1356, 1357, 1869], "\u00e0": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1478], "trou": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1478], "harder": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1421, 1422, 1478], "nice": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1883, 1889, 1892, 1913], "prod_": [1356, 1357, 1359, 1360, 1373, 1477, 1670], "out_j": 1357, "deconvolut": [1358, 1359, 1360, 1504, 1505, 1506], "_pad": [1358, 1359, 1360], "semi": [1361, 1387, 1865, 1887], "supervis": [1361, 1387], "vert": [1362, 1436, 1508], "_2": [1362, 1508, 1615, 1648], "ast_1": [1362, 1378], "ast_2": [1362, 1378], "ignore_index": [1363, 1434, 1509, 1561, 1867], "label_smooth": [1363, 1509, 1867], "unbalanc": [1363, 1434], "d_1": [1363, 1434, 1509, 1561], "d_2": [1363, 1434, 1509, 1561], "d_k": [1363, 1434, 1509, 1561], "_index": [1363, 1434], "logsoftmax": [1363, 1434, 1460, 1545], "nllloss": [1363, 1460, 1561, 1582, 1846], "blend": 1363, "smooth": [1363, 1388, 1458, 1463, 1509, 1677], "w_c": 1363, "truth": [1363, 1509, 1876, 1930], "rethink": [1363, 1509], "incept": [1363, 1509], "spectral_norm": [1364, 1638], "neuron": 1365, "detector": 1365, "dropout1d": [1367, 1867], "_freez": 1370, "sparseadam": [1370, 1912], "0251": 1370, "6902": [1370, 1707], "7172": 1370, "6431": 1370, "0748": 1370, "6969": 1370, "4970": 1370, "3448": 1370, "9685": 1370, "3677": 1370, "7265": 1370, "1685": 1370, "4362": 1370, "4004": [1370, 1792], "9400": 1370, "9124": 1370, "3616": 1370, "1151": 1370, "0309": 1370, "9315": 1370, "1655": [1370, 1892], "9897": 1370, "0635": 1370, "7895": 1370, "0364": 1370, "6778": 1370, "5803": 1370, "from_pretrain": [1370, 1371, 1946], "bag": [1371, 1518], "per_sample_weight": [1371, 1518, 1867, 1949], "embedding_sum": 1371, "8861": 1371, "4350": 1371, "0523": 1371, "1306": 1371, "5798": 1371, "0044": 1371, "7082": [1371, 1518], "2145": [1371, 1518], "6251": [1371, 1518], "6500": 1371, "satur": [1372, 1519], "alphadropout": [1372, 1492], "160": [1373, 1912], "unfold": [1374, 1867, 1911, 1929], "prod_d": [1374, 1478], "neighborhood": [1374, 1478], "col2im": [1374, 1867, 1911, 1949], "fold_param": [1374, 1478], "input_on": [1374, 1478], "output_ratio": [1375, 1376, 1521, 1522, 1867], "_random_sampl": [1375, 1376, 1521, 1522, 1867], "ben": [1375, 1376, 1521, 1522], "graham": [1375, 1376, 1521, 1522], "oh": [1375, 1376, 1521, 1522], "ow": [1375, 1376, 1521, 1522], "_ratio": [1375, 1376, 1522], "13x12": [1375, 1521], "kt": [1376, 1495, 1503, 1506, 1522, 1552], "ot": [1376, 1522], "13x12x11": [1376, 1522], "044715": [1377, 1524], "pack_sequ": [1379, 1397, 1442, 1643, 1645], "bias_ih": [1380, 1398, 1444], "bias_hh": [1380, 1398, 1444], "homoscedast": [1381, 1523], "heteroscedast": [1381, 1523], "nix": 1381, "weigend": 1381, "1994": 1381, "icnn": 1381, "94": 1381, "orlando": 1381, "fl": 1381, "usa": [1381, 1930], "374138": 1381, "instancenorm": [1382, 1918], "layernorm": [1382, 1390, 1391, 1392, 1470, 1472, 1474, 1540, 1884, 1918, 1954], "shrinkag": [1383, 1464, 1529, 1585], "mobilenetv3": [1385, 1531], "_val": 1386, "dissimilar": 1387, "l1loss": [1388, 1458, 1539], "outlier": [1388, 1458, 1916, 1917], "huber": [1388, 1458], "smoothl1loss": [1388, 1580], "insensit": 1389, "unused_argument1": 1389, "unused_argument2": 1389, "ingredi": [1390, 1391, 1392], "styliz": [1390, 1391, 1392], "rgb": [1391, 1392, 1930], "color": [1392, 1868, 1869, 1930, 1945], "log_target": [1393, 1538, 1867], "kl": [1393, 1538, 1865], "summaris": 1393, "loss_pointwis": 1393, "batchmean": [1393, 1538], "kl_loss": 1393, "mae": 1394, "proj_siz": [1397, 1443], "f_t": [1397, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "hf": [1397, 1398], "g_t": [1397, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "ig": [1397, 1398], "hg": [1397, 1398], "o_t": 1397, "ho": [1397, 1398], "c_t": 1397, "odot": 1397, "forget": [1397, 1868, 1869], "1402": 1397, "c_0": [1397, 1398], "proj": 1397, "c_n": 1397, "w_ii": 1397, "w_if": 1397, "w_ig": 1397, "w_io": 1397, "w_hi": 1397, "w_hf": 1397, "w_hg": 1397, "w_ho": 1397, "b_ii": 1397, "b_if": 1397, "b_ig": 1397, "b_io": 1397, "b_hi": 1397, "b_hf": 1397, "b_hg": 1397, "b_ho": 1397, "weight_hr_l": 1397, "_revers": 1397, "h_1": 1398, "c_1": 1398, "time_step": 1398, "_shape": 1399, "sentence_length": 1399, "lazymodulemixin": [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412], "cls_to_becom": [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1610], "convtranspose1d": [1406, 1504, 1846, 1918], "convtranspose3d": [1408, 1506, 1846, 1918], "instancenorm1d": [1409, 1536, 1918], "instancenorm2d": [1410, 1536, 1918], "instancenorm3d": [1411, 1536, 1918], "uninitializedparamet": [1412, 1598, 1865], "lrn": 1415, "signal_2d": 1415, "signal_4d": 1415, "output_2d": 1415, "output_4d": 1415, "x_j": [1417, 1460, 1462, 1582, 1790, 1897, 1926], "80827": [1423, 1424, 1425], "unpool": [1423, 1424, 1425], "maxpool3d": [1425, 1552, 1555, 1846, 1918], "unpooled_output": 1425, "t_destin": 1427, "lrelu": [1428, 1900], "hing": [1430, 1432], "sum_i": [1431, 1432, 1459], "nelement": [1431, 1459], "jointli": 1433, "multihead": [1433, 1472], "concat": [1433, 1867, 1911], "head_1": 1433, "head_h": 1433, "head_i": 1433, "qw_i": 1433, "kw_i": 1433, "vw_i": 1433, "scaled_dot_product_attent": [1433, 1867, 1911], "fastpath": [1433, 1943], "inference_mod": [1433, 1474], "nestedtensor": [1433, 1474, 1884], "multihead_attn": 1433, "e_q": 1433, "e_k": 1433, "e_v": 1433, "_head": [1433, 1470], "merge_mask": 1433, "mask_typ": 1433, "merged_mask": 1433, "nll": 1434, "crossentropyloss": [1434, 1509], "num_paramet": 1435, "nchannel": 1435, "decai": [1435, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1682, 1686, 1688, 1689, 1692, 1693, 1695, 1767, 1912], "legitim": [1435, 1526, 1895], "vert_p": 1436, "fromkei": 1437, "popitem": [1437, 1911], "setdefault": [1437, 1911], "upscale_factor": [1439, 1567, 1867, 1949], "upscal": 1439, "video": [1439, 1440, 1883, 1930, 1941], "shi": [1439, 1440], "2016": [1439, 1440, 1476], "_factor": [1439, 1440, 1479, 1480, 1481], "pixel_shuffl": [1439, 1867, 1911, 1918, 1949], "downscale_factor": [1440, 1568, 1867], "pixelshuffl": [1440, 1567, 1568, 1918], "downscal": 1440, "pixel_unshuffl": [1440, 1867, 1911, 1918], "log_input": [1441, 1569, 1867], "poisson": [1441, 1569, 1767, 1865, 1867, 1911], "stirl": [1441, 1569], "hh": [1442, 1444], "flatten_paramet": 1443, "3333333333333333": [1445, 1682, 1688, 1867], "leaki": [1445, 1574, 1887], "rectifi": [1445, 1446, 1571, 1887], "liner": 1445, "empir": 1445, "1505": 1445, "00853": 1445, "crelu": 1446, "1603": 1446, "05201": 1446, "480": 1453, "6732632423543772848170429916717": [1454, 1577], "0507009873554804934193349852946": [1454, 1577], "kaiming_norm": 1454, "kaiming_normal_": [1454, 1865, 1871, 1887], "initialis": 1454, "calculate_gain": [1454, 1865, 1871, 1887], "modulelist": [1455, 1900], "cascad": 1455, "relu2": [1455, 1598], "swish": [1456, 1579], "coin": [1456, 1579], "cnn": [1458, 1916], "ross": 1458, "girshick": 1458, "quadrat": [1458, 1896], "huberloss": [1458, 1535], "lie": [1460, 1462, 1582, 1790, 1926, 1930, 1943], "w_j": 1461, "soft": [1464, 1528, 1585], "softshrinkag": 1464, "convert_sync_batchnorm": 1466, "r1": 1466, "sync_bn_network": 1466, "ddp_sync_bn_network": 1466, "sync_bn_modul": 1466, "d_model": [1470, 1471, 1472, 1473, 1474], "nhead": [1470, 1471, 1472, 1473, 1474], "num_encoder_lay": 1470, "num_decoder_lay": 1470, "dim_feedforward": [1470, 1472, 1474], "custom_encod": 1470, "custom_decod": 1470, "layer_norm_ep": [1470, 1472, 1474], "norm_first": [1470, 1472, 1474], "ashish": [1470, 1472, 1474], "vaswani": [1470, 1472, 1474], "noam": [1470, 1472, 1474], "shazeer": [1470, 1472, 1474], "niki": [1470, 1472, 1474], "parmar": [1470, 1472, 1474], "jakob": [1470, 1472, 1474], "uszkoreit": [1470, 1472, 1474], "llion": [1470, 1472, 1474], "jone": [1470, 1472, 1474], "aidan": [1470, 1472, 1474], "gomez": [1470, 1472, 1474], "lukasz": [1470, 1472, 1474], "illia": [1470, 1472, 1474], "polosukhin": [1470, 1472, 1474], "6000": [1470, 1472, 1474, 1479, 1713, 1761, 1764], "6010": [1470, 1472, 1474], "feedforward": [1470, 1472, 1474, 1887], "transformer_model": 1470, "word_language_model": 1470, "src_mask": [1470, 1474], "tgt_mask": [1470, 1471, 1472], "memory_mask": [1470, 1471, 1472], "src_key_padding_mask": [1470, 1473, 1474], "tgt_key_padding_mask": [1470, 1471, 1472], "memory_key_padding_mask": [1470, 1471, 1472], "src_is_caus": 1470, "tgt_is_caus": [1470, 1471, 1472], "memory_is_caus": [1470, 1471, 1472], "_mask": [1470, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637], "_key_padding_mask": 1470, "generate_square_subsequent_mask": 1470, "sz": 1470, "decoder_lay": [1471, 1472], "transformerdecoderlay": 1471, "transformer_decod": 1471, "attn": [1472, 1474], "encoder_lay": [1473, 1474], "enable_nested_tensor": 1473, "mask_check": 1473, "bert": [1473, 1946], "1810": 1473, "04805": 1473, "transformerencoderlay": 1473, "transformer_encod": 1473, "flashattent": [1474, 1576], "triplet": [1475, 1476], "x3": 1475, "balnta": [1475, 1476], "riba": [1475, 1476], "a_i": [1475, 1476, 1769], "p_i": [1475, 1476], "rm": [1475, 1476], "bf": [1475, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "rvert_p": [1475, 1562], "tripletmarginwithdistanceloss": [1475, 1593], "triplet_loss": [1475, 1476], "distance_funct": [1476, 1593], "l_i": 1476, "tripletmarginloss": [1476, 1592], "l_p": [1476, 1562], "pairwisedist": [1476, 1565], "penal": [1476, 1900], "distant": 1476, "anchor_id": 1476, "positive_id": 1476, "negative_id": 1476, "l_infin": 1476, "bmva": 1476, "bmvc": 1476, "paper119": 1476, "unflattened_s": 1477, "namedtensor": 1477, "namedshap": 1477, "u_1": 1477, "u_n": 1477, "u_i": 1477, "im2col": [1478, 1867, 1911], "fold": [1478, 1812, 1867, 1877, 1910, 1919, 1925], "2x3": 1478, "3x4": 1478, "inp_unf": 1478, "out_unf": 1478, "recompute_scale_factor": [1479, 1537], "bicub": [1479, 1526, 1537, 1595, 1846], "trilinear": [1479, 1526, 1537, 1595, 1846], "input_3x3": 1479, "4375": 1479, "8125": 1479, "9375": 1479, "2400": [1479, 1827], "1200": [1479, 1738, 1892], "8800": 1479, "4400": [1479, 1827], "7200": 1479, "0400": 1479, "2800": [1479, 1761], "3600": 1479, "5200": 1479, "6400": 1479, "1678": 1483, "4418": 1483, "9466": [1483, 1926], "9604": 1483, "4219": 1483, "5241": 1483, "9162": 1483, "5436": [1483, 1827], "6446": 1483, "adaptiveavgpool1d": [1485, 1918], "tripl": [1487, 1490], "adaptivemaxpool1d": 1488, "adaptivemaxpool2d": [1489, 1846], "adaptivemaxpool3d": 1490, "avgpool1d": [1493, 1918], "st": [1495, 1503, 1506, 1552, 1954], "avgpool3d": [1495, 1846, 1918], "iT": [1495, 1503, 1506], "padt": [1495, 1503, 1506], "score": [1499, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1865], "dt": [1503, 1506, 1926, 1954], "out_padw": [1504, 1505, 1506], "out_padh": [1505, 1506], "out_padt": 1506, "cosineembeddingloss": 1507, "ctcloss": [1510, 1846], "charact": [1510, 1758, 1866, 1869, 1883, 1921], "elu": [1516, 1867, 1910, 1911, 1918], "embedding_matrix": [1517, 1518], "8490": 1517, "9625": 1517, "6753": 1517, "7761": 1517, "6108": 1517, "6246": 1517, "9751": 1517, "3618": 1517, "4161": [1517, 1925], "2419": 1517, "7383": 1517, "0237": 1517, "7794": 1517, "0528": 1517, "3385": 1517, "8612": 1517, "1867": 1517, "5384": 1517, "8720": 1517, "6262": 1517, "7471": 1517, "embeddingbag": [1518, 1846, 1916, 1918, 1931], "3397": 1518, "5545": 1518, "5893": 1518, "4386": 1518, "5882": 1518, "featurealphadropout": 1519, "gaussiannllloss": 1523, "border": 1526, "affine_grid": [1526, 1867], "extrema": 1526, "pil": [1526, 1537], "overshoot": [1526, 1537, 1595], "gumbel": [1528, 1865], "y_hard": 1528, "y_soft": 1528, "hardtanh": [1533, 1867, 1877, 1911, 1918, 1949], "hingeembeddingloss": 1534, "use_input_stat": [1536, 1867], "antialia": 1537, "anti": 1537, "pillow": [1537, 1930], "buggi": 1537, "inter_nearest": 1537, "104157": 1537, "kldivloss": 1538, "batchsiz": [1538, 1793, 1794, 1795, 1797, 1798, 1925], "leaky_relu": [1542, 1867, 1887, 1911, 1918, 1949], "localresponsenorm": 1544, "_stacklevel": [1545, 1582, 1583, 1867], "lppool1d": 1547, "lppool2d": 1548, "marginrankingloss": 1549, "max_unpool1d": [1550, 1867], "multimarginloss": 1558, "multilabelmarginloss": 1559, "multilabelsoftmarginloss": 1560, "n_0": 1562, "n_": 1562, "n_k": 1562, "everywher": [1563, 1807, 1912], "circularpad2d": 1564, "constantpad2d": 1564, "reflectionpad2d": [1564, 1846], "replicationpad2d": [1564, 1846], "t4d": 1564, "p1d": 1564, "p2d": 1564, "p3d": 1564, "pixelunshuffl": [1568, 1918], "poissonnllloss": 1569, "rrelu": [1575, 1867, 1911], "dropout_p": [1576, 1867], "attn_bia": 1576, "temp_mask": 1576, "ev": 1576, "legend": 1576, "softmarginloss": 1581, "module_kwarg": 1591, "upsample_trilinear": 1596, "fo": 1596, "spatia": 1597, "mixin": [1598, 1865], "dry": 1598, "lazymlp": 1598, "lazylinear": 1598, "lazy_mlp": 1598, "8832e": 1598, "5636e": 1598, "1598e": 1598, "5637e": 1598, "8788e": 1598, "0042e": 1598, "0019": 1598, "lazymodul": 1598, "full_mlp": 1598, "3837": [1598, 1707], "0907": 1598, "6708": 1598, "5223": 1598, "9028": 1598, "2851": 1598, "6813": 1598, "5766": 1598, "8678": 1598, "1320": 1598, "2938": 1598, "0679": [1598, 1837], "2793": [1598, 1655], "1088": 1598, "1795": 1598, "2301": 1598, "2807": 1598, "2479": 1598, "1091": 1598, "has_uninitialized_param": 1598, "initialize_paramet": 1598, "register_backward_pre_hook": 1604, "check_reduct": 1607, "delay_all_reduce_named_param": 1607, "param_to_hook_all_reduc": 1607, "optimizer_param": 1607, "loss_func": [1607, 1921], "consume_prefix_in_state_dict_if_pres": 1607, "nccl2": 1607, "dictat": [1607, 1869], "megabyt": 1607, "mb": [1607, 1892], "detach_": [1607, 1867, 1882, 1918, 1925], "ddp_logging_data": 1607, "can_set_static_graph": 1607, "model_ddp": 1607, "_get_ddp_logging_data": 1607, "divide_by_initial_world_s": 1607, "syncbatchnorm": 1607, "deplet": 1607, "pariti": 1607, "discrep": [1607, 1716, 1897], "another_input": 1607, "predivid": 1607, "encode_and_decod": 1607, "encoded_tensor": 1607, "decoded_tensor": 1607, "error_if_nonfinit": 1611, "foreach": [1611, 1612, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1912], "clip_valu": 1612, "orthogonal_map": 1614, "use_trivi": 1614, "qq": 1614, "matrix_exp": [1614, 1867, 1911], "caylei": 1614, "thin": [1614, 1709], "manifold": 1614, "register_parametr": [1614, 1615, 1616, 1617, 1648, 1885], "orth_linear": 1614, "parametrizedlinear": [1614, 1615], "moduledict": [1614, 1615, 1868, 1900], "parametrizationlist": [1614, 1615, 1619], "_orthogon": 1614, "9332e": 1614, "n_power_iter": [1615, 1648], "sn": [1615, 1648], "discrimin": [1615, 1648], "adversari": [1615, 1648], "lipschitz": 1615, "reimplement": [1615, 1648], "_spectralnorm": 1615, "convtranspos": [1615, 1648], "snm": 1615, "0081": 1615, "amaxbackward0": 1615, "original0": [1616, 1619, 1651], "original1": [1616, 1619, 1651], "tensor_nam": [1616, 1618, 1619, 1620], "right_invers": [1616, 1619], "out_rnn": 1617, "rnn_cell": 1617, "simplic": [1619, 1921, 1922], "inbuilt": 1619, "unparametr": 1619, "rankon": 1619, "surject": 1619, "s0_sqrt": 1619, "linear_rank_on": 1619, "matrix_rank": 1619, "leave_parametr": 1620, "unparametris": 1620, "prune": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1925], "skeleton": 1621, "compute_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "importance_scor": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634], "apply_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "pruned_tensor": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "default_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "_orig": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637], "undon": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637], "unprun": [1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636], "basepruningmethod": [1626, 1632], "add_pruning_method": 1626, "pruning_typ": [1626, 1630], "unstructur": [1626, 1630], "ravel": [1626, 1867, 1911], "nonmask": 1626, "bias_mask": [1629, 1631], "pruning_method": 1630, "parameters_to_prun": 1630, "l1unstructur": 1630, "parameters_to_vector": 1630, "forward_pre_hook": [1632, 1900], "random_unstructur": [1632, 1637], "odict_kei": 1633, "weight_orig": 1633, "weight_mask": [1633, 1636], "columns_prun": 1635, "t_modul": [1638, 1639, 1648, 1651], "weight_norm": 1639, "sorted_indic": [1640, 1642, 1643, 1645], "unsorted_indic": [1640, 1642, 1643, 1645], "abc": [1640, 1869], "axbc": 1640, "throughout": [1640, 1897, 1900, 1916], "conform": [1640, 1900], "is_cuda": [1640, 1882, 1911, 1927, 1944], "enforce_sort": [1641, 1642, 1643], "unsort": [1641, 1642, 1745], "shortest": 1641, "uncondition": [1641, 1864, 1894, 1955], "pad_sequ": [1642, 1646, 1867, 1911], "padding_valu": [1643, 1644, 1867], "total_length": [1643, 1896], "seq_unpack": 1643, "lens_unpack": 1643, "packed_sequ": 1645, "unpacked_sequ": 1645, "padded_sequ": 1646, "unpad": 1646, "unstack": 1646, "as_tensor": [1646, 1825, 1867, 1884, 1894, 1911, 1930, 1931, 1932], "unpadded_sequ": 1646, "module_cl": [1647, 1921], "5846e": 1647, "29": [1647, 1774, 1910], "8307e": 1647, "5250e": 1647, "1210e": 1647, "4677e": 1647, "5915e": 1647, "4013e": 1647, "weight_u": 1648, "parameters_and_buff": 1649, "decoupl": [1651, 1667, 1670, 1676], "weight_g": [1651, 1867], "weight_v": 1651, "1602": 1651, "07868": 1651, "modern": [1651, 1903, 1938, 1944], "bother": 1651, "102999": 1651, "remove_parametr": 1651, "as_tupl": [1653, 1860], "complexfloat": [1654, 1660], "0425": 1655, "7969": 1655, "2925": 1655, "7229": 1655, "2134": 1655, "0505": 1655, "1408": 1655, "0563": 1655, "0566": 1655, "0732": [1655, 1827], "0687": 1655, "1177": 1655, "2303": 1655, "1552": 1655, "6148": 1655, "6535": 1655, "8318": 1655, "3987": 1655, "9544": [1655, 1717], "6048": 1655, "7909": 1655, "120": [1657, 1930], "from_valu": 1660, "onnx_typ": 1660, "tensorprotodatatyp": 1660, "torch_c_value_with_type_float": 1660, "from_dtyp": 1660, "jit_type_bas": 1660, "safer": [1660, 1876], "onnxexportererror": [1660, 1908, 1910], "symbolicvalueerror": 1660, "onnx_compat": 1660, "scalar_nam": 1660, "liter": [1660, 1867, 1870, 1883, 1913, 1953, 1956], "complexhalf": 1660, "complexdoubl": 1660, "float8e5m2": 1660, "float8e4m3fn": 1660, "torch_nam": 1660, "int8_t": 1660, "int64_t": 1660, "int16_t": 1660, "float8_e5m2": 1660, "float8_e4m3fn": 1660, "verif": [1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1910], "input_arg": [1661, 1910], "params_dict": 1661, "export_opt": [1661, 1908], "_excluded_node_kind": 1661, "frozenset": [1661, 1869], "scalarimplicit": [1661, 1911], "prim": [1661, 1866, 1910, 1911], "listconstruct": [1661, 1866], "all_mismatch_leaf_graph_info": 1661, "essential_node_count": 1661, "essential_node_kind": 1661, "export_repro": 1661, "repro_dir": 1661, "repro": [1661, 1944, 1954], "test_": 1661, "test_data_set_0": 1661, "input_0": [1661, 1910], "pb": [1661, 1910], "input_1": [1661, 1910], "output_0": 1661, "output_1": 1661, "find_mismatch": [1661, 1910], "exhibit": [1661, 1910, 1942, 1954], "verificationopt": [1661, 1910], "find_partit": 1661, "has_mismatch": 1661, "pretty_print_mismatch": 1661, "pretty_print_tre": 1661, "graph_info": [1661, 1910], "__2": [1661, 1910], "__1": [1661, 1910], "__3": [1661, 1910], "110": [1661, 1910], "verify_export": 1661, "onnx_graph": 1661, "onnx_out": 1661, "pt_out": 1661, "ignore_non": 1662, "check_shap": 1662, "check_dtyp": [1662, 1932], "onnxbackend": 1662, "onnx_runtime_cpu": 1662, "remained_onnx_input_idx": 1662, "acceptable_error_percentag": 1662, "percentag": [1662, 1691, 1767, 1916], "weight_decai": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680, 1900], "1e6": 1663, "sizeof": [1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1927, 1947], "tensorlist": [1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "prohibit": [1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679, 1892, 1905], "impair": [1663, 1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "ungraph": [1663, 1666, 1667, 1670], "removeablehandl": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "register_load_state_dict_pre_hook": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "register_state_dict_post_hook": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "register_step_post_hook": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "register_step_pre_hook": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "new_arg": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "new_kwarg": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1676, 1677, 1678, 1679, 1680], "momentum_buff": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1676, 1677, 1678, 1679, 1680], "reevalu": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1674, 1676, 1677, 1678, 1679, 1680, 1912], "rho": 1664, "110mm": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "4pt": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "textbf": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "theta_0": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "v_0": [1664, 1666, 1667, 1670, 1676, 1677], "leftarrow": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "u_0": [1664, 1668], "hspace": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "5mm": [1664, 1665, 1666, 1667, 1668, 1670, 1677, 1678, 1679], "nabla_": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "theta_": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "10mm": [1664, 1665, 1666, 1667, 1668, 1670, 1677, 1678, 1679], "v_t": [1664, 1666, 1667, 1670, 1676, 1677], "v_": [1664, 1666, 1667, 1670, 1676, 1677, 1679], "2_t": [1664, 1665, 1666, 1667, 1670, 1676, 1677], "21mm": 1664, "u_t": [1664, 1668], "theta_t": [1664, 1665, 1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "lr_decai": 1665, "initial_accumulator_valu": 1665, "12mm": [1665, 1676], "_sum_0": 1665, "tild": [1665, 1677], "_sum_t": 1665, "_sum_": 1665, "subgradi": 1665, "999": [1666, 1667, 1668, 1670, 1676, 1680, 1905, 1912], "amsgrad": [1666, 1667], "beta_1": [1666, 1667, 1668, 1670, 1676], "beta_2": [1666, 1667, 1668, 1670, 1676], "13mm": [1666, 1667, 1668, 1670, 1676, 1677, 1678, 1679], "textit": [1666, 1667, 1670, 1676, 1679], "m_0": [1666, 1667, 1668, 1670, 1676], "widehat": [1666, 1667, 1670, 1676], "m_t": [1666, 1667, 1668, 1670, 1676], "m_": [1666, 1667, 1668, 1670, 1676, 1925], "002": [1668, 1670], "t_1": 1668, "2e": [1668, 1670], "max_it": 1669, "max_ev": 1669, "tolerance_grad": 1669, "tolerance_chang": 1669, "history_s": 1669, "line_search_fn": 1669, "bfg": 1669, "minfunc": 1669, "intens": [1669, 1903], "param_byt": 1669, "strong_wolf": 1669, "momentum_decai": 1670, "004": 1670, "decoupled_weight_decai": [1670, 1676], "gamma_t": 1670, "psi": [1670, 1926], "_decai": [1670, 1676], "15mm": [1670, 1678, 1679], "mu_t": 1670, "96": 1670, "mu_": 1670, "11mm": 1670, "incorpor": [1670, 1916], "nesterov": [1670, 1679], "4e": 1670, "adamw": [1670, 1676, 1912], "nadamw": 1670, "weightdecai": 1676, "18mm": 1676, "rho_": 1676, "6mm": 1676, "rho_t": 1676, "t_2": 1676, "l_t": 1676, "radamw": 1676, "_0": [1677, 1895, 1913, 1956], "av": 1677, "8mm": 1677, "3mm": 1677, "lectur": 1677, "hinton": 1677, "step_siz": [1678, 1695], "resili": [1678, 1903], "eta_": [1678, 1683, 1684], "etaplu": 1678, "etaminu": 1678, "gamma_": [1678, 1926], "0_": 1678, "eta_0": 1678, "i_": [1678, 1827], "eta_t": [1678, 1683, 1684], "dampen": 1679, "sutskev": 1679, "veloc": 1679, "conflat": 1680, "is_spars": [1680, 1882, 1911, 1925, 1927, 1944], "maskedtensor": [1680, 1925], "outweigh": [1680, 1954], "rig": 1680, "insist": 1680, "lr_schedul": [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1912], "chainabl": [1681, 1691], "081": 1681, "729": [1681, 1694], "6561": [1681, 1855], "59049": 1681, "scheduler1": [1681, 1694, 1912], "constantlr": [1681, 1694], "total_it": [1681, 1682, 1688, 1692, 1694], "scheduler2": [1681, 1694, 1912], "exponentiallr": [1681, 1694, 1912], "get_last_lr": [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695], "print_lr": [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695], "is_verbos": [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695], "__dict__": [1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695], "last_epoch": [1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695], "mileston": [1682, 1688, 1689, 1694, 1912], "simultan": [1682, 1683, 1688, 1689, 1695, 1889, 1921], "025": [1682, 1688], "t_max": [1683, 1912], "eta_min": [1683, 1684], "anneal": [1683, 1684, 1691, 1912], "cur": [1683, 1684], "sgdr": [1683, 1684], "2k": 1683, "sole": 1683, "t_mult": 1684, "interleav": 1684, "base_lr": [1685, 1691], "max_lr": [1685, 1691], "step_size_up": 1685, "step_size_down": 1685, "scale_fn": 1685, "scale_mod": 1685, "cycle_momentum": [1685, 1691], "base_momentum": [1685, 1691], "max_momentum": [1685, 1691], "cyclic": 1685, "forth": [1685, 1851, 1864, 1915, 1939], "amplitud": [1685, 1691], "triangular2": 1685, "exp_rang": 1685, "bckenstler": 1685, "train_batch": [1685, 1691], "get_lr": 1685, "lr_lambda": [1687, 1690], "lambda1": 1687, "lambda2": 1687, "start_factor": 1688, "end_factor": 1688, "03125": 1688, "0375": 1688, "04375": 1688, "005": [1689, 1695], "lmbda": 1690, "total_step": 1691, "steps_per_epoch": 1691, "pct_start": 1691, "anneal_strategi": [1691, 1912], "div_factor": 1691, "final_div_factor": 1691, "three_phas": 1691, "1cycl": 1691, "fastai": 1691, "unpublish": 1691, "initial_lr": 1691, "min_lr": [1691, 1693], "1e4": 1691, "annihil": 1691, "00075": 1692, "00050": 1692, "00025": 1692, "patienc": 1693, "threshold_mod": 1693, "cooldown": 1693, "stagnat": 1693, "new_lr": 1693, "hasn": [1693, 1879, 1913], "optimum": 1693, "dynamic_threshold": 1693, "val_loss": 1693, "81": 1694, "mn": 1697, "pca": [1699, 1925], "overestim": [1699, 1812], "nathan": [1699, 1812], "halko": [1699, 1812], "gunnar": [1699, 1812], "martinsson": [1699, 1812], "tropp": [1699, 1812], "probabilist": [1699, 1812], "0909": [1699, 1812], "4061": [1699, 1812], "na": [1699, 1812], "cmath": [1703, 1867], "4142j": 1703, "4331": 1706, "2475": [1706, 1810], "6834": 1706, "2791": 1706, "1875": 1706, "5561": 1706, "4670": 1706, "5428": 1707, "5854": 1707, "5261": [1707, 1811], "1857": 1707, "2498": 1707, "1646": [1707, 1892], "0705": 1707, "0629": 1707, "2962": 1707, "0821": [1707, 1767], "1831": 1707, "type1": [1708, 1867], "type2": [1708, 1867], "2117": 1710, "9765": 1710, "1707": 1710, "4884": 1710, "5661": 1710, "5795": 1710, "5280": 1710, "9206": 1710, "quantization_schem": [1711, 1712, 1713, 1714, 1715], "int_repr": [1711, 1712, 1867, 1911], "nchw": [1713, 1930], "qx": [1713, 1714, 1715], "00001": 1713, "max_pool1d": [1714, 1867, 1911, 1918], "max_pool2d": [1715, 1867, 1911, 1918], "quasirandom": 1716, "scrambl": 1716, "sobol": 1716, "quasi": 1716, "21201": 1716, "web": 1716, "unsw": 1716, "au": [1716, 1913], "fkuo": 1716, "art": 1716, "owen": 1716, "niederreit": 1716, "xing": 1716, "466": 1716, "489": 1716, "decemb": 1716, "1998": 1716, "zh": 1716, "vychisl": 1716, "phy": 1716, "784": 1716, "802": 1716, "1967": 1716, "soboleng": 1716, "draw_base2": 1716, "base2": 1716, "fast_forward": 1716, "142": 1717, "283": 1717, "570": 1717, "359": 1717, "9894": 1717, "2503": 1718, "3525": 1718, "5673": 1718, "8237": 1718, "5781": 1718, "6879": 1718, "3816": 1718, "7249": 1718, "0998": 1718, "1436": 1722, "9966": 1722, "3426": 1722, "6366": 1722, "5954": 1722, "8929": 1722, "0923": 1722, "1719": 1722, "4709": 1722, "1996": 1722, "4595": 1728, "4314": 1728, "n2": 1731, "n3": 1731, "negat": [1734, 1819, 1869], "is_neg": [1734, 1867, 1911, 1944], "equidist": 1738, "inexact": 1738, "1234567": 1738, "1230": 1738, "vstack": [1739, 1867, 1911, 1925], "0370": 1740, "2970": 1740, "5420": 1740, "9105": 1740, "8351": 1740, "pickle_protocol": [1741, 1913], "default_protocol": 1741, "_use_new_zipfile_seri": 1741, "zipfil": [1741, 1913], "sorted_sequ": [1745, 1867], "sorter": [1745, 1867], "sorted_sequence_1d": 1745, "select_copi": [1747, 1867, 1911], "slight": [1749, 1925, 1928], "92701": [1749, 1928], "complaint": 1750, "henry2019": 1753, "briefli": 1753, "realiz": 1753, "perfectli": [1753, 1892, 1914], "nine": 1753, "fma": 1753, "10x": 1753, "1904": 1753, "06376": 1753, "denorm": [1754, 1903], "sse3": 1754, "323": 1754, "88131e": 1754, "324": 1754, "is_train": [1755, 1933], "interop": 1756, "intraop": 1757, "edgeitem": 1758, "linewidth": 1758, "sci_mod": 1758, "shamelessli": 1758, "repr": [1758, 1869], "sane": 1758, "_tensor_str": 1758, "_formatt": 1758, "12345": 1758, "1235": 1758, "excess": [1760, 1944], "24j": 1761, "8000j": 1761, "9600j": 1761, "4472": [1761, 1900], "8944j": 1761, "expit": [1762, 1926], "2222": [1764, 1825], "4444": 1764, "8889": 1764, "4901e": 1765, "4000e": 1765, "0077e": 1765, "4923e": 1765, "waveform": [1766, 1767, 1768], "1564": 1766, "4540": 1766, "8910": 1766, "9877": 1766, "1423": [1766, 1789], "4154": 1766, "8413": [1766, 1926], "0302": 1767, "2231": 1767, "6065": 1767, "5400e": 1767, "3546e": 1767, "4788e": 1767, "8316e": 1767, "02": [1767, 1768, 1773], "3534e": 1767, "0065e": [1768, 1773], "1875e": [1768, 1773], "3937e": [1768, 1773], "2465e": [1768, 1773], "8250e": [1768, 1773], "9858e": [1768, 1773], "1365e": [1768, 1773], "8659e": [1768, 1773], "4658e": [1768, 1773], "3941e": [1768, 1773], "5400": 1769, "3376": 1769, "4200": 1769, "9136": 1769, "wit": [1769, 1866], "0955": [1769, 1770, 1772], "3455": [1769, 1770, 1772], "6545": [1769, 1770, 1772], "9045": [1769, 1770, 1772], "0800": [1770, 1771], "1876": [1770, 1771], "4601": [1770, 1771], "7700": [1770, 1771], "9723": [1770, 1771], "1679": 1771, "3979": 1771, "6821": 1771, "9121": 1771, "1170": 1772, "9698": 1772, "36358": 1774, "z_n": [1774, 1889], "48917": 1774, "2z_n": 1774, "13659": 1774, "3z_n": 1774, "01064": 1774, "4z_n": 1774, "\u03c0": 1774, "sidelob": 1774, "transact": 1774, "acoust": 1774, "speech": 1774, "84": 1774, "91": 1774, "feb": 1774, "1981": 1774, "tassp": 1774, "1163506": 1774, "heinzel": 1774, "spectrum": [1774, 1903], "dft": 1774, "februari": 1774, "holomet": 1774, "fnal": 1774, "gov": 1774, "gh_fft": 1774, "nutal": 1774, "general_ham": 1774, "6280e": 1774, "2698e": 1774, "1052e": 1774, "9826e": 1774, "5461": [1776, 1900], "1347": 1776, "7266": 1776, "2746": 1776, "5194": 1776, "1343": 1776, "4032": 1776, "2711": 1776, "5380": 1778, "8632": 1778, "1265": 1778, "9399": 1778, "5644": 1778, "9744": 1778, "1268": 1778, "2162": 1783, "6719": 1783, "3332": 1783, "5793": [1783, 1900], "0061": 1783, "6058": 1783, "9497": 1783, "5071": 1783, "3343": 1783, "9553": 1783, "0960": 1783, "derivati": [1784, 1788], "to_sparse_coo": 1785, "sparsr": 1786, "run_my_model": 1786, "prev_checks_en": 1786, "check_invari": [1786, 1793, 1794, 1795, 1796, 1797, 1798, 1925], "sparse_csr_tensor": [1786, 1867, 1911, 1925], "z_": [1788, 1889, 1926], "bigoplus_": 1788, "kj": 1788, "bigoplu": 1788, "sparseaddmmbackward0": 1788, "y1": [1788, 1908, 1939], "sparsemmreduceimplbackward0": 1788, "y2": [1788, 1908, 1939], "sparsiti": [1789, 1865, 1876, 1887], "spy": 1789, "2847": 1789, "7805": 1789, "1900": [1789, 1904], "to_dens": [1789, 1791, 1867, 1911, 1925], "3903": 1789, "x_k": 1790, "6438": 1792, "6467": 1792, "3411": 1792, "0918": 1792, "5348": 1792, "0634": 1792, "0494": 1792, "0646": 1792, "1844": 1792, "1276": 1792, "1874": 1792, "6334": 1792, "9682": 1792, "5340": 1792, "7483": 1792, "4512": 1792, "4073": 1792, "8901": 1792, "3183": 1792, "7539": 1792, "6596": 1792, "ncolblock": [1793, 1925], "array_list": [1793, 1794, 1795, 1797, 1798], "nrow": [1793, 1794, 1795, 1797, 1798, 1925], "ncol": [1793, 1794, 1795, 1797, 1798, 1925], "denses": [1793, 1794, 1795, 1797, 1798, 1925], "check_sparse_tensor_invari": [1793, 1794, 1795, 1796, 1797, 1798, 1925], "nrowblock": [1794, 1925], "compressed_indic": [1795, 1867, 1925], "plain_indic": [1795, 1867, 1925], "compressed_dim_s": [1795, 1925], "is_coalesc": [1796, 1867, 1911, 1925, 1944], "rdinat": 1796, "prerequisit": [1796, 1893], "coalescion": 1796, "_indic": [1796, 1911, 1925, 1944], "0755": [1800, 1801], "0226": [1800, 1801], "0831": [1800, 1801], "4806": [1800, 1801], "0112": 1800, "2883": 1800, "6933": 1800, "0457": 1801, "0069": 1801, "2310": 1801, "2959": [1805, 1806, 1852, 1853], "8101": [1805, 1806, 1852, 1853], "5027": [1805, 1806, 1852, 1853], "3270": [1805, 1806, 1852, 1853], "5905": [1805, 1806, 1852, 1853], "6538": [1805, 1806, 1852, 1853, 1900], "3330": [1805, 1806, 1852, 1853], "5596": [1805, 1806, 1852, 1853], "6548": [1805, 1806, 1852, 1853], "1264": [1805, 1806, 1852, 1853], "5080": [1805, 1806, 1811, 1852, 1853, 1900], "6420": [1805, 1806, 1852, 1853], "1992": [1805, 1806, 1852, 1853], "0311": [1805, 1926], "7477": 1805, "2204": 1805, "9087": 1805, "2620": 1806, "0028": [1806, 1831], "0957": 1806, "6038": 1806, "0645": [1806, 1853], "4485": [1806, 1853], "8707": [1806, 1853], "0665": [1806, 1853], "librosa": 1807, "omega": 1807, "win": [1807, 1889], "_fft": [1807, 1867], "dimnsion": 1807, "1133": 1810, "2958": 1810, "5475": 1810, "0569": 1810, "0737": 1810, "3429": 1810, "9138": 1810, "9337": 1810, "6864": [1810, 1835], "1132": 1810, "7892": 1810, "1003": 1810, "5688": 1810, "3637": 1810, "9906": 1810, "5197": 1810, "4598": 1810, "3708": 1810, "6217": 1810, "435": 1810, "1335": 1810, "3135": 1810, "gesdd": 1811, "conquer": 1811, "gesvdjbatch": 1811, "fortran": 1811, "\u00b9": 1811, "2364": 1811, "7752": 1811, "7201": 1811, "7394": 1811, "0504": 1811, "3371": 1811, "5296": 1811, "3550": 1811, "5569": 1811, "2445": 1811, "1414": 1811, "4027": 1811, "0287": 1811, "5434": 1811, "1946": 1811, "8833": 1811, "3679": 1811, "4296": 1811, "2890": 1811, "6604": 1811, "2717": 1811, "2618": 1811, "4234": 1811, "2481": 1811, "4733": 1811, "3289": [1811, 1905], "0315": 1811, "7806": 1811, "0199": 1811, "8766": 1811, "4809": 1811, "4054": 1811, "7600": 1811, "8611": 1811, "2594": 1811, "4373": 1811, "6531e": 1811, "a_big": 1811, "6503e": 1811, "swapax": [1814, 1867, 1911, 1929], "symint": [1815, 1816, 1817, 1818, 1819, 1933, 1943, 1949], "symfloat": [1815, 1816, 1933, 1942], "symbool": [1819, 1933, 1942], "1995": 1820, "4608": 1820, "7702": 1820, "4875": 1820, "9158": 1820, "5872": 1820, "6929": 1820, "6932": 1820, "take_along_axi": [1822, 1895], "max_idx": 1822, "sorted_idx": 1822, "2027": 1823, "7687": 1823, "4412": 1823, "3856": 1823, "5930": 1823, "9859": 1823, "4722": 1823, "3366": 1823, "8986": 1824, "7279": 1824, "1745": 1824, "7156": 1824, "8257": 1824, "2553": 1824, "11111": 1825, "222222": 1825, "3333333": 1825, "1111": 1825, "array_split": 1826, "i_d": 1827, "k_": 1827, "4532": 1827, "4874": 1827, "5018": 1827, "4796": [1827, 1904], "5162": 1827, "5306": 1827, "2922": 1827, "7556": 1827, "2741": 1827, "3161": 1827, "0704": 1827, "0187": 1827, "4079": 1827, "3126": 1827, "8744": 1827, "8223": 1827, "9445": 1827, "4117": 1827, "7780": 1827, "7193": 1827, "4867": 1827, "3204": 1827, "5513": 1827, "4737": [1827, 1856], "2850": 1827, "2573": 1827, "5997": 1827, "sparsebsr": 1831, "sparsecsc": 1831, "sparsebsc": 1831, "9893": 1831, "5809": 1831, "1669": 1831, "7299": 1831, "4942": [1831, 1900], "y_0": 1832, "y_1": 1832, "x_diff": 1832, "y_diff": 1832, "riemann": [1832, 1889, 1897, 1926], "badli": 1834, "cloned_coeffici": 1834, "1527": 1834, "0753": 1834, "7986": 1834, "0210": 1834, "3513": 1834, "5492": 1834, "7403": 1834, "0243": 1834, "7841": 1834, "9046": 1834, "5405": 1834, "9320": 1834, "9270": 1834, "2826": 1834, "lbrace": [1835, 1836, 1837, 1838], "rbrace": [1835, 1836, 1837, 1838], "0813": 1835, "8619": 1835, "7105": 1835, "0935": 1835, "1380": 1835, "3409": [1835, 1904], "2219": 1835, "5653": 1835, "2521": 1835, "2345": 1835, "2544": 1835, "3461": 1835, "4785": 1835, "4477": 1835, "6049": 1835, "6368": 1835, "8775": 1835, "7145": 1835, "1502": 1835, "2716": 1835, "1243": 1835, "5413": 1835, "3615": 1835, "0614": 1835, "7344": 1835, "3164": 1835, "7648": 1835, "4024": 1835, "0978": 1835, "col": [1836, 1838, 1867], "2309": 1837, "5207": 1837, "0049": 1837, "2072": 1837, "0680": 1837, "6602": 1837, "3480": 1837, "5211": 1837, "4573": 1837, "5876": 1837, "0794": [1837, 1926], "8373": 1837, "6654": 1837, "2604": 1837, "5235": 1837, "2447": 1837, "9556": 1837, "2919": 1837, "1768": 1837, "4333": 1837, "3146": [1837, 1900], "6576": 1837, "0432": 1837, "9348": [1837, 1926], "4410": 1837, "9888": 1837, "3337": 1837, "6556": 1837, "4798": 1837, "5466": 1840, "8008": 1840, "9079": 1840, "unique_consecut": [1843, 1867, 1911], "inverse_indic": [1843, 1844], "a_unique_dim0": 1843, "warn_onli": 1846, "alon": [1846, 1868, 1913], "put_": [1846, 1867], "index_add": [1846, 1867, 1911], "index_select": [1846, 1867, 1911, 1925, 1949], "empty_strid": [1846, 1867, 1871, 1911, 1942, 1949], "empty_permut": [1846, 1867, 1911, 1949], "fractionalmaxpool2d": 1846, "fractionalmaxpool3d": 1846, "reflectionpad1d": 1846, "reflectionpad3d": 1846, "replicationpad1d": 1846, "replicationpad3d": 1846, "histc": [1846, 1867, 1911], "bincount": [1846, 1867, 1911], "kthvalu": [1846, 1867, 1882, 1911], "cublasapi_reproduc": [1846, 1904], "avg_pool3d_backward_cuda": 1846, "for_tensor": 1847, "for_modul": 1847, "for_storag": 1847, "unsupported_dtyp": 1847, "privateuse1": [1847, 1849, 1920], "rename_privateuse1_backend": [1847, 1865], "is_foo": 1847, "frames_to_skip": 1848, "maximum_number_of_fram": 1848, "_register_device_modul": 1849, "backendmodul": 1849, "get_amp_supported_dtyp": 1849, "is_autocast_en": [1849, 1867, 1911], "get_autocast_dtyp": 1849, "set_autocast_dtyp": 1849, "set_autocast_en": 1849, "_is_in_bad_fork": 1849, "bad_fork": 1849, "get_rng_stat": [1849, 1865, 1920], "set_rng_stat": [1849, 1865, 1920], "extend_dispatch": 1849, "pytorch_open_registration_exampl": 1849, "nicer": 1850, "alexandr": 1851, "theophil": 1851, "0631": 1852, "5590": 1852, "4893": 1852, "8258": 1852, "5926": 1853, "0056": 1853, "3646": 1853, "vecdot": 1854, "mi": [1855, 1856], "6116": 1855, "5772": [1855, 1926], "4606": 1855, "9120": 1855, "0786": 1855, "7497": 1855, "6623": 1855, "5772j": 1855, "9120j": 1855, "7497j": 1855, "6623j": 1855, "3839j": 1856, "2098": 1856, "6699j": 1856, "3470": 1856, "9451j": 1856, "5174": 1856, "3136j": 1856, "6699": 1856, "9451": 1856, "3136": 1856, "vertic": [1858, 1859, 1912, 1914, 1930, 1944], "atleast_2d": [1859, 1867, 1911], "3139": 1860, "3898": 1860, "1657": 1860, "0383": 1860, "8785": 1860, "1089": 1860, "hubconf": 1864, "entrypoint_nam": 1864, "_resnet18": 1864, "smoother": [1864, 1876], "underscor": [1864, 1883, 1921, 1931], "load_state_dict_from_url": [1864, 1878], "2gb": 1864, "relative_path_to_checkpoint": 1864, "pth": [1864, 1878, 1905], "dirnam": 1864, "__file__": [1864, 1906, 1913, 1946], "5c106cde": [1864, 1878], "force_reload": 1864, "skip_valid": 1864, "trust_repo": 1864, "repo_own": 1864, "repo_nam": 1864, "ref": [1864, 1925, 1942, 1947, 1954], "torchhub": 1864, "owner": [1864, 1894, 1911, 1921, 1922], "github_token": 1864, "repo_or_dir": 1864, "mute": 1864, "resnet50": [1864, 1930, 1946], "resnet50_weight": 1864, "imagenet1k_v1": 1864, "download_url_to_fil": 1864, "hash_prefix": 1864, "temporary_fil": 1864, "sha256": [1864, 1878], "s3": [1864, 1878, 1906], "amazonaw": [1864, 1878, 1906], "model_dir": [1864, 1878], "check_hash": [1864, 1878], "hub_dir": [1864, 1878], "get_dir": [1864, 1878], "ext": [1864, 1878], "eight": [1864, 1878], "hash": [1864, 1867, 1869, 1878, 1911], "succinct": 1864, "set_dir": 1864, "path_to_hub_dir": 1864, "torch_hom": 1864, "xdg_cache_hom": [1864, 1892], "reiniti": 1864, "path_importer_cach": 1864, "subpackag": [1864, 1913], "offend": [1864, 1945], "classifi": [1865, 1869, 1910, 1912, 1916, 1930], "pypi": 1865, "conda": [1865, 1906], "hip": 1865, "javadoc": 1865, "uninitializedbuff": 1865, "anomali": 1865, "fallthrough_kernel": [1865, 1873], "can_device_access_p": 1865, "current_blas_handl": 1865, "device_of": 1865, "get_arch_list": 1865, "get_device_cap": 1865, "get_device_nam": 1865, "get_device_properti": 1865, "get_gencode_flag": 1865, "get_sync_debug_mod": 1865, "ipc_collect": 1865, "memory_usag": 1865, "set_stream": 1865, "set_sync_debug_mod": 1865, "power_draw": 1865, "clock_rat": 1865, "outofmemoryerror": 1865, "jiter": 1865, "sanit": 1865, "_record_memory_histori": [1865, 1956], "_snapshot": [1865, 1956], "_dump_snapshot": [1865, 1956], "empty_cach": [1865, 1892, 1898, 1956], "set_per_process_memory_fract": 1865, "current_allocated_memori": 1865, "driver_allocated_memori": 1865, "openmp": [1865, 1891, 1906, 1941], "xeon": [1865, 1891, 1951], "pathwis": 1865, "exponentialfamili": 1865, "binomi": [1865, 1867, 1911], "chi2": 1865, "continuousbernoulli": 1865, "dirichlet": 1865, "fishersnedecor": 1865, "halfcauchi": 1865, "halfnorm": 1865, "kumaraswami": 1865, "lkjcholeski": 1865, "laplac": 1865, "lognorm": 1865, "lowrankmultivariatenorm": 1865, "mixturesamefamili": 1865, "multinomi": [1865, 1867, 1911], "multivariatenorm": 1865, "negativebinomi": 1865, "onehotcategor": 1865, "relaxedbernoulli": 1865, "logitrelaxedbernoulli": 1865, "relaxedonehotcategor": 1865, "studentt": 1865, "transformeddistribut": 1865, "vonmis": 1865, "weibul": 1865, "wishart": 1865, "hub": [1865, 1878, 1946], "solver": [1865, 1903], "misc": 1865, "normal_": [1865, 1867, 1882, 1887, 1892, 1933], "constant_": [1865, 1887], "ones_": [1865, 1887], "zeros_": [1865, 1887], "eye_": [1865, 1871, 1887], "dirac_": [1865, 1871, 1887], "xavier_uniform_": [1865, 1887], "xavier_normal_": [1865, 1887, 1900], "kaiming_uniform_": [1865, 1887], "trunc_normal_": [1865, 1887], "orthogonal_": [1865, 1871, 1887, 1900], "sparse_": [1865, 1887], "swa": 1865, "ema": 1865, "powersgd": 1865, "remotemodul": 1865, "fork_rng": [1865, 1920], "doublestorag": [1865, 1927], "floatstorag": [1865, 1927], "halfstorag": [1865, 1927], "longstorag": [1865, 1927], "intstorag": [1865, 1927], "shortstorag": [1865, 1927], "charstorag": [1865, 1927], "bytestorag": [1865, 1927], "boolstorag": [1865, 1927], "bfloat16storag": [1865, 1927], "complexdoublestorag": [1865, 1927], "complexfloatstorag": [1865, 1927], "quint8storag": [1865, 1927], "qint8storag": [1865, 1927], "qint32storag": [1865, 1927], "quint4x2storag": [1865, 1927], "quint2x4storag": [1865, 1927], "make_tensor": [1865, 1932], "assert_allclos": [1865, 1932], "generate_methods_for_privateuse1_backend": 1865, "get_cpp_backtrac": 1865, "set_modul": 1865, "sampler": 1865, "mobile_optim": 1865, "optimize_for_mobil": [1865, 1877], "model_zoo": 1865, "load_url": [1865, 1878], "tensorboard": [1865, 1879, 1915], "summarywrit": [1865, 1879, 1930], "iinfo": 1865, "__config__": [1865, 1891], "_log": [1865, 1869, 1954], "set_log": [1865, 1875, 1954], "torchdata": 1865, "torchserv": 1865, "torchtext": 1865, "xla": [1865, 1942], "disadvantag": 1866, "gentl": 1866, "beam": 1866, "traced_bar": 1866, "myscriptmodul": 1866, "103": [1866, 1868], "939": [1866, 1868], "116": [1866, 1868], "779": [1866, 1868], "123": [1866, 1868], "my_script_modul": [1866, 1868], "ins": 1866, "pytorch_jit": 1866, "traced_fn": 1866, "disable_jit_exampl": 1866, "printer": 1866, "rv": 1866, "rv0": 1866, "rv1": 1866, "ssa": 1866, "block0": 1866, "block1": 1866, "loop_in_traced_fn": 1866, "input_tupl": 1866, "fill_row_zero": 1866, "tracerwarn": 1866, "nr": 1866, "09115803241729736": 1866, "6782537698745728": 1866, "cpu_model": 1866, "gpu_model": 1866, "sample_input_cpu": 1866, "sample_input_gpu": 1866, "traced_cpu": 1866, "traced_gpu": 1866, "use_gpu": 1866, "__constants__": [1866, 1868], "my_module_inst": 1866, "redeclar": 1866, "nn_module_inst": 1866, "my_scripted_model": 1866, "pep": [1866, 1868, 1910, 1941], "526": [1866, 1868, 1910], "script_method": 1866, "implicitly_compiled_method": 1866, "another_forward": 1866, "unused_method": 1866, "some_fn": 1866, "ever": [1866, 1927, 1956], "some_fn2": 1866, "some_fn3": 1866, "some_fn4": 1866, "my_dict": [1866, 1868], "my_int": [1866, 1868], "my_const": 1866, "make_dict": 1866, "nnc": 1866, "nvfuser": 1866, "__and__": 1867, "__iand__": 1867, "__ilshift__": 1867, "__ior__": 1867, "__irshift__": 1867, "__ixor__": 1867, "__lshift__": 1867, "__or__": 1867, "__rshift__": 1867, "__xor__": 1867, "absolute_": 1867, "acos_": [1867, 1882], "addbmm_": 1867, "addcdiv_": 1867, "addcmul_": 1867, "addmv_": [1867, 1882], "addr_": 1867, "align_a": [1867, 1882, 1883, 1911], "align_to": [1867, 1882, 1883, 1911], "ellipsis_idx": 1867, "aminmax": [1867, 1911], "arccos_": 1867, "arccosh_": 1867, "arcsin_": [1867, 1925], "arcsinh_": 1867, "arctan2_": 1867, "arctan_": 1867, "arctanh_": 1867, "argwher": [1867, 1911], "as_strided_": 1867, "as_strided_scatt": [1867, 1911, 1949], "asin_": [1867, 1882, 1925], "asinh_": [1867, 1882], "atan_": [1867, 1882], "atanh_": [1867, 1882], "baddbmm_": 1867, "bernoulli_": [1867, 1882, 1933], "bitwise_and_": 1867, "bitwise_left_shift_": 1867, "bitwise_not_": [1867, 1882], "bitwise_or_": 1867, "bitwise_right_shift_": 1867, "bitwise_xor_": 1867, "broadcast_to": [1867, 1911], "cauchy_": [1867, 1882, 1933], "ceil_": [1867, 1882], "clamp_max": [1867, 1911], "clamp_max_": 1867, "clamp_min": [1867, 1911], "clamp_min_": 1867, "clip_": 1867, "conj_physical_": 1867, "copysign_": 1867, "cos_": [1867, 1882, 1889], "cosh_": [1867, 1882], "count_nonzero": [1867, 1911], "cummax": [1867, 1911], "cummin": [1867, 1911], "cumprod_": 1867, "cumsum_": 1867, "deg2rad": [1867, 1882, 1911, 1925], "deg2rad_": [1867, 1882, 1925], "outdim": 1867, "diagonal_scatt": [1867, 1911], "digamma_": [1867, 1882], "div_": [1867, 1882, 1925], "divide_": 1867, "dsplit": [1867, 1911], "eq_": 1867, "erf_": [1867, 1882], "erfc_": [1867, 1882], "erfinv_": [1867, 1882], "exp2": [1867, 1911, 1926, 1930, 1949], "exp2_": 1867, "exp_": [1867, 1882], "expm1_": [1867, 1882], "exponential_": [1867, 1882, 1933], "fill_diagonal_": 1867, "fix_": 1867, "fliplr": [1867, 1911], "flipud": [1867, 1911], "float_power_": 1867, "floor_": [1867, 1882], "floor_divide_": [1867, 1925], "fmax": [1867, 1911, 1949], "fmin": [1867, 1911, 1949], "fmod_": 1867, "frac_": [1867, 1882], "frexp": [1867, 1911], "gcd_": 1867, "ge_": 1867, "geometric_": [1867, 1933], "ger": [1867, 1911], "get_devic": [1867, 1882, 1911, 1925, 1927, 1928], "greater_": 1867, "greater_equal_": 1867, "gt_": 1867, "hardshrink": [1867, 1911], "heavisid": [1867, 1911], "heaviside_": 1867, "hsplit": [1867, 1911, 1929], "hypot_": 1867, "i0_": 1867, "igamma_": 1867, "igammac_": 1867, "index_fil": [1867, 1882, 1911], "index_reduc": [1867, 1911], "is_complex": [1867, 1908, 1911, 1925, 1928, 1944], "is_contigu": [1867, 1882, 1911, 1929, 1944], "is_floating_point": [1867, 1882, 1911, 1925, 1928, 1944], "is_infer": [1867, 1911, 1944], "is_same_s": [1867, 1911, 1925, 1944], "is_set_to": [1867, 1911, 1944], "is_sign": [1867, 1882, 1911, 1925, 1944], "isclos": [1867, 1911], "isfinit": [1867, 1903, 1911, 1949], "isinf": [1867, 1911, 1925, 1949], "isneginf": [1867, 1911, 1925], "isposinf": [1867, 1911, 1925], "isreal": [1867, 1911], "istft": [1867, 1911], "kron": [1867, 1911], "lcm_": 1867, "ldexp_": 1867, "le_": 1867, "lerp_": 1867, "less_": 1867, "less_equal_": 1867, "lgamma_": 1867, "log10_": [1867, 1882], "log1p_": [1867, 1882, 1925], "log2_": [1867, 1882], "log_normal_": [1867, 1882, 1933], "logaddexp2": [1867, 1911], "logcumsumexp": [1867, 1911], "logical_and_": 1867, "logical_not_": [1867, 1882], "logical_or_": 1867, "logical_xor_": 1867, "logit_": 1867, "lt_": 1867, "masked_fil": [1867, 1882, 1884, 1911, 1925], "masked_scatt": [1867, 1911], "masked_select": [1867, 1882, 1911], "matrix_pow": [1867, 1911], "moveaxi": [1867, 1911], "msort": [1867, 1911], "multiply_": 1867, "mvlgamma_": 1867, "nan_to_num_": 1867, "nanmedian": [1867, 1882, 1911], "nansum": [1867, 1911], "narrow_copi": [1867, 1911, 1925], "ne_": 1867, "neg_": [1867, 1882, 1925], "negative_": [1867, 1925], "new_empty_strid": [1867, 1911], "new_ful": [1867, 1892, 1911], "new_on": [1867, 1911], "nextafter_": 1867, "nonzero_stat": [1867, 1911], "not_equal_": 1867, "output_nr": [1867, 1911], "polygamma_": 1867, "pow_": [1867, 1882], "q_per_channel_scal": [1867, 1911], "q_per_channel_zero_point": [1867, 1911], "q_scale": [1867, 1911], "q_zero_point": [1867, 1911], "rad2deg": [1867, 1882, 1911, 1925], "rad2deg_": [1867, 1882, 1925], "reciprocal_": [1867, 1882], "record_stream": [1867, 1892, 1911], "refine_nam": [1867, 1882, 1883, 1911], "relu_": [1867, 1918], "remainder_": 1867, "rename_": [1867, 1882, 1883], "renorm_": 1867, "reshape_a": [1867, 1884, 1911, 1929], "resize_a": [1867, 1911], "the_templ": 1867, "resize_as_sparse_": 1867, "retains_grad": [1867, 1911], "roll": [1867, 1911, 1949], "rot90": [1867, 1911], "round_": [1867, 1882], "rsqrt_": [1867, 1882], "select_scatt": [1867, 1911, 1949], "sgn_": [1867, 1882], "sigmoid_": [1867, 1882, 1918], "sign_": [1867, 1882], "sinc_": 1867, "sinh_": [1867, 1882], "slice_scatt": [1867, 1911, 1949], "smm": [1867, 1911, 1925], "sparse_resize_": 1867, "sparse_resize_and_clear_": 1867, "split_with_s": [1867, 1911, 1929, 1949], "sqrt_": [1867, 1882], "square_": 1867, "squeeze_": [1867, 1918], "sspaddmm": [1867, 1911, 1925], "sub_": [1867, 1882, 1925], "subtract_": 1867, "sum_to_s": [1867, 1911], "swapaxes_": 1867, "swapdim": [1867, 1911, 1929], "swapdims_": 1867, "take_along_dim": [1867, 1911], "tan_": [1867, 1882], "tanh_": [1867, 1882, 1918], "tensor_indices_or_sect": 1867, "to_mkldnn": [1867, 1911], "to_padded_tensor": [1867, 1884, 1911], "to_sparse_bsc": [1867, 1911], "to_sparse_bsr": [1867, 1911, 1925], "to_sparse_csc": [1867, 1911, 1925], "true_divide_": 1867, "trunc_": [1867, 1882], "type_a": [1867, 1882, 1911], "out0": [1867, 1905], "unsafe_chunk": [1867, 1911], "unsafe_split": [1867, 1911], "unsafe_split_with_s": [1867, 1911], "unsqueeze_": [1867, 1918], "view_a": [1867, 1911, 1929], "vsplit": [1867, 1911, 1929], "xlogy_": 1867, "adaptive_avg_pool2d": [1867, 1894, 1911, 1918], "adaptive_max_pool1d_with_indic": [1867, 1894], "adaptive_max_pool2d_with_indic": 1867, "adaptive_max_pool3d_with_indic": 1867, "alpha_dropout": [1867, 1911], "assert_int_or_pair": 1867, "arg_nam": 1867, "binary_cross_entropi": [1867, 1911], "binary_cross_entropy_with_logit": [1867, 1911], "celu": [1867, 1911], "dropout2d": 1867, "dropout3d": 1867, "feature_alpha_dropout": [1867, 1911], "fractional_max_pool2d_with_indic": 1867, "fractional_max_pool3d_with_indic": 1867, "gaussian_nll_loss": 1867, "glu": [1867, 1911], "gumbel_softmax": 1867, "hardsigmoid": [1867, 1911, 1918], "hardswish": [1867, 1911, 1918], "huber_loss": [1867, 1911], "instance_norm": [1867, 1911, 1918], "local_response_norm": 1867, "lp_pool1d": 1867, "lp_pool2d": 1867, "max_pool1d_with_indic": [1867, 1911], "max_pool3d_with_indic": [1867, 1911, 1949], "mish": [1867, 1911], "multi_head_attention_forward": 1867, "embed_dim_to_check": 1867, "in_proj_weight": 1867, "in_proj_bia": 1867, "bias_k": 1867, "bias_v": 1867, "out_proj_weight": 1867, "out_proj_bia": 1867, "use_separate_proj_weight": 1867, "q_proj_weight": 1867, "k_proj_weight": 1867, "v_proj_weight": 1867, "static_k": 1867, "static_v": 1867, "multilabel_soft_margin_loss": 1867, "relu6": [1867, 1911, 1918], "silu": [1867, 1884, 1911], "softsign": 1867, "tanhshrink": 1867, "adaptive_avg_pool1d": [1867, 1894, 1911, 1918, 1949], "adaptive_max_pool1d": [1867, 1894, 1911], "affine_grid_gener": [1867, 1911], "alias_copi": [1867, 1911], "align_tensor": [1867, 1911], "alpha_dropout_": 1867, "as_strided_copi": [1867, 1911], "atleast_1d": [1867, 1911], "avg_pool1d": [1867, 1911, 1918, 1949], "bartlett_window": [1867, 1871, 1911], "cudnn_en": 1867, "batch_norm_backward_elemt": 1867, "invstd": 1867, "sum_di": 1867, "sum_dy_xmu": 1867, "batch_norm_backward_reduc": 1867, "input_g": 1867, "bias_g": 1867, "out3": 1867, "batch_norm_elemt": [1867, 1911], "batch_norm_gather_stat": [1867, 1911], "batch_norm_gather_stats_with_count": [1867, 1911], "batch_norm_stat": [1867, 1911], "batch_norm_update_stat": [1867, 1911], "blackman_window": [1867, 1871, 1911], "block_diag": [1867, 1911], "can_cast": [1867, 1911], "ccol_indices_copi": [1867, 1911], "celu_": 1867, "choose_qparams_optim": [1867, 1911], "n_bin": 1867, "bit_width": 1867, "col_indices_copi": [1867, 1911], "column_stack": [1867, 1911], "constant_pad_nd": [1867, 1911, 1949], "conv_tbc": [1867, 1911], "crow_indices_copi": [1867, 1911], "cudnn_affine_grid_gener": [1867, 1911], "cudnn_batch_norm": [1867, 1911], "exponential_average_factor": 1867, "cudnn_convolut": [1867, 1911], "cudnn_convolution_add_relu": [1867, 1911], "cudnn_convolution_relu": [1867, 1911], "cudnn_convolution_transpos": [1867, 1911], "cudnn_grid_sampl": [1867, 1911], "cudnn_is_accept": [1867, 1911], "cumulative_trapezoid": [1867, 1911], "detach_copi": [1867, 1911, 1953], "diagonal_copi": [1867, 1911], "dropout_": [1867, 1877], "embedding_renorm_": 1867, "physical_layout": [1867, 1949], "empty_quant": [1867, 1911], "anyenumtyp": 1867, "expand_copi": [1867, 1911], "fake_quantize_per_channel_affin": [1867, 1911], "fbgemm_linear_fp16_weight": [1867, 1911], "packed_weight": 1867, "fbgemm_linear_fp16_weight_fp32_activ": [1867, 1911], "fbgemm_linear_int8_weight": [1867, 1911], "col_offset": 1867, "weight_scal": 1867, "weight_zero_point": 1867, "fbgemm_linear_int8_weight_fp32_activ": [1867, 1911], "fbgemm_linear_quantize_weight": [1867, 1911], "fbgemm_pack_gemm_matrix_fp16": [1867, 1911], "fbgemm_pack_quantized_matrix": [1867, 1911], "feature_alpha_dropout_": 1867, "feature_dropout": [1867, 1911], "feature_dropout_": 1867, "frobenius_norm": [1867, 1911], "from_fil": [1867, 1911, 1927], "fused_moving_avg_obs_fake_qu": [1867, 1911], "observer_on": 1867, "fake_quant_on": 1867, "running_min": 1867, "running_max": 1867, "per_row_fake_qu": 1867, "symmetric_qu": 1867, "interpolation_mod": [1867, 1949], "has_bias": 1867, "gru_cel": [1867, 1911], "w_ih": 1867, "w_hh": 1867, "hamming_window": [1867, 1871, 1911], "histogramdd": [1867, 1911], "hspmm": [1867, 1911, 1925], "indices_copi": [1867, 1911], "is_autocast_cpu_en": [1867, 1911], "is_grad_en": [1867, 1911], "is_vulkan_avail": [1867, 1911], "isin": [1867, 1911], "kaiser_window": [1867, 1911], "lstm_cell": [1867, 1911], "meshgrid": [1867, 1911], "miopen_batch_norm": [1867, 1911], "miopen_convolut": [1867, 1911], "miopen_convolution_add_relu": [1867, 1911], "miopen_convolution_relu": [1867, 1911], "miopen_convolution_transpos": [1867, 1911], "miopen_depthwise_convolut": [1867, 1911], "miopen_rnn": [1867, 1911], "weight_stride0": 1867, "dropout_st": 1867, "out4": 1867, "mkldnn_adaptive_avg_pool2d": [1867, 1911], "mkldnn_convolut": [1867, 1911], "mkldnn_linear_backward_weight": 1867, "bias_defin": 1867, "mkldnn_max_pool2d": [1867, 1911], "mkldnn_max_pool3d": [1867, 1911], "mkldnn_rnn_layer": [1867, 1911], "weight0": 1867, "weight1": 1867, "weight2": 1867, "weight3": 1867, "hx_": 1867, "cx_": 1867, "native_batch_norm": [1867, 1911], "save_mean": 1867, "save_invstd": 1867, "native_channel_shuffl": [1867, 1911], "native_dropout": [1867, 1911, 1949], "native_group_norm": [1867, 1911, 1949], "hxw": [1867, 1949], "native_layer_norm": [1867, 1911, 1949], "native_norm": [1867, 1911, 1925], "norm_except_dim": [1867, 1911], "nuclear_norm": [1867, 1911], "pairwise_dist": [1867, 1911], "permute_copi": [1867, 1911], "promote_typ": [1867, 1911, 1932], "quantize_per_channel": [1867, 1911, 1916], "quantize_per_tensor_dynam": [1867, 1911, 1916], "quantized_batch_norm": [1867, 1911], "quantized_gru_cel": [1867, 1911], "packed_ih": 1867, "packed_hh": 1867, "col_offsets_ih": 1867, "col_offsets_hh": 1867, "scale_ih": 1867, "scale_hh": 1867, "zero_point_ih": 1867, "zero_point_hh": 1867, "quantized_lstm_cel": [1867, 1911], "quantized_max_pool1d": [1867, 1911], "quantized_max_pool2d": [1867, 1911], "quantized_max_pool3d": [1867, 1911], "quantized_rnn_relu_cel": [1867, 1911], "quantized_rnn_tanh_cel": [1867, 1911], "rand_lik": [1867, 1871, 1892, 1911, 1933, 1939], "randint_lik": [1867, 1871, 1911, 1933], "randn_lik": [1867, 1871, 1884, 1911, 1933], "randperm": [1867, 1871, 1911, 1933, 1949], "result_typ": [1867, 1911], "scalar1": 1867, "scalar2": 1867, "rnn_relu": [1867, 1911], "rnn_relu_cel": [1867, 1911], "rnn_tanh": [1867, 1911], "rnn_tanh_cel": [1867, 1911], "row_indices_copi": [1867, 1911], "row_stack": [1867, 1911], "rrelu_": 1867, "rsub": [1867, 1911], "searchsort": [1867, 1911], "segment_reduc": [1867, 1911], "selu_": 1867, "slice_copi": [1867, 1911], "sparse_bsc_tensor": [1867, 1911, 1925], "sparse_bsr_tensor": [1867, 1911, 1925], "sparse_compressed_tensor": [1867, 1911, 1925], "sparse_csc_tensor": [1867, 1911, 1925], "split_copi": [1867, 1911], "split_with_sizes_copi": [1867, 1911], "squeeze_copi": [1867, 1911], "std_mean": [1867, 1882, 1911], "t_copi": [1867, 1911], "threshold_": 1867, "transpose_copi": [1867, 1911], "trapz": [1867, 1911], "tril_indic": [1867, 1871, 1911], "triu_indic": [1867, 1871, 1911], "unbind_copi": [1867, 1911], "unfold_copi": [1867, 1911], "unsqueeze_copi": [1867, 1911], "values_copi": [1867, 1911], "vander": [1867, 1871, 1911], "var_mean": [1867, 1882, 1911], "view_as_complex_copi": [1867, 1911], "view_as_real_copi": [1867, 1911], "_nn": 1867, "adaptive_max_pool2d": [1867, 1911], "avg_pool2d": [1867, 1911, 1918, 1949], "conv_depthwise3d": [1867, 1911], "cross_entropy_loss": [1867, 1911], "input_scal": 1867, "elu_": 1867, "flatten_dense_tensor": [1867, 1911], "random_sampl": 1867, "gelu_": 1867, "hardsigmoid_": [1867, 1918], "hardswish_": 1867, "hardtanh_": [1867, 1918], "leaky_relu_": 1867, "log_sigmoid": [1867, 1911], "mish_": 1867, "mkldnn_linear": [1867, 1911], "mkldnn_reorder_conv2d_weight": [1867, 1911], "mkldnn_reorder_conv3d_weight": [1867, 1911], "nll_loss2d": [1867, 1911], "nll_loss_nd": [1867, 1911], "reflection_pad3d": [1867, 1911, 1949], "relu6_": 1867, "rrelu_with_nois": [1867, 1911], "rrelu_with_noise_": 1867, "silu_": 1867, "slow_conv3d": [1867, 1911], "slow_conv_dilated2d": [1867, 1911], "slow_conv_dilated3d": [1867, 1911], "slow_conv_transpose2d": [1867, 1911], "slow_conv_transpose3d": [1867, 1911], "softshrink": [1867, 1911], "thnn_conv2d": [1867, 1911], "unflatten_dense_tensor": [1867, 1911], "upsample_bicubic2d": [1867, 1911], "scales_h": 1867, "scales_w": 1867, "upsample_bilinear2d": [1867, 1911, 1949], "upsample_linear1d": [1867, 1911], "upsample_nearest1d": [1867, 1911], "upsample_nearest2d": [1867, 1911, 1949], "upsample_nearest3d": [1867, 1911], "scales_d": 1867, "upsample_trilinear3d": [1867, 1911], "fft_fftfreq": [1867, 1911], "fft_fftshift": [1867, 1911], "fft_hfft2": [1867, 1911], "fft_hfftn": [1867, 1911], "fft_ifftshift": [1867, 1911], "fft_ihfft2": [1867, 1911], "fft_ihfftn": [1867, 1911], "fft_rfftfreq": [1867, 1911], "_linalg": 1867, "linalg_cross": [1867, 1911], "linalg_det": [1867, 1911], "linalg_diagon": [1867, 1911], "eigvec": 1867, "linalg_ldl_factor": [1867, 1911], "linalg_ldl_factor_ex": [1867, 1911], "linalg_ldl_solv": [1867, 1911], "linalg_lu": [1867, 1911], "linalg_lu_factor": [1867, 1911], "linalg_lu_factor_ex": [1867, 1911], "linalg_lu_solv": [1867, 1911], "linalg_matmul": [1867, 1911], "linalg_matrix_exp": [1867, 1911], "linalg_matrix_pow": [1867, 1911], "linalg_multi_dot": [1867, 1911], "linalg_norm": [1867, 1911], "linalg_pinv": [1867, 1911], "linalg_solve_ex": [1867, 1911], "linalg_solve_triangular": [1867, 1911], "linalg_vand": [1867, 1911], "linalg_vecdot": [1867, 1911], "linalg_vector_norm": [1867, 1911], "_nest": 1867, "nested_to_padded_tensor": [1867, 1911], "_spars": 1867, "sparse_sampled_addmm": [1867, 1911], "_special": 1867, "special_airy_ai": [1867, 1911], "special_bessel_j0": [1867, 1911], "special_bessel_j1": [1867, 1911], "special_bessel_y0": [1867, 1911], "special_bessel_y1": [1867, 1911], "special_chebyshev_polynomial_t": [1867, 1911], "special_chebyshev_polynomial_u": [1867, 1911], "special_chebyshev_polynomial_v": [1867, 1911], "special_chebyshev_polynomial_w": [1867, 1911], "special_digamma": [1867, 1911], "special_entr": [1867, 1911], "special_erf": [1867, 1911], "special_erfc": [1867, 1911], "special_erfcx": [1867, 1911], "special_erfinv": [1867, 1911], "special_exp2": [1867, 1911], "special_expit": [1867, 1911], "special_expm1": [1867, 1911], "special_gammainc": [1867, 1911], "special_gammaincc": [1867, 1911], "special_gammaln": [1867, 1911], "special_hermite_polynomial_h": [1867, 1911], "special_i0": [1867, 1911], "special_i1": [1867, 1911], "special_laguerre_polynomial_l": [1867, 1911], "special_legendre_polynomial_p": [1867, 1911], "special_log1p": [1867, 1911], "special_log_ndtr": [1867, 1911], "special_log_softmax": [1867, 1911], "special_logit": [1867, 1911], "special_logsumexp": [1867, 1911], "special_modified_bessel_i0": [1867, 1911], "special_modified_bessel_i1": [1867, 1911], "special_modified_bessel_k0": [1867, 1911], "special_modified_bessel_k1": [1867, 1911], "special_multigammaln": [1867, 1911], "special_ndtr": [1867, 1911], "special_ndtri": [1867, 1911], "special_polygamma": [1867, 1911], "special_psi": [1867, 1911], "special_round": [1867, 1911], "special_scaled_modified_bessel_k0": [1867, 1911], "special_scaled_modified_bessel_k1": [1867, 1911], "special_shifted_chebyshev_polynomial_t": [1867, 1911], "special_shifted_chebyshev_polynomial_u": [1867, 1911], "special_shifted_chebyshev_polynomial_v": [1867, 1911], "special_shifted_chebyshev_polynomial_w": [1867, 1911], "special_sinc": [1867, 1911], "special_softmax": [1867, 1911], "special_spherical_bessel_j0": [1867, 1911], "special_xlog1pi": [1867, 1911], "special_xlogi": [1867, 1911], "special_zeta": [1867, 1911], "tval": 1867, "is_accept": 1867, "rect": 1867, "magic": [1867, 1870, 1933, 1943], "__complex__": 1867, "__float__": 1867, "__int__": 1867, "hex": [1867, 1869, 1911], "__hex__": 1867, "oct": [1867, 1911], "__oct__": 1867, "divmod": [1867, 1869, 1911], "chr": [1867, 1869, 1911], "int_float": 1867, "float_int": 1867, "fab": [1867, 1911], "int_int": 1867, "float_float": 1867, "complex_complex": 1867, "int_complex": 1867, "complex_int": 1867, "float_complex": 1867, "complex_float": [1867, 1927], "scalar_scalar": 1867, "int_to_int": 1867, "modf": [1867, 1911], "mathremaind": [1867, 1911], "programm": [1868, 1869, 1916], "tn": 1868, "subtyp": 1868, "an_error": 1868, "noreturn": [1868, 1869], "classvar": [1868, 1869], "anystr": [1868, 1869], "nomin": 1868, "newtyp": [1868, 1869], "tup": [1868, 1869], "emptydatastructur": 1868, "my_list": 1868, "aug_add_x": 1868, "inc": [1868, 1869], "assign_x": [1868, 1869], "sum_pair": 1868, "red": [1868, 1869], "green": [1868, 1869, 1945], "enum_fn": [1868, 1869], "my_variable_nam": 1868, "top_level_method": 1868, "other_help": 1868, "ten": [1868, 1930], "my_submodul": 1868, "tuple_or_list": 1868, "a_tupl": 1868, "de": [1868, 1913, 1916], "is_script": [1868, 1869, 1911], "unsupported_linear_op": 1868, "is_trac": [1868, 1869], "univers": 1868, "typing_extens": 1868, "a_dict": 1868, "some_dict": 1868, "delimit": [1869, 1870], "tstype": 1869, "tsmoduletyp": 1869, "tsalltyp": 1869, "tsmetatyp": 1869, "tsprimitivetyp": 1869, "tsstructuraltyp": 1869, "tsnominaltyp": 1869, "myclass": [1869, 1913], "printabl": [1869, 1913], "sortabl": 1869, "nevertheless": [1869, 1923], "inc_first_el": 1869, "cpufloattyp": 1869, "tstupl": 1869, "tsnamedtupl": 1869, "tslist": 1869, "tsdict": 1869, "tsoption": 1869, "tsunion": 1869, "tsfutur": 1869, "tsrref": 1869, "tsawait": 1869, "await": [1869, 1870, 1921], "keytyp": 1869, "tensortyp": [1869, 1953], "_await": 1869, "mytupl": 1869, "scripted_inc": 1869, "_annotatednamedtupl": 1869, "_namedtupleannot": 1869, "_unannotatednamedtupl": 1869, "mistak": [1869, 1896, 1943], "nameerror": 1869, "remedi": 1869, "tsbuiltinclass": 1869, "tscustomclass": 1869, "tsenum": 1869, "tstensor": 1869, "subtensor": [1869, 1894, 1955], "subwithtorchfunct": 1869, "script_g": 1869, "tsclassdef": 1869, "methoddefinit": 1869, "__torch__": [1869, 1910], "class2": 1869, "tsenumdef": 1869, "tsenumtyp": 1869, "memberidentifi": 1869, "intenum": 1869, "intflag": 1869, "basecolor": 1869, "compli": [1869, 1913], "classbodydefinit": 1869, "moduleobj": 1869, "testmodul": 1869, "mymodel": [1869, 1888, 1902, 1908], "dosometh": 1869, "strateg": 1869, "congruent": 1869, "python3": 1869, "unannot": 1869, "python3annot": 1869, "paramannot": 1869, "returnannot": 1869, "funcormethodbodi": 1869, "mypyannot": 1869, "localvarannot": 1869, "setval": 1869, "moduletyp": [1869, 1913], "classidentifi": 1869, "instanceattridentifi": 1869, "offset_": 1869, "tsstructualtyp": 1869, "grammar": 1869, "chapter": [1869, 1897], "floattyp": 1869, "inttyp": 1869, "stringtyp": 1869, "devicetyp": 1869, "bullet": 1869, "tupletyp": 1869, "listtyp": 1869, "enclosur": 1869, "parenth_form": 1869, "list_displai": 1869, "dict_displai": 1869, "legal": 1869, "stringliter": 1869, "floatnumb": 1869, "expression_list": 1869, "list_comprehens": 1869, "comp_for": 1869, "target_list": 1869, "or_expr": 1869, "key_datum_list": 1869, "dict_comprehens": 1869, "key_datum": 1869, "ongo": [1869, 1910, 1919, 1921], "enclos": 1869, "datum": [1869, 1935], "attributeref": 1869, "slice_list": 1869, "slice_item": 1869, "proper_slic": 1869, "argument_list": 1869, "desugar": [1869, 1943], "u_expr": 1869, "tightli": [1869, 1900], "m_expr": 1869, "a_expr": 1869, "shift_expr": 1869, "and_expr": 1869, "xor_expr": 1869, "comp_oper": 1869, "__contains__": 1869, "or_test": 1869, "and_test": 1869, "not_test": 1869, "conditional_express": 1869, "starred_item": 1869, "expression_stmt": 1869, "starred_express": 1869, "assignment_express": 1869, "assignment_stmt": 1869, "augmented_assignment_stmt": 1869, "augtarget": 1869, "augop": 1869, "annotated_assignment_stmt": 1869, "raise_stmt": 1869, "assert_stmt": 1869, "return_stmt": 1869, "del_stmt": 1869, "pass_stmt": 1869, "print_stmt": 1869, "break_stmt": 1869, "continue_stmt": 1869, "if_stmt": 1869, "while_stmt": 1869, "for_stmt": 1869, "with_stmt": 1869, "with_item": 1869, "__enter__": 1869, "suppress": [1869, 1920], "tuple_stmt": 1869, "getattr_stmt": 1869, "hasattr_stmt": 1869, "zip_stmt": 1869, "iterable1": 1869, "iterable2": 1869, "enumerate_stmt": 1869, "add_stat_valu": 1869, "sugaredvalu": 1869, "unrecogn": 1869, "honor": 1869, "__abs__": 1869, "bytearrai": 1869, "delattr": 1869, "exec": 1869, "__index__": 1869, "isint": 1869, "issubclass": [1869, 1894], "ndigit": 1869, "__import__": [1869, 1913], "notimpl": [1869, 1870, 1894, 1943], "rpc_sync": [1869, 1911, 1921, 1922, 1923], "synonym": 1869, "_fork": [1869, 1891], "_wait": [1869, 1891], "lexic": 1870, "indent": 1870, "coroutin": 1870, "__del__": [1870, 1889], "__bytes__": 1870, "__slots__": 1870, "metaclass": 1870, "mro": 1870, "__r": 1870, "__": [1870, 1953], "bytesliter": 1870, "imagnumb": 1870, "parenthes": 1870, "ifs": 1870, "customiz": [1870, 1934, 1941], "compound": 1870, "exc_typ": 1870, "exc_valu": 1870, "adaptivelogsoftmaxwithloss": 1871, "overload_nam": [1873, 1894], "handi": [1873, 1889, 1892], "spotti": 1873, "googl": 1873, "colab": [1873, 1913, 1943], "dispatch_kei": [1873, 1941], "keynam": 1873, "alias_analysi": 1873, "conserv": [1873, 1876, 1892, 1943], "op_nam": [1873, 1908], "fallthrough": 1873, "div_cpu": 1873, "off_by_default": 1875, "_registr": 1875, "spammi": [1875, 1941], "compiled_autograd": 1875, "born": 1876, "citizen": 1876, "afterthought": 1876, "intuit": [1876, 1946], "alik": 1876, "grai": 1876, "systemat": 1876, "onboard": 1876, "maskedarrai": 1876, "masked_tensor": 1876, "mobil": [1877, 1916, 1944], "blocklist": [1877, 1913], "mobileoptimizertyp": 1877, "conv_bn_fus": 1877, "correspondingli": 1877, "prepack": [1877, 1911], "insert_fold_prepack_op": 1877, "arm": [1877, 1916], "remove_dropout": 1877, "hoist": 1877, "hoist_conv_packed_param": 1877, "fuse_add_relu": 1877, "vulkan": 1877, "vulkan_automatic_gpu_transf": 1877, "freeze_modul": 1877, "script_modul": 1877, "optimization_blocklist": 1877, "preserved_method": 1877, "_mobileoptimizertyp": 1877, "recursivescriptmodul": [1877, 1905], "download": [1878, 1906, 1930, 1946], "infrequ": 1879, "window_s": 1879, "max_sampl": 1879, "cap": 1879, "_monitor": 1879, "data_value_t": 1879, "eventhandlerhandl": 1879, "register_event_handl": 1879, "unregister_event_handl": 1879, "tensorboardeventhandl": 1879, "writer": [1879, 1900, 1930], "shader": [1880, 1901], "processor": 1880, "metalperformanceshad": 1880, "shared_memori": 1881, "abruptli": 1881, "get_all_sharing_strategi": 1881, "get_sharing_strategi": 1881, "set_sharing_strategi": 1881, "new_strategi": 1881, "di": [1881, 1939, 1941, 1947], "abnorm": [1881, 1902], "forev": [1881, 1893], "asap": 1881, "queue_2": 1881, "x_clone": 1881, "segfault": [1881, 1903, 1943], "shm_open": 1881, "prone": [1881, 1902, 1943], "destructor": [1881, 1923], "seriou": [1881, 1892, 1943], "torch_shm_manag": 1881, "unnot": 1881, "spawncontext": 1881, "has_nam": 1882, "is_shar": [1882, 1927, 1944], "is_sparse_csr": [1882, 1911, 1927, 1944], "is_tensor": [1882, 1925], "items": [1882, 1911], "unifies_names_from_input_tensor": 1882, "nbyte": [1882, 1911, 1927], "ndimens": 1882, "register_post_accumulate_grad_hook": [1882, 1889], "position": [1882, 1883], "unnam": [1882, 1883], "misalign": 1882, "inher": 1882, "collaps": [1882, 1911, 1949], "disappear": 1882, "img": [1883, 1930], "renamed_img": 1883, "coexist": 1883, "wildcard": [1883, 1913, 1953], "somewher": [1883, 1899, 1947], "scale_channel": 1883, "more_img": 1883, "named_tensor": 1883, "named_img": 1883, "flat_img": 1883, "named_flat_img": 1883, "unflattened_named_img": 1883, "grad_loss": 1883, "8107": 1883, "6357": 1883, "0783": 1883, "untest": 1883, "rename_map": 1883, "greedili": 1883, "unment": 1883, "49152": 1883, "datastructur": 1884, "seamless": 1884, "nested_tensor": 1884, "nt": 1884, "vein": 1884, "as_nested_tensor": 1884, "irregular": 1884, "indistinguish": 1884, "2286": 1884, "4842": 1884, "7827": 1884, "6745": [1884, 1926], "0658": 1884, "1247": 1884, "4078": 1884, "8083": 1884, "2871": 1884, "5559": 1884, "9885": 1884, "4074": 1884, "4855": 1884, "0733": 1884, "8285": 1884, "6858": 1884, "7030": 1884, "3481": 1884, "0236": 1884, "fake_grad": 1884, "6862": 1884, "1282": 1884, "1031": 1884, "0464": 1884, "3276": 1884, "9967": 1884, "0054": 1884, "8972": 1884, "9174": 1884, "4995": 1884, "8546": 1884, "7194": 1884, "2918": 1884, "1846": 1884, "8793": 1884, "5183": 1884, "6447": 1884, "8009": 1884, "8468": 1884, "9832": 1884, "5272": 1884, "pt_infer": 1884, "pt_larg": 1884, "pt_small": 1884, "bitwidth": [1885, 1900, 1916, 1925], "asymmetr": [1885, 1916, 1919], "sacrific": [1887, 1892], "dirac": 1887, "glorot": 1887, "bengio": 1887, "fan": 1887, "_in": 1887, "_out": [1887, 1897, 1949], "fan_in": 1887, "delv": 1887, "surpass": 1887, "he": 1887, "_mode": 1887, "fan_out": 1887, "redrawn": 1887, "sax": 1887, "2013": 1887, "marten": 1887, "clip_grad_value_": 1888, "optimizer2": 1888, "batch_per_it": 1888, "iters_to_accumul": 1888, "num_proc": 1888, "grad_param": 1888, "grad_norm": 1888, "scaled_grad_param": 1888, "inv_scal": 1888, "proce": [1888, 1892, 1921, 1954], "optimizer0": 1888, "optimizer1": 1888, "output0": 1888, "model0": 1888, "model1": 1888, "loss0": 1888, "loss1": 1888, "imped": 1888, "poor": [1888, 1889], "dp_model": 1888, "alter": [1888, 1894], "imported_funct": 1888, "mymm": 1888, "myfloat32func": 1888, "fwd_output": 1888, "cleaner": 1889, "mapsto": 1889, "educ": 1889, "_save": 1889, "_saved_self": 1889, "convex": 1889, "concav": 1889, "togglabl": 1889, "drawback": 1889, "0011": 1889, "dirti": 1889, "hogwild": 1889, "train_fn": 1889, "graphtask": 1889, "copyslic": 1889, "mutex": 1889, "gotten": 1889, "curiou": 1889, "\u2102": 1889, "yj": 1889, "holomorph": 1889, "fulfil": [1889, 1895, 1913, 1942, 1947], "theori": 1889, "homomorph": 1889, "mathematician": 1889, "im": 1889, "studi": [1889, 1915], "beauti": 1889, "somewhat": [1889, 1892, 1925], "counterintuit": 1889, "0906": 1889, "4835": 1889, "audio": [1889, 1930], "\u211d": 1889, "_output": 1889, "vj": 1889, "selfdeletingtempfil": 1889, "tmp_dir": 1889, "uuid": 1889, "uuid4": 1889, "temp_fil": 1889, "forbidden": 1889, "savedtensor": 1889, "_raw_saved_": 1889, "_raw_saved_self": 1889, "save_on_disk_threshold": 1889, "tensor_or_sctf": 1889, "_saved_oth": 1889, "4th": 1890, "backcompat": 1890, "broadcast_warn": 1890, "userwarn": 1890, "compute_z": 1891, "w_z": 1891, "w_y": 1891, "tbb": 1891, "aten_thread": 1891, "omp": 1891, "mkl_thread": 1891, "bla": 1891, "mkldnn_cpu_runtim": 1891, "use_mkldnn": 1891, "use_tbb": 1891, "use_openmp": 1891, "ON": [1891, 1898, 1899], "set_num_interop_thread": 1891, "get_num_interop_thread": 1891, "set_num_thread": [1891, 1902], "get_num_thread": 1891, "omp_num_thread": 1891, "mkl_num_thread": 1891, "e5": 1891, "oversubscript": 1891, "irrespect": 1892, "spread": 1892, "cuda2": [1892, 1898], "a_ful": 1892, "10240": 1892, "b_full": 1892, "ab_ful": 1892, "7277": 1892, "ab_tf32": 1892, "016": 1892, "ga100": 1892, "1747": 1892, "relative_error": 1892, "0022": 1892, "ab_fp32": 1892, "0031": 1892, "000039": 1892, "7x": 1892, "globalcontext": 1892, "setallowtf32cubla": 1892, "setallowtf32cudnn": 1892, "bench_gemm_transform": 1892, "allow_fp16_reduc": 1892, "4048": 1892, "1634": 1892, "1639": 1892, "4056": 1892, "1670": 1892, "1661": 1892, "4080": 1892, "1664": 1892, "1658": 1892, "1651": 1892, "4104": 1892, "1677": 1892, "1674": 1892, "4128": 1892, "1796": [1892, 1900], "2519": 1892, "5096": 1892, "2144": 1892, "2149": 1892, "2766": 1892, "5120": 1892, "2142": 1892, "9728": 1892, "3875": 1892, "5779": 1892, "16384": [1892, 1946], "6182": 1892, "9656": 1892, "setallowfp16reductioncubla": 1892, "instabl": 1892, "setallowbf16reductioncubla": 1892, "invis": [1892, 1944, 1954], "start_ev": 1892, "elapsed_time_m": 1892, "exploit": 1892, "paragraph": [1892, 1897], "initial_grad": 1892, "memory_alloc": [1892, 1898], "memory_snapshot": [1892, 1898], "memcheck": 1892, "pytorch_no_cuda_memory_cach": [1892, 1898], "option2": 1892, "value2": 1892, "max_split_size_mb": 1892, "borderlin": 1892, "memory_summari": 1892, "resort": [1892, 1897, 1913], "roundup_power2_divis": 1892, "cudacachingalloc": 1892, "1280": 1892, "1536": 1892, "1792": 1892, "256mb": 1892, "512mb": 1892, "1gb": [1892, 1952], "knob": [1892, 1942], "garbage_collection_threshold": 1892, "reclaim": [1892, 1939], "release_cached_block": 1892, "unfavor": 1892, "expandable_seg": 1892, "2mb": 1892, "sliver": 1892, "cuda_runtime_api": 1892, "iostream": 1892, "fpic": 1892, "my_malloc": 1892, "cout": 1892, "endl": [1892, 1899], "my_fre": 1892, "cudafre": [1892, 1956], "cudapluggablealloc": 1892, "new_alloc": 1892, "_cuda_clearcublasworkspac": 1892, "kib": 1892, "lru": 1892, "geometri": 1892, "1023": 1892, "zeta": [1892, 1911, 1926, 1949], "varieti": [1892, 1922], "use_pytorch_kernel_cach": 1892, "pytorch_kernel_cache_path": 1892, "store_tru": 1892, "disable_cuda": 1892, "assess": 1892, "cudagetdevicecount": 1892, "cuinit": 1892, "pytorch_nvml_based_cuda_check": 1892, "nvml": 1892, "nvmldevicegetcount_v2": 1892, "poison": 1892, "train_load": [1892, 1902], "x_cpu": 1892, "x_gpu": 1892, "x_cpu_long": 1892, "y_cpu": 1892, "y_gpu": 1892, "y_cpu_long": 1892, "new_tensor": 1892, "overus": 1892, "principl": [1892, 1944], "cudagraphlaunch": 1892, "elid": 1892, "versatil": 1892, "static_input": 1892, "static_output": 1892, "realist": 1892, "sophist": [1892, 1912], "violat": [1892, 1895], "virtual": 1892, "d_in": 1892, "d_out": 1892, "640": 1892, "static_target": 1892, "static_y_pr": 1892, "static_loss": 1892, "real_input": [1892, 1943], "real_target": 1892, "refil": 1892, "dag": 1892, "rejoin": 1892, "cuda_work": 1892, "nsight": 1892, "reorgan": 1892, "graphabl": 1892, "needlessli": [1892, 1942], "econom": 1892, "static_out_1": 1892, "g1_workload": 1892, "static_in_1": 1892, "static_out_2": 1892, "g2_workload": 1892, "static_in_2": 1892, "real_data_1": 1892, "real_data_2": 1892, "occasion": [1892, 1925, 1943], "29500": [1893, 1914, 1921, 1922], "dive": [1893, 1897, 1913, 1947, 1948], "grad0": 1893, "grad1": 1893, "bucket1": 1893, "bucket0": 1893, "hurt": 1893, "kick": [1893, 1921, 1922, 1951], "earliest": 1893, "unreadi": 1893, "perspect": [1893, 1903, 1922, 1947], "hpp": 1893, "processgroupgloo": 1893, "processgroupmpi": 1893, "_sync_param": 1893, "autograd_hook": 1893, "prepare_for_backward": 1893, "_after_": 1893, "log_level": [1893, 1954], "optimize_ddp": 1893, "mark_dirti": 1894, "mark_non_differenti": [1894, 1895], "set_materialize_grad": 1894, "linearfunct": 1894, "grad_bia": 1894, "mulconst": 1894, "mycub": [1894, 1895], "grad_dx": [1894, 1895], "my_cub": [1894, 1895], "input_featur": 1894, "output_featur": 1894, "duck": [1894, 1913], "__array_function__": [1894, 1944], "nep": [1894, 1944], "0018": 1894, "scalartensor": 1894, "handled_funct": 1894, "mandat": 1894, "update_wrapp": 1894, "ensure_tensor": 1894, "metadatatensor": 1894, "__add__": 1894, "subtensor2": 1894, "othersubtensor": 1894, "loggingtensor": 1894, "permiss": 1894, "_metadata": 1894, "ndata": 1894, "ministri": 1894, "silli": 1894, "superclass": 1894, "troublesom": 1894, "face": [1894, 1913, 1930, 1943], "_get_overridable_funct": 1894, "get_overridable_funct": [1894, 1955], "func_dict": 1894, "nn_func": 1894, "labori": 1894, "_get_testing_overrid": 1894, "get_testing_overrid": [1894, 1955], "override_dict": 1894, "dummy_add": 1894, "get_ignored_funct": [1894, 1955], "__torch_dispatch__": [1894, 1925, 1943], "2020": 1894, "outdat": 1894, "redispatch": [1894, 1943], "dispatchkei": 1894, "zerotensor": 1894, "compositeimplicitautograd": 1894, "func_nam": [1894, 1921], "exot": 1894, "zoo": 1894, "subclass_zoo": [1894, 1943], "intro": 1894, "custom_vjp": 1895, "custom_jvp": 1895, "to_numpi": 1895, "numpysort": 1895, "ind_inv": 1895, "_1": [1895, 1913], "numpytak": 1895, "numpy_sort": 1895, "saniti": 1895, "ggx": 1895, "vmappabl": 1895, "x_bdim": 1895, "ind_bdim": 1895, "ind_inv_bdim": 1895, "expanded_x": 1895, "expanded_ind": 1895, "expanded_ind_inv": 1895, "new_dim": 1895, "logical_dim": 1895, "maybe_expand_bdim_at_front": 1895, "pseudocod": 1895, "rapidli": [1896, 1902, 1908, 1909], "fortun": [1896, 1954], "abridg": 1896, "total_loss": 1896, "extrud": 1896, "phenomenon": 1896, "plenti": 1896, "bptt": 1896, "repackag": 1896, "nm": 1896, "blow": 1896, "rememb": [1896, 1902, 1947], "elf": 1896, "grep": [1896, 1938], "run_model": 1896, "recoveri": 1896, "data_parallel": 1896, "pad_packed_sequ": 1896, "padded_input": 1896, "packed_input": 1896, "packed_output": 1896, "my_lstm": 1896, "dp_m": 1896, "padding_input": 1896, "ur": 1897, "ui": [1897, 1930, 1948, 1951], "j_f": 1897, "calculu": 1897, "cw": 1897, "bigger": 1897, "articl": 1897, "58eb23378f2a376565a66ac32c93a316c45b6131": 1897, "l99": 1897, "l105": 1897, "ds_dx": 1897, "compute_gradi": 1897, "ds_dy": 1897, "conj_w_d": 1897, "w_d": 1897, "d_idx": 1897, "albeit": 1897, "wonder": 1897, "amd": [1898, 1936], "portabl": 1898, "rocmdoc": 1898, "programming_guid": 1898, "hip_api_guid": 1898, "cuda_vers": 1898, "cudaruntimegetvers": 1898, "cudadrivergetvers": 1898, "hip_vers": 1898, "hipruntimegetvers": 1898, "hipdrivergetvers": 1898, "11000": 1898, "use_rocm": 1898, "rocm_vers": 1898, "40300": 1898, "cmake": [1898, 1906], "drocm_force_enable_gpu_assert": 1898, "addglobalcallback": 1899, "recordfunct": 1899, "ivalu": 1899, "threadlocaldebuginfo": 1899, "debuginfoguard": 1899, "recordfunctioncallback": 1899, "onfunctionent": 1899, "onfunctionexit": 1899, "needsinput": 1899, "samplingprob": 1899, "enablerecordfunct": 1899, "cerr": 1899, "broader": [1899, 1933], "inject": 1899, "setapiusagehandl": 1899, "setapiusagelogg": 1899, "event_nam": 1899, "c10_log_api_usage_onc": 1899, "my_api": 1899, "_log_api_usage_onc": 1899, "archiv": 1899, "bundl": 1899, "akin": 1899, "jpeg": 1899, "camera": [1899, 1930], "setexportmoduleextrafileshook": 1899, "extrafilesmap": 1899, "producer_info": 1899, "getenv": 1899, "getsourc": 1899, "precompil": 1899, "pyc": 1899, "loos": 1899, "elabor": 1900, "tpu": 1900, "mylinear": 1900, "sample_input": 1900, "0413": 1900, "2057": 1900, "0597": 1900, "8247": 1900, "1045": 1900, "4299": 1900, "5457": 1900, "4793": 1900, "3634": 1900, "8525": 1900, "6749": 1900, "l0": [1900, 1905], "deeper": [1900, 1913, 1947], "bignet": 1900, "big_net": 1900, "dynamicnet": 1900, "dynamic_net": 1900, "2051": 1900, "7601": 1900, "1963": 1900, "4354": 1900, "6598": 1900, "4446": 1900, "4628": 1900, "8774": 1900, "6848": 1900, "5458": 1900, "4647": 1900, "5310": 1900, "0609": 1900, "0940": 1900, "1266": 1900, "0623": 1900, "3508": 1900, "0550": 1900, "5317": 1900, "5562": 1900, "4028": 1900, "6942": 1900, "0140": 1900, "0329": 1900, "1160": 1900, "0434": 1900, "3889": 1900, "1613": 1900, "6340": 1900, "3887": 1900, "9979": 1900, "0767": 1900, "3526": 1900, "8756": 1900, "5847": 1900, "6016": 1900, "1608": 1900, "0829": 1900, "6338": 1900, "9239": 1900, "6943": 1900, "5034": 1900, "0268": 1900, "4489": 1900, "9403": 1900, "2509": 1900, "5052": 1900, "3088": 1900, "4951": 1900, "3381": 1900, "5166": 1900, "boilerpl": [1900, 1913], "beginn": 1900, "examples_nn": 1900, "polynomial_modul": 1900, "teach": 1900, "0013": [1900, 1926], "0030": 1900, "0008": 1900, "modalmodul": 1900, "6614": 1900, "2669": 1900, "0617": 1900, "4519": 1900, "two_layer_net_optim": 1900, "blitz": 1900, "neural_networks_tutori": 1900, "autograd_tutori": 1900, "new_net": 1900, "runningmean": 1900, "1041": 1900, "0647": 1900, "1515": 1900, "m_load": 1900, "unserialized_th": 1900, "statefulmodul": 1900, "param3": 1900, "param_list": 1900, "parameterlist": 1900, "param_dict": 1900, "parameterdict": 1900, "buffer1": 1900, "buffer2": 1900, "buffer3": 1900, "0322": 1900, "9066": 1900, "1409": 1900, "4852": 1900, "6949": 1900, "2911": 1900, "1044": 1900, "4202": 1900, "1953": 1900, "5299": 1900, "8747": 1900, "6289": 1900, "4898": 1900, "6434": 1900, "5187": 1900, "0346": 1900, "4077": 1900, "4324": 1900, "7022": 1900, "3915": 1900, "6176": 1900, "6062": 1900, "5992": 1900, "4452": 1900, "2843": 1900, "3710": 1900, "3947": 1900, "saving_loading_model": 1900, "what_is_state_dict": 1900, "skip_init": 1900, "skip_param_init": 1900, "forward_hook": [1900, 1950], "backward_hook": [1900, 1950], "new_grad_input": 1900, "5059": 1900, "8158": 1900, "2390": 1900, "0043": 1900, "addmmbackward": 1900, "forward_pre_hook_handl": 1900, "5752": 1900, "7421": 1900, "forward_hook_handl": 1900, "0980": 1900, "4666": 1900, "0256": 1900, "4497": 1900, "5046": 1900, "combat": 1900, "mps_devic": 1901, "yourfavoritenet": 1901, "a3c": 1902, "set_start_method": 1902, "simplequeu": 1902, "cope": 1902, "eleg": 1902, "num_process": 1902, "inappropri": 1902, "vcpu": 1902, "htop": 1902, "exceed": 1902, "competit": 1902, "oversubscrib": 1902, "fairli": [1902, 1914, 1942, 1946], "mnist_hogwild": 1902, "dataloader_kwarg": 1902, "train_epoch": 1902, "30x": 1902, "boost": [1902, 1938], "754": 1903, "1e20": 1903, "4142e": 1903, "struggl": 1903, "benign": 1903, "v_dot2": 1903, "mfma": 1903, "fp64": 1903, "rocbla": 1903, "miopen": 1903, "rocblas_internal_fp16_alt_impl": 1903, "miopen_debug_convolution_attrib_fp16_alt_impl": 1903, "_convbackend": 1903, "slownd": 1903, "slownd_transpos": 1903, "slownd_dil": 1903, "slownd_dilated_transpos": 1903, "convbackend": 1903, "miopendepthwis": 1903, "miopentranspos": 1903, "svd_lowrank": [1904, 1925], "22modul": 1904, "20determin": 1904, "index_add_cuda_": 1904, "1509": 1904, "8027": 1904, "0333": 1904, "1444": 1904, "rese": 1904, "seed_work": 1904, "worker_se": 1904, "train_dataset": 1904, "tensor_dict": 1905, "loaded_numb": 1905, "loaded_even": 1905, "scene": [1905, 1930], "loaded_smal": 1905, "num_batches_track": 1905, "bn_state_dict": 1905, "new_bn": 1905, "out0_relu": 1905, "1400": 1905, "4563": 1905, "0271": 1905, "4406": 1905, "2827": 1905, "4588": 1905, "2031": 1905, "1316": 1905, "6533": 1905, "3413": 1905, "1112": 1905, "m_state_dict": 1905, "new_m": 1905, "original_nam": 1905, "controlflowmodul": 1905, "controlflowmodule_trac": 1905, "3793": 1905, "controlflowmodule_script": 1905, "tagger": 1905, "ipu_tag": 1905, "ipu_deseri": 1905, "startswith": [1905, 1911], "get_default_load_endian": 1905, "byteord": 1905, "loadendian": 1905, "default_load_endian": 1905, "set_default_load_endian": 1905, "endian": 1905, "rem": 1906, "7z": 1906, "curl": 1906, "ossci": 1906, "mkl_2020": 1906, "aoa": 1906, "omkl": 1906, "cuda_prefix": 1906, "cuda102": 1906, "magma_2": 1906, "4_": 1906, "omagma": 1906, "cmake_include_path": 1906, "cd": [1906, 1913, 1915, 1954], "magma_hom": 1906, "studio": [1906, 1908], "pip": [1906, 1908, 1909, 1910, 1930, 1941], "cmake_gener": 1906, "ffi": 1906, "create_extens": 1906, "_ext": 1906, "define_macro": 1906, "relative_to": 1906, "c99": 1906, "x86_x64": 1906, "packagesnotfounderror": 1906, "anaconda": 1906, "noarch": 1906, "continuum": 1906, "pkg": 1906, "pro": [1906, 1930], "msys2": 1906, "importerror": [1906, 1913], "dll": 1906, "vc2017": 1906, "redistribut": 1906, "vc": 1906, "vs2017_runtim": 1906, "mkl_fft": 1906, "intel_openmp": 1906, "vs2017": 1906, "openbla": 1906, "forg": 1906, "emerg": [1906, 1942], "bootstrap": 1906, "forgotten": 1906, "idiom": 1906, "freeze_support": 1906, "forkingpickl": 1906, "brokenpipeerror": 1906, "errno": 1906, "couldn": [1906, 1910], "torch_14808_1591070686": 1906, "thalloc": 1906, "tdr": 1906, "thcudacheck": 1906, "csrc": [1906, 1942], "storageshar": 1906, "microsoft": 1907, "flavor": 1907, "polish": [1907, 1908], "orchestr": [1908, 1950], "exportopt": 1908, "onnxregistri": 1908, "extractor": 1908, "fxgraphextractor": 1908, "onnxfakecontext": 1908, "exportoutput": 1908, "exportoutputseri": 1908, "upgrad": [1908, 1912, 1932], "perceptron": 1908, "mlpmodel": 1908, "fc0": 1908, "fc3": 1908, "tensor_x": 1908, "97": [1908, 1926], "export_output": 1908, "model_proto": 1908, "modelproto": 1908, "complianc": 1908, "protobuf": [1908, 1910], "netron": 1908, "icon": 1908, "viewer": [1908, 1956], "parseabl": 1908, "fxe0007": 1908, "fxe0011": 1908, "fxe0012": 1908, "fxe0013": 1908, "fxe0014": 1908, "fxe0015": 1908, "fxe0016": 1908, "model_arg": 1908, "model_kwarg": 1908, "my_simple_model": 1908, "my_dynamic_model": 1908, "tensor_typ": 1908, "elem_typ": 1908, "dim_param": [1908, 1910], "arg0_dim_0": 1908, "arg0_dim_1": 1908, "arg0_dim_2": 1908, "fake_context": 1908, "onnx_registri": 1908, "diagnostic_opt": 1908, "enable_fake_mod": 1908, "_subclass": [1908, 1942, 1943], "fake_tensor": [1908, 1942, 1943], "faketensormod": [1908, 1942, 1943], "faketensor": [1908, 1943], "xdoctest": [1908, 1909], "torch_doctest_onnx": [1908, 1909], "my_nn_modul": 1908, "my_model_without_initi": 1908, "WITH": [1908, 1910], "my_model_with_initi": 1908, "input_adapt": 1908, "output_adapt": 1908, "diagnostic_context": 1908, "export_except": 1908, "adapt_torch_inputs_to_onnx": 1908, "func_with_nested_input_structur": 1908, "x_dict": 1908, "y_tupl": 1908, "y3": 1908, "adapt_torch_outputs_to_onnx": 1908, "model_output": 1908, "func_returning_tupl": 1908, "pt_output": 1908, "diagnosticcontext": 1908, "bufferediobas": 1908, "_initi": 1908, "suffix": [1908, 1930, 1931], "model_initi": 1908, "save_diagnost": 1908, "protobufexportoutputseri": 1908, "serializetostr": 1908, "exported_model": 1908, "get_op_funct": 1908, "is_registered_op": 1908, "register_op": 1908, "tracedonnxfunct": 1908, "sctip": 1908, "warnings_as_error": 1908, "is_onnxrt_backend_support": 1909, "onnxrt": [1909, 1936], "onnxruntim": [1909, 1910], "dummy_input": 1910, "actual_input_1": 1910, "learned_": 1910, "output_nam": 1910, "learned_0": 1910, "learned_1": 1910, "learned_2": 1910, "learned_3": 1910, "learned_14": 1910, "learned_15": 1910, "kernel_shap": 1910, "9216": 1910, "transb": 1910, "check_model": 1910, "printable_graph": 1910, "ort": 1910, "ort_sess": 1910, "inferencesess": 1910, "astyp": 1910, "seq_length": 1910, "real_seq_length": 1910, "experienc": 1910, "new_data": 1910, "hope": [1910, 1948], "symbolic_opset": 1910, "symbolic_opset9": 1910, "_variablefunct": 1910, "pyi": 1910, "checkout": 1910, "___torch_mangle_0": 1910, "alpha_f": 1910, "myrelu": 1910, "value_t": 1910, "pythonop": [1910, 1911], "mylogexp": 1910, "operator_export_typ": 1910, "onnx_fallthrough": 1910, "onnx_aten_fallback": 1910, "onnx_opset": 1910, "opset15": 1910, "custom_opset": 1910, "67326": 1910, "alphax": 1910, "castlik": 1910, "gammax": 1910, "settyp": 1910, "custom_selu": 1910, "jit_util": 1910, "graphcontext": 1910, "onnxscript_op": 1910, "register_custom_op_symbol": 1910, "symbolic_nam": 1910, "symbolic_fn": 1910, "Be": [1910, 1951], "symbolic_help": 1910, "symbolic_foo_forward": 1910, "custom_domain": 1910, "attr1_f": 1910, "attr2_i": 1910, "custom_op": [1910, 1943], "foo_forward": 1910, "foomodel": 1910, "example_input1": 1910, "caffe2": [1910, 1930], "torch_script_graph": 1910, "unconvertible_op": 1910, "dynamic_ax": 1910, "export_param": 1910, "trainingmod": 1910, "operatorexporttyp": 1910, "do_constant_fold": 1910, "keep_initializers_as_input": 1910, "export_modules_as_funct": 1910, "autograd_inlin": 1910, "OF": 1910, "input_i": 1910, "input_z": 1910, "fileno": 1910, "untrain": 1910, "doc_str": 1910, "onnx_aten": 1910, "build_caffe2": 1910, "summodul": 1910, "dim_valu": 1910, "my_custom_axis_nam": 1910, "sum_dynamic_axes_1": 1910, "deduplicate_initi": 1910, "predefin": 1910, "74765": 1910, "checkererror": 1910, "unsupportedoperatorerror": 1910, "export_to_pretty_str": 1910, "export_typ": 1910, "google_print": 1910, "add_node_nam": 1910, "nodeproto": 1910, "debugstr": 1910, "contrib": 1910, "test_aten_embedding_2": 1910, "test_oper": 1910, "unregister_custom_op_symbol": 1910, "select_model_mode_for_export": 1910, "is_in_onnx_export": 1910, "middl": 1910, "enable_log": 1910, "disable_log": 1910, "graphinfo": 1910, "incorrect_relu_symbolic_funct": 1910, "2328854203224182": 1910, "699536174352349": 1910, "constantchunk": 1911, "__and_": 1911, "__contains_": 1911, "__derive_index": 1911, "__getitem_": 1911, "__interpol": 1911, "__is_": 1911, "__isnot_": 1911, "__lshift_": 1911, "__not_": 1911, "__or_": 1911, "__range_length": 1911, "__rshift_": 1911, "__xor_": 1911, "_cast_byt": 1911, "_cast_char": 1911, "_cast_doubl": 1911, "_cast_float": 1911, "_cast_half": 1911, "_cast_int": 1911, "_cast_long": 1911, "_cast_short": 1911, "_conj": 1911, "_convolution_mod": 1911, "_dim_arang": 1911, "_log_softmax": [1911, 1949], "_pack_padded_sequ": 1911, "_pad_packed_sequ": 1911, "_reshape_from_tensor": 1911, "_sample_dirichlet": 1911, "_set_item": 1911, "_shape_as_tensor": 1911, "_standard_gamma": 1911, "_uniqu": 1911, "_unique2": 1911, "_weight_norm": 1911, "conv1d_relu": 1911, "conv2d_relu": 1911, "conv3d_relu": 1911, "embedding_renorm": 1911, "floordiv": [1911, 1918], "linear_relu": [1911, 1918], "nonzero_numpi": 1911, "numpy_t": 1911, "unchecked_cast": 1911, "unique_dim": 1911, "_quantiz": 1911, "conv2d_prepack": 1911, "conv3d_prepack": 1911, "conv_transpose1d_prepack": 1911, "conv_transpose2d_prepack": 1911, "conv_transpose3d_prepack": 1911, "linear_dynam": 1911, "linear_prepack": 1911, "linear_prepack_fp16": 1911, "linear_prepack_fp16_legaci": 1911, "linear_prepack_legaci": 1911, "_test": 1911, "get_first": 1911, "compleximplicit": 1911, "floatimplicit": 1911, "intimplicit": 1911, "__iand_": 1911, "__ilshift_": 1911, "__ior_": 1911, "__irshift_": 1911, "__ixor_": 1911, "__round_to_zero_floordiv": 1911, "__upsampl": 1911, "__upsample_bilinear": 1911, "__upsample_nearest": 1911, "_adaptive_avg_pool2d": [1911, 1949], "_adaptive_avg_pool3d": [1911, 1949], "_add_batch_dim": 1911, "_add_relu": 1911, "_addmm_activ": 1911, "_aminmax": 1911, "_amp_foreach_non_finite_check_and_unscal": 1911, "_amp_update_scal": 1911, "_assert_tensor_metadata": 1911, "_autocast_to_full_precis": 1911, "_autocast_to_reduced_precis": 1911, "_batch_norm_impl_index": 1911, "_cdist_forward": [1911, 1949], "_cholesky_solve_help": 1911, "_choose_qparams_per_tensor": 1911, "_coalesc": 1911, "_compute_linear_combin": 1911, "_conj_copi": 1911, "_conj_phys": 1911, "_conv_depthwise2d": 1911, "_convert_indices_from_coo_to_csr": 1911, "_convert_indices_from_csr_to_coo": 1911, "_copy_from": 1911, "_copy_from_and_res": 1911, "_cslt_compress": 1911, "_cslt_sparse_mm": 1911, "_ctc_loss": 1911, "_cudnn_ctc_loss": 1911, "_cudnn_init_dropout_st": 1911, "_cudnn_rnn": 1911, "_cudnn_rnn_flatten_weight": 1911, "_cufft_clear_plan_cach": 1911, "_cufft_get_plan_cache_max_s": 1911, "_cufft_get_plan_cache_s": 1911, "_cufft_set_plan_cache_max_s": 1911, "_cummax_help": 1911, "_cummin_help": 1911, "_debug_has_internal_overlap": 1911, "_dimi": 1911, "_dimv": 1911, "_dirichlet_grad": 1911, "_efficient_attention_forward": 1911, "_efficientzerotensor": 1911, "_embedding_bag": [1911, 1949], "_embedding_bag_forward_onli": 1911, "_empty_affine_quant": 1911, "_empty_per_channel_affine_quant": 1911, "_euclidean_dist": 1911, "_fake_quantize_learnable_per_channel_affin": 1911, "_fake_quantize_learnable_per_tensor_affin": 1911, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1911, "_fft_c2c": 1911, "_fft_c2r": 1911, "_fft_r2c": 1911, "_fill_mem_eff_dropout_mask": 1911, "_flash_attention_forward": 1911, "_foobar": [1911, 1954], "_foreach_ab": 1911, "_foreach_aco": 1911, "_foreach_add": 1911, "_foreach_addcdiv": 1911, "_foreach_addcmul": 1911, "_foreach_asin": 1911, "_foreach_atan": 1911, "_foreach_ceil": 1911, "_foreach_clamp_max": 1911, "_foreach_clamp_min": 1911, "_foreach_copi": 1911, "_foreach_co": 1911, "_foreach_cosh": 1911, "_foreach_div": 1911, "_foreach_erf": 1911, "_foreach_erfc": 1911, "_foreach_exp": 1911, "_foreach_expm1": 1911, "_foreach_floor": 1911, "_foreach_frac": 1911, "_foreach_lerp": 1911, "_foreach_lgamma": 1911, "_foreach_log": 1911, "_foreach_log10": 1911, "_foreach_log1p": 1911, "_foreach_log2": 1911, "_foreach_maximum": 1911, "_foreach_minimum": 1911, "_foreach_mul": 1911, "_foreach_neg": 1911, "_foreach_norm": 1911, "_foreach_pow": 1911, "_foreach_reciproc": 1911, "_foreach_round": 1911, "_foreach_sigmoid": 1911, "_foreach_sign": 1911, "_foreach_sin": 1911, "_foreach_sinh": 1911, "_foreach_sqrt": 1911, "_foreach_sub": 1911, "_foreach_tan": 1911, "_foreach_tanh": 1911, "_foreach_trunc": 1911, "_foreach_zero": 1911, "_functional_assert_async": 1911, "_functional_sym_constrain_rang": 1911, "_functional_sym_constrain_range_for_s": 1911, "_fused_adam": 1911, "_fused_adamw": 1911, "_fused_dropout": 1911, "_fused_moving_avg_obs_fq_help": 1911, "_fused_moving_avg_obs_fq_helper_funct": 1911, "_fused_sdp_choic": 1911, "_fw_primal": 1911, "_fw_primal_copi": 1911, "_get_cpu_cap": 1911, "_get_tracing_st": 1911, "_grad_sum_to_s": 1911, "_has_compatible_shallow_copy_typ": 1911, "_has_same_storage_numel": 1911, "_histogramdd_bin_edg": 1911, "_histogramdd_from_bin_ct": 1911, "_histogramdd_from_bin_tensor": 1911, "_index_put_impl": 1911, "_indices_copi": 1911, "_infer_s": 1911, "_int_mm": 1911, "_is_all_tru": 1911, "_is_any_tru": 1911, "_is_zerotensor": 1911, "_linalg_check_error": 1911, "_linalg_det": 1911, "_linalg_eigh": 1911, "_linalg_slogdet": 1911, "_linalg_solve_ex": 1911, "_linalg_svd": 1911, "_list_to_tensor": 1911, "_logcumsumexp": 1911, "_lstm_mp": 1911, "_make_dep_token": 1911, "_make_du": 1911, "_make_dual_copi": 1911, "_make_per_channel_quantized_tensor": 1911, "_make_per_tensor_quantized_tensor": 1911, "_masked_scal": 1911, "_masked_softmax": 1911, "_mkldnn_reshap": 1911, "_mkldnn_transpos": 1911, "_mps_convolut": 1911, "_mps_convolution_transpos": 1911, "_native_batch_norm_legit": [1911, 1949], "_native_batch_norm_legit_funct": 1911, "_native_batch_norm_legit_no_train": [1911, 1949], "_native_multi_head_attent": 1911, "_ncf_unsqueez": 1911, "_ncf_view": 1911, "_neg_view": 1911, "_neg_view_copi": 1911, "_nested_from_pad": 1911, "_nested_from_padded_and_nested_exampl": 1911, "_nested_tensor_from_mask": 1911, "_nested_tensor_from_mask_left_align": 1911, "_nested_tensor_from_tensor_list": 1911, "_nested_tensor_s": 1911, "_nested_tensor_softmax_with_shap": 1911, "_nested_tensor_storage_offset": 1911, "_nested_tensor_strid": 1911, "_nested_view_from_buff": 1911, "_nested_view_from_buffer_copi": 1911, "_new_zeros_with_same_feature_meta": 1911, "_nnpack_avail": 1911, "_nnpack_spatial_convolut": 1911, "_no_grad_embedding_renorm": 1911, "_no_grad_fil": 1911, "_no_grad_norm": 1911, "_no_grad_uniform": 1911, "_no_grad_zero": 1911, "_pack_sequ": 1911, "_pad_circular": 1911, "_pad_enum": 1911, "_pdist_forward": [1911, 1949], "_pin_memori": 1911, "_prelu_kernel": 1911, "_propagate_xla_data": 1911, "_remove_batch_dim": 1911, "_reshape_alia": 1911, "_reshape_alias_copi": 1911, "_reshape_copi": 1911, "_resize_output": 1911, "_rowwise_prun": 1911, "_saturate_weight_to_fp16": 1911, "_scaled_dot_product_attention_math": 1911, "_scaled_dot_product_efficient_attent": 1911, "_scaled_dot_product_flash_attent": 1911, "_scaled_mm": 1911, "_size_if_not_equ": 1911, "_slow_conv2d_forward": 1911, "_sobol_engine_draw": 1911, "_sobol_engine_ff": 1911, "_sobol_engine_initialize_st": 1911, "_sobol_engine_scrambl": 1911, "_softmax": [1911, 1926, 1949], "_sparse_addmm": 1911, "_sparse_broadcast_to": 1911, "_sparse_broadcast_to_copi": 1911, "_sparse_bsc_tensor_unsaf": 1911, "_sparse_bsr_tensor_unsaf": 1911, "_sparse_compressed_tensor_unsaf": 1911, "_sparse_coo_tensor_unsaf": 1911, "_sparse_coo_tensor_with_dim": 1911, "_sparse_coo_tensor_with_dims_and_tensor": 1911, "_sparse_csc_tensor_unsaf": 1911, "_sparse_csr_prod": 1911, "_sparse_csr_sum": 1911, "_sparse_csr_tensor_unsaf": 1911, "_sparse_log_softmax": 1911, "_sparse_mask_project": 1911, "_sparse_mm": 1911, "_sparse_mm_reduce_impl": 1911, "_sparse_semi_structured_linear": 1911, "_sparse_softmax": 1911, "_sparse_sparse_matmul": 1911, "_sparse_sum": 1911, "_spdiag": 1911, "_standard_gamma_grad": 1911, "_tensor_to_list": 1911, "_test_ambiguous_default": 1911, "_test_autograd_multiple_dispatch": 1911, "_test_autograd_multiple_dispatch_view": 1911, "_test_autograd_multiple_dispatch_view_copi": 1911, "_test_check_tensor": 1911, "_test_functorch_fallback": 1911, "_test_optional_filled_intlist": 1911, "_test_optional_floatlist": 1911, "_test_optional_intlist": 1911, "_test_serialization_subcmul": 1911, "_test_string_default": 1911, "_test_warn_in_autograd": 1911, "_thnn_fused_gru_cel": 1911, "_thnn_fused_lstm_cel": 1911, "_to_copi": [1911, 1949], "_to_cpu": 1911, "_to_dens": 1911, "_to_spars": 1911, "_to_sparse_bsc": 1911, "_to_sparse_bsr": 1911, "_to_sparse_csc": 1911, "_to_sparse_csr": 1911, "_to_sparse_semi_structur": 1911, "_transform_bias_rescale_qkv": 1911, "_transformer_encoder_layer_fwd": 1911, "_trilinear": 1911, "_triton_multi_head_attent": 1911, "_triton_scaled_dot_attent": 1911, "_unpack_du": 1911, "_unsafe_index": 1911, "_unsafe_index_put": 1911, "_unsafe_view": 1911, "_unwrap_opt": 1911, "_upsample_bicubic2d_aa": 1911, "_upsample_bilinear2d_aa": 1911, "_upsample_nearest_exact1d": 1911, "_upsample_nearest_exact2d": 1911, "_upsample_nearest_exact3d": 1911, "_use_cudnn_ctc_loss": 1911, "_use_cudnn_rnn_flatten_weight": 1911, "_validate_compressed_sparse_indic": 1911, "_validate_sparse_bsc_tensor_arg": 1911, "_validate_sparse_bsr_tensor_arg": 1911, "_validate_sparse_compressed_tensor_arg": 1911, "_validate_sparse_coo_tensor_arg": 1911, "_validate_sparse_csc_tensor_arg": 1911, "_validate_sparse_csr_tensor_arg": 1911, "_values_copi": 1911, "_weight_norm_interfac": 1911, "capit": 1911, "confirmed_by_own": [1911, 1921], "convolution_overrid": 1911, "copy_sparse_to_spars": 1911, "endswith": 1911, "expandtab": 1911, "fake_quantize_per_channel_affine_cachemask": 1911, "fake_quantize_per_tensor_affine_cachemask": 1911, "fill_diagon": 1911, "glu_jvp": 1911, "has_torch_funct": [1911, 1955], "is_non_overlapping_and_dens": 1911, "is_own": [1911, 1921], "is_strides_like_format": 1911, "isalnum": 1911, "isalpha": 1911, "isdecim": 1911, "isdigit": 1911, "isidentifi": 1911, "islow": 1911, "isnumer": 1911, "isprint": 1911, "isspac": 1911, "istitl": 1911, "isupp": 1911, "lift_fresh": 1911, "ljust": 1911, "local_valu": [1911, 1914, 1921], "log_sigmoid_forward": 1911, "lstrip": 1911, "matrix_h": 1911, "nll_loss2d_forward": 1911, "nll_loss_forward": 1911, "normal_funct": 1911, "owner_nam": [1911, 1921], "percentformat": 1911, "quantized_gru": 1911, "quantized_lstm": 1911, "resize_as_spars": 1911, "rfind": 1911, "rindex": 1911, "rjust": 1911, "rpartit": 1911, "rsplit": 1911, "rstrip": 1911, "set_data": 1911, "slow_conv3d_forward": 1911, "sparse_res": 1911, "sparse_resize_and_clear": 1911, "splitlin": 1911, "swapcas": 1911, "sym_numel": [1911, 1949], "sym_storage_offset": [1911, 1949], "sym_strid": [1911, 1949], "unique_dim_consecut": 1911, "zfill": 1911, "_allgather_bas": 1911, "_reduce_scatter_bas": 1911, "allgath": 1911, "allgather_coalesc": 1911, "allgather_into_tensor_coalesc": 1911, "allreduce_coalesc": 1911, "alltoal": 1911, "alltoall_bas": 1911, "recv_any_sourc": 1911, "reduce_scatter_tensor_coalesc": 1911, "debugprim": 1911, "load_tensor": 1911, "_mm_plus_mm": 1911, "_reinterpret_tensor": 1911, "_mkl_linear": 1911, "_mkl_reorder_linear_weight": 1911, "_convolution_pointwis": 1911, "_convolution_transpose_pointwis": 1911, "_is_mkldnn_bf16_support": 1911, "_is_mkldnn_fp16_support": 1911, "_linear_pointwis": 1911, "_reorder_convolution_transpose_weight": 1911, "_reorder_convolution_weight": 1911, "_reorder_linear_weight": 1911, "_reorder_mkldnn_rnn_layer_weight": 1911, "mkldnn_prepack": 1911, "conv2d_run": 1911, "qconv1d_pointwis": 1911, "qconv2d_pointwis": 1911, "qconv3d_pointwis": 1911, "qconv_prepack": 1911, "qlinear_pointwis": 1911, "qlinear_prepack": 1911, "conv2d_clamp_prepack": 1911, "conv2d_clamp_run": 1911, "conv2d_transpose_clamp_prepack": 1911, "conv2d_transpose_clamp_run": 1911, "linear_clamp_prepack": 1911, "linear_clamp_run": 1911, "unpack_prepacked_sizes_conv2d": 1911, "unpack_prepacked_sizes_linear": 1911, "addstatvalu": 1911, "autogradadd": 1911, "autogradallnonzero": 1911, "autogradallzero": 1911, "autogradanynonzero": 1911, "autogradzero": 1911, "bailout": [1911, 1942], "bailouttempl": 1911, "broadcastmkldnntensor": 1911, "broadcasts": 1911, "chunksiz": 1911, "constantmkldnntensor": 1911, "differentiablegraph": 1911, "enumnam": 1911, "enumvalu": 1911, "fallbackgraph": 1911, "fusedconcat": 1911, "fusiongroup": 1911, "ifthenels": 1911, "ignoredpythonop": 1911, "mkldnnclamp": 1911, "mkldnnhardsigmoid": 1911, "mkldnnhardswish": 1911, "mkldnnhardtanh": 1911, "mkldnnlayernorm": 1911, "mkldnnscalarmul": 1911, "mmbatchsid": 1911, "mmtreereduc": 1911, "modulecontainerindex": 1911, "numtotensor": 1911, "raiseexcept": 1911, "reductions": 1911, "requiresgradcheck": 1911, "staticruntimecopyout": 1911, "staticsubgraph": 1911, "stringindex": 1911, "tensorexprdynamicgroup": 1911, "tensorexprdynamicguard": 1911, "tensorexprgroup": 1911, "timepoint": 1911, "tupleindex": 1911, "tupleunpack": 1911, "varconcat": 1911, "varstack": 1911, "awaitable_nowait": 1911, "awaitable_wait": 1911, "is_cpu": [1911, 1944], "is_ipu": [1911, 1944], "is_mkldnn": [1911, 1944], "is_mp": [1911, 1944], "is_mtia": 1911, "is_nest": [1911, 1944], "is_ort": [1911, 1944], "is_quant": [1911, 1944], "is_vulkan": [1911, 1944], "is_xla": [1911, 1944], "is_xpu": [1911, 1944], "onednnfusiongroup": 1911, "onednnfusionguard": 1911, "profile_ivalu": 1911, "rangelist": 1911, "rpc_remot": 1911, "unchecked_unwrap_opt": 1911, "bessel_i0": [1911, 1949], "bessel_i1": [1911, 1949], "bessel_j0": [1911, 1926, 1949], "bessel_j1": [1911, 1926, 1949], "broadcast_in_dim": [1911, 1949], "cbrt": [1911, 1949], "collapse_view": [1911, 1949], "convert_element_typ": [1911, 1949], "copy_strid": [1911, 1949], "copy_to": [1911, 1949], "device_put": [1911, 1949], "erf_inv": [1911, 1949], "erfcx": [1911, 1926, 1949], "fft_c2c": [1911, 1949], "fft_c2r": [1911, 1949], "fft_r2c": [1911, 1949], "iota": [1911, 1949], "maximum_valu": [1911, 1949], "minimum_valu": [1911, 1949], "ndtri": [1911, 1926, 1949], "rev": [1911, 1949], "shift_left": [1911, 1949], "shift_right_arithmet": [1911, 1949], "slice_in_dim": [1911, 1949], "spherical_bessel_j0": [1911, 1926, 1949], "split_dim": [1911, 1949], "view_of": [1911, 1949], "view_of_dtyp": [1911, 1949], "xor_sum": [1911, 1949], "_call_end_callbacks_on_jit_fut": 1911, "_record_function_ent": 1911, "_record_function_enter_new": 1911, "_record_function_exit": 1911, "_bfloat16quantizedtofloat": 1911, "_floattobfloat16quant": 1911, "add_out": 1911, "add_relu_out": 1911, "add_scalar_out": 1911, "add_scalar_relu": 1911, "add_scalar_relu_out": 1911, "batch_norm1d": 1911, "batch_norm1d_relu": 1911, "batch_norm2d": 1911, "batch_norm2d_relu": 1911, "batch_norm3d": 1911, "batch_norm3d_relu": 1911, "batch_norm_relu": 1911, "cat_out": 1911, "cat_relu": 1911, "cat_relu_out": 1911, "conv1d_dynam": 1911, "conv1d_prepack": 1911, "conv1d_unpack": 1911, "conv2d_add": 1911, "conv2d_add_relu": 1911, "conv2d_dil": 1911, "conv2d_dynam": 1911, "conv2d_group": 1911, "conv2d_output_pad": 1911, "conv2d_pad": 1911, "conv2d_strid": 1911, "conv2d_transpos": 1911, "conv2d_unpack": 1911, "conv2d_unpack_s": 1911, "conv3d_dil": 1911, "conv3d_dynam": 1911, "conv3d_group": 1911, "conv3d_output_pad": 1911, "conv3d_pad": 1911, "conv3d_strid": 1911, "conv3d_transpos": 1911, "conv3d_unpack": 1911, "conv_prepack": 1911, "conv_transpose1d_dynam": 1911, "conv_transpose1d_unpack": 1911, "conv_transpose2d_dil": 1911, "conv_transpose2d_dynam": 1911, "conv_transpose2d_group": 1911, "conv_transpose2d_output_pad": 1911, "conv_transpose2d_pad": 1911, "conv_transpose2d_strid": 1911, "conv_transpose2d_transpos": 1911, "conv_transpose2d_unpack": 1911, "conv_transpose3d_dil": 1911, "conv_transpose3d_dynam": 1911, "conv_transpose3d_group": 1911, "conv_transpose3d_output_pad": 1911, "conv_transpose3d_pad": 1911, "conv_transpose3d_strid": 1911, "conv_transpose3d_transpos": 1911, "conv_transpose3d_unpack": 1911, "conv_unpack": 1911, "embedding_4bit": 1911, "embedding_bag_2bit_prepack": 1911, "embedding_bag_2bit_rowwise_offset": 1911, "embedding_bag_2bit_unpack": 1911, "embedding_bag_4bit": 1911, "embedding_bag_4bit_prepack": 1911, "embedding_bag_4bit_rowwise_offset": 1911, "embedding_bag_4bit_unpack": 1911, "embedding_bag_byt": 1911, "embedding_bag_byte_prepack": 1911, "embedding_bag_byte_rowwise_offset": 1911, "embedding_bag_byte_unpack": 1911, "embedding_bag_prepack": 1911, "embedding_bag_unpack": 1911, "embedding_byt": 1911, "linear_dynamic_fp16": 1911, "linear_leaky_relu": 1911, "linear_relu_dynam": 1911, "linear_relu_dynamic_fp16": 1911, "linear_tanh": 1911, "linear_unpack": 1911, "linear_unpack_fp16": 1911, "linear_with_input_q_dq_qweight_dq_output_fp32": 1911, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1911, "make_quantized_cell_param": 1911, "make_quantized_cell_params_dynam": 1911, "make_quantized_cell_params_fp16": 1911, "mul_out": 1911, "mul_relu": 1911, "mul_relu_out": 1911, "mul_scalar_out": 1911, "mul_scalar_relu": 1911, "mul_scalar_relu_out": 1911, "quantized_gru_cell_dynam": 1911, "quantized_lstm_cell_dynam": 1911, "quantized_rnn_relu_cell_dynam": 1911, "quantized_rnn_tanh_cell_dynam": 1911, "rngprim": 1911, "philox_rand": 1911, "qlinear": 1911, "qlinear_dynam": 1911, "qlinear_relu": 1911, "qlinear_relu_dynam": 1911, "qlinear_unpack": 1911, "static_runtim": 1911, "vartupleunpack": 1911, "clamp_nan_to_num": 1911, "create_owned_ref": 1911, "dequantize_copi": 1911, "dict_unpack": 1911, "expand_dims_copi": 1911, "flatten_copi": 1911, "fused_equally_split": 1911, "reshape_copi": 1911, "select_tensor": 1911, "signed_log1p": 1911, "to_copi": 1911, "to_maybe_copy_out": 1911, "var1": 1912, "var2": 1912, "lbfg": 1912, "adadelta": 1912, "adamax": 1912, "asgd": 1912, "nadam": 1912, "radam": 1912, "rmsprop": 1912, "rprop": 1912, "reducelronplateau": 1912, "multisteplr": 1912, "swa_util": 1912, "averagedmodel": 1912, "swalr": 1912, "update_bn": 1912, "optima": 1912, "polyak": 1912, "averaged_model": 1912, "multi_avg_fn": 1912, "get_ema_multi_avg_fn": 1912, "textrm": 1912, "update_paramet": 1912, "avg_fn": 1912, "_foreach": 1912, "ema_model": 1912, "ema_avg": 1912, "averaged_model_paramet": 1912, "model_paramet": 1912, "num_averag": 1912, "swa_schedul": 1912, "anneal_epoch": 1912, "swa_lr": 1912, "swa_model": 1912, "cosineannealinglr": 1912, "swa_start": 1912, "test_input": 1912, "secur": 1913, "unpackag": 1913, "exercis": 1913, "unzip": 1913, "my_packag": 1913, "freeli": 1913, "94304870911616": 1913, "94304900784016": 1913, "extern_modul": 1913, "model_1": 1913, "pkl": 1913, "myzip": 1913, "file_byt": 1913, "writestr": 1913, "new_file_byt": 1913, "vim": 1913, "vimrc": 1913, "bufreadcmd": 1913, "brows": 1913, "amatch": 1913, "vi": 1913, "packageimport": 1913, "queryabl": 1913, "glob": 1913, "packageexport": 1913, "pe": 1913, "save_pickl": 1913, "has_fil": 1913, "importer_file_structur": 1913, "package_a": 1913, "get_rdep": 1913, "all_path": 1913, "dependency_graph_str": 1913, "save_text": 1913, "save_binari": 1913, "my_resourc": 1913, "config_stuff": 1913, "raw_data": 1913, "my_byt": 1913, "complementari": [1913, 1926], "load_pickl": 1913, "load_text": 1913, "load_binari": 1913, "my_tensor": 1913, "__reduce_package__": 1913, "my_str": 1913, "time_import": 1913, "time_export": 1913, "pickler": 1913, "persistent_id": 1913, "persistent_load": 1913, "generated_module_nam": 1913, "get_unique_id": 1913, "clock_gettim": 1913, "unpackage_foo": 1913, "depickl": 1913, "foo_1": 1913, "foo_2": 1913, "foo_packag": 1913, "foo_collect": 1913, "foo1": 1913, "foo2": 1913, "imported_foo": 1913, "9857706": 1913, "650140837": 1913, "652698385": 1913, "__torch_package__": 1913, "is_in_packag": 1913, "userexcept": 1913, "unpackageableexcept": 1913, "loaded_modul": 1913, "import_modul": 1913, "save_source_str": 1913, "save_modul": 1913, "textwrap": 1913, "dedent": 1913, "my_funct": 1913, "is_packag": 1913, "importlib": 1913, "my_pickl": 1913, "get_my_resourc": 1913, "read_text": 1913, "torch_package_import": 1913, "get_my_pickl": 1913, "is_from_packag": 1913, "stdlib": 1913, "my_test": 1913, "f2": [1913, 1914], "sys_import": 1913, "script_model": 1913, "mixed_model": 1913, "python_model_with_scripted_submodul": 1913, "loaded_script": 1913, "loaded_mix": 1913, "convention": 1913, "94286146172688": 1913, "94286146172784": 1913, "consult": [1913, 1942], "essai": 1913, "another_packag": 1913, "pickletool": 1913, "ast": 1913, "deni": 1913, "my_export": 1913, "my_interned_modul": 1913, "package_export": 1913, "my_externed_modul": 1913, "my_mocked_modul": 1913, "unwant": [1913, 1930], "hodg": 1913, "podg": 1913, "bazel": 1913, "buck": 1913, "my_class_inst": 1913, "imported_myclass": 1913, "okai": 1913, "torch_package_0": 1913, "handle_me_this_wai": 1913, "inadvert": 1913, "pun": 1913, "packagingerror": 1913, "dependency_graph": 1913, "emptymatcherror": 1913, "allow_empti": 1913, "_sysimport": 1913, "hermet": 1913, "scan": 1913, "orderedimport": 1913, "add_depend": 1913, "graphviz": 1913, "lang": 1913, "denied_modul": 1913, "my_subpackag": 1913, "digraph": 1913, "externed_modul": 1913, "interned_modul": 1913, "mocked_modul": 1913, "register_extern_hook": 1913, "register_intern_hook": 1913, "register_mock_hook": 1913, "myobject": 1913, "save_source_fil": 1913, "file_or_directori": 1913, "my_subsubpackag": 1913, "file_or_buff": 1913, "module_allow": 1913, "pytorchfileread": 1913, "python_vers": 1913, "is_dir": 1913, "gpipe": 1914, "suffer": 1914, "allevi": [1914, 1944], "microbatch": 1914, "bubbl": 1914, "except_last": 1914, "deferred_batch_norm": 1914, "torchgpip": 1914, "withdevic": 1914, "micro": 1914, "fc": [1914, 1916], "init_rpc": [1914, 1921, 1922], "output_rref": 1914, "fed": [1914, 1930], "nochunk": 1914, "resnext": 1914, "till": 1914, "skippabl": 1914, "1to3": 1914, "layer1": 1914, "f1": 1914, "layer2": 1914, "layer3": 1914, "skip_1to3": 1914, "f3": 1914, "alic": 1914, "bob": 1914, "carol": 1914, "stashstashpop": 1914, "f_alic": 1914, "f_bob": 1914, "verify_skipp": 1914, "unmatch": [1914, 1935], "fairscal": 1914, "_kinetoprofil": 1915, "profileract": 1915, "add_metadata": 1915, "add_metadata_json": 1915, "unaggreg": 1915, "export_chrome_trac": [1915, 1952], "export_memory_timelin": 1915, "gzip": 1915, "export_stack": 1915, "self_cuda_time_tot": 1915, "flamegraph": 1915, "brendangregg": 1915, "pl": 1915, "countnam": 1915, "perf_viz": 1915, "svg": 1915, "on_trace_readi": 1915, "record_and_sav": 1915, "tensorboard_trace_handl": 1915, "dir_nam": 1915, "logdir": [1915, 1930], "plugin": [1915, 1930, 1940], "code_to_profil": 1915, "row_limit": 1915, "trace_handl": 1915, "test_trace_": 1915, "step_num": 1915, "code_iteration_to_profil": 1915, "mtia": 1915, "skip_first": 1915, "worker_nam": [1915, 1921], "use_gzip": 1915, "range_push": 1915, "range_pop": 1915, "4x": 1916, "88": [1916, 1948], "14k": 1916, "broadli": 1916, "domin": 1916, "previous_layer_fp32": 1916, "linear_fp32": 1916, "activation_fp32": 1916, "next_layer_fp32": 1916, "linear_weight_fp32": 1916, "linear_int8_w_fp32_inp": 1916, "linear_weight_int8": 1916, "ptdq": 1916, "model_fp32": 1916, "model_int8": 1916, "quantize_dynam": 1916, "input_fp32": 1916, "previous_layer_int8": 1916, "linear_with_activation_int8": 1916, "next_layer_int8": 1916, "ptsq": 1916, "minmax": 1916, "l2norm": 1916, "model_fp32_fus": 1916, "fuse_modul": [1916, 1917], "model_fp32_prepar": 1916, "fq": 1916, "prepare_qat": 1916, "training_loop": 1916, "requant": 1916, "linear1": 1916, "custom_qconfig": 1916, "fxptq": 1916, "model_fp": 1916, "usermodel": 1916, "model_to_quant": 1916, "default_dynamic_qconfig": 1916, "model_prepar": 1916, "model_quant": 1916, "model_fus": 1916, "quantize_pt2": 1916, "prepare_pt2": 1916, "capture_pre_autograd_graph": 1916, "xnnpackquant": 1916, "get_symmetric_quantization_config": 1916, "shoud": 1916, "prepare_qat_pt2": 1916, "convert_pt2": 1916, "per_tensor_symmetr": [1916, 1919], "per_channel_symmetr": [1916, 1919], "per_channel_scal": 1916, "per_channel_zero_point": 1916, "quantized_tensor": 1916, "qengin": 1916, "in4": 1916, "tensorrt": [1916, 1936, 1940, 1944], "fx2trt": 1916, "float_modul": [1916, 1934], "staticquantcustommodul": 1916, "observed_modul": 1916, "default_qconfig": [1916, 1935], "vnni": 1916, "test_quantized_op": 1916, "testquantizedop": 1916, "test_custom_module_lstm": 1916, "test_quantize_fx": 1916, "testquantizefx": 1916, "test_static_lstm": 1916, "some_oper": 1916, "e2": 1916, "thnn_conv2d_forward": 1916, "quantizedcpu": 1916, "some_qconfig": 1916, "linearpackedparam": 1916, "_modul": 1916, "prepare_orig": 1916, "quantized_orig": 1916, "scripted_quant": 1916, "fp32_op": 1917, "int8_op": 1917, "cooperlak": 1917, "audit": 1917, "op_fp32": 1917, "op_int8": 1917, "_numeric_suit": 1917, "_numeric_suite_fx": 1917, "0x7f33900564e0": 1918, "0x7f337ad011f0": 1918, "0x7f337ad01280": 1918, "num_tensor_args_to_observation_typ": 1918, "convbn1d": 1918, "0x7f337a0cc430": 1918, "reference_quantized_module_for_root": 1918, "fuse_convtranspose_bn": 1918, "0x7f337a0cc5e0": 1918, "linearbn1d": 1918, "fuse_linear_bn": 1918, "0x7f337a0cc550": 1918, "convbn2d": 1918, "convbn3d": 1918, "bnrelu2d": 1918, "bnrelu3d": 1918, "input_type_to_index": 1918, "conv_fus": 1918, "convbnrelu1d": 1918, "convbnrelu2d": 1918, "convbnrelu3d": 1918, "convrelu1d": 1918, "convrelu3d": 1918, "0x7f337ad01310": 1918, "0x7f337ad01940": 1918, "quint4x2": [1918, 1927, 1931, 1932], "embedding_op": 1918, "0x7f337ad04820": 1918, "00390625": 1918, "0x7f337ad04160": 1918, "0x7f337ad04310": 1918, "0x7f337ad01820": 1918, "0x7f337ad04700": 1918, "0x7f337ac7ce50": 1918, "0x7f337ad04790": 1918, "0x7f337ad01af0": 1918, "linear_fus": 1918, "_sequential_wrapper2": 1918, "0x7f33971a8430": 1918, "0x7f337ad01700": 1918, "0x7f33781238b0": 1918, "fuse_conv_bn_relu": 1918, "0x7f337a0cc4c0": 1918, "0x7f3378123940": 1918, "0x7f33781239d0": 1918, "0x7f3378123a60": 1918, "0x7f3378123af0": 1918, "0x7f3378123b80": 1918, "0x7f3378123c10": 1918, "0x7f3378123ca0": 1918, "0x7f3378123d30": 1918, "0x7f3378123dc0": 1918, "0x7f3378123e50": 1918, "0x7f337ad018b0": 1918, "0078125": 1918, "customconfig": 1919, "custom_module_config": 1919, "_caller": 1920, "_devices_kw": 1920, "slowli": 1920, "unind": 1920, "deivce_typ": 1920, "shortcom": 1921, "stitch": 1921, "rpc_backend_opt": 1921, "trainer3": 1921, "parameterserver2": 1921, "dash": [1921, 1923], "backendtyp": 1921, "rpcbackendopt": 1921, "rpcagent": 1921, "transmit": 1921, "calle": [1921, 1923], "_set_rpc_timeout": 1921, "5678": 1921, "worker0": 1921, "my_script_add": 1921, "wire": 1921, "fut2": 1921, "meth": 1921, "grace": 1921, "pend": [1921, 1930, 1939], "userrref": [1921, 1923], "async_execut": 1921, "paus": 1921, "outmost": 1921, "async_add_chain": 1921, "worker2": 1921, "script_add": 1921, "async_add": 1921, "asyncexecutionclass": 1921, "static_async_add": 1921, "class_async_add": 1921, "ret_fut": 1921, "bound_async_add": 1921, "rpc_timeout": 1921, "incid": [1921, 1923], "nvlink": 1921, "multiplex": 1921, "tensorpiperpcbackendopt": 1921, "num_worker_thread": 1921, "device_map": 1921, "_transport": 1921, "tensorpipeag": 1921, "set_device_map": 1921, "intermitt": 1921, "pyrref": 1921, "type_hint": 1921, "_distributed_rpc": 1921, "dist_autograd_ctx_id": 1921, "ctx_id": 1921, "ownerrref": [1921, 1923], "remote_modul": 1921, "forward_async": 1921, "remote_devic": 1921, "workernam": 1921, "trainer0": 1921, "ps0": 1921, "remote_linear_modul": 1921, "get_module_rref": 1921, "remote_paramet": 1921, "my_add": [1922, 1955], "t4": 1922, "t5": 1922, "autograd_message_id": 1922, "autograd_context_id": 1922, "send1": 1922, "kickoff": 1922, "recv2": 1922, "heard": 1922, "send2": 1922, "recv1": 1922, "dist_autograd_simpl": 1922, "random_tensor": 1922, "_run_process": 1922, "dst_rank": 1922, "dst_name": 1922, "run_process": 1922, "rrefid": 1923, "transient": 1923, "udf": 1923, "deliveri": 1923, "knowledg": 1923, "danger": 1923, "ancestor": 1923, "trickier": 1923, "wouldn": [1923, 1943], "forkid": 1923, "ack": 1923, "solid": 1923, "gc": 1923, "followup": 1923, "lil": 1925, "stark": 1925, "9093": 1925, "1411": 1925, "7568": 1925, "9589": 1925, "2794": 1925, "catastroph": 1925, "9900": 1925, "metadata_mask": 1925, "rce": 1925, "rc": 1925, "62": 1925, "to_sparse_semi_structur": 1925, "1x4": 1925, "16x16": 1925, "a_spars": 1925, "sparsesemistructuredtensor": 1925, "000": 1925, "400": 1925, "s2": 1925, "plain_dim_s": 1925, "lp64": 1925, "280": 1925, "310": 1925, "sp": 1925, "9078": 1925, "conception": 1925, "sparsesemistructur": 1925, "lobpcg": 1925, "geneig": 1925, "pca_lowrank": 1925, "kindli": 1925, "airy_ai": 1926, "airi": 1926, "onward": 1926, "9635": 1926, "entr": 1926, "3466": 1926, "int_": 1926, "8427": 1926, "0561": 1926, "4769": 1926, "9213": 1926, "8858": 1926, "7683": 1926, "7481": 1926, "2920": 1926, "int_0": 1926, "gammaln": 1926, "a1": 1926, "a2": 1926, "3528": 1926, "5665": 1926, "6472": 1926, "4335": 1926, "2650": 1926, "2661": 1926, "2796": 1926, "8808": 1926, "3019": 1926, "4658": 1926, "3085": 1926, "2430": 1926, "2070": 1926, "5652": 1926, "9534": 1926, "7595": 1926, "2153": 1926, "log_ndtr": 1926, "_ndtr": 1926, "6077": 1926, "7832": 1926, "841": 1926, "6931": 1926, "1728": 1926, "023": 1926, "9331": 1926, "6486": 1926, "1523": 1926, "6516": 1926, "6352": 1926, "6131": 1926, "7169": 1926, "6261": 1926, "displaystyl": 1926, "undefiend": 1926, "6835": 1926, "8474": 1926, "1929": 1926, "7162": 1926, "4180": 1926, "3928": 1926, "4007": 1926, "7586": 1926, "3901": 1926, "5049": 1926, "ndtr": 1926, "0228": 1926, "1587": 1926, "9772": 1926, "9987": 1926, "2p": 1926, "64493": 1926, "4041": 1926, "8288": 1926, "4939": 1926, "4091": 1926, "8863": 1926, "771": 1926, "scaled_modified_bessel_k0": 1926, "scaled_modified_bessel_k1": 1926, "2948": 1926, "0267": 1926, "1566": 1926, "9186": 1926, "8631": 1926, "0259": 1926, "1300": 1926, "spheric": 1926, "xlog1pi": 1926, "3863": 1926, "1972": 1926, "6094": 1926, "2189": 1926, "8283": 1926, "7726": 1926, "0986": 1926, "1589": 1926, "hurwitz": 1926, "6449": 1926, "0823": 1926, "untyp": 1927, "wrap_storag": 1927, "complex_doubl": 1927, "from_buff": 1927, "is_hpu": 1927, "pickle_storage_typ": 1927, "byteswap": 1927, "quint2x4": [1927, 1932], "twelv": 1928, "halftensor": [1928, 1931], "bfloat16tensor": [1928, 1931], "chartensor": [1928, 1931], "shorttensor": [1928, 1931], "binary16": [1928, 1931], "significand": [1928, 1931], "float_tensor": 1928, "double_tensor": 1928, "complex_float_tensor": 1928, "complex_double_tensor": 1928, "int_tensor": 1928, "long_tensor": 1928, "uint_tensor": 1928, "bool_tensor": 1928, "long_zerodim": 1928, "int_zerodim": 1928, "set_default_devic": 1928, "cuda1": 1928, "nhwc": [1928, 1930], "channels_last_3d": 1928, "ndhwc": 1928, "blogpost": 1929, "totensor": 1930, "trainset": 1930, "mnist": 1930, "mnist_train": 1930, "trainload": 1930, "grayscal": 1930, "make_grid": 1930, "add_imag": 1930, "add_graph": 1930, "clutter": 1930, "n_iter": 1930, "purge_step": 1930, "max_queu": 1930, "flush_sec": 1930, "filename_suffix": 1930, "current_datetime_hostnam": 1930, "exp1": 1930, "global_step": 1930, "purg": 1930, "event_file_writ": 1930, "eventfilewrit": 1930, "may04_22": 1930, "54_": 1930, "macbook": 1930, "my_experi": 1930, "lr_0": 1930, "1_batch_16": 1930, "locallr_0": 1930, "scalar_valu": 1930, "walltim": 1930, "new_styl": 1930, "double_precis": 1930, "blobnam": 1930, "simple_valu": 1930, "2x": [1930, 1948], "main_tag": 1930, "tag_scalar_dict": 1930, "run_14h": 1930, "xsinx": 1930, "xcosx": 1930, "tanx": 1930, "add_histogram": 1930, "max_bin": 1930, "fd": 1930, "img_tensor": 1930, "dataformat": 1930, "chw": 1930, "hwc": 1930, "hw": 1930, "wh": 1930, "3xhxw": 1930, "img_hwc": 1930, "my_imag": 1930, "my_image_hwc": 1930, "img_batch": 1930, "my_image_batch": 1930, "add_figur": 1930, "add_video": 1930, "vid_tensor": 1930, "fp": 1930, "moviepi": 1930, "add_audio": 1930, "snd_tensor": 1930, "sample_r": 1930, "44100": 1930, "add_text": 1930, "text_str": 1930, "input_to_model": 1930, "use_strict_trac": 1930, "add_embed": 1930, "label_img": 1930, "metadata_head": 1930, "projector": 1930, "kwlist": 1930, "add_pr_curv": 1930, "num_threshold": 1930, "pr_curv": 1930, "add_custom_scalar": 1930, "chart": 1930, "categorynam": 1930, "chartnam": 1930, "listofproperti": 1930, "multilin": 1930, "taiwan": 1930, "twse": 1930, "0050": 1930, "2330": 1930, "dow": 1930, "aaa": 1930, "bbb": 1930, "ccc": 1930, "nasdaq": 1930, "add_mesh": 1930, "config_dict": 1930, "threej": 1930, "vertex": 1930, "number_of_vertic": 1930, "vertices_tensor": 1930, "colors_tensor": 1930, "faces_tensor": 1930, "my_mesh": 1930, "add_hparam": 1930, "hparam_dict": 1930, "metric_dict": 1930, "hparam_domain_discret": 1930, "run_nam": 1930, "hparam": 1930, "bsize": 1930, "tini": [1931, 1932, 1948, 1957], "_like": 1931, "allow_subclass": 1932, "check_devic": 1932, "check_layout": 1932, "6e": 1932, "3e": 1932, "assert_equ": 1932, "000000000000001e": 1932, "1e0": 1932, "argh": 1932, "nfooter": 1932, "66": 1932, "footer": 1932, "exclude_zero": 1932, "1205": 1932, "2282": 1932, "6380": 1932, "default_gener": 1933, "click": [1933, 1951, 1952], "data_dependent_output": 1933, "dynamic_output_shap": 1933, "inplace_view": 1933, "nondeterministic_bitwis": 1933, "nondeterministic_seed": 1933, "compare_weight": 1934, "float_dict": 1934, "quantized_dict": 1934, "wt_compare_dict": 1934, "qmodel": 1934, "compute_error": 1934, "weight_dict": 1934, "get_logger_dict": 1934, "shadowlogg": 1934, "outputlogg": [1934, 1935], "target_dict": 1934, "q_modul": 1934, "logger_cl": [1934, 1935], "prepare_model_with_stub": 1934, "module_swap_list": 1934, "q_model": 1934, "ob_dict": 1934, "compare_model_stub": 1934, "quantizablebasicblock": 1934, "get_matching_activ": 1934, "act_dict": 1934, "prepare_model_output": 1934, "compare_model_output": 1934, "act_compare_dict": 1934, "weight_comparison": 1935, "extract_weight": 1935, "sqnr": 1935, "extend_logger_results_with_comparison": 1935, "compute_sqnr": 1935, "mp_n": 1935, "mq_n": 1935, "add_logg": 1935, "act_comparison": 1935, "extract_logger_info": 1935, "mp_shadows_mq": 1935, "add_shadow_logg": 1935, "shadow_act_comparison": 1935, "extract_shadow_logger_info": 1935, "ref_node_nam": 1935, "prev_node_nam": 1935, "model_nam": 1935, "ref_nam": 1935, "prev_node_target_typ": 1935, "ref_node_target_typ": 1935, "results_typ": 1935, "index_within_arg": 1935, "index_of_arg": 1935, "qconfig_str": 1935, "outputcomparisonlogg": 1935, "x_ref": 1935, "nstracer": 1935, "skipped_module_nam": 1935, "skipped_module_class": 1935, "model_name_a": 1935, "model_a": 1935, "model_name_b": 1935, "model_b": 1935, "base_name_to_sets_of_related_op": 1935, "unmatchable_types_map": 1935, "op_to_type_to_weight_extraction_fn": 1935, "nsresultstyp": 1935, "name_a": 1935, "name_b": 1935, "should_log_input": 1935, "model_a_with_logg": 1935, "model_b_with_logg": 1935, "model_name_to_use_for_layer_nam": 1935, "node_type_to_io_type_map": 1935, "model_a_shadows_b": 1935, "model_name_1": 1935, "model_name_2": 1935, "comparison_fn": 1935, "comparison_nam": 1935, "prepare_n_shadows_model": 1935, "qconfig_multi_map": 1935, "custom_prepare_fn": 1935, "custom_prepare_kwarg": 1935, "custom_trac": 1935, "args_kwargs_m": 1935, "op_m": 1935, "output_m": 1935, "op_m_n": 1935, "log_m_n": 1935, "log_m_0": 1935, "qconfig_n": 1935, "args_m": 1935, "op_m_prepared_with_qconfig_n": 1935, "out_m_n": 1935, "kwargs_m": 1935, "docblock": 1935, "loggers_set_en": 1935, "loggers_set_save_activ": 1935, "save_activ": 1935, "convert_n_shadows_model": 1935, "custom_convert_fn": 1935, "custom_convert_kwarg": 1935, "extract_results_n_shadows_model": 1935, "print_comparisons_n_shadows_model": 1935, "compute_normalized_l2_error": 1935, "compute_cosine_similar": 1935, "surfac": 1936, "openai": 1936, "ipex": 1936, "tvm": 1936, "apach": 1936, "dashboard": [1936, 1941, 1948], "simd": 1938, "slot": [1938, 1955], "isa": 1938, "amx": 1938, "collect_env": 1938, "avx512f": 1938, "avx512bw": 1938, "avx512_vnni": 1938, "amx_til": 1938, "amx_bf16": 1938, "amx_int8": 1938, "debut": 1939, "cachingalloc": 1939, "cudagraph_tre": 1939, "footgun": [1939, 1943], "my_custom_backend": 1940, "f_opt": 1940, "my_compil": [1940, 1941, 1947], "torch_dynamo_backend": 1940, "your_modul": 1940, "minifi": [1940, 1944], "aot_autograd": 1940, "fw_compil": 1940, "bw_compil": 1940, "make_boxed_func": 1940, "model_opt": 1940, "0x7f1a894649a8": 1940, "mockmodul": 1940, "optimized_mod": 1940, "toy_exampl": [1940, 1941, 1944, 1947, 1954], "abs_1": [1940, 1941], "0x7f8d259298a0": 1940, "superior": 1940, "optimize_for_inference_compil": 1940, "code_to_acceler": 1940, "trt_compil": 1940, "inductor_compil": 1940, "523": 1941, "kaichao": 1941, "tensor_match": 1941, "function_match": 1941, "recaptur": 1941, "__compiled_fn_0": 1941, "eval_with_kei": 1941, "0x7f9ca082f8a0": 1941, "load_fast": [1941, 1947], "load_glob": 1941, "load_method": 1941, "load_const": [1941, 1947], "binary_add": 1941, "binary_true_divid": 1941, "store_fast": 1941, "compare_op": 1941, "pop_jump_if_fals": 1941, "binary_multipli": [1941, 1947], "unpack_sequ": 1941, "__resume_at_30_1": 1941, "__resume_at_38_2": 1941, "__resume_at_": 1941, "jump_absolut": 1941, "resume_at": 1941, "eval_fram": 1941, "_debug_get_cache_entry_list": 1941, "__code__": 1941, "codetyp": 1941, "cache_entri": 1941, "_torchdynamo_orig_cal": 1941, "check_fn": [1941, 1947], "depyf": 1941, "decompil": 1941, "___guarded_cod": [1941, 1947], "_var0": 1941, "_dynamo_dynamic_indic": 1941, "_var1": 1941, "___is_grad_en": 1941, "___are_deterministic_algorithms_en": 1941, "___is_torch_function_en": 1941, "utils_devic": 1941, "___check_tensor": [1941, 1947], "tensor_check_nam": 1941, "__temp_1": 1941, "co_freevar": 1941, "__closure__": 1941, "value_a": 1941, "value_b": 1941, "__self__": 1941, "l_a_": 1941, "l_b_": 1941, "compiled_exampl": 1941, "get_cache_entri": 1941, "recompile_and_add_another_cache_entri": 1941, "symbolic_shap": 1942, "recognit": 1942, "jag": 1942, "induct": 1942, "mark_dynam": 1942, "shapeenv": [1942, 1943], "faithfulli": 1942, "sympi": 1942, "reusabl": 1942, "plumb": 1942, "symnodeimpl": 1942, "python_symnod": 1942, "_meta_registr": 1942, "decomp": [1942, 1943], "primtorch": [1942, 1943], "symnod": 1942, "apparatu": 1942, "precomput": 1942, "constrain_rang": 1942, "wherebi": 1942, "trash": 1943, "bunch": 1943, "from_real_tensor": 1943, "fakeifi": 1943, "dispatch_devic": 1943, "ly": 1943, "derefer": 1943, "backtrac": 1943, "in_kernel_invocation_manag": 1943, "unwrap": 1943, "test_fake_tensor": 1943, "fake_mod": 1943, "fake_x": 1943, "fake_i": 1943, "fake_z": 1943, "_guard": 1943, "detect_fake_mod": 1943, "fake_arg": 1943, "lifecycl": [1943, 1947], "maybe_disable_fake_tensor_mod": 1943, "nich": 1943, "faketensorprop": 1943, "fake_tensor_prop": 1943, "propagate_dont_convert_input": 1943, "fake_input": 1943, "real_tensor": 1943, "annoi": 1943, "somehow": 1943, "fakecopymod": 1943, "gave": 1943, "fakeif": 1943, "tension": 1943, "analys": 1943, "hopefulli": 1943, "impl_abstract": 1943, "hardcod": 1943, "metaconvert": 1943, "die": 1943, "unback": 1943, "saroufim": 1944, "evalfram": 1944, "usercod": 1944, "rob": 1944, "diminish": 1944, "vast": 1944, "nopython": [1944, 1947, 1954], "250k": 1944, "aitempl": 1944, "aot_eag": [1944, 1954], "compile_tim": [1944, 1952, 1954], "torch_compile_debug": [1944, 1946], "troubl": [1944, 1945, 1954], "compileprofil": [1944, 1954], "profiler_model": [1944, 1954], "traffic": 1944, "frozen_toy_exampl": 1944, "multiprocessor": 1944, "some_fun": [1944, 1954], "insurmount": [1944, 1954], "woo": [1944, 1954], "out_guard": [1944, 1954], "ops_per_graph": [1944, 1954], "builtinvari": [1944, 1954], "constantvari": [1944, 1947, 1954], "generic_jump": [1944, 1954], "torchdynamo_dynamic_shap": 1944, "cv": 1944, "app": 1944, "unnecessarili": 1944, "cold": [1944, 1951], "visibli": 1944, "torchdynamo_repro_level": [1944, 1954], "bisect": [1944, 1954], "torchdynamo_repro_aft": [1944, 1954], "dramat": [1944, 1954], "capture_func_transform": 1944, "wrapper_fn": 1944, "my_fn": 1944, "some_list": 1944, "bad_fn": 1944, "pitfal": 1944, "_indices_from": 1944, "recarrai": 1944, "float128": 1944, "complex256": 1944, "uint16": 1944, "uint32": 1944, "uint64": 1944, "esoter": 1944, "ufunc": 1944, "poly1d": 1944, "__array_wrap__": 1944, "numpy_fn": 1944, "tweak": 1944, "daunt": 1944, "diagnos": 1944, "tackl": 1944, "pinpoint": 1944, "discern": 1944, "trace_numpi": 1944, "_numpi": 1944, "uncommon": 1944, "a_fn": [1944, 1945], "aa_fn": [1944, 1945], "ab_fn": [1944, 1945], "handel": 1945, "unblock": 1945, "nnthi": 1945, "black": 1945, "nnnote": 1945, "screen": [1945, 1952], "b_fn": 1945, "white": 1945, "new_fn": 1946, "famou": 1946, "crunch": 1946, "torchinductor_": 1946, "your_usernam": 1946, "size_hint": 1946, "i32": 1946, "instance_descriptor": 1946, "divisible_by_16": 1946, "equal_to_1": 1946, "in_ptr0": 1946, "out_ptr0": 1946, "xnumel": 1946, "xblock": 1946, "tl": 1946, "constexpr": 1946, "xoffset": 1946, "program_id": 1946, "xindex": 1946, "xmask": 1946, "tmp0": 1946, "tmp1": 1946, "tmp2": 1946, "tmp3": 1946, "v0": 1946, "opt_model": 1946, "timm": [1946, 1951], "huggingfac": [1946, 1951], "berttoken": 1946, "bertmodel": 1946, "uncas": 1946, "me": 1946, "encoded_input": 1946, "return_tensor": 1946, "trigonometri": 1946, "skim": 1946, "create_model": 1946, "resnext101_32x8d": 1946, "fn_foo": 1947, "grab": 1947, "dig": 1947, "hole": 1947, "neutral": 1947, "_pyinterpreterstate_setevalframefunc": 1947, "convert_fram": [1947, 1954], "convert_frame_assert": 1947, "gloss": 1947, "compiler_fn": 1947, "one_graph": 1947, "_convert_frame_assert": 1947, "frametyp": 1947, "f_code": 1947, "needless": 1947, "evict": 1947, "transform_code_object": 1947, "output_instruct": 1947, "guardedcod": 1947, "symbolic_loc": 1947, "f_local": 1947, "variablebuild": 1947, "localsourc": 1947, "_wrap": 1947, "variabletrack": 1947, "make_guard": 1947, "pump": 1947, "cool": 1947, "get_instruct": 1947, "124": 1947, "opnam": 1947, "argval": 1947, "starts_lin": 1947, "is_jump_target": 1947, "inst": 1947, "unimpl": 1947, "dozen": 1947, "symbolic_convert": [1947, 1954], "spoken": 1947, "quiet": 1947, "replace_guard": 1947, "add_guard": 1947, "behalf": 1947, "python_typ": 1947, "as_proxi": 1947, "as_python_proxi": 1947, "bookkeep": 1947, "came": 1947, "flesh": 1947, "relianc": 1947, "build_tupl": 1947, "popn": 1947, "tuplevari": 1947, "pydoc": 1947, "tensorvari": 1947, "instructiontranslatorbas": 1947, "ctor": 1947, "guardsourc": 1947, "create_fn": 1947, "guard_sourc": 1947, "istyp": 1947, "guardbuild": 1947, "equals_match": 1947, "rangevari": 1947, "appar": 1947, "checkfunctionmanag": 1947, "compile_check_fn": 1947, "cacheentri": 1947, "create_cache_entri": 1947, "pyobject": 1947, "guarded_cod": 1947, "malloc": [1947, 1956], "debug_null_check": 1947, "pyobject_getattrstr": 1947, "null_check": 1947, "pycodeobject": 1947, "sort_kei": 1947, "guard_nn_modul": 1947, "is_nn_modul": 1947, "local_build": 1947, "global_build": 1947, "___check_type_id": 1947, "94367738391392": 1947, "_eval_fram": 1947, "anew": 1947, "weak": 1947, "moduleinvalid": 1947, "torchinductor_unique_kernel_nam": 1948, "triton_poi_fused_cat_155": 1948, "poi": 1948, "torchinductor_benchmark_kernel": 1948, "har": 1948, "torchinductor_max_autotun": 1948, "mixnet_l": 1948, "timm_model": 1948, "torchinductor_shunt": 1948, "qz": 1948, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1948, "shunting314": 1948, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1948, "48efc83b12ec3ead950052e4a0220b10": 1948, "compiled_module_profil": 1948, "browser": [1948, 1952], "zoom": [1948, 1952, 1956], "distort": [1948, 1952], "densenet121": 1948, "69": 1948, "cutlass": 1948, "57": 1948, "ff": 1948, "justifi": 1948, "triton_red_fus": 1948, "__native_batch_norm_legit_functional_16": 1948, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1948, "_adaptive_avg_pool2d_backward": 1949, "half_to_float": 1949, "no_stat": 1949, "scalartyp": 1949, "memoryformat": 1949, "start_step": 1949, "avg_pool2d_backward": 1949, "convolution_backward": 1949, "bias_siz": 1949, "output_mask": 1949, "scalar_mod": 1949, "tensor_mod": 1949, "embedding_dense_backward": 1949, "num_weight": 1949, "max_pool2d_with_indices_backward": 1949, "native_group_norm_backward": 1949, "rstd": 1949, "native_layer_norm_backward": 1949, "tensor_scalar": 1949, "tensor_tensor": 1949, "dim_int": 1949, "dim_intlist": 1949, "broadcast_dimens": 1949, "start_indic": 1949, "limit_indic": 1949, "start_index": 1949, "limit_index": 1949, "outer_length": 1949, "constabl": 1950, "_forward_pre_hook": 1950, "_backward_pre_hook": 1950, "_backward_hook": 1950, "_state_dict_hook": 1950, "load_": 1950, "warn_onc": 1950, "hui": 1951, "nightli": 1951, "a100": [1951, 1954], "night": 1951, "40gb": [1951, 1954], "2ghz": 1951, "torchbench": 1951, "trend": 1951, "droplist": 1951, "with_cudagraph": 1951, "toosl": 1952, "ncu": 1952, "model_c": 1952, "fwd_bwd": 1952, "scroll": 1952, "shortcut": 1952, "compiledfunct": 1952, "compiledfunctionbackward": 1952, "ac2g": 1952, "dropdown": 1952, "525": 1952, "_init_for_cuda_graph": 1952, "warmup_compil": 1952, "fn_c": 1952, "record_funct": 1952, "trace_compil": 1952, "synthet": 1952, "modelwithbreak": 1952, "create_sequenti": 1952, "mod1": 1952, "mod2": 1952, "mod3": 1952, "mod4": 1952, "trace_break": 1952, "sit": 1953, "replace_add_with_mul": 1953, "insert_relu_after_add": 1953, "new_relu_nod": 1953, "replaceaddwithmul": 1953, "transformed_graph_modul": 1953, "replaceaddwithmulsub": 1953, "mul_r": 1953, "removedetachpass": 1953, "args_map": 1953, "_schema": 1953, "kwarg_onli": 1953, "scalartotensorpass": 1953, "try_coerc": 1953, "replace_pattern": 1953, "replaced_pattern": 1953, "replace_pattern_with_filt": 1953, "replacedpattern": 1953, "passmanag": 1953, "pass_manag": 1953, "pm": 1953, "replace_add_with_div": 1953, "replace_div_with_mul": 1953, "run_checks_after_each_pass": 1953, "suppress_check_failur": 1953, "graph_module_out": 1953, "set_check": 1953, "check_div_target": 1953, "add_check": 1953, "subgraphmatch": 1953, "matcher_util": 1953, "match_output": 1953, "match_placehold": 1953, "remove_overlapping_match": 1953, "ignore_liter": 1953, "largemodel": 1953, "_bia": 1953, "large_model_graph": 1953, "patternmodel": 1953, "_weight_1": 1953, "_bias_1": 1953, "pattern_graph": 1953, "subgraph_match": 1953, "match_result": 1953, "internalmatch": 1953, "default_factori": 1953, "placeholder_nod": 1953, "returning_nod": 1953, "capabilitybasedpartition": 1953, "l34": 1953, "operator_support": 1953, "operatorsupportbas": 1953, "allows_single_node_partit": 1953, "non_compute_op": 1953, "_oper": 1953, "allowed_single_node_partition_op": 1953, "ll28c1": 1953, "l28c1": 1953, "is_node_support": 1953, "l150": 1953, "any_chain": 1953, "l164": 1953, "addmuloperatorsupport": 1953, "capability_partition": 1953, "op_support": 1953, "partition_list": 1953, "propose_partit": 1953, "fused_graph_modul": 1953, "fuse_partit": 1953, "lazo": 1954, "torchdynamo_verbos": 1954, "replay_record_en": 1954, "torchdynamo_debug_funct": 1954, "test_assertion_error": 1954, "compiled_test_assertion_error": 1954, "mlazo": 1954, "837": 1954, "build_map": 1954, "test_backend_error": 1954, "compiled_test_backend_error": 1954, "decomp_fn": 1954, "810": 1954, "repro_aft": 1954, "minifier_launch": 1954, "base_dir": 1954, "rand_strid": 1954, "0a0": 1954, "gitfddfc44": 1954, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1954, "2022": 1954, "thu_feb_10_18": 1954, "41_pst_2022": 1954, "v11": 1954, "cuda_11": 1954, "r11": 1954, "30978841_0": 1954, "sxm4": 1954, "compile_fx": 1954, "compile_fx_inn": 1954, "toy_compil": 1954, "debug_util": 1954, "run_fwd_maybe_bwd": 1954, "opt_mod": 1954, "rg": 1954, "test_model": 1954, "debug_dir_root": 1954, "torch_compile_debug_dir": 1954, "run_2023_03_01_08_20_52_143510": 1954, "pid_180167": 1954, "model__0_forward_1": 1954, "aot_model___0_debug": 1954, "fx_graph_read": 1954, "fx_graph_runn": 1954, "fx_graph_transform": 1954, "ir_post_fus": 1954, "ir_pre_fus": 1954, "fx_graph": 1954, "buf1": 1954, "schedulernod": 1954, "computedbuff": 1954, "memorydep": 1954, "unmet_depend": 1954, "buf0": 1954, "met_depend": 1954, "primals_2": 1954, "buf1_loop_bodi": 1954, "var_rang": 1954, "z0": 1954, "index0": 1954, "index1": 1954, "get_index": 1954, "get_index_1": 1954, "load_1": 1954, "get_index_2": 1954, "compiled_fun": 1954, "hinder": 1954, "break_reason": 1954, "explanation_verbos": 1954, "compiled_toi": 1954, "as_subclass": 1955, "resolve_nam": 1955, "handle_torch_funct": 1955, "public_api": 1955, "relevant_arg": 1955, "has_torch_function_unari": 1955, "is_tensor_lik": 1955, "notatensor": 1955, "tensorlik": 1955, "is_tensor_method_or_properti": 1955, "__get__": 1955, "__module__": 1955, "wrap_torch_funct": 1955, "drag": 1956, "interactiv": 1956, "memory_viz": 1956, "run_your_cod": 1956, "my_snapshot": 1956, "javascript": 1956, "upload": 1956, "pan": 1956, "mous": 1956, "slider": 1956, "b7f064c000000_0": 1956, "7f064c000000": 1956, "max_entri": 1956, "_memory_viz": 1956, "2u": 1956, "50n": 1956, "currenli": 1956, "typeddict": 1956, "device_trac": 1956, "traceentri": 1956, "total_s": 1956, "segment_typ": 1956, "allocated_s": 1956, "active_s": 1956, "active_awaiting_fre": 1956, "requested_s": 1956, "active_alloc": 1956, "took": 1956, "free_request": 1956, "free_complet": 1956, "segment_alloc": 1956, "segment_fre": 1956, "coorel": 1956, "device_fre": 1956, "dump_snapshot": 1956, "smallest_norm": 1957, "subnorm": 1957, "denormal_numb": 1957}, "objects": {"": [[1933, 0, 0, "-", "torch"], [1866, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1927, 1, 1, "", "BFloat16Storage"], [1927, 1, 1, "", "BoolStorage"], [1927, 1, 1, "", "ByteStorage"], [1927, 1, 1, "", "CharStorage"], [1927, 1, 1, "", "ComplexDoubleStorage"], [1927, 1, 1, "", "ComplexFloatStorage"], [1927, 1, 1, "", "DoubleStorage"], [1927, 1, 1, "", "FloatStorage"], [77, 1, 1, "", "Generator"], [1927, 1, 1, "", "HalfStorage"], [1927, 1, 1, "", "IntStorage"], [1927, 1, 1, "", "LongStorage"], [1927, 1, 1, "", "QInt32Storage"], [1927, 1, 1, "", "QInt8Storage"], [1927, 1, 1, "", "QUInt2x4Storage"], [1927, 1, 1, "", "QUInt4x2Storage"], [1927, 1, 1, "", "QUInt8Storage"], [1927, 1, 1, "", "ShortStorage"], [1933, 1, 1, "", "SymBool"], [1933, 1, 1, "", "SymFloat"], [1933, 1, 1, "", "SymInt"], [1933, 1, 1, "", "Tag"], [1931, 1, 1, "", "Tensor"], [1927, 1, 1, "", "TypedStorage"], [1927, 1, 1, "", "UntypedStorage"], [12, 0, 0, "-", "__config__"], [612, 5, 1, "", "_assert"], [613, 5, 1, "", "_foreach_abs"], [614, 5, 1, "", "_foreach_abs_"], [615, 5, 1, "", "_foreach_acos"], [616, 5, 1, "", "_foreach_acos_"], [617, 5, 1, "", "_foreach_asin"], [618, 5, 1, "", "_foreach_asin_"], [619, 5, 1, "", "_foreach_atan"], [620, 5, 1, "", "_foreach_atan_"], [621, 5, 1, "", "_foreach_ceil"], [622, 5, 1, "", "_foreach_ceil_"], [623, 5, 1, "", "_foreach_cos"], [624, 5, 1, "", "_foreach_cos_"], [625, 5, 1, "", "_foreach_cosh"], [626, 5, 1, "", "_foreach_cosh_"], [627, 5, 1, "", "_foreach_erf"], [628, 5, 1, "", "_foreach_erf_"], [629, 5, 1, "", "_foreach_erfc"], [630, 5, 1, "", "_foreach_erfc_"], [631, 5, 1, "", "_foreach_exp"], [632, 5, 1, "", "_foreach_exp_"], [633, 5, 1, "", "_foreach_expm1"], [634, 5, 1, "", "_foreach_expm1_"], [635, 5, 1, "", "_foreach_floor"], [636, 5, 1, "", "_foreach_floor_"], [637, 5, 1, "", "_foreach_frac"], [638, 5, 1, "", "_foreach_frac_"], [639, 5, 1, "", "_foreach_lgamma"], [640, 5, 1, "", "_foreach_lgamma_"], [641, 5, 1, "", "_foreach_log"], [642, 5, 1, "", "_foreach_log10"], [643, 5, 1, "", "_foreach_log10_"], [644, 5, 1, "", "_foreach_log1p"], [645, 5, 1, "", "_foreach_log1p_"], [646, 5, 1, "", "_foreach_log2"], [647, 5, 1, "", "_foreach_log2_"], [648, 5, 1, "", "_foreach_log_"], [649, 5, 1, "", "_foreach_neg"], [650, 5, 1, "", "_foreach_neg_"], [651, 5, 1, "", "_foreach_reciprocal"], [652, 5, 1, "", "_foreach_reciprocal_"], [653, 5, 1, "", "_foreach_round"], [654, 5, 1, "", "_foreach_round_"], [655, 5, 1, "", "_foreach_sigmoid"], [656, 5, 1, "", "_foreach_sigmoid_"], [657, 5, 1, "", "_foreach_sin"], [658, 5, 1, "", "_foreach_sin_"], [659, 5, 1, "", "_foreach_sinh"], [660, 5, 1, "", "_foreach_sinh_"], [661, 5, 1, "", "_foreach_sqrt"], [662, 5, 1, "", "_foreach_sqrt_"], [663, 5, 1, "", "_foreach_tan"], [664, 5, 1, "", "_foreach_tan_"], [665, 5, 1, "", "_foreach_trunc"], [666, 5, 1, "", "_foreach_trunc_"], [667, 5, 1, "", "_foreach_zero_"], [1875, 0, 0, "-", "_logging"], [669, 5, 1, "", "abs"], [670, 5, 1, "", "absolute"], [671, 5, 1, "", "acos"], [672, 5, 1, "", "acosh"], [673, 5, 1, "", "add"], [674, 5, 1, "", "addbmm"], [675, 5, 1, "", "addcdiv"], [676, 5, 1, "", "addcmul"], [677, 5, 1, "", "addmm"], [678, 5, 1, "", "addmv"], [679, 5, 1, "", "addr"], [680, 5, 1, "", "adjoint"], [681, 5, 1, "", "all"], [682, 5, 1, "", "allclose"], [683, 5, 1, "", "amax"], [684, 5, 1, "", "amin"], [685, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [686, 5, 1, "", "angle"], [687, 5, 1, "", "any"], [1916, 0, 0, "-", "ao"], [853, 5, 1, "", "arange"], [854, 5, 1, "", "arccos"], [855, 5, 1, "", "arccosh"], [856, 5, 1, "", "arcsin"], [857, 5, 1, "", "arcsinh"], [858, 5, 1, "", "arctan"], [859, 5, 1, "", "arctan2"], [860, 5, 1, "", "arctanh"], [861, 5, 1, "", "are_deterministic_algorithms_enabled"], [862, 5, 1, "", "argmax"], [863, 5, 1, "", "argmin"], [864, 5, 1, "", "argsort"], [865, 5, 1, "", "argwhere"], [866, 5, 1, "", "as_strided"], [867, 5, 1, "", "as_tensor"], [868, 5, 1, "", "asarray"], [869, 5, 1, "", "asin"], [870, 5, 1, "", "asinh"], [871, 5, 1, "", "atan"], [872, 5, 1, "", "atan2"], [873, 5, 1, "", "atanh"], [874, 5, 1, "", "atleast_1d"], [875, 5, 1, "", "atleast_2d"], [876, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [908, 5, 1, "", "baddbmm"], [909, 5, 1, "", "bartlett_window"], [910, 5, 1, "", "bernoulli"], [911, 5, 1, "", "bincount"], [912, 5, 1, "", "bitwise_and"], [913, 5, 1, "", "bitwise_left_shift"], [914, 5, 1, "", "bitwise_not"], [915, 5, 1, "", "bitwise_or"], [916, 5, 1, "", "bitwise_right_shift"], [917, 5, 1, "", "bitwise_xor"], [918, 5, 1, "", "blackman_window"], [919, 5, 1, "", "block_diag"], [920, 5, 1, "", "bmm"], [921, 5, 1, "", "broadcast_shapes"], [922, 5, 1, "", "broadcast_tensors"], [923, 5, 1, "", "broadcast_to"], [924, 5, 1, "", "bucketize"], [925, 5, 1, "", "can_cast"], [926, 5, 1, "", "cartesian_prod"], [927, 5, 1, "", "cat"], [928, 5, 1, "", "cdist"], [929, 5, 1, "", "ceil"], [930, 5, 1, "", "chain_matmul"], [931, 5, 1, "", "cholesky"], [932, 5, 1, "", "cholesky_inverse"], [933, 5, 1, "", "cholesky_solve"], [934, 5, 1, "", "chunk"], [935, 5, 1, "", "clamp"], [936, 5, 1, "", "clip"], [937, 5, 1, "", "clone"], [938, 5, 1, "", "column_stack"], [939, 5, 1, "", "combinations"], [940, 5, 1, "", "compile"], [941, 5, 1, "", "compiled_with_cxx11_abi"], [1937, 0, 0, "-", "compiler"], [948, 5, 1, "", "complex"], [949, 5, 1, "", "concat"], [950, 5, 1, "", "concatenate"], [951, 5, 1, "", "conj"], [952, 5, 1, "", "conj_physical"], [1933, 0, 0, "-", "contrib"], [953, 5, 1, "", "copysign"], [954, 5, 1, "", "corrcoef"], [955, 5, 1, "", "cos"], [956, 5, 1, "", "cosh"], [957, 5, 1, "", "count_nonzero"], [958, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [966, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1045, 5, 1, "", "cummax"], [1046, 5, 1, "", "cummin"], [1047, 5, 1, "", "cumprod"], [1048, 5, 1, "", "cumsum"], [1049, 5, 1, "", "cumulative_trapezoid"], [1050, 5, 1, "", "deg2rad"], [1051, 5, 1, "", "dequantize"], [1052, 5, 1, "", "det"], [1928, 1, 1, "", "device"], [1053, 5, 1, "", "diag"], [1054, 5, 1, "", "diag_embed"], [1055, 5, 1, "", "diagflat"], [1056, 5, 1, "", "diagonal"], [1057, 5, 1, "", "diagonal_scatter"], [1058, 5, 1, "", "diff"], [1059, 5, 1, "", "digamma"], [1060, 5, 1, "", "dist"], [24, 0, 0, "-", "distributed"], [30, 0, 0, "-", "distributions"], [1061, 5, 1, "", "div"], [1062, 5, 1, "", "divide"], [1063, 5, 1, "", "dot"], [1064, 5, 1, "", "dsplit"], [1065, 5, 1, "", "dstack"], [1928, 1, 1, "", "dtype"], [1066, 5, 1, "", "einsum"], [1067, 5, 1, "", "empty"], [1068, 5, 1, "", "empty_like"], [1069, 5, 1, "", "empty_strided"], [1070, 1, 1, "", "enable_grad"], [1071, 5, 1, "", "eq"], [1072, 5, 1, "", "equal"], [1073, 5, 1, "", "erf"], [1074, 5, 1, "", "erfc"], [1075, 5, 1, "", "erfinv"], [1076, 5, 1, "", "exp"], [1077, 5, 1, "", "exp2"], [1078, 5, 1, "", "expm1"], [45, 0, 0, "-", "export"], [1079, 5, 1, "", "eye"], [1080, 5, 1, "", "fake_quantize_per_channel_affine"], [1081, 5, 1, "", "fake_quantize_per_tensor_affine"], [46, 0, 0, "-", "fft"], [1104, 5, 1, "", "fix"], [1105, 5, 1, "", "flatten"], [1106, 5, 1, "", "flip"], [1107, 5, 1, "", "fliplr"], [1108, 5, 1, "", "flipud"], [1109, 5, 1, "", "float_power"], [1110, 5, 1, "", "floor"], [1111, 5, 1, "", "floor_divide"], [1112, 5, 1, "", "fmax"], [1113, 5, 1, "", "fmin"], [1114, 5, 1, "", "fmod"], [1115, 5, 1, "", "frac"], [1116, 5, 1, "", "frexp"], [1117, 5, 1, "", "from_dlpack"], [1118, 5, 1, "", "from_numpy"], [1119, 5, 1, "", "frombuffer"], [1120, 5, 1, "", "full"], [1121, 5, 1, "", "full_like"], [49, 0, 0, "-", "func"], [54, 0, 0, "-", "futures"], [55, 0, 0, "-", "fx"], [1135, 5, 1, "", "gather"], [1136, 5, 1, "", "gcd"], [1137, 5, 1, "", "ge"], [1138, 5, 1, "", "geqrf"], [1139, 5, 1, "", "ger"], [1140, 5, 1, "", "get_default_dtype"], [1141, 5, 1, "", "get_deterministic_debug_mode"], [1142, 5, 1, "", "get_float32_matmul_precision"], [1143, 5, 1, "", "get_num_interop_threads"], [1144, 5, 1, "", "get_num_threads"], [1145, 5, 1, "", "get_rng_state"], [1146, 5, 1, "", "gradient"], [1147, 5, 1, "", "greater"], [1148, 5, 1, "", "greater_equal"], [1149, 5, 1, "", "gt"], [1150, 5, 1, "", "hamming_window"], [1151, 5, 1, "", "hann_window"], [1152, 5, 1, "", "heaviside"], [1153, 5, 1, "", "histc"], [1154, 5, 1, "", "histogram"], [1155, 5, 1, "", "histogramdd"], [1156, 5, 1, "", "hsplit"], [1157, 5, 1, "", "hspmm"], [1158, 5, 1, "", "hstack"], [1864, 0, 0, "-", "hub"], [1159, 5, 1, "", "hypot"], [1160, 5, 1, "", "i0"], [1161, 5, 1, "", "igamma"], [1162, 5, 1, "", "igammac"], [1163, 5, 1, "", "imag"], [1164, 5, 1, "", "index_add"], [1165, 5, 1, "", "index_copy"], [1166, 5, 1, "", "index_reduce"], [1167, 5, 1, "", "index_select"], [1168, 1, 1, "", "inference_mode"], [1169, 5, 1, "", "initial_seed"], [1170, 5, 1, "", "inner"], [1171, 5, 1, "", "inverse"], [1172, 5, 1, "", "is_complex"], [1173, 5, 1, "", "is_conj"], [1174, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1175, 5, 1, "", "is_floating_point"], [1176, 5, 1, "", "is_grad_enabled"], [1177, 5, 1, "", "is_inference_mode_enabled"], [1178, 5, 1, "", "is_nonzero"], [1179, 5, 1, "", "is_storage"], [1180, 5, 1, "", "is_tensor"], [1181, 5, 1, "", "is_warn_always_enabled"], [1182, 5, 1, "", "isclose"], [1183, 5, 1, "", "isfinite"], [1184, 5, 1, "", "isin"], [1185, 5, 1, "", "isinf"], [1186, 5, 1, "", "isnan"], [1187, 5, 1, "", "isneginf"], [1188, 5, 1, "", "isposinf"], [1189, 5, 1, "", "isreal"], [1190, 5, 1, "", "istft"], [1866, 0, 0, "-", "jit"], [1213, 5, 1, "", "kaiser_window"], [1214, 5, 1, "", "kron"], [1215, 5, 1, "", "kthvalue"], [1928, 1, 1, "", "layout"], [1216, 5, 1, "", "lcm"], [1217, 5, 1, "", "ldexp"], [1218, 5, 1, "", "le"], [1219, 5, 1, "", "lerp"], [1220, 5, 1, "", "less"], [1221, 5, 1, "", "less_equal"], [1222, 5, 1, "", "lgamma"], [1874, 0, 0, "-", "linalg"], [1264, 5, 1, "", "linspace"], [1265, 5, 1, "", "load"], [1266, 5, 1, "", "lobpcg"], [1267, 5, 1, "", "log"], [1268, 5, 1, "", "log10"], [1269, 5, 1, "", "log1p"], [1270, 5, 1, "", "log2"], [1271, 5, 1, "", "logaddexp"], [1272, 5, 1, "", "logaddexp2"], [1273, 5, 1, "", "logcumsumexp"], [1274, 5, 1, "", "logdet"], [1275, 5, 1, "", "logical_and"], [1276, 5, 1, "", "logical_not"], [1277, 5, 1, "", "logical_or"], [1278, 5, 1, "", "logical_xor"], [1279, 5, 1, "", "logit"], [1280, 5, 1, "", "logspace"], [1281, 5, 1, "", "logsumexp"], [1282, 5, 1, "", "lt"], [1283, 5, 1, "", "lu"], [1284, 5, 1, "", "lu_solve"], [1285, 5, 1, "", "lu_unpack"], [1286, 5, 1, "", "manual_seed"], [1876, 0, 0, "-", "masked"], [1287, 5, 1, "", "masked_select"], [1288, 5, 1, "", "matmul"], [1289, 5, 1, "", "matrix_exp"], [1290, 5, 1, "", "matrix_power"], [1291, 5, 1, "", "max"], [1292, 5, 1, "", "maximum"], [1293, 5, 1, "", "mean"], [1294, 5, 1, "", "median"], [1928, 1, 1, "", "memory_format"], [1295, 5, 1, "", "meshgrid"], [1296, 5, 1, "", "min"], [1297, 5, 1, "", "minimum"], [1298, 5, 1, "", "mm"], [1299, 5, 1, "", "mode"], [1879, 0, 0, "-", "monitor"], [1300, 5, 1, "", "moveaxis"], [1301, 5, 1, "", "movedim"], [1880, 0, 0, "-", "mps"], [1315, 5, 1, "", "msort"], [1316, 5, 1, "", "mul"], [1317, 5, 1, "", "multinomial"], [1318, 5, 1, "", "multiply"], [1881, 0, 0, "-", "multiprocessing"], [1319, 5, 1, "", "mv"], [1320, 5, 1, "", "mvlgamma"], [1321, 5, 1, "", "nan_to_num"], [1322, 5, 1, "", "nanmean"], [1323, 5, 1, "", "nanmedian"], [1324, 5, 1, "", "nanquantile"], [1325, 5, 1, "", "nansum"], [1326, 5, 1, "", "narrow"], [1327, 5, 1, "", "narrow_copy"], [1328, 5, 1, "", "ne"], [1329, 5, 1, "", "neg"], [1330, 5, 1, "", "negative"], [1884, 0, 0, "-", "nested"], [1331, 5, 1, "", "nextafter"], [1885, 0, 0, "-", "nn"], [1652, 1, 1, "", "no_grad"], [1653, 5, 1, "", "nonzero"], [1654, 5, 1, "", "norm"], [1655, 5, 1, "", "normal"], [1656, 5, 1, "", "not_equal"], [1657, 5, 1, "", "numel"], [1658, 5, 1, "", "ones"], [1659, 5, 1, "", "ones_like"], [1910, 0, 0, "-", "onnx"], [1912, 0, 0, "-", "optim"], [1696, 5, 1, "", "orgqr"], [1697, 5, 1, "", "ormqr"], [1698, 5, 1, "", "outer"], [1913, 0, 0, "-", "package"], [1699, 5, 1, "", "pca_lowrank"], [1700, 5, 1, "", "permute"], [1701, 5, 1, "", "pinverse"], [1702, 5, 1, "", "poisson"], [1703, 5, 1, "", "polar"], [1704, 5, 1, "", "polygamma"], [1705, 5, 1, "", "positive"], [1706, 5, 1, "", "pow"], [1707, 5, 1, "", "prod"], [1915, 0, 0, "-", "profiler"], [1708, 5, 1, "", "promote_types"], [1709, 5, 1, "", "qr"], [1710, 5, 1, "", "quantile"], [1919, 0, 0, "-", "quantization"], [1711, 5, 1, "", "quantize_per_channel"], [1712, 5, 1, "", "quantize_per_tensor"], [1713, 5, 1, "", "quantized_batch_norm"], [1714, 5, 1, "", "quantized_max_pool1d"], [1715, 5, 1, "", "quantized_max_pool2d"], [1717, 5, 1, "", "rad2deg"], [1718, 5, 1, "", "rand"], [1719, 5, 1, "", "rand_like"], [1720, 5, 1, "", "randint"], [1721, 5, 1, "", "randint_like"], [1722, 5, 1, "", "randn"], [1723, 5, 1, "", "randn_like"], [1920, 0, 0, "-", "random"], [1724, 5, 1, "", "randperm"], [1725, 5, 1, "", "range"], [1726, 5, 1, "", "ravel"], [1727, 5, 1, "", "real"], [1728, 5, 1, "", "reciprocal"], [1729, 5, 1, "", "remainder"], [1730, 5, 1, "", "renorm"], [1731, 5, 1, "", "repeat_interleave"], [1732, 5, 1, "", "reshape"], [1733, 5, 1, "", "resolve_conj"], [1734, 5, 1, "", "resolve_neg"], [1735, 5, 1, "", "result_type"], [1736, 5, 1, "", "roll"], [1737, 5, 1, "", "rot90"], [1738, 5, 1, "", "round"], [1739, 5, 1, "", "row_stack"], [1740, 5, 1, "", "rsqrt"], [1741, 5, 1, "", "save"], [1742, 5, 1, "", "scatter"], [1743, 5, 1, "", "scatter_add"], [1744, 5, 1, "", "scatter_reduce"], [1745, 5, 1, "", "searchsorted"], [1746, 5, 1, "", "seed"], [1747, 5, 1, "", "select"], [1748, 5, 1, "", "select_scatter"], [1749, 5, 1, "", "set_default_device"], [1750, 5, 1, "", "set_default_dtype"], [1751, 5, 1, "", "set_default_tensor_type"], [1752, 5, 1, "", "set_deterministic_debug_mode"], [1753, 5, 1, "", "set_float32_matmul_precision"], [1754, 5, 1, "", "set_flush_denormal"], [1755, 1, 1, "", "set_grad_enabled"], [1756, 5, 1, "", "set_num_interop_threads"], [1757, 5, 1, "", "set_num_threads"], [1758, 5, 1, "", "set_printoptions"], [1759, 5, 1, "", "set_rng_state"], [1760, 5, 1, "", "set_warn_always"], [1761, 5, 1, "", "sgn"], [1762, 5, 1, "", "sigmoid"], [1763, 5, 1, "", "sign"], [1924, 0, 0, "-", "signal"], [1775, 5, 1, "", "signbit"], [1776, 5, 1, "", "sin"], [1777, 5, 1, "", "sinc"], [1778, 5, 1, "", "sinh"], [1779, 5, 1, "", "slice_scatter"], [1780, 5, 1, "", "slogdet"], [1781, 5, 1, "", "smm"], [1782, 5, 1, "", "softmax"], [1783, 5, 1, "", "sort"], [1925, 0, 0, "-", "sparse"], [1793, 5, 1, "", "sparse_bsc_tensor"], [1794, 5, 1, "", "sparse_bsr_tensor"], [1795, 5, 1, "", "sparse_compressed_tensor"], [1796, 5, 1, "", "sparse_coo_tensor"], [1797, 5, 1, "", "sparse_csc_tensor"], [1798, 5, 1, "", "sparse_csr_tensor"], [1926, 0, 0, "-", "special"], [1799, 5, 1, "", "split"], [1800, 5, 1, "", "sqrt"], [1801, 5, 1, "", "square"], [1802, 5, 1, "", "squeeze"], [1803, 5, 1, "", "sspaddmm"], [1804, 5, 1, "", "stack"], [1805, 5, 1, "", "std"], [1806, 5, 1, "", "std_mean"], [1807, 5, 1, "", "stft"], [1808, 5, 1, "", "sub"], [1809, 5, 1, "", "subtract"], [1810, 5, 1, "", "sum"], [1811, 5, 1, "", "svd"], [1812, 5, 1, "", "svd_lowrank"], [1813, 5, 1, "", "swapaxes"], [1814, 5, 1, "", "swapdims"], [1815, 5, 1, "", "sym_float"], [1816, 5, 1, "", "sym_int"], [1817, 5, 1, "", "sym_max"], [1818, 5, 1, "", "sym_min"], [1819, 5, 1, "", "sym_not"], [1820, 5, 1, "", "t"], [1821, 5, 1, "", "take"], [1822, 5, 1, "", "take_along_dim"], [1823, 5, 1, "", "tan"], [1824, 5, 1, "", "tanh"], [1825, 5, 1, "", "tensor"], [1826, 5, 1, "", "tensor_split"], [1827, 5, 1, "", "tensordot"], [1932, 0, 0, "-", "testing"], [1828, 5, 1, "", "tile"], [1829, 5, 1, "", "topk"], [1830, 5, 1, "", "trace"], [1831, 5, 1, "", "transpose"], [1832, 5, 1, "", "trapezoid"], [1833, 5, 1, "", "trapz"], [1834, 5, 1, "", "triangular_solve"], [1835, 5, 1, "", "tril"], [1836, 5, 1, "", "tril_indices"], [1837, 5, 1, "", "triu"], [1838, 5, 1, "", "triu_indices"], [1839, 5, 1, "", "true_divide"], [1840, 5, 1, "", "trunc"], [1841, 5, 1, "", "unbind"], [1842, 5, 1, "", "unflatten"], [1843, 5, 1, "", "unique"], [1844, 5, 1, "", "unique_consecutive"], [1845, 5, 1, "", "unsqueeze"], [1846, 5, 1, "", "use_deterministic_algorithms"], [1958, 0, 0, "-", "utils"], [1851, 5, 1, "", "vander"], [1852, 5, 1, "", "var"], [1853, 5, 1, "", "var_mean"], [1854, 5, 1, "", "vdot"], [1855, 5, 1, "", "view_as_complex"], [1856, 5, 1, "", "view_as_real"], [1857, 5, 1, "", "vmap"], [1858, 5, 1, "", "vsplit"], [1859, 5, 1, "", "vstack"], [1860, 5, 1, "", "where"], [1861, 5, 1, "", "xlogy"], [1862, 5, 1, "", "zeros"], [1863, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1927, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1927, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1927, 2, 1, "", "dtype"]], "torch.CharStorage": [[1927, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1927, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1927, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1927, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1927, 2, 1, "", "dtype"]], "torch.Generator": [[77, 2, 1, "", "device"], [77, 3, 1, "", "get_state"], [77, 3, 1, "", "initial_seed"], [77, 3, 1, "", "manual_seed"], [77, 3, 1, "", "seed"], [77, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1927, 2, 1, "", "dtype"]], "torch.IntStorage": [[1927, 2, 1, "", "dtype"]], "torch.LongStorage": [[1927, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1927, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1927, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1927, 2, 1, "", "dtype"]], "torch.Tag": [[1933, 4, 1, "", "name"]], "torch.Tensor": [[1931, 2, 1, "", "H"], [1931, 2, 1, "", "T"], [78, 3, 1, "", "abs"], [79, 3, 1, "", "abs_"], [80, 3, 1, "", "absolute"], [81, 3, 1, "", "absolute_"], [82, 3, 1, "", "acos"], [83, 3, 1, "", "acos_"], [84, 3, 1, "", "acosh"], [85, 3, 1, "", "acosh_"], [86, 3, 1, "", "add"], [87, 3, 1, "", "add_"], [88, 3, 1, "", "addbmm"], [89, 3, 1, "", "addbmm_"], [90, 3, 1, "", "addcdiv"], [91, 3, 1, "", "addcdiv_"], [92, 3, 1, "", "addcmul"], [93, 3, 1, "", "addcmul_"], [94, 3, 1, "", "addmm"], [95, 3, 1, "", "addmm_"], [96, 3, 1, "", "addmv"], [97, 3, 1, "", "addmv_"], [98, 3, 1, "", "addr"], [99, 3, 1, "", "addr_"], [100, 3, 1, "", "adjoint"], [1883, 3, 1, "", "align_as"], [1883, 3, 1, "", "align_to"], [101, 3, 1, "", "all"], [102, 3, 1, "", "allclose"], [103, 3, 1, "", "amax"], [104, 3, 1, "", "amin"], [105, 3, 1, "", "aminmax"], [106, 3, 1, "", "angle"], [107, 3, 1, "", "any"], [108, 3, 1, "", "apply_"], [109, 3, 1, "", "arccos"], [110, 3, 1, "", "arccos_"], [111, 3, 1, "", "arccosh"], [112, 3, 1, "", "arccosh_"], [113, 3, 1, "", "arcsin"], [114, 3, 1, "", "arcsin_"], [115, 3, 1, "", "arcsinh"], [116, 3, 1, "", "arcsinh_"], [117, 3, 1, "", "arctan"], [118, 3, 1, "", "arctan2"], [119, 3, 1, "", "arctan2_"], [120, 3, 1, "", "arctan_"], [121, 3, 1, "", "arctanh"], [122, 3, 1, "", "arctanh_"], [123, 3, 1, "", "argmax"], [124, 3, 1, "", "argmin"], [125, 3, 1, "", "argsort"], [126, 3, 1, "", "argwhere"], [127, 3, 1, "", "as_strided"], [128, 3, 1, "", "as_subclass"], [129, 3, 1, "", "asin"], [130, 3, 1, "", "asin_"], [131, 3, 1, "", "asinh"], [132, 3, 1, "", "asinh_"], [133, 3, 1, "", "atan"], [134, 3, 1, "", "atan2"], [135, 3, 1, "", "atan2_"], [136, 3, 1, "", "atan_"], [137, 3, 1, "", "atanh"], [138, 3, 1, "", "atanh_"], [139, 3, 1, "", "backward"], [140, 3, 1, "", "baddbmm"], [141, 3, 1, "", "baddbmm_"], [142, 3, 1, "", "bernoulli"], [143, 3, 1, "", "bernoulli_"], [144, 3, 1, "", "bfloat16"], [145, 3, 1, "", "bincount"], [146, 3, 1, "", "bitwise_and"], [147, 3, 1, "", "bitwise_and_"], [148, 3, 1, "", "bitwise_left_shift"], [149, 3, 1, "", "bitwise_left_shift_"], [150, 3, 1, "", "bitwise_not"], [151, 3, 1, "", "bitwise_not_"], [152, 3, 1, "", "bitwise_or"], [153, 3, 1, "", "bitwise_or_"], [154, 3, 1, "", "bitwise_right_shift"], [155, 3, 1, "", "bitwise_right_shift_"], [156, 3, 1, "", "bitwise_xor"], [157, 3, 1, "", "bitwise_xor_"], [158, 3, 1, "", "bmm"], [159, 3, 1, "", "bool"], [160, 3, 1, "", "broadcast_to"], [161, 3, 1, "", "byte"], [162, 3, 1, "", "cauchy_"], [163, 3, 1, "", "ccol_indices"], [164, 3, 1, "", "cdouble"], [165, 3, 1, "", "ceil"], [166, 3, 1, "", "ceil_"], [167, 3, 1, "", "cfloat"], [168, 3, 1, "", "chalf"], [169, 3, 1, "", "char"], [170, 3, 1, "", "cholesky"], [171, 3, 1, "", "cholesky_inverse"], [172, 3, 1, "", "cholesky_solve"], [173, 3, 1, "", "chunk"], [174, 3, 1, "", "clamp"], [175, 3, 1, "", "clamp_"], [176, 3, 1, "", "clip"], [177, 3, 1, "", "clip_"], [178, 3, 1, "", "clone"], [179, 3, 1, "", "coalesce"], [180, 3, 1, "", "col_indices"], [181, 3, 1, "", "conj"], [182, 3, 1, "", "conj_physical"], [183, 3, 1, "", "conj_physical_"], [184, 3, 1, "", "contiguous"], [185, 3, 1, "", "copy_"], [186, 3, 1, "", "copysign"], [187, 3, 1, "", "copysign_"], [188, 3, 1, "", "corrcoef"], [189, 3, 1, "", "cos"], [190, 3, 1, "", "cos_"], [191, 3, 1, "", "cosh"], [192, 3, 1, "", "cosh_"], [193, 3, 1, "", "count_nonzero"], [194, 3, 1, "", "cov"], [195, 3, 1, "", "cpu"], [196, 3, 1, "", "cross"], [197, 3, 1, "", "crow_indices"], [198, 3, 1, "", "cuda"], [199, 3, 1, "", "cummax"], [200, 3, 1, "", "cummin"], [201, 3, 1, "", "cumprod"], [202, 3, 1, "", "cumprod_"], [203, 3, 1, "", "cumsum"], [204, 3, 1, "", "cumsum_"], [205, 3, 1, "", "data_ptr"], [206, 3, 1, "", "deg2rad"], [207, 3, 1, "", "dense_dim"], [208, 3, 1, "", "dequantize"], [209, 3, 1, "", "det"], [210, 3, 1, "", "detach"], [211, 3, 1, "", "detach_"], [212, 2, 1, "", "device"], [213, 3, 1, "", "diag"], [214, 3, 1, "", "diag_embed"], [215, 3, 1, "", "diagflat"], [216, 3, 1, "", "diagonal"], [217, 3, 1, "", "diagonal_scatter"], [218, 3, 1, "", "diff"], [219, 3, 1, "", "digamma"], [220, 3, 1, "", "digamma_"], [221, 3, 1, "", "dim"], [222, 3, 1, "", "dim_order"], [223, 3, 1, "", "dist"], [224, 3, 1, "", "div"], [225, 3, 1, "", "div_"], [226, 3, 1, "", "divide"], [227, 3, 1, "", "divide_"], [228, 3, 1, "", "dot"], [229, 3, 1, "", "double"], [230, 3, 1, "", "dsplit"], [231, 3, 1, "", "element_size"], [232, 3, 1, "", "eq"], [233, 3, 1, "", "eq_"], [234, 3, 1, "", "equal"], [235, 3, 1, "", "erf"], [236, 3, 1, "", "erf_"], [237, 3, 1, "", "erfc"], [238, 3, 1, "", "erfc_"], [239, 3, 1, "", "erfinv"], [240, 3, 1, "", "erfinv_"], [241, 3, 1, "", "exp"], [242, 3, 1, "", "exp_"], [243, 3, 1, "", "expand"], [244, 3, 1, "", "expand_as"], [245, 3, 1, "", "expm1"], [246, 3, 1, "", "expm1_"], [247, 3, 1, "", "exponential_"], [248, 3, 1, "", "fill_"], [249, 3, 1, "", "fill_diagonal_"], [250, 3, 1, "", "fix"], [251, 3, 1, "", "fix_"], [252, 3, 1, "", "flatten"], [253, 3, 1, "", "flip"], [254, 3, 1, "", "fliplr"], [255, 3, 1, "", "flipud"], [256, 3, 1, "", "float"], [257, 3, 1, "", "float_power"], [258, 3, 1, "", "float_power_"], [259, 3, 1, "", "floor"], [260, 3, 1, "", "floor_"], [261, 3, 1, "", "floor_divide"], [262, 3, 1, "", "floor_divide_"], [263, 3, 1, "", "fmax"], [264, 3, 1, "", "fmin"], [265, 3, 1, "", "fmod"], [266, 3, 1, "", "fmod_"], [267, 3, 1, "", "frac"], [268, 3, 1, "", "frac_"], [269, 3, 1, "", "frexp"], [270, 3, 1, "", "gather"], [271, 3, 1, "", "gcd"], [272, 3, 1, "", "gcd_"], [273, 3, 1, "", "ge"], [274, 3, 1, "", "ge_"], [275, 3, 1, "", "geometric_"], [276, 3, 1, "", "geqrf"], [277, 3, 1, "", "ger"], [278, 3, 1, "", "get_device"], [279, 2, 1, "", "grad"], [280, 3, 1, "", "greater"], [281, 3, 1, "", "greater_"], [282, 3, 1, "", "greater_equal"], [283, 3, 1, "", "greater_equal_"], [284, 3, 1, "", "gt"], [285, 3, 1, "", "gt_"], [286, 3, 1, "", "half"], [287, 3, 1, "", "hardshrink"], [288, 3, 1, "", "heaviside"], [289, 3, 1, "", "histc"], [290, 3, 1, "", "histogram"], [291, 3, 1, "", "hsplit"], [292, 3, 1, "", "hypot"], [293, 3, 1, "", "hypot_"], [294, 3, 1, "", "i0"], [295, 3, 1, "", "i0_"], [296, 3, 1, "", "igamma"], [297, 3, 1, "", "igamma_"], [298, 3, 1, "", "igammac"], [299, 3, 1, "", "igammac_"], [300, 2, 1, "", "imag"], [301, 3, 1, "", "index_add"], [302, 3, 1, "", "index_add_"], [303, 3, 1, "", "index_copy"], [304, 3, 1, "", "index_copy_"], [305, 3, 1, "", "index_fill"], [306, 3, 1, "", "index_fill_"], [307, 3, 1, "", "index_put"], [308, 3, 1, "", "index_put_"], [309, 3, 1, "", "index_reduce"], [310, 3, 1, "", "index_reduce_"], [311, 3, 1, "", "index_select"], [312, 3, 1, "", "indices"], [313, 3, 1, "", "inner"], [314, 3, 1, "", "int"], [315, 3, 1, "", "int_repr"], [316, 3, 1, "", "inverse"], [317, 3, 1, "", "is_coalesced"], [318, 3, 1, "", "is_complex"], [319, 3, 1, "", "is_conj"], [320, 3, 1, "", "is_contiguous"], [321, 2, 1, "", "is_cuda"], [322, 3, 1, "", "is_floating_point"], [323, 3, 1, "", "is_inference"], [324, 2, 1, "", "is_leaf"], [325, 2, 1, "", "is_meta"], [326, 3, 1, "", "is_pinned"], [327, 2, 1, "", "is_quantized"], [328, 3, 1, "", "is_set_to"], [329, 3, 1, "", "is_shared"], [330, 3, 1, "", "is_signed"], [331, 2, 1, "", "is_sparse"], [332, 2, 1, "", "is_sparse_csr"], [333, 3, 1, "", "isclose"], [334, 3, 1, "", "isfinite"], [335, 3, 1, "", "isinf"], [336, 3, 1, "", "isnan"], [337, 3, 1, "", "isneginf"], [338, 3, 1, "", "isposinf"], [339, 3, 1, "", "isreal"], [340, 3, 1, "", "istft"], [341, 3, 1, "", "item"], [342, 2, 1, "", "itemsize"], [343, 3, 1, "", "kthvalue"], [344, 3, 1, "", "lcm"], [345, 3, 1, "", "lcm_"], [346, 3, 1, "", "ldexp"], [347, 3, 1, "", "ldexp_"], [348, 3, 1, "", "le"], [349, 3, 1, "", "le_"], [350, 3, 1, "", "lerp"], [351, 3, 1, "", "lerp_"], [352, 3, 1, "", "less"], [353, 3, 1, "", "less_"], [354, 3, 1, "", "less_equal"], [355, 3, 1, "", "less_equal_"], [356, 3, 1, "", "lgamma"], [357, 3, 1, "", "lgamma_"], [358, 3, 1, "", "log"], [359, 3, 1, "", "log10"], [360, 3, 1, "", "log10_"], [361, 3, 1, "", "log1p"], [362, 3, 1, "", "log1p_"], [363, 3, 1, "", "log2"], [364, 3, 1, "", "log2_"], [365, 3, 1, "", "log_"], [366, 3, 1, "", "log_normal_"], [367, 3, 1, "", "logaddexp"], [368, 3, 1, "", "logaddexp2"], [369, 3, 1, "", "logcumsumexp"], [370, 3, 1, "", "logdet"], [371, 3, 1, "", "logical_and"], [372, 3, 1, "", "logical_and_"], [373, 3, 1, "", "logical_not"], [374, 3, 1, "", "logical_not_"], [375, 3, 1, "", "logical_or"], [376, 3, 1, "", "logical_or_"], [377, 3, 1, "", "logical_xor"], [378, 3, 1, "", "logical_xor_"], [379, 3, 1, "", "logit"], [380, 3, 1, "", "logit_"], [381, 3, 1, "", "logsumexp"], [382, 3, 1, "", "long"], [383, 3, 1, "", "lt"], [384, 3, 1, "", "lt_"], [385, 3, 1, "", "lu"], [386, 3, 1, "", "lu_solve"], [1931, 2, 1, "", "mH"], [1931, 2, 1, "", "mT"], [387, 3, 1, "", "map_"], [388, 3, 1, "", "masked_fill"], [389, 3, 1, "", "masked_fill_"], [390, 3, 1, "", "masked_scatter"], [391, 3, 1, "", "masked_scatter_"], [392, 3, 1, "", "masked_select"], [393, 3, 1, "", "matmul"], [394, 3, 1, "", "matrix_exp"], [395, 3, 1, "", "matrix_power"], [396, 3, 1, "", "max"], [397, 3, 1, "", "maximum"], [398, 3, 1, "", "mean"], [399, 3, 1, "", "median"], [400, 3, 1, "", "min"], [401, 3, 1, "", "minimum"], [402, 3, 1, "", "mm"], [403, 3, 1, "", "mode"], [404, 3, 1, "", "moveaxis"], [405, 3, 1, "", "movedim"], [406, 3, 1, "", "msort"], [407, 3, 1, "", "mul"], [408, 3, 1, "", "mul_"], [409, 3, 1, "", "multinomial"], [410, 3, 1, "", "multiply"], [411, 3, 1, "", "multiply_"], [412, 3, 1, "", "mv"], [413, 3, 1, "", "mvlgamma"], [414, 3, 1, "", "mvlgamma_"], [1883, 2, 1, "", "names"], [415, 3, 1, "", "nan_to_num"], [416, 3, 1, "", "nan_to_num_"], [417, 3, 1, "", "nanmean"], [418, 3, 1, "", "nanmedian"], [419, 3, 1, "", "nanquantile"], [420, 3, 1, "", "nansum"], [421, 3, 1, "", "narrow"], [422, 3, 1, "", "narrow_copy"], [423, 2, 1, "", "nbytes"], [424, 2, 1, "", "ndim"], [425, 3, 1, "", "ndimension"], [426, 3, 1, "", "ne"], [427, 3, 1, "", "ne_"], [428, 3, 1, "", "neg"], [429, 3, 1, "", "neg_"], [430, 3, 1, "", "negative"], [431, 3, 1, "", "negative_"], [432, 3, 1, "", "nelement"], [433, 3, 1, "", "new_empty"], [434, 3, 1, "", "new_full"], [435, 3, 1, "", "new_ones"], [436, 3, 1, "", "new_tensor"], [437, 3, 1, "", "new_zeros"], [438, 3, 1, "", "nextafter"], [439, 3, 1, "", "nextafter_"], [440, 3, 1, "", "nonzero"], [441, 3, 1, "", "norm"], [442, 3, 1, "", "normal_"], [443, 3, 1, "", "not_equal"], [444, 3, 1, "", "not_equal_"], [445, 3, 1, "", "numel"], [446, 3, 1, "", "numpy"], [447, 3, 1, "", "orgqr"], [448, 3, 1, "", "ormqr"], [449, 3, 1, "", "outer"], [450, 3, 1, "", "permute"], [451, 3, 1, "", "pin_memory"], [452, 3, 1, "", "pinverse"], [453, 3, 1, "", "polygamma"], [454, 3, 1, "", "polygamma_"], [455, 3, 1, "", "positive"], [456, 3, 1, "", "pow"], [457, 3, 1, "", "pow_"], [458, 3, 1, "", "prod"], [459, 3, 1, "", "put_"], [460, 3, 1, "", "q_per_channel_axis"], [461, 3, 1, "", "q_per_channel_scales"], [462, 3, 1, "", "q_per_channel_zero_points"], [463, 3, 1, "", "q_scale"], [464, 3, 1, "", "q_zero_point"], [465, 3, 1, "", "qr"], [466, 3, 1, "", "qscheme"], [467, 3, 1, "", "quantile"], [468, 3, 1, "", "rad2deg"], [469, 3, 1, "", "random_"], [470, 3, 1, "", "ravel"], [471, 2, 1, "", "real"], [472, 3, 1, "", "reciprocal"], [473, 3, 1, "", "reciprocal_"], [474, 3, 1, "", "record_stream"], [1883, 3, 1, "", "refine_names"], [475, 3, 1, "", "register_hook"], [476, 3, 1, "", "register_post_accumulate_grad_hook"], [477, 3, 1, "", "remainder"], [478, 3, 1, "", "remainder_"], [1883, 3, 1, "", "rename"], [1883, 3, 1, "", "rename_"], [479, 3, 1, "", "renorm"], [480, 3, 1, "", "renorm_"], [481, 3, 1, "", "repeat"], [482, 3, 1, "", "repeat_interleave"], [483, 2, 1, "", "requires_grad"], [484, 3, 1, "", "requires_grad_"], [485, 3, 1, "", "reshape"], [486, 3, 1, "", "reshape_as"], [487, 3, 1, "", "resize_"], [488, 3, 1, "", "resize_as_"], [489, 3, 1, "", "resolve_conj"], [490, 3, 1, "", "resolve_neg"], [491, 3, 1, "", "retain_grad"], [492, 2, 1, "", "retains_grad"], [493, 3, 1, "", "roll"], [494, 3, 1, "", "rot90"], [495, 3, 1, "", "round"], [496, 3, 1, "", "round_"], [497, 3, 1, "", "row_indices"], [498, 3, 1, "", "rsqrt"], [499, 3, 1, "", "rsqrt_"], [500, 3, 1, "", "scatter"], [501, 3, 1, "", "scatter_"], [502, 3, 1, "", "scatter_add"], [503, 3, 1, "", "scatter_add_"], [504, 3, 1, "", "scatter_reduce"], [505, 3, 1, "", "scatter_reduce_"], [506, 3, 1, "", "select"], [507, 3, 1, "", "select_scatter"], [508, 3, 1, "", "set_"], [509, 3, 1, "", "sgn"], [510, 3, 1, "", "sgn_"], [511, 2, 1, "", "shape"], [512, 3, 1, "", "share_memory_"], [513, 3, 1, "", "short"], [514, 3, 1, "", "sigmoid"], [515, 3, 1, "", "sigmoid_"], [516, 3, 1, "", "sign"], [517, 3, 1, "", "sign_"], [518, 3, 1, "", "signbit"], [519, 3, 1, "", "sin"], [520, 3, 1, "", "sin_"], [521, 3, 1, "", "sinc"], [522, 3, 1, "", "sinc_"], [523, 3, 1, "", "sinh"], [524, 3, 1, "", "sinh_"], [525, 3, 1, "", "size"], [526, 3, 1, "", "slice_scatter"], [527, 3, 1, "", "slogdet"], [528, 3, 1, "", "smm"], [529, 3, 1, "", "softmax"], [530, 3, 1, "", "sort"], [531, 3, 1, "", "sparse_dim"], [532, 3, 1, "", "sparse_mask"], [533, 3, 1, "", "sparse_resize_"], [534, 3, 1, "", "sparse_resize_and_clear_"], [535, 3, 1, "", "split"], [536, 3, 1, "", "sqrt"], [537, 3, 1, "", "sqrt_"], [538, 3, 1, "", "square"], [539, 3, 1, "", "square_"], [540, 3, 1, "", "squeeze"], [541, 3, 1, "", "squeeze_"], [542, 3, 1, "", "sspaddmm"], [543, 3, 1, "", "std"], [544, 3, 1, "", "stft"], [545, 3, 1, "", "storage"], [546, 3, 1, "", "storage_offset"], [547, 3, 1, "", "storage_type"], [548, 3, 1, "", "stride"], [549, 3, 1, "", "sub"], [550, 3, 1, "", "sub_"], [551, 3, 1, "", "subtract"], [552, 3, 1, "", "subtract_"], [553, 3, 1, "", "sum"], [554, 3, 1, "", "sum_to_size"], [555, 3, 1, "", "svd"], [556, 3, 1, "", "swapaxes"], [557, 3, 1, "", "swapdims"], [558, 3, 1, "", "t"], [559, 3, 1, "", "t_"], [560, 3, 1, "", "take"], [561, 3, 1, "", "take_along_dim"], [562, 3, 1, "", "tan"], [563, 3, 1, "", "tan_"], [564, 3, 1, "", "tanh"], [565, 3, 1, "", "tanh_"], [566, 3, 1, "", "tensor_split"], [567, 3, 1, "", "tile"], [568, 3, 1, "", "to"], [569, 3, 1, "", "to_dense"], [570, 3, 1, "", "to_mkldnn"], [571, 3, 1, "", "to_sparse"], [572, 3, 1, "", "to_sparse_bsc"], [573, 3, 1, "", "to_sparse_bsr"], [574, 3, 1, "", "to_sparse_coo"], [575, 3, 1, "", "to_sparse_csc"], [576, 3, 1, "", "to_sparse_csr"], [577, 3, 1, "", "tolist"], [578, 3, 1, "", "topk"], [579, 3, 1, "", "trace"], [580, 3, 1, "", "transpose"], [581, 3, 1, "", "transpose_"], [582, 3, 1, "", "triangular_solve"], [583, 3, 1, "", "tril"], [584, 3, 1, "", "tril_"], [585, 3, 1, "", "triu"], [586, 3, 1, "", "triu_"], [587, 3, 1, "", "true_divide"], [588, 3, 1, "", "true_divide_"], [589, 3, 1, "", "trunc"], [590, 3, 1, "", "trunc_"], [591, 3, 1, "", "type"], [592, 3, 1, "", "type_as"], [593, 3, 1, "", "unbind"], [594, 3, 1, "", "unflatten"], [595, 3, 1, "", "unfold"], [596, 3, 1, "", "uniform_"], [597, 3, 1, "", "unique"], [598, 3, 1, "", "unique_consecutive"], [599, 3, 1, "", "unsqueeze"], [600, 3, 1, "", "unsqueeze_"], [601, 3, 1, "", "untyped_storage"], [602, 3, 1, "", "values"], [603, 3, 1, "", "var"], [604, 3, 1, "", "vdot"], [605, 3, 1, "", "view"], [606, 3, 1, "", "view_as"], [607, 3, 1, "", "vsplit"], [608, 3, 1, "", "where"], [609, 3, 1, "", "xlogy"], [610, 3, 1, "", "xlogy_"], [611, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1927, 3, 1, "", "bfloat16"], [1927, 3, 1, "", "bool"], [1927, 3, 1, "", "byte"], [1927, 3, 1, "", "char"], [1927, 3, 1, "", "clone"], [1927, 3, 1, "", "complex_double"], [1927, 3, 1, "", "complex_float"], [1927, 3, 1, "", "copy_"], [1927, 3, 1, "", "cpu"], [1927, 3, 1, "", "cuda"], [1927, 3, 1, "", "data_ptr"], [1927, 4, 1, "", "device"], [1927, 3, 1, "", "double"], [1927, 2, 1, "", "dtype"], [1927, 3, 1, "", "element_size"], [1927, 3, 1, "", "fill_"], [1927, 3, 1, "", "float"], [1927, 3, 1, "", "from_buffer"], [1927, 3, 1, "", "from_file"], [1927, 3, 1, "", "get_device"], [1927, 3, 1, "", "half"], [1927, 3, 1, "", "hpu"], [1927, 3, 1, "", "int"], [1927, 4, 1, "", "is_cuda"], [1927, 4, 1, "", "is_hpu"], [1927, 3, 1, "", "is_pinned"], [1927, 3, 1, "", "is_shared"], [1927, 2, 1, "", "is_sparse"], [1927, 3, 1, "", "long"], [1927, 3, 1, "", "nbytes"], [1927, 3, 1, "", "pickle_storage_type"], [1927, 3, 1, "", "pin_memory"], [1927, 3, 1, "", "resize_"], [1927, 3, 1, "", "share_memory_"], [1927, 3, 1, "", "short"], [1927, 3, 1, "", "size"], [1927, 3, 1, "", "tolist"], [1927, 3, 1, "", "type"], [1927, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1927, 3, 1, "", "bfloat16"], [1927, 3, 1, "", "bool"], [1927, 3, 1, "", "byte"], [1927, 3, 1, "", "byteswap"], [1927, 3, 1, "", "char"], [1927, 3, 1, "", "clone"], [1927, 3, 1, "", "complex_double"], [1927, 3, 1, "", "complex_float"], [1927, 3, 1, "", "copy_"], [1927, 3, 1, "", "cpu"], [1927, 3, 1, "", "cuda"], [1927, 3, 1, "", "data_ptr"], [1927, 2, 1, "", "device"], [1927, 3, 1, "", "double"], [1927, 3, 1, "", "element_size"], [1927, 3, 1, "", "fill_"], [1927, 3, 1, "", "float"], [1927, 3, 1, "", "from_buffer"], [1927, 3, 1, "", "from_file"], [1927, 3, 1, "", "get_device"], [1927, 3, 1, "", "half"], [1927, 3, 1, "", "hpu"], [1927, 3, 1, "", "int"], [1927, 4, 1, "", "is_cuda"], [1927, 4, 1, "", "is_hpu"], [1927, 3, 1, "", "is_pinned"], [1927, 3, 1, "", "is_shared"], [1927, 2, 1, "", "is_sparse"], [1927, 2, 1, "", "is_sparse_csr"], [1927, 3, 1, "", "long"], [1927, 3, 1, "", "mps"], [1927, 3, 1, "", "nbytes"], [1927, 3, 1, "", "new"], [1927, 3, 1, "", "pin_memory"], [1927, 3, 1, "", "resize_"], [1927, 3, 1, "", "share_memory_"], [1927, 3, 1, "", "short"], [1927, 3, 1, "", "size"], [1927, 3, 1, "", "tolist"], [1927, 3, 1, "", "type"], [1927, 3, 1, "", "untyped"]], "torch.__config__": [[12, 5, 1, "", "parallel_info"], [12, 5, 1, "", "show"]], "torch._higher_order_ops.cond": [[13, 5, 1, "", "cond"]], "torch._logging": [[668, 5, 1, "", "set_logs"]], "torch.ao": [[1916, 0, 0, "-", "nn"], [1916, 0, 0, "-", "ns"], [1916, 0, 0, "-", "pruning"], [1916, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1919, 0, 0, "-", "intrinsic"], [1919, 0, 0, "-", "qat"], [1916, 0, 0, "-", "quantizable"], [1916, 0, 0, "-", "quantized"], [1916, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[688, 1, 1, "", "BNReLU2d"], [689, 1, 1, "", "BNReLU3d"], [690, 1, 1, "", "ConvBn1d"], [691, 1, 1, "", "ConvBn2d"], [692, 1, 1, "", "ConvBn3d"], [693, 1, 1, "", "ConvBnReLU1d"], [694, 1, 1, "", "ConvBnReLU2d"], [695, 1, 1, "", "ConvBnReLU3d"], [696, 1, 1, "", "ConvReLU1d"], [697, 1, 1, "", "ConvReLU2d"], [698, 1, 1, "", "ConvReLU3d"], [699, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "modules"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[700, 1, 1, "", "ConvBn1d"], [701, 1, 1, "", "ConvBn2d"], [702, 1, 1, "", "ConvBn3d"], [703, 1, 1, "", "ConvBnReLU1d"], [704, 1, 1, "", "ConvBnReLU2d"], [705, 1, 1, "", "ConvBnReLU3d"], [706, 1, 1, "", "ConvReLU2d"], [707, 1, 1, "", "ConvReLU3d"], [708, 1, 1, "", "LinearReLU"], [709, 1, 1, "", "freeze_bn_stats"], [1919, 0, 0, "-", "modules"], [710, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[711, 1, 1, "", "BNReLU2d"], [712, 1, 1, "", "BNReLU3d"], [713, 1, 1, "", "ConvReLU1d"], [714, 1, 1, "", "ConvReLU2d"], [715, 1, 1, "", "ConvReLU3d"], [716, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[717, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[718, 1, 1, "", "Conv2d"], [719, 1, 1, "", "Conv3d"], [720, 1, 1, "", "Linear"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[720, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[721, 1, 1, "", "Linear"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[722, 1, 1, "", "LSTM"], [723, 1, 1, "", "MultiheadAttention"], [1916, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[723, 3, 1, "", "dequantize"], [723, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[724, 1, 1, "", "BatchNorm2d"], [725, 1, 1, "", "BatchNorm3d"], [726, 1, 1, "", "Conv1d"], [727, 1, 1, "", "Conv2d"], [728, 1, 1, "", "Conv3d"], [729, 1, 1, "", "ConvTranspose1d"], [730, 1, 1, "", "ConvTranspose2d"], [731, 1, 1, "", "ConvTranspose3d"], [732, 1, 1, "", "ELU"], [733, 1, 1, "", "Embedding"], [734, 1, 1, "", "EmbeddingBag"], [735, 1, 1, "", "FXFloatFunctional"], [736, 1, 1, "", "FloatFunctional"], [737, 1, 1, "", "GroupNorm"], [738, 1, 1, "", "Hardswish"], [739, 1, 1, "", "InstanceNorm1d"], [740, 1, 1, "", "InstanceNorm2d"], [741, 1, 1, "", "InstanceNorm3d"], [742, 1, 1, "", "LayerNorm"], [743, 1, 1, "", "LeakyReLU"], [744, 1, 1, "", "Linear"], [745, 1, 1, "", "QFunctional"], [746, 1, 1, "", "ReLU6"], [747, 1, 1, "", "Sigmoid"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "functional"], [1919, 0, 0, "-", "modules"], [1916, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[726, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[733, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[744, 3, 1, "", "from_float"], [744, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[748, 1, 1, "", "GRU"], [749, 1, 1, "", "GRUCell"], [750, 1, 1, "", "LSTM"], [751, 1, 1, "", "LSTMCell"], [752, 1, 1, "", "Linear"], [753, 1, 1, "", "RNNCell"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[752, 3, 1, "", "from_float"], [752, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[754, 1, 1, "", "adaptive_avg_pool2d"], [755, 1, 1, "", "adaptive_avg_pool3d"], [756, 1, 1, "", "avg_pool2d"], [757, 1, 1, "", "avg_pool3d"], [758, 1, 1, "", "celu"], [759, 1, 1, "", "clamp"], [760, 1, 1, "", "conv1d"], [761, 1, 1, "", "conv2d"], [762, 1, 1, "", "conv3d"], [763, 1, 1, "", "elu"], [764, 1, 1, "", "hardsigmoid"], [765, 1, 1, "", "hardswish"], [766, 1, 1, "", "hardtanh"], [767, 1, 1, "", "interpolate"], [768, 1, 1, "", "leaky_relu"], [769, 1, 1, "", "linear"], [770, 1, 1, "", "max_pool1d"], [771, 1, 1, "", "max_pool2d"], [772, 1, 1, "", "threshold"], [773, 1, 1, "", "upsample"], [774, 1, 1, "", "upsample_bilinear"], [775, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1916, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1916, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1916, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1934, 0, 0, "-", "_numeric_suite"], [1935, 0, 0, "-", "_numeric_suite_fx"], [1916, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1934, 1, 1, "", "Logger"], [1934, 1, 1, "", "OutputLogger"], [1934, 1, 1, "", "Shadow"], [1934, 1, 1, "", "ShadowLogger"], [1934, 5, 1, "", "compare_model_outputs"], [1934, 5, 1, "", "compare_model_stub"], [1934, 5, 1, "", "compare_weights"], [1934, 5, 1, "", "get_logger_dict"], [1934, 5, 1, "", "get_matching_activations"], [1934, 5, 1, "", "prepare_model_outputs"], [1934, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1934, 3, 1, "", "add"], [1934, 3, 1, "", "add_relu"], [1934, 3, 1, "", "add_scalar"], [1934, 3, 1, "", "cat"], [1934, 3, 1, "", "forward"], [1934, 3, 1, "", "mul"], [1934, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1935, 1, 1, "", "NSTracer"], [1935, 1, 1, "", "OutputComparisonLogger"], [1935, 1, 1, "", "OutputLogger"], [1935, 5, 1, "", "add_loggers"], [1935, 5, 1, "", "add_shadow_loggers"], [1935, 5, 1, "", "convert_n_shadows_model"], [1935, 5, 1, "", "extend_logger_results_with_comparison"], [1935, 5, 1, "", "extract_logger_info"], [1935, 5, 1, "", "extract_results_n_shadows_model"], [1935, 5, 1, "", "extract_shadow_logger_info"], [1935, 5, 1, "", "extract_weights"], [1935, 5, 1, "", "loggers_set_enabled"], [1935, 5, 1, "", "loggers_set_save_activations"], [1935, 5, 1, "", "prepare_n_shadows_model"], [1935, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1935, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1935, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1935, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1935, 5, 1, "", "compute_cosine_similarity"], [1935, 5, 1, "", "compute_normalized_l2_error"], [1935, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1916, 0, 0, "-", "scheduler"], [1916, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[776, 1, 1, "", "DeQuantStub"], [777, 1, 1, "", "QuantStub"], [778, 1, 1, "", "QuantWrapper"], [779, 1, 1, "", "add_quant_dequant"], [1916, 0, 0, "-", "backend_config"], [785, 1, 1, "", "convert"], [786, 1, 1, "", "default_eval_fn"], [802, 1, 1, "", "fuse_modules"], [1916, 0, 0, "-", "fx"], [826, 1, 1, "", "prepare"], [827, 1, 1, "", "prepare_qat"], [828, 1, 1, "", "propagate_qconfig_"], [1919, 0, 0, "-", "pt2e"], [845, 1, 1, "", "quantize"], [846, 1, 1, "", "quantize_dynamic"], [851, 1, 1, "", "quantize_qat"], [1919, 0, 0, "-", "quantizer"], [852, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[780, 1, 1, "", "BackendConfig"], [781, 1, 1, "", "BackendPatternConfig"], [782, 1, 1, "", "DTypeConfig"], [783, 1, 1, "", "DTypeWithConstraints"], [784, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[780, 4, 1, "", "configs"], [780, 3, 1, "", "from_dict"], [780, 3, 1, "", "set_backend_pattern_config"], [780, 3, 1, "", "set_backend_pattern_configs"], [780, 3, 1, "", "set_name"], [780, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[781, 3, 1, "", "add_dtype_config"], [781, 3, 1, "", "from_dict"], [781, 3, 1, "", "set_dtype_configs"], [781, 3, 1, "", "set_fused_module"], [781, 3, 1, "", "set_fuser_method"], [781, 3, 1, "", "set_observation_type"], [781, 3, 1, "", "set_pattern"], [781, 3, 1, "", "set_qat_module"], [781, 3, 1, "", "set_reference_quantized_module"], [781, 3, 1, "", "set_root_module"], [781, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[782, 3, 1, "", "from_dict"], [782, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[784, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [784, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [784, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[787, 1, 1, "", "FakeQuantize"], [788, 1, 1, "", "FakeQuantizeBase"], [789, 1, 1, "", "FixedQParamsFakeQuantize"], [790, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [791, 2, 1, "", "default_fake_quant"], [792, 2, 1, "", "default_fused_act_fake_quant"], [793, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [794, 2, 1, "", "default_fused_wt_fake_quant"], [795, 2, 1, "", "default_histogram_fake_quant"], [796, 2, 1, "", "default_per_channel_weight_fake_quant"], [797, 2, 1, "", "default_weight_fake_quant"], [798, 1, 1, "", "disable_fake_quant"], [799, 1, 1, "", "disable_observer"], [800, 1, 1, "", "enable_fake_quant"], [801, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[803, 1, 1, "", "ConvertCustomConfig"], [804, 1, 1, "", "FuseCustomConfig"], [805, 1, 1, "", "PrepareCustomConfig"], [806, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[803, 3, 1, "", "from_dict"], [803, 3, 1, "", "set_observed_to_quantized_mapping"], [803, 3, 1, "", "set_preserved_attributes"], [803, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[804, 3, 1, "", "from_dict"], [804, 3, 1, "", "set_preserved_attributes"], [804, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_float_to_observed_mapping"], [805, 3, 1, "", "set_input_quantized_indexes"], [805, 3, 1, "", "set_non_traceable_module_classes"], [805, 3, 1, "", "set_non_traceable_module_names"], [805, 3, 1, "", "set_output_quantized_indexes"], [805, 3, 1, "", "set_preserved_attributes"], [805, 3, 1, "", "set_standalone_module_class"], [805, 3, 1, "", "set_standalone_module_name"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[807, 1, 1, "", "HistogramObserver"], [808, 1, 1, "", "MinMaxObserver"], [809, 1, 1, "", "MovingAverageMinMaxObserver"], [810, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [811, 1, 1, "", "NoopObserver"], [812, 1, 1, "", "ObserverBase"], [813, 1, 1, "", "PerChannelMinMaxObserver"], [814, 1, 1, "", "PlaceholderObserver"], [815, 1, 1, "", "RecordingObserver"], [816, 2, 1, "", "default_debug_observer"], [817, 2, 1, "", "default_dynamic_quant_observer"], [818, 2, 1, "", "default_float_qparams_observer"], [819, 2, 1, "", "default_histogram_observer"], [820, 2, 1, "", "default_observer"], [821, 2, 1, "", "default_per_channel_weight_observer"], [822, 2, 1, "", "default_placeholder_observer"], [823, 2, 1, "", "default_weight_observer"], [824, 1, 1, "", "get_observer_state_dict"], [825, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[808, 3, 1, "", "calculate_qparams"], [808, 3, 1, "", "forward"], [808, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[812, 3, 1, "", "with_args"], [812, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[813, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1919, 0, 0, "-", "representation"]], "torch.ao.quantization.qconfig": [[829, 1, 1, "", "QConfig"], [830, 2, 1, "", "default_activation_only_qconfig"], [831, 2, 1, "", "default_debug_qconfig"], [832, 2, 1, "", "default_dynamic_qconfig"], [833, 2, 1, "", "default_per_channel_qconfig"], [834, 2, 1, "", "default_qat_qconfig"], [835, 2, 1, "", "default_qat_qconfig_v2"], [836, 2, 1, "", "default_qconfig"], [837, 2, 1, "", "default_weight_only_qconfig"], [838, 2, 1, "", "float16_dynamic_qconfig"], [839, 2, 1, "", "float16_static_qconfig"], [840, 2, 1, "", "float_qparams_weight_only_qconfig"], [841, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[842, 1, 1, "", "QConfigMapping"], [843, 1, 1, "", "get_default_qat_qconfig_mapping"], [844, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[842, 3, 1, "", "from_dict"], [842, 3, 1, "", "set_global"], [842, 3, 1, "", "set_module_name"], [842, 3, 1, "", "set_module_name_object_type_order"], [842, 3, 1, "", "set_module_name_regex"], [842, 3, 1, "", "set_object_type"], [842, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[847, 1, 1, "", "convert_fx"], [848, 1, 1, "", "fuse_fx"], [849, 1, 1, "", "prepare_fx"], [850, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [881, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [895, 5, 1, "", "grad"], [896, 5, 1, "", "gradcheck"], [897, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"]], "torch.autograd.Function": [[877, 3, 1, "", "backward"], [878, 3, 1, "", "forward"], [879, 3, 1, "", "jvp"], [880, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[882, 1, 1, "", "dual_level"], [883, 5, 1, "", "make_dual"], [884, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[885, 3, 1, "", "mark_dirty"], [886, 3, 1, "", "mark_non_differentiable"], [887, 3, 1, "", "save_for_backward"], [888, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[889, 5, 1, "", "hessian"], [890, 5, 1, "", "hvp"], [891, 5, 1, "", "jacobian"], [892, 5, 1, "", "jvp"], [893, 5, 1, "", "vhp"], [894, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[898, 3, 1, "", "metadata"], [899, 3, 1, "", "name"], [900, 4, 1, "", "next_functions"], [901, 3, 1, "", "register_hook"], [902, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [903, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[904, 3, 1, "", "export_chrome_trace"], [905, 3, 1, "", "key_averages"], [906, 4, 1, "", "self_cpu_time_total"], [907, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[942, 5, 1, "", "allow_in_graph"], [943, 5, 1, "", "assume_constant_result"], [944, 5, 1, "", "compile"], [945, 5, 1, "", "disable"], [946, 5, 1, "", "list_backends"], [947, 5, 1, "", "reset"]], "torch.cpu": [[959, 1, 1, "", "Stream"], [960, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [961, 5, 1, "", "current_stream"], [962, 5, 1, "", "device_count"], [963, 5, 1, "", "is_available"], [964, 5, 1, "", "stream"], [965, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[967, 1, 1, "", "CUDAGraph"], [968, 1, 1, "", "CUDAPluggableAllocator"], [969, 1, 1, "", "Event"], [970, 1, 1, "", "ExternalStream"], [971, 6, 1, "", "OutOfMemoryError"], [972, 1, 1, "", "Stream"], [973, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [974, 5, 1, "", "caching_allocator_alloc"], [975, 5, 1, "", "caching_allocator_delete"], [976, 5, 1, "", "can_device_access_peer"], [977, 5, 1, "", "change_current_allocator"], [978, 5, 1, "", "clock_rate"], [984, 5, 1, "", "current_blas_handle"], [985, 5, 1, "", "current_device"], [986, 5, 1, "", "current_stream"], [987, 5, 1, "", "default_stream"], [988, 1, 1, "", "device"], [989, 5, 1, "", "device_count"], [990, 1, 1, "", "device_of"], [991, 5, 1, "", "empty_cache"], [992, 5, 1, "", "get_allocator_backend"], [993, 5, 1, "", "get_arch_list"], [994, 5, 1, "", "get_device_capability"], [995, 5, 1, "", "get_device_name"], [996, 5, 1, "", "get_device_properties"], [997, 5, 1, "", "get_gencode_flags"], [998, 5, 1, "", "get_rng_state"], [999, 5, 1, "", "get_rng_state_all"], [1000, 5, 1, "", "get_sync_debug_mode"], [1001, 1, 1, "", "graph"], [1002, 5, 1, "", "graph_pool_handle"], [1003, 5, 1, "", "init"], [1004, 5, 1, "", "initial_seed"], [1005, 5, 1, "", "ipc_collect"], [1006, 5, 1, "", "is_available"], [1007, 5, 1, "", "is_current_stream_capturing"], [1008, 5, 1, "", "is_initialized"], [1011, 5, 1, "", "list_gpu_processes"], [1012, 5, 1, "", "make_graphed_callables"], [1013, 5, 1, "", "manual_seed"], [1014, 5, 1, "", "manual_seed_all"], [1015, 5, 1, "", "max_memory_allocated"], [1016, 5, 1, "", "max_memory_cached"], [1017, 5, 1, "", "max_memory_reserved"], [1018, 5, 1, "", "mem_get_info"], [1019, 5, 1, "", "memory_allocated"], [1020, 5, 1, "", "memory_cached"], [1021, 5, 1, "", "memory_reserved"], [1022, 5, 1, "", "memory_snapshot"], [1023, 5, 1, "", "memory_stats"], [1024, 5, 1, "", "memory_summary"], [1025, 5, 1, "", "memory_usage"], [1029, 5, 1, "", "power_draw"], [1030, 5, 1, "", "reset_max_memory_allocated"], [1031, 5, 1, "", "reset_max_memory_cached"], [1032, 5, 1, "", "reset_peak_memory_stats"], [1033, 5, 1, "", "seed"], [1034, 5, 1, "", "seed_all"], [1035, 5, 1, "", "set_device"], [1036, 5, 1, "", "set_per_process_memory_fraction"], [1037, 5, 1, "", "set_rng_state"], [1038, 5, 1, "", "set_rng_state_all"], [1039, 5, 1, "", "set_stream"], [1040, 5, 1, "", "set_sync_debug_mode"], [1041, 5, 1, "", "stream"], [1042, 5, 1, "", "synchronize"], [1043, 5, 1, "", "temperature"], [1044, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[967, 3, 1, "", "capture_begin"], [967, 3, 1, "", "capture_end"], [967, 3, 1, "", "debug_dump"], [967, 3, 1, "", "enable_debug_mode"], [967, 3, 1, "", "pool"], [967, 3, 1, "", "replay"], [967, 3, 1, "", "reset"]], "torch.cuda.Event": [[969, 3, 1, "", "elapsed_time"], [969, 3, 1, "", "from_ipc_handle"], [969, 3, 1, "", "ipc_handle"], [969, 3, 1, "", "query"], [969, 3, 1, "", "record"], [969, 3, 1, "", "synchronize"], [969, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[970, 3, 1, "", "query"], [970, 3, 1, "", "record_event"], [970, 3, 1, "", "synchronize"], [970, 3, 1, "", "wait_event"], [970, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[972, 3, 1, "", "query"], [972, 3, 1, "", "record_event"], [972, 3, 1, "", "synchronize"], [972, 3, 1, "", "wait_event"], [972, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[979, 5, 1, "", "broadcast"], [980, 5, 1, "", "broadcast_coalesced"], [981, 5, 1, "", "gather"], [982, 5, 1, "", "reduce_add"], [983, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1009, 5, 1, "", "_create_jit_fn"], [1010, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[1956, 5, 1, "", "_dump_snapshot"], [1956, 5, 1, "", "_record_memory_history"], [1956, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1026, 5, 1, "", "mark"], [1027, 5, 1, "", "range_pop"], [1028, 5, 1, "", "range_push"]], "torch.distributed": [[24, 1, 1, "", "Backend"], [24, 1, 1, "", "DistBackendError"], [24, 1, 1, "", "DistError"], [24, 1, 1, "", "DistNetworkError"], [24, 1, 1, "", "DistStoreError"], [24, 1, 1, "", "FileStore"], [22, 1, 1, "", "GradBucket"], [24, 1, 1, "", "HashStore"], [24, 1, 1, "", "P2POp"], [24, 1, 1, "", "PrefixStore"], [24, 1, 1, "", "ReduceOp"], [24, 1, 1, "", "Store"], [24, 1, 1, "", "TCPStore"], [24, 0, 0, "-", "algorithms"], [24, 5, 1, "", "all_gather"], [24, 5, 1, "", "all_gather_into_tensor"], [24, 5, 1, "", "all_gather_multigpu"], [24, 5, 1, "", "all_gather_object"], [24, 5, 1, "", "all_reduce"], [24, 5, 1, "", "all_reduce_multigpu"], [24, 5, 1, "", "all_to_all"], [24, 5, 1, "", "all_to_all_single"], [1921, 0, 0, "-", "autograd"], [24, 5, 1, "", "barrier"], [24, 5, 1, "", "batch_isend_irecv"], [24, 5, 1, "", "broadcast"], [24, 5, 1, "", "broadcast_multigpu"], [24, 5, 1, "", "broadcast_object_list"], [26, 0, 0, "-", "checkpoint"], [24, 0, 0, "-", "elastic"], [47, 0, 0, "-", "fsdp"], [24, 5, 1, "", "gather"], [24, 5, 1, "", "gather_object"], [24, 5, 1, "", "get_backend"], [24, 5, 1, "", "get_global_rank"], [24, 5, 1, "", "get_group_rank"], [24, 5, 1, "", "get_process_group_ranks"], [24, 5, 1, "", "get_rank"], [24, 5, 1, "", "get_world_size"], [24, 5, 1, "", "init_process_group"], [24, 5, 1, "", "irecv"], [24, 5, 1, "", "is_available"], [24, 5, 1, "", "is_gloo_available"], [24, 5, 1, "", "is_initialized"], [24, 5, 1, "", "is_mpi_available"], [24, 5, 1, "", "is_nccl_available"], [24, 5, 1, "", "is_torchelastic_launched"], [24, 5, 1, "", "isend"], [24, 0, 0, "-", "launch"], [24, 0, 0, "-", "launcher"], [24, 5, 1, "", "monitored_barrier"], [24, 5, 1, "", "new_group"], [24, 0, 0, "-", "nn"], [28, 0, 0, "-", "optim"], [24, 0, 0, "-", "pipeline"], [24, 5, 1, "", "recv"], [24, 5, 1, "", "reduce"], [24, 5, 1, "", "reduce_multigpu"], [24, 1, 1, "", "reduce_op"], [24, 5, 1, "", "reduce_scatter"], [24, 5, 1, "", "reduce_scatter_multigpu"], [24, 5, 1, "", "reduce_scatter_tensor"], [1921, 0, 0, "-", "rpc"], [42, 0, 0, "-", "run"], [24, 5, 1, "", "scatter"], [24, 5, 1, "", "scatter_object_list"], [24, 5, 1, "", "send"], [24, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[24, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[22, 5, 1, "", "buffer"], [22, 5, 1, "", "gradients"], [22, 5, 1, "", "index"], [22, 5, 1, "", "is_last"], [22, 5, 1, "", "parameters"], [22, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[24, 5, 1, "", "add"], [24, 5, 1, "", "compare_set"], [24, 5, 1, "", "delete_key"], [24, 5, 1, "", "get"], [24, 5, 1, "", "num_keys"], [24, 5, 1, "", "set"], [24, 5, 1, "", "set_timeout"], [24, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[25, 1, 1, "", "Join"], [25, 1, 1, "", "JoinHook"], [25, 1, 1, "", "Joinable"], [24, 0, 0, "-", "ddp_comm_hooks"], [24, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[25, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[25, 3, 1, "", "main_hook"], [25, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[25, 4, 1, "", "join_device"], [25, 3, 1, "", "join_hook"], [25, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[22, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[22, 5, 1, "", "allreduce_hook"], [22, 5, 1, "", "bf16_compress_hook"], [22, 5, 1, "", "bf16_compress_wrapper"], [22, 5, 1, "", "fp16_compress_hook"], [22, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[22, 1, 1, "", "PowerSGDState"], [22, 5, 1, "", "batched_powerSGD_hook"], [22, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[22, 3, 1, "", "__getstate__"], [22, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1921, 5, 1, "", "backward"], [1921, 1, 1, "", "context"], [1921, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[26, 1, 1, "", "DefaultLoadPlanner"], [26, 1, 1, "", "DefaultSavePlanner"], [26, 1, 1, "", "FileSystemReader"], [26, 1, 1, "", "FileSystemWriter"], [26, 1, 1, "", "LoadPlan"], [26, 1, 1, "", "LoadPlanner"], [26, 1, 1, "", "ReadItem"], [26, 1, 1, "", "SavePlan"], [26, 1, 1, "", "SavePlanner"], [26, 1, 1, "", "StorageReader"], [26, 1, 1, "", "StorageWriter"], [26, 1, 1, "", "WriteItem"], [26, 5, 1, "", "load_state_dict"], [26, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[26, 3, 1, "", "lookup_tensor"], [26, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[26, 3, 1, "", "lookup_object"], [26, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[26, 3, 1, "", "commit_tensor"], [26, 3, 1, "", "create_global_plan"], [26, 3, 1, "", "create_local_plan"], [26, 3, 1, "", "finish_plan"], [26, 3, 1, "", "load_bytes"], [26, 3, 1, "", "resolve_tensor"], [26, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[26, 3, 1, "", "create_global_plan"], [26, 3, 1, "", "create_local_plan"], [26, 3, 1, "", "finish_plan"], [26, 3, 1, "", "resolve_data"], [26, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[26, 3, 1, "", "prepare_global_plan"], [26, 3, 1, "", "prepare_local_plan"], [26, 3, 1, "", "read_data"], [26, 3, 1, "", "read_metadata"], [26, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[26, 3, 1, "", "finish"], [26, 3, 1, "", "prepare_global_plan"], [26, 3, 1, "", "prepare_local_plan"], [26, 3, 1, "", "set_up_storage_writer"], [26, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[32, 0, 0, "-", "agent"], [35, 0, 0, "-", "events"], [38, 0, 0, "-", "metrics"], [39, 0, 0, "-", "multiprocessing"], [41, 0, 0, "-", "rendezvous"], [43, 0, 0, "-", "timer"], [24, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[32, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[32, 1, 1, "", "ElasticAgent"], [32, 1, 1, "", "SimpleElasticAgent"], [32, 1, 1, "", "Worker"], [32, 1, 1, "", "WorkerGroup"], [32, 1, 1, "", "WorkerSpec"], [32, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[32, 3, 1, "", "get_worker_group"], [32, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[32, 3, 1, "", "_assign_worker_ranks"], [32, 3, 1, "", "_exit_barrier"], [32, 3, 1, "", "_initialize_workers"], [32, 3, 1, "", "_monitor_workers"], [32, 3, 1, "", "_rendezvous"], [32, 3, 1, "", "_restart_workers"], [32, 3, 1, "", "_shutdown"], [32, 3, 1, "", "_start_workers"], [32, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[32, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[32, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[32, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[32, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[35, 1, 1, "", "Event"], [35, 2, 1, "", "EventMetadataValue"], [35, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[35, 5, 1, "", "get_logging_handler"], [35, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[38, 1, 1, "", "ConsoleMetricHandler"], [38, 1, 1, "", "MetricHandler"], [38, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[38, 5, 1, "", "configure"], [38, 5, 1, "", "prof"], [38, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[39, 1, 1, "", "MultiprocessContext"], [39, 1, 1, "", "PContext"], [39, 1, 1, "", "RunProcsResult"], [39, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[34, 0, 0, "-", "errors"], [39, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[34, 1, 1, "", "ChildFailedError"], [34, 1, 1, "", "ErrorHandler"], [34, 1, 1, "", "ProcessFailure"], [34, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[41, 1, 1, "", "RendezvousClosedError"], [41, 1, 1, "", "RendezvousConnectionError"], [41, 1, 1, "", "RendezvousError"], [41, 1, 1, "", "RendezvousHandler"], [41, 1, 1, "", "RendezvousHandlerRegistry"], [41, 1, 1, "", "RendezvousParameters"], [41, 1, 1, "", "RendezvousStateError"], [41, 1, 1, "", "RendezvousTimeoutError"], [41, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[41, 3, 1, "", "get_backend"], [41, 3, 1, "", "get_run_id"], [41, 3, 1, "", "is_closed"], [41, 3, 1, "", "next_rendezvous"], [41, 3, 1, "", "num_nodes_waiting"], [41, 3, 1, "", "set_closed"], [41, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[41, 3, 1, "", "create_handler"], [41, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[41, 3, 1, "", "get"], [41, 3, 1, "", "get_as_bool"], [41, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[41, 1, 1, "", "C10dRendezvousBackend"], [41, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[41, 1, 1, "", "DynamicRendezvousHandler"], [41, 1, 1, "", "RendezvousBackend"], [41, 1, 1, "", "RendezvousTimeout"], [41, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[41, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[41, 4, 1, "", "close"], [41, 4, 1, "", "heartbeat"], [41, 4, 1, "", "join"], [41, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[41, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[41, 1, 1, "", "EtcdRendezvousBackend"], [41, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[41, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[41, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[41, 3, 1, "", "add"], [41, 3, 1, "", "check"], [41, 3, 1, "", "get"], [41, 3, 1, "", "set"], [41, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[43, 1, 1, "", "FileTimerClient"], [43, 1, 1, "", "FileTimerServer"], [43, 1, 1, "", "LocalTimerClient"], [43, 1, 1, "", "LocalTimerServer"], [43, 1, 1, "", "TimerClient"], [43, 1, 1, "", "TimerRequest"], [43, 1, 1, "", "TimerServer"], [43, 5, 1, "", "configure"], [43, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[43, 3, 1, "", "acquire"], [43, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[43, 3, 1, "", "clear_timers"], [43, 3, 1, "", "get_expired_timers"], [43, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[24, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[47, 1, 1, "", "BackwardPrefetch"], [47, 1, 1, "", "CPUOffload"], [47, 1, 1, "", "FullOptimStateDictConfig"], [47, 1, 1, "", "FullStateDictConfig"], [47, 1, 1, "", "FullyShardedDataParallel"], [47, 1, 1, "", "LocalOptimStateDictConfig"], [47, 1, 1, "", "LocalStateDictConfig"], [47, 1, 1, "", "MixedPrecision"], [47, 1, 1, "", "OptimStateDictConfig"], [47, 1, 1, "", "ShardedOptimStateDictConfig"], [47, 1, 1, "", "ShardedStateDictConfig"], [47, 1, 1, "", "ShardingStrategy"], [47, 1, 1, "", "StateDictConfig"], [47, 1, 1, "", "StateDictSettings"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "clip_grad_norm_"], [47, 3, 1, "", "flatten_sharded_optim_state_dict"], [47, 3, 1, "", "forward"], [47, 3, 1, "", "fsdp_modules"], [47, 3, 1, "", "full_optim_state_dict"], [47, 3, 1, "", "get_state_dict_type"], [47, 4, 1, "", "module"], [47, 3, 1, "", "named_buffers"], [47, 3, 1, "", "named_parameters"], [47, 3, 1, "", "no_sync"], [47, 3, 1, "", "optim_state_dict"], [47, 3, 1, "", "optim_state_dict_to_load"], [47, 3, 1, "", "register_comm_hook"], [47, 3, 1, "", "rekey_optim_state_dict"], [47, 3, 1, "", "scatter_full_optim_state_dict"], [47, 3, 1, "", "set_state_dict_type"], [47, 3, 1, "", "shard_full_optim_state_dict"], [47, 3, 1, "", "sharded_optim_state_dict"], [47, 3, 1, "", "state_dict_type"], [47, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[24, 0, 0, "-", "api"], [24, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1921, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1921, 3, 1, "", "get_module_rref"], [1921, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[24, 0, 0, "-", "templates"]], "torch.distributed.optim": [[28, 1, 1, "", "DistributedOptimizer"], [28, 1, 1, "", "PostLocalSGDOptimizer"], [28, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[28, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[28, 3, 1, "", "load_state_dict"], [28, 3, 1, "", "state_dict"], [28, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[28, 3, 1, "", "add_param_group"], [28, 3, 1, "", "consolidate_state_dict"], [28, 3, 1, "", "join_hook"], [28, 3, 1, "", "load_state_dict"], [28, 3, 1, "", "state_dict"], [28, 3, 1, "", "step"]], "torch.distributed.pipeline": [[24, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1914, 1, 1, "", "Pipe"], [24, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1914, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1914, 1, 1, "", "pop"], [1914, 5, 1, "", "skippable"], [1914, 1, 1, "", "stash"], [1914, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1921, 1, 1, "", "BackendType"], [1921, 1, 1, "", "PyRRef"], [1921, 1, 1, "", "RpcBackendOptions"], [1921, 1, 1, "", "TensorPipeRpcBackendOptions"], [1921, 1, 1, "", "WorkerInfo"], [1921, 5, 1, "", "get_worker_info"], [1921, 5, 1, "", "init_rpc"], [1921, 5, 1, "", "remote"], [1921, 5, 1, "", "rpc_async"], [1921, 5, 1, "", "rpc_sync"], [1921, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1921, 3, 1, "", "backward"], [1921, 3, 1, "", "confirmed_by_owner"], [1921, 3, 1, "", "is_owner"], [1921, 3, 1, "", "local_value"], [1921, 3, 1, "", "owner"], [1921, 3, 1, "", "owner_name"], [1921, 3, 1, "", "remote"], [1921, 3, 1, "", "rpc_async"], [1921, 3, 1, "", "rpc_sync"], [1921, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1921, 4, 1, "", "init_method"], [1921, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1921, 4, 1, "", "device_maps"], [1921, 4, 1, "", "devices"], [1921, 4, 1, "", "init_method"], [1921, 4, 1, "", "num_worker_threads"], [1921, 4, 1, "", "rpc_timeout"], [1921, 3, 1, "", "set_device_map"], [1921, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1921, 4, 1, "", "id"], [1921, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1921, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[29, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.ddp": [[29, 5, 1, "", "pre_dp_module_transform"]], "torch.distributed.tensor.parallel.fsdp": [[29, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel": [[29, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[29, 1, 1, "", "ColwiseParallel"], [29, 1, 1, "", "PairwiseParallel"], [29, 1, 1, "", "RowwiseParallel"], [29, 1, 1, "", "SequenceParallel"], [29, 5, 1, "", "make_input_replicate_1d"], [29, 5, 1, "", "make_input_reshard_replicate"], [29, 5, 1, "", "make_input_shard_1d"], [29, 5, 1, "", "make_input_shard_1d_last_dim"], [29, 5, 1, "", "make_output_replicate_1d"], [29, 5, 1, "", "make_output_reshard_tensor"], [29, 5, 1, "", "make_output_shard_1d"], [29, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[30, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.beta": [[30, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "concentration0"], [30, 4, 1, "", "concentration1"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.binomial": [[30, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.categorical": [[30, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[30, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.chi2": [[30, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "df"], [30, 3, 1, "", "expand"]], "torch.distributions": [[30, 0, 0, "-", "constraint_registry"], [30, 0, 0, "-", "constraints"], [30, 0, 0, "-", "kl"], [30, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[30, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[30, 3, 1, "", "register"]], "torch.distributions.constraints": [[30, 1, 1, "", "Constraint"], [30, 2, 1, "", "cat"], [30, 2, 1, "", "dependent_property"], [30, 2, 1, "", "greater_than"], [30, 2, 1, "", "greater_than_eq"], [30, 2, 1, "", "half_open_interval"], [30, 2, 1, "", "independent"], [30, 2, 1, "", "integer_interval"], [30, 2, 1, "", "interval"], [30, 2, 1, "", "less_than"], [30, 2, 1, "", "multinomial"], [30, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[30, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[30, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[30, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.distribution": [[30, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[30, 4, 1, "", "arg_constraints"], [30, 4, 1, "", "batch_shape"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 4, 1, "", "event_shape"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "perplexity"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 3, 1, "", "sample_n"], [30, 3, 1, "", "set_default_validate_args"], [30, 4, 1, "", "stddev"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[30, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[30, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[30, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[30, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.gamma": [[30, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.geometric": [[30, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[30, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[30, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[30, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.independent": [[30, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "has_enumerate_support"], [30, 4, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.kl": [[30, 5, 1, "", "kl_divergence"], [30, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[30, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.laplace": [[30, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[30, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"]], "torch.distributions.log_normal": [[30, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "loc"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[30, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[30, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 4, 1, "", "component_distribution"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mixture_distribution"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[30, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 2, 1, "", "total_count"], [30, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[30, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[30, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.normal": [[30, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[30, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.pareto": [[30, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.poisson": [[30, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[30, 1, 1, "", "LogitRelaxedBernoulli"], [30, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "probs"], [30, 2, 1, "", "support"], [30, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[30, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "probs"], [30, 2, 1, "", "support"], [30, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[30, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[30, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"]], "torch.distributions.transforms": [[30, 1, 1, "", "AbsTransform"], [30, 1, 1, "", "AffineTransform"], [30, 1, 1, "", "CatTransform"], [30, 1, 1, "", "ComposeTransform"], [30, 1, 1, "", "CorrCholeskyTransform"], [30, 1, 1, "", "CumulativeDistributionTransform"], [30, 1, 1, "", "ExpTransform"], [30, 1, 1, "", "IndependentTransform"], [30, 1, 1, "", "LowerCholeskyTransform"], [30, 1, 1, "", "PositiveDefiniteTransform"], [30, 1, 1, "", "PowerTransform"], [30, 1, 1, "", "ReshapeTransform"], [30, 1, 1, "", "SigmoidTransform"], [30, 1, 1, "", "SoftmaxTransform"], [30, 1, 1, "", "SoftplusTransform"], [30, 1, 1, "", "StackTransform"], [30, 1, 1, "", "StickBreakingTransform"], [30, 1, 1, "", "TanhTransform"], [30, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[30, 3, 1, "", "forward_shape"], [30, 4, 1, "", "inv"], [30, 3, 1, "", "inverse_shape"], [30, 3, 1, "", "log_abs_det_jacobian"], [30, 4, 1, "", "sign"]], "torch.distributions.uniform": [[30, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[30, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.weibull": [[30, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.wishart": [[30, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.export": [[45, 1, 1, "", "ArgumentKind"], [45, 1, 1, "", "ArgumentSpec"], [45, 1, 1, "", "Constraint"], [45, 5, 1, "", "Dim"], [45, 1, 1, "", "ExportBackwardSignature"], [45, 1, 1, "", "ExportGraphSignature"], [45, 1, 1, "", "ExportedProgram"], [45, 1, 1, "", "ModuleCallEntry"], [45, 1, 1, "", "ModuleCallSignature"], [45, 5, 1, "", "constrain_as_size"], [45, 5, 1, "", "constrain_as_value"], [45, 5, 1, "", "dims"], [45, 5, 1, "", "dynamic_dim"], [45, 5, 1, "", "export"], [45, 5, 1, "", "load"], [45, 5, 1, "", "register_dataclass"], [45, 5, 1, "", "save"]], "torch.export.ExportedProgram": [[45, 3, 1, "", "buffers"], [45, 3, 1, "", "module"], [45, 3, 1, "", "named_buffers"], [45, 3, 1, "", "named_parameters"], [45, 3, 1, "", "parameters"]], "torch.fft": [[1082, 5, 1, "", "fft"], [1083, 5, 1, "", "fft2"], [1084, 5, 1, "", "fftfreq"], [1085, 5, 1, "", "fftn"], [1086, 5, 1, "", "fftshift"], [1087, 5, 1, "", "hfft"], [1088, 5, 1, "", "hfft2"], [1089, 5, 1, "", "hfftn"], [1090, 5, 1, "", "ifft"], [1091, 5, 1, "", "ifft2"], [1092, 5, 1, "", "ifftn"], [1093, 5, 1, "", "ifftshift"], [1094, 5, 1, "", "ihfft"], [1095, 5, 1, "", "ihfft2"], [1096, 5, 1, "", "ihfftn"], [1097, 5, 1, "", "irfft"], [1098, 5, 1, "", "irfft2"], [1099, 5, 1, "", "irfftn"], [1100, 5, 1, "", "rfft"], [1101, 5, 1, "", "rfft2"], [1102, 5, 1, "", "rfftfreq"], [1103, 5, 1, "", "rfftn"]], "torch.func": [[1122, 5, 1, "", "functional_call"], [1123, 5, 1, "", "functionalize"], [1124, 5, 1, "", "grad"], [1125, 5, 1, "", "grad_and_value"], [1126, 5, 1, "", "hessian"], [1127, 5, 1, "", "jacfwd"], [1128, 5, 1, "", "jacrev"], [1129, 5, 1, "", "jvp"], [1130, 5, 1, "", "linearize"], [1131, 5, 1, "", "replace_all_batch_norm_modules_"], [1132, 5, 1, "", "stack_module_state"], [1133, 5, 1, "", "vjp"], [1134, 5, 1, "", "vmap"]], "torch.futures": [[54, 1, 1, "", "Future"], [54, 5, 1, "", "collect_all"], [54, 5, 1, "", "wait_all"]], "torch.futures.Future": [[54, 3, 1, "", "add_done_callback"], [54, 3, 1, "", "done"], [54, 3, 1, "", "set_exception"], [54, 3, 1, "", "set_result"], [54, 3, 1, "", "then"], [54, 3, 1, "", "value"], [54, 3, 1, "", "wait"]], "torch.fx": [[55, 1, 1, "", "Graph"], [55, 1, 1, "", "GraphModule"], [55, 1, 1, "", "Interpreter"], [55, 1, 1, "", "Node"], [55, 1, 1, "", "Proxy"], [55, 1, 1, "", "Tracer"], [55, 1, 1, "", "Transformer"], [55, 0, 0, "-", "experimental"], [55, 0, 0, "-", "passes"], [55, 5, 1, "", "replace_pattern"], [55, 5, 1, "", "symbolic_trace"], [55, 5, 1, "", "wrap"]], "torch.fx.Graph": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "call_function"], [55, 3, 1, "", "call_method"], [55, 3, 1, "", "call_module"], [55, 3, 1, "", "create_node"], [55, 3, 1, "", "eliminate_dead_code"], [55, 3, 1, "", "erase_node"], [55, 3, 1, "", "get_attr"], [55, 3, 1, "", "graph_copy"], [55, 3, 1, "", "inserting_after"], [55, 3, 1, "", "inserting_before"], [55, 3, 1, "", "lint"], [55, 3, 1, "", "node_copy"], [55, 4, 1, "", "nodes"], [55, 3, 1, "", "on_generate_code"], [55, 3, 1, "", "output"], [55, 3, 1, "", "placeholder"], [55, 3, 1, "", "print_tabular"], [55, 3, 1, "", "process_inputs"], [55, 3, 1, "", "process_outputs"], [55, 3, 1, "", "python_code"], [55, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "add_submodule"], [55, 4, 1, "", "code"], [55, 3, 1, "", "delete_all_unused_submodules"], [55, 3, 1, "", "delete_submodule"], [55, 4, 1, "", "graph"], [55, 3, 1, "", "print_readable"], [55, 3, 1, "", "recompile"], [55, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[55, 3, 1, "", "boxed_run"], [55, 3, 1, "", "call_function"], [55, 3, 1, "", "call_method"], [55, 3, 1, "", "call_module"], [55, 3, 1, "", "fetch_args_kwargs_from_env"], [55, 3, 1, "", "fetch_attr"], [55, 3, 1, "", "get_attr"], [55, 3, 1, "", "map_nodes_to_values"], [55, 3, 1, "", "output"], [55, 3, 1, "", "placeholder"], [55, 3, 1, "", "run"], [55, 3, 1, "", "run_node"]], "torch.fx.Node": [[55, 4, 1, "", "all_input_nodes"], [55, 3, 1, "", "append"], [55, 4, 1, "", "args"], [55, 3, 1, "", "format_node"], [55, 3, 1, "", "is_impure"], [55, 4, 1, "", "kwargs"], [55, 4, 1, "", "next"], [55, 3, 1, "", "normalized_arguments"], [55, 3, 1, "", "prepend"], [55, 4, 1, "", "prev"], [55, 3, 1, "", "replace_all_uses_with"], [55, 3, 1, "", "replace_input_with"], [55, 4, 1, "", "stack_trace"], [55, 3, 1, "", "update_arg"], [55, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[55, 3, 1, "", "call_module"], [55, 3, 1, "", "create_arg"], [55, 3, 1, "", "create_args_for_root"], [55, 3, 1, "", "create_node"], [55, 3, 1, "", "create_proxy"], [55, 3, 1, "", "getattr"], [55, 3, 1, "", "is_leaf_module"], [55, 3, 1, "", "iter"], [55, 3, 1, "", "keys"], [55, 3, 1, "", "path_of_module"], [55, 3, 1, "", "proxy"], [55, 3, 1, "", "to_bool"], [55, 3, 1, "", "trace"]], "torch.fx.Transformer": [[55, 3, 1, "", "call_function"], [55, 3, 1, "", "call_module"], [55, 3, 1, "", "get_attr"], [55, 3, 1, "", "placeholder"], [55, 3, 1, "", "transform"]], "torch.fx.experimental": [[55, 0, 0, "-", "migrate_gradual_types"], [55, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[55, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[55, 0, 0, "-", "backends"], [55, 0, 0, "-", "dialect"], [55, 0, 0, "-", "infra"], [55, 0, 0, "-", "tests"], [55, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[55, 0, 0, "-", "common"]], "torch.hub": [[1864, 5, 1, "", "download_url_to_file"], [1864, 5, 1, "", "get_dir"], [1864, 5, 1, "", "help"], [1864, 5, 1, "", "list"], [1864, 5, 1, "", "load"], [1864, 5, 1, "", "load_state_dict_from_url"], [1864, 5, 1, "", "set_dir"]], "torch.jit": [[1191, 1, 1, "", "Attribute"], [1192, 1, 1, "", "ScriptFunction"], [1193, 1, 1, "", "ScriptModule"], [1194, 5, 1, "", "annotate"], [1195, 5, 1, "", "enable_onednn_fusion"], [1866, 5, 1, "", "export"], [1196, 5, 1, "", "fork"], [1197, 5, 1, "", "freeze"], [1198, 5, 1, "", "ignore"], [1199, 5, 1, "", "interface"], [1868, 5, 1, "", "is_scripting"], [1868, 5, 1, "", "is_tracing"], [1200, 5, 1, "", "isinstance"], [1201, 5, 1, "", "load"], [1866, 0, 0, "-", "mobile"], [1202, 5, 1, "", "onednn_fusion_enabled"], [1203, 5, 1, "", "optimize_for_inference"], [1204, 5, 1, "", "save"], [1205, 5, 1, "", "script"], [1206, 5, 1, "", "script_if_tracing"], [1207, 5, 1, "", "set_fusion_strategy"], [1208, 1, 1, "", "strict_fusion"], [1867, 0, 0, "-", "supported_ops"], [1209, 5, 1, "", "trace"], [1210, 5, 1, "", "trace_module"], [1871, 0, 0, "-", "unsupported_tensor_ops"], [1211, 5, 1, "", "unused"], [1212, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1191, 3, 1, "", "count"], [1191, 3, 1, "", "index"], [1191, 2, 1, "", "type"], [1191, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1192, 3, 1, "", "get_debug_state"], [1192, 3, 1, "", "save"], [1192, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1193, 3, 1, "", "add_module"], [1193, 3, 1, "", "apply"], [1193, 3, 1, "", "bfloat16"], [1193, 3, 1, "", "buffers"], [1193, 3, 1, "", "children"], [1193, 4, 1, "", "code"], [1193, 4, 1, "", "code_with_constants"], [1193, 3, 1, "", "compile"], [1193, 3, 1, "", "cpu"], [1193, 3, 1, "", "cuda"], [1193, 3, 1, "", "double"], [1193, 3, 1, "", "eval"], [1193, 3, 1, "", "extra_repr"], [1193, 3, 1, "", "float"], [1193, 3, 1, "", "get_buffer"], [1193, 3, 1, "", "get_extra_state"], [1193, 3, 1, "", "get_parameter"], [1193, 3, 1, "", "get_submodule"], [1193, 4, 1, "", "graph"], [1193, 3, 1, "", "half"], [1193, 4, 1, "", "inlined_graph"], [1193, 3, 1, "", "ipu"], [1193, 3, 1, "", "load_state_dict"], [1193, 3, 1, "", "modules"], [1193, 3, 1, "", "named_buffers"], [1193, 3, 1, "", "named_children"], [1193, 3, 1, "", "named_modules"], [1193, 3, 1, "", "named_parameters"], [1193, 3, 1, "", "parameters"], [1193, 3, 1, "", "register_backward_hook"], [1193, 3, 1, "", "register_buffer"], [1193, 3, 1, "", "register_forward_hook"], [1193, 3, 1, "", "register_forward_pre_hook"], [1193, 3, 1, "", "register_full_backward_hook"], [1193, 3, 1, "", "register_full_backward_pre_hook"], [1193, 3, 1, "", "register_load_state_dict_post_hook"], [1193, 3, 1, "", "register_module"], [1193, 3, 1, "", "register_parameter"], [1193, 3, 1, "", "register_state_dict_pre_hook"], [1193, 3, 1, "", "requires_grad_"], [1193, 3, 1, "", "save"], [1193, 3, 1, "", "set_extra_state"], [1193, 3, 1, "", "share_memory"], [1193, 3, 1, "", "state_dict"], [1193, 3, 1, "", "to"], [1193, 3, 1, "", "to_empty"], [1193, 3, 1, "", "train"], [1193, 3, 1, "", "type"], [1193, 3, 1, "", "xpu"], [1193, 3, 1, "", "zero_grad"]], "torch.library": [[1873, 1, 1, "", "Library"], [1873, 5, 1, "", "fallthrough_kernel"]], "torch.library.Library": [[1873, 3, 1, "", "define"], [1873, 3, 1, "", "impl"]], "torch.linalg": [[1223, 5, 1, "", "cholesky"], [1224, 5, 1, "", "cholesky_ex"], [1225, 5, 1, "", "cond"], [1226, 5, 1, "", "cross"], [1227, 5, 1, "", "det"], [1228, 5, 1, "", "diagonal"], [1229, 5, 1, "", "eig"], [1230, 5, 1, "", "eigh"], [1231, 5, 1, "", "eigvals"], [1232, 5, 1, "", "eigvalsh"], [1233, 5, 1, "", "householder_product"], [1234, 5, 1, "", "inv"], [1235, 5, 1, "", "inv_ex"], [1236, 5, 1, "", "ldl_factor"], [1237, 5, 1, "", "ldl_factor_ex"], [1238, 5, 1, "", "ldl_solve"], [1239, 5, 1, "", "lstsq"], [1240, 5, 1, "", "lu"], [1241, 5, 1, "", "lu_factor"], [1242, 5, 1, "", "lu_factor_ex"], [1243, 5, 1, "", "lu_solve"], [1244, 5, 1, "", "matmul"], [1245, 5, 1, "", "matrix_exp"], [1246, 5, 1, "", "matrix_norm"], [1247, 5, 1, "", "matrix_power"], [1248, 5, 1, "", "matrix_rank"], [1249, 5, 1, "", "multi_dot"], [1250, 5, 1, "", "norm"], [1251, 5, 1, "", "pinv"], [1252, 5, 1, "", "qr"], [1253, 5, 1, "", "slogdet"], [1254, 5, 1, "", "solve"], [1255, 5, 1, "", "solve_ex"], [1256, 5, 1, "", "solve_triangular"], [1257, 5, 1, "", "svd"], [1258, 5, 1, "", "svdvals"], [1259, 5, 1, "", "tensorinv"], [1260, 5, 1, "", "tensorsolve"], [1261, 5, 1, "", "vander"], [1262, 5, 1, "", "vecdot"], [1263, 5, 1, "", "vector_norm"]], "torch.masked": [[1876, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1879, 1, 1, "", "Aggregation"], [1879, 1, 1, "", "Event"], [1879, 1, 1, "", "EventHandlerHandle"], [1879, 1, 1, "", "Stat"], [1879, 1, 1, "", "TensorboardEventHandler"], [1879, 1, 1, "", "data_value_t"], [1879, 5, 1, "", "log_event"], [1879, 5, 1, "", "register_event_handler"], [1879, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1879, 4, 1, "", "name"]], "torch.monitor.Event": [[1879, 3, 1, "", "__init__"], [1879, 4, 1, "", "data"], [1879, 4, 1, "", "name"], [1879, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1879, 3, 1, "", "__init__"], [1879, 3, 1, "", "add"], [1879, 4, 1, "", "count"], [1879, 3, 1, "", "get"], [1879, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1879, 3, 1, "", "__init__"]], "torch.mps": [[1302, 5, 1, "", "current_allocated_memory"], [1303, 5, 1, "", "driver_allocated_memory"], [1304, 5, 1, "", "empty_cache"], [1306, 5, 1, "", "get_rng_state"], [1307, 5, 1, "", "manual_seed"], [1311, 5, 1, "", "seed"], [1312, 5, 1, "", "set_per_process_memory_fraction"], [1313, 5, 1, "", "set_rng_state"], [1314, 5, 1, "", "synchronize"]], "torch.mps.event": [[1305, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1305, 3, 1, "", "elapsed_time"], [1305, 3, 1, "", "query"], [1305, 3, 1, "", "record"], [1305, 3, 1, "", "synchronize"], [1305, 3, 1, "", "wait"]], "torch.mps.profiler": [[1308, 5, 1, "", "profile"], [1309, 5, 1, "", "start"], [1310, 5, 1, "", "stop"]], "torch.multiprocessing": [[1881, 1, 1, "", "SpawnContext"], [1881, 5, 1, "", "get_all_sharing_strategies"], [1881, 5, 1, "", "get_sharing_strategy"], [1881, 5, 1, "", "set_sharing_strategy"], [1881, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1881, 3, 1, "", "join"]], "torch.nested": [[1884, 5, 1, "", "as_nested_tensor"], [1884, 5, 1, "", "nested_tensor"], [1884, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1332, 1, 1, "", "AdaptiveAvgPool1d"], [1333, 1, 1, "", "AdaptiveAvgPool2d"], [1334, 1, 1, "", "AdaptiveAvgPool3d"], [1335, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1336, 1, 1, "", "AdaptiveMaxPool1d"], [1337, 1, 1, "", "AdaptiveMaxPool2d"], [1338, 1, 1, "", "AdaptiveMaxPool3d"], [1339, 1, 1, "", "AlphaDropout"], [1340, 1, 1, "", "AvgPool1d"], [1341, 1, 1, "", "AvgPool2d"], [1342, 1, 1, "", "AvgPool3d"], [1343, 1, 1, "", "BCELoss"], [1344, 1, 1, "", "BCEWithLogitsLoss"], [1345, 1, 1, "", "BatchNorm1d"], [1346, 1, 1, "", "BatchNorm2d"], [1347, 1, 1, "", "BatchNorm3d"], [1348, 1, 1, "", "Bilinear"], [1349, 1, 1, "", "CELU"], [1350, 1, 1, "", "CTCLoss"], [1351, 1, 1, "", "ChannelShuffle"], [1352, 1, 1, "", "ConstantPad1d"], [1353, 1, 1, "", "ConstantPad2d"], [1354, 1, 1, "", "ConstantPad3d"], [1355, 1, 1, "", "Conv1d"], [1356, 1, 1, "", "Conv2d"], [1357, 1, 1, "", "Conv3d"], [1358, 1, 1, "", "ConvTranspose1d"], [1359, 1, 1, "", "ConvTranspose2d"], [1360, 1, 1, "", "ConvTranspose3d"], [1361, 1, 1, "", "CosineEmbeddingLoss"], [1362, 1, 1, "", "CosineSimilarity"], [1363, 1, 1, "", "CrossEntropyLoss"], [1364, 1, 1, "", "DataParallel"], [1365, 1, 1, "", "Dropout"], [1366, 1, 1, "", "Dropout1d"], [1367, 1, 1, "", "Dropout2d"], [1368, 1, 1, "", "Dropout3d"], [1369, 1, 1, "", "ELU"], [1370, 1, 1, "", "Embedding"], [1371, 1, 1, "", "EmbeddingBag"], [1372, 1, 1, "", "FeatureAlphaDropout"], [1373, 1, 1, "", "Flatten"], [1374, 1, 1, "", "Fold"], [1375, 1, 1, "", "FractionalMaxPool2d"], [1376, 1, 1, "", "FractionalMaxPool3d"], [1377, 1, 1, "", "GELU"], [1378, 1, 1, "", "GLU"], [1379, 1, 1, "", "GRU"], [1380, 1, 1, "", "GRUCell"], [1381, 1, 1, "", "GaussianNLLLoss"], [1382, 1, 1, "", "GroupNorm"], [1383, 1, 1, "", "Hardshrink"], [1384, 1, 1, "", "Hardsigmoid"], [1385, 1, 1, "", "Hardswish"], [1386, 1, 1, "", "Hardtanh"], [1387, 1, 1, "", "HingeEmbeddingLoss"], [1388, 1, 1, "", "HuberLoss"], [1389, 1, 1, "", "Identity"], [1390, 1, 1, "", "InstanceNorm1d"], [1391, 1, 1, "", "InstanceNorm2d"], [1392, 1, 1, "", "InstanceNorm3d"], [1393, 1, 1, "", "KLDivLoss"], [1394, 1, 1, "", "L1Loss"], [1395, 1, 1, "", "LPPool1d"], [1396, 1, 1, "", "LPPool2d"], [1397, 1, 1, "", "LSTM"], [1398, 1, 1, "", "LSTMCell"], [1399, 1, 1, "", "LayerNorm"], [1400, 1, 1, "", "LazyBatchNorm1d"], [1401, 1, 1, "", "LazyBatchNorm2d"], [1402, 1, 1, "", "LazyBatchNorm3d"], [1403, 1, 1, "", "LazyConv1d"], [1404, 1, 1, "", "LazyConv2d"], [1405, 1, 1, "", "LazyConv3d"], [1406, 1, 1, "", "LazyConvTranspose1d"], [1407, 1, 1, "", "LazyConvTranspose2d"], [1408, 1, 1, "", "LazyConvTranspose3d"], [1409, 1, 1, "", "LazyInstanceNorm1d"], [1410, 1, 1, "", "LazyInstanceNorm2d"], [1411, 1, 1, "", "LazyInstanceNorm3d"], [1412, 1, 1, "", "LazyLinear"], [1413, 1, 1, "", "LeakyReLU"], [1414, 1, 1, "", "Linear"], [1415, 1, 1, "", "LocalResponseNorm"], [1416, 1, 1, "", "LogSigmoid"], [1417, 1, 1, "", "LogSoftmax"], [1418, 1, 1, "", "MSELoss"], [1419, 1, 1, "", "MarginRankingLoss"], [1420, 1, 1, "", "MaxPool1d"], [1421, 1, 1, "", "MaxPool2d"], [1422, 1, 1, "", "MaxPool3d"], [1423, 1, 1, "", "MaxUnpool1d"], [1424, 1, 1, "", "MaxUnpool2d"], [1425, 1, 1, "", "MaxUnpool3d"], [1426, 1, 1, "", "Mish"], [1427, 1, 1, "", "Module"], [1428, 1, 1, "", "ModuleDict"], [1429, 1, 1, "", "ModuleList"], [1430, 1, 1, "", "MultiLabelMarginLoss"], [1431, 1, 1, "", "MultiLabelSoftMarginLoss"], [1432, 1, 1, "", "MultiMarginLoss"], [1433, 1, 1, "", "MultiheadAttention"], [1434, 1, 1, "", "NLLLoss"], [1435, 1, 1, "", "PReLU"], [1436, 1, 1, "", "PairwiseDistance"], [1437, 1, 1, "", "ParameterDict"], [1438, 1, 1, "", "ParameterList"], [1439, 1, 1, "", "PixelShuffle"], [1440, 1, 1, "", "PixelUnshuffle"], [1441, 1, 1, "", "PoissonNLLLoss"], [1442, 1, 1, "", "RNN"], [1443, 1, 1, "", "RNNBase"], [1444, 1, 1, "", "RNNCell"], [1445, 1, 1, "", "RReLU"], [1446, 1, 1, "", "ReLU"], [1447, 1, 1, "", "ReLU6"], [1448, 1, 1, "", "ReflectionPad1d"], [1449, 1, 1, "", "ReflectionPad2d"], [1450, 1, 1, "", "ReflectionPad3d"], [1451, 1, 1, "", "ReplicationPad1d"], [1452, 1, 1, "", "ReplicationPad2d"], [1453, 1, 1, "", "ReplicationPad3d"], [1454, 1, 1, "", "SELU"], [1455, 1, 1, "", "Sequential"], [1456, 1, 1, "", "SiLU"], [1457, 1, 1, "", "Sigmoid"], [1458, 1, 1, "", "SmoothL1Loss"], [1459, 1, 1, "", "SoftMarginLoss"], [1460, 1, 1, "", "Softmax"], [1461, 1, 1, "", "Softmax2d"], [1462, 1, 1, "", "Softmin"], [1463, 1, 1, "", "Softplus"], [1464, 1, 1, "", "Softshrink"], [1465, 1, 1, "", "Softsign"], [1466, 1, 1, "", "SyncBatchNorm"], [1467, 1, 1, "", "Tanh"], [1468, 1, 1, "", "Tanhshrink"], [1469, 1, 1, "", "Threshold"], [1470, 1, 1, "", "Transformer"], [1471, 1, 1, "", "TransformerDecoder"], [1472, 1, 1, "", "TransformerDecoderLayer"], [1473, 1, 1, "", "TransformerEncoder"], [1474, 1, 1, "", "TransformerEncoderLayer"], [1475, 1, 1, "", "TripletMarginLoss"], [1476, 1, 1, "", "TripletMarginWithDistanceLoss"], [1477, 1, 1, "", "Unflatten"], [1478, 1, 1, "", "Unfold"], [1479, 1, 1, "", "Upsample"], [1480, 1, 1, "", "UpsamplingBilinear2d"], [1481, 1, 1, "", "UpsamplingNearest2d"], [1482, 1, 1, "", "ZeroPad1d"], [1483, 1, 1, "", "ZeroPad2d"], [1484, 1, 1, "", "ZeroPad3d"], [1885, 0, 0, "-", "backends"], [1919, 0, 0, "-", "intrinsic"], [1885, 0, 0, "-", "modules"], [1885, 0, 0, "-", "parallel"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantizable"], [1919, 0, 0, "-", "quantized"], [1885, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1335, 3, 1, "", "log_prob"], [1335, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1370, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1371, 3, 1, "", "forward"], [1371, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1427, 3, 1, "", "add_module"], [1427, 3, 1, "", "apply"], [1427, 3, 1, "", "bfloat16"], [1427, 3, 1, "", "buffers"], [1427, 3, 1, "", "children"], [1427, 3, 1, "", "compile"], [1427, 3, 1, "", "cpu"], [1427, 3, 1, "", "cuda"], [1427, 3, 1, "", "double"], [1427, 3, 1, "", "eval"], [1427, 3, 1, "", "extra_repr"], [1427, 3, 1, "", "float"], [1427, 3, 1, "", "forward"], [1427, 3, 1, "", "get_buffer"], [1427, 3, 1, "", "get_extra_state"], [1427, 3, 1, "", "get_parameter"], [1427, 3, 1, "", "get_submodule"], [1427, 3, 1, "", "half"], [1427, 3, 1, "", "ipu"], [1427, 3, 1, "", "load_state_dict"], [1427, 3, 1, "", "modules"], [1427, 3, 1, "", "named_buffers"], [1427, 3, 1, "", "named_children"], [1427, 3, 1, "", "named_modules"], [1427, 3, 1, "", "named_parameters"], [1427, 3, 1, "", "parameters"], [1427, 3, 1, "", "register_backward_hook"], [1427, 3, 1, "", "register_buffer"], [1427, 3, 1, "", "register_forward_hook"], [1427, 3, 1, "", "register_forward_pre_hook"], [1427, 3, 1, "", "register_full_backward_hook"], [1427, 3, 1, "", "register_full_backward_pre_hook"], [1427, 3, 1, "", "register_load_state_dict_post_hook"], [1427, 3, 1, "", "register_module"], [1427, 3, 1, "", "register_parameter"], [1427, 3, 1, "", "register_state_dict_pre_hook"], [1427, 3, 1, "", "requires_grad_"], [1427, 3, 1, "", "set_extra_state"], [1427, 3, 1, "", "share_memory"], [1427, 3, 1, "", "state_dict"], [1427, 3, 1, "", "to"], [1427, 3, 1, "", "to_empty"], [1427, 3, 1, "", "train"], [1427, 3, 1, "", "type"], [1427, 3, 1, "", "xpu"], [1427, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1428, 3, 1, "", "clear"], [1428, 3, 1, "", "items"], [1428, 3, 1, "", "keys"], [1428, 3, 1, "", "pop"], [1428, 3, 1, "", "update"], [1428, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1429, 3, 1, "", "append"], [1429, 3, 1, "", "extend"], [1429, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1433, 3, 1, "", "forward"], [1433, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1437, 3, 1, "", "clear"], [1437, 3, 1, "", "copy"], [1437, 3, 1, "", "fromkeys"], [1437, 3, 1, "", "get"], [1437, 3, 1, "", "items"], [1437, 3, 1, "", "keys"], [1437, 3, 1, "", "pop"], [1437, 3, 1, "", "popitem"], [1437, 3, 1, "", "setdefault"], [1437, 3, 1, "", "update"], [1437, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1438, 3, 1, "", "append"], [1438, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1443, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1455, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1466, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1470, 3, 1, "", "forward"], [1470, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1471, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1472, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1473, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1474, 3, 1, "", "forward"]], "torch.nn.functional": [[1485, 5, 1, "", "adaptive_avg_pool1d"], [1486, 5, 1, "", "adaptive_avg_pool2d"], [1487, 5, 1, "", "adaptive_avg_pool3d"], [1488, 5, 1, "", "adaptive_max_pool1d"], [1489, 5, 1, "", "adaptive_max_pool2d"], [1490, 5, 1, "", "adaptive_max_pool3d"], [1491, 5, 1, "", "affine_grid"], [1492, 5, 1, "", "alpha_dropout"], [1493, 5, 1, "", "avg_pool1d"], [1494, 5, 1, "", "avg_pool2d"], [1495, 5, 1, "", "avg_pool3d"], [1496, 5, 1, "", "batch_norm"], [1497, 5, 1, "", "bilinear"], [1498, 5, 1, "", "binary_cross_entropy"], [1499, 5, 1, "", "binary_cross_entropy_with_logits"], [1500, 5, 1, "", "celu"], [1501, 5, 1, "", "conv1d"], [1502, 5, 1, "", "conv2d"], [1503, 5, 1, "", "conv3d"], [1504, 5, 1, "", "conv_transpose1d"], [1505, 5, 1, "", "conv_transpose2d"], [1506, 5, 1, "", "conv_transpose3d"], [1507, 5, 1, "", "cosine_embedding_loss"], [1508, 5, 1, "", "cosine_similarity"], [1509, 5, 1, "", "cross_entropy"], [1510, 5, 1, "", "ctc_loss"], [1511, 5, 1, "", "dropout"], [1512, 5, 1, "", "dropout1d"], [1513, 5, 1, "", "dropout2d"], [1514, 5, 1, "", "dropout3d"], [1515, 5, 1, "", "elu"], [1516, 5, 1, "", "elu_"], [1517, 5, 1, "", "embedding"], [1518, 5, 1, "", "embedding_bag"], [1519, 5, 1, "", "feature_alpha_dropout"], [1520, 5, 1, "", "fold"], [1521, 5, 1, "", "fractional_max_pool2d"], [1522, 5, 1, "", "fractional_max_pool3d"], [1523, 5, 1, "", "gaussian_nll_loss"], [1524, 5, 1, "", "gelu"], [1525, 5, 1, "", "glu"], [1526, 5, 1, "", "grid_sample"], [1527, 5, 1, "", "group_norm"], [1528, 5, 1, "", "gumbel_softmax"], [1529, 5, 1, "", "hardshrink"], [1530, 5, 1, "", "hardsigmoid"], [1531, 5, 1, "", "hardswish"], [1532, 5, 1, "", "hardtanh"], [1533, 5, 1, "", "hardtanh_"], [1534, 5, 1, "", "hinge_embedding_loss"], [1535, 5, 1, "", "huber_loss"], [1536, 5, 1, "", "instance_norm"], [1537, 5, 1, "", "interpolate"], [1538, 5, 1, "", "kl_div"], [1539, 5, 1, "", "l1_loss"], [1540, 5, 1, "", "layer_norm"], [1541, 5, 1, "", "leaky_relu"], [1542, 5, 1, "", "leaky_relu_"], [1543, 5, 1, "", "linear"], [1544, 5, 1, "", "local_response_norm"], [1545, 5, 1, "", "log_softmax"], [1546, 5, 1, "", "logsigmoid"], [1547, 5, 1, "", "lp_pool1d"], [1548, 5, 1, "", "lp_pool2d"], [1549, 5, 1, "", "margin_ranking_loss"], [1550, 5, 1, "", "max_pool1d"], [1551, 5, 1, "", "max_pool2d"], [1552, 5, 1, "", "max_pool3d"], [1553, 5, 1, "", "max_unpool1d"], [1554, 5, 1, "", "max_unpool2d"], [1555, 5, 1, "", "max_unpool3d"], [1556, 5, 1, "", "mish"], [1557, 5, 1, "", "mse_loss"], [1558, 5, 1, "", "multi_margin_loss"], [1559, 5, 1, "", "multilabel_margin_loss"], [1560, 5, 1, "", "multilabel_soft_margin_loss"], [1561, 5, 1, "", "nll_loss"], [1562, 5, 1, "", "normalize"], [1563, 5, 1, "", "one_hot"], [1564, 5, 1, "", "pad"], [1565, 5, 1, "", "pairwise_distance"], [1566, 5, 1, "", "pdist"], [1567, 5, 1, "", "pixel_shuffle"], [1568, 5, 1, "", "pixel_unshuffle"], [1569, 5, 1, "", "poisson_nll_loss"], [1570, 5, 1, "", "prelu"], [1571, 5, 1, "", "relu"], [1572, 5, 1, "", "relu6"], [1573, 5, 1, "", "relu_"], [1574, 5, 1, "", "rrelu"], [1575, 5, 1, "", "rrelu_"], [1576, 5, 1, "", "scaled_dot_product_attention"], [1577, 5, 1, "", "selu"], [1578, 5, 1, "", "sigmoid"], [1579, 5, 1, "", "silu"], [1580, 5, 1, "", "smooth_l1_loss"], [1581, 5, 1, "", "soft_margin_loss"], [1582, 5, 1, "", "softmax"], [1583, 5, 1, "", "softmin"], [1584, 5, 1, "", "softplus"], [1585, 5, 1, "", "softshrink"], [1586, 5, 1, "", "softsign"], [1587, 5, 1, "", "tanh"], [1588, 5, 1, "", "tanhshrink"], [1589, 5, 1, "", "threshold"], [1590, 5, 1, "", "threshold_"], [1592, 5, 1, "", "triplet_margin_loss"], [1593, 5, 1, "", "triplet_margin_with_distance_loss"], [1594, 5, 1, "", "unfold"], [1595, 5, 1, "", "upsample"], [1596, 5, 1, "", "upsample_bilinear"], [1597, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1887, 5, 1, "", "calculate_gain"], [1887, 5, 1, "", "constant_"], [1887, 5, 1, "", "dirac_"], [1887, 5, 1, "", "eye_"], [1887, 5, 1, "", "kaiming_normal_"], [1887, 5, 1, "", "kaiming_uniform_"], [1887, 5, 1, "", "normal_"], [1887, 5, 1, "", "ones_"], [1887, 5, 1, "", "orthogonal_"], [1887, 5, 1, "", "sparse_"], [1887, 5, 1, "", "trunc_normal_"], [1887, 5, 1, "", "uniform_"], [1887, 5, 1, "", "xavier_normal_"], [1887, 5, 1, "", "xavier_uniform_"], [1887, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1919, 0, 0, "-", "modules"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1919, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1598, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1598, 3, 1, "", "has_uninitialized_params"], [1598, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1599, 5, 1, "", "register_module_backward_hook"], [1600, 5, 1, "", "register_module_buffer_registration_hook"], [1601, 5, 1, "", "register_module_forward_hook"], [1602, 5, 1, "", "register_module_forward_pre_hook"], [1603, 5, 1, "", "register_module_full_backward_hook"], [1604, 5, 1, "", "register_module_full_backward_pre_hook"], [1605, 5, 1, "", "register_module_module_registration_hook"], [1606, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1607, 1, 1, "", "DistributedDataParallel"], [1591, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1607, 3, 1, "", "join"], [1607, 3, 1, "", "join_hook"], [1607, 3, 1, "", "no_sync"], [1607, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1608, 1, 1, "", "Parameter"], [1609, 1, 1, "", "UninitializedBuffer"], [1610, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1610, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1919, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.utils": [[1611, 5, 1, "", "clip_grad_norm_"], [1612, 5, 1, "", "clip_grad_value_"], [1613, 5, 1, "", "parameters_to_vector"], [1638, 5, 1, "", "remove_spectral_norm"], [1639, 5, 1, "", "remove_weight_norm"], [1647, 5, 1, "", "skip_init"], [1648, 5, 1, "", "spectral_norm"], [1885, 0, 0, "-", "stateless"], [1650, 5, 1, "", "vector_to_parameters"], [1651, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1614, 5, 1, "", "orthogonal"], [1615, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1616, 1, 1, "", "ParametrizationList"], [1617, 5, 1, "", "cached"], [1618, 5, 1, "", "is_parametrized"], [1619, 5, 1, "", "register_parametrization"], [1620, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1616, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1621, 1, 1, "", "BasePruningMethod"], [1622, 1, 1, "", "CustomFromMask"], [1623, 1, 1, "", "Identity"], [1624, 1, 1, "", "L1Unstructured"], [1625, 1, 1, "", "LnStructured"], [1626, 1, 1, "", "PruningContainer"], [1627, 1, 1, "", "RandomStructured"], [1628, 1, 1, "", "RandomUnstructured"], [1629, 5, 1, "", "custom_from_mask"], [1630, 5, 1, "", "global_unstructured"], [1631, 5, 1, "", "identity"], [1632, 5, 1, "", "is_pruned"], [1633, 5, 1, "", "l1_unstructured"], [1634, 5, 1, "", "ln_structured"], [1635, 5, 1, "", "random_structured"], [1636, 5, 1, "", "random_unstructured"], [1637, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1621, 3, 1, "", "apply"], [1621, 3, 1, "", "apply_mask"], [1621, 3, 1, "", "compute_mask"], [1621, 3, 1, "", "prune"], [1621, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1622, 3, 1, "", "apply"], [1622, 3, 1, "", "apply_mask"], [1622, 3, 1, "", "prune"], [1622, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1623, 3, 1, "", "apply"], [1623, 3, 1, "", "apply_mask"], [1623, 3, 1, "", "prune"], [1623, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "compute_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1626, 3, 1, "", "add_pruning_method"], [1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "compute_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1627, 3, 1, "", "apply"], [1627, 3, 1, "", "apply_mask"], [1627, 3, 1, "", "compute_mask"], [1627, 3, 1, "", "prune"], [1627, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1640, 1, 1, "", "PackedSequence"], [1641, 5, 1, "", "pack_padded_sequence"], [1642, 5, 1, "", "pack_sequence"], [1643, 5, 1, "", "pad_packed_sequence"], [1644, 5, 1, "", "pad_sequence"], [1645, 5, 1, "", "unpack_sequence"], [1646, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1640, 2, 1, "", "batch_sizes"], [1640, 3, 1, "", "count"], [1640, 2, 1, "", "data"], [1640, 3, 1, "", "index"], [1640, 4, 1, "", "is_cuda"], [1640, 3, 1, "", "is_pinned"], [1640, 2, 1, "", "sorted_indices"], [1640, 3, 1, "", "to"], [1640, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1649, 5, 1, "", "functional_call"]], "torch.onnx": [[1908, 1, 1, "", "DiagnosticOptions"], [1908, 1, 1, "", "ExportOptions"], [1908, 1, 1, "", "ExportOutput"], [1908, 1, 1, "", "ExportOutputSerializer"], [1660, 1, 1, "", "JitScalarType"], [1908, 1, 1, "", "OnnxExporterError"], [1908, 1, 1, "", "OnnxRegistry"], [1910, 5, 1, "", "disable_log"], [1908, 5, 1, "", "dynamo_export"], [1908, 5, 1, "", "enable_fake_mode"], [1910, 5, 1, "", "enable_log"], [1910, 5, 1, "", "export"], [1910, 5, 1, "", "export_to_pretty_string"], [1910, 5, 1, "", "is_in_onnx_export"], [1909, 5, 1, "", "is_onnxrt_backend_supported"], [1910, 5, 1, "", "register_custom_op_symbolic"], [1910, 5, 1, "", "select_model_mode_for_export"], [1910, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1908, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1908, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1908, 4, 1, "", "diagnostic_context"], [1908, 4, 1, "", "fake_context"], [1908, 4, 1, "", "model_proto"], [1908, 3, 1, "", "save"], [1908, 3, 1, "", "save_diagnostics"]], "torch.onnx.ExportOutputSerializer": [[1908, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1660, 3, 1, "", "dtype"], [1660, 3, 1, "", "from_dtype"], [1660, 3, 1, "", "from_value"], [1660, 3, 1, "", "onnx_compatible"], [1660, 3, 1, "", "onnx_type"], [1660, 3, 1, "", "scalar_name"], [1660, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1908, 3, 1, "", "get_op_functions"], [1908, 3, 1, "", "is_registered_op"], [1908, 4, 1, "", "opset_version"], [1908, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1661, 1, 1, "", "GraphInfo"], [1662, 1, 1, "", "VerificationOptions"], [1910, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1661, 3, 1, "", "all_mismatch_leaf_graph_info"], [1661, 3, 1, "", "clear"], [1661, 3, 1, "", "essential_node_count"], [1661, 3, 1, "", "essential_node_kinds"], [1661, 3, 1, "", "export_repro"], [1661, 3, 1, "", "find_mismatch"], [1661, 3, 1, "", "find_partition"], [1661, 3, 1, "", "has_mismatch"], [1661, 3, 1, "", "pretty_print_mismatch"], [1661, 3, 1, "", "pretty_print_tree"], [1661, 3, 1, "", "verify_export"]], "torch.optim": [[1663, 1, 1, "", "ASGD"], [1664, 1, 1, "", "Adadelta"], [1665, 1, 1, "", "Adagrad"], [1666, 1, 1, "", "Adam"], [1667, 1, 1, "", "AdamW"], [1668, 1, 1, "", "Adamax"], [1669, 1, 1, "", "LBFGS"], [1670, 1, 1, "", "NAdam"], [1912, 1, 1, "", "Optimizer"], [1676, 1, 1, "", "RAdam"], [1677, 1, 1, "", "RMSprop"], [1678, 1, 1, "", "Rprop"], [1679, 1, 1, "", "SGD"], [1680, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1663, 3, 1, "", "add_param_group"], [1663, 3, 1, "", "load_state_dict"], [1663, 3, 1, "", "register_load_state_dict_post_hook"], [1663, 3, 1, "", "register_load_state_dict_pre_hook"], [1663, 3, 1, "", "register_state_dict_post_hook"], [1663, 3, 1, "", "register_state_dict_pre_hook"], [1663, 3, 1, "", "register_step_post_hook"], [1663, 3, 1, "", "register_step_pre_hook"], [1663, 3, 1, "", "state_dict"], [1663, 3, 1, "", "step"], [1663, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1664, 3, 1, "", "add_param_group"], [1664, 3, 1, "", "load_state_dict"], [1664, 3, 1, "", "register_load_state_dict_post_hook"], [1664, 3, 1, "", "register_load_state_dict_pre_hook"], [1664, 3, 1, "", "register_state_dict_post_hook"], [1664, 3, 1, "", "register_state_dict_pre_hook"], [1664, 3, 1, "", "register_step_post_hook"], [1664, 3, 1, "", "register_step_pre_hook"], [1664, 3, 1, "", "state_dict"], [1664, 3, 1, "", "step"], [1664, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1665, 3, 1, "", "add_param_group"], [1665, 3, 1, "", "load_state_dict"], [1665, 3, 1, "", "register_load_state_dict_post_hook"], [1665, 3, 1, "", "register_load_state_dict_pre_hook"], [1665, 3, 1, "", "register_state_dict_post_hook"], [1665, 3, 1, "", "register_state_dict_pre_hook"], [1665, 3, 1, "", "register_step_post_hook"], [1665, 3, 1, "", "register_step_pre_hook"], [1665, 3, 1, "", "state_dict"], [1665, 3, 1, "", "step"], [1665, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1666, 3, 1, "", "add_param_group"], [1666, 3, 1, "", "load_state_dict"], [1666, 3, 1, "", "register_load_state_dict_post_hook"], [1666, 3, 1, "", "register_load_state_dict_pre_hook"], [1666, 3, 1, "", "register_state_dict_post_hook"], [1666, 3, 1, "", "register_state_dict_pre_hook"], [1666, 3, 1, "", "register_step_post_hook"], [1666, 3, 1, "", "register_step_pre_hook"], [1666, 3, 1, "", "state_dict"], [1666, 3, 1, "", "step"], [1666, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_load_state_dict_post_hook"], [1667, 3, 1, "", "register_load_state_dict_pre_hook"], [1667, 3, 1, "", "register_state_dict_post_hook"], [1667, 3, 1, "", "register_state_dict_pre_hook"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "step"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_load_state_dict_post_hook"], [1668, 3, 1, "", "register_load_state_dict_pre_hook"], [1668, 3, 1, "", "register_state_dict_post_hook"], [1668, 3, 1, "", "register_state_dict_pre_hook"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "step"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_load_state_dict_post_hook"], [1669, 3, 1, "", "register_load_state_dict_pre_hook"], [1669, 3, 1, "", "register_state_dict_post_hook"], [1669, 3, 1, "", "register_state_dict_pre_hook"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_load_state_dict_post_hook"], [1670, 3, 1, "", "register_load_state_dict_pre_hook"], [1670, 3, 1, "", "register_state_dict_post_hook"], [1670, 3, 1, "", "register_state_dict_pre_hook"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1671, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "state_dict"], [1674, 3, 1, "", "step"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_load_state_dict_post_hook"], [1676, 3, 1, "", "register_load_state_dict_pre_hook"], [1676, 3, 1, "", "register_state_dict_post_hook"], [1676, 3, 1, "", "register_state_dict_pre_hook"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1677, 3, 1, "", "add_param_group"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "register_load_state_dict_post_hook"], [1677, 3, 1, "", "register_load_state_dict_pre_hook"], [1677, 3, 1, "", "register_state_dict_post_hook"], [1677, 3, 1, "", "register_state_dict_pre_hook"], [1677, 3, 1, "", "register_step_post_hook"], [1677, 3, 1, "", "register_step_pre_hook"], [1677, 3, 1, "", "state_dict"], [1677, 3, 1, "", "step"], [1677, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1678, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "register_load_state_dict_post_hook"], [1678, 3, 1, "", "register_load_state_dict_pre_hook"], [1678, 3, 1, "", "register_state_dict_post_hook"], [1678, 3, 1, "", "register_state_dict_pre_hook"], [1678, 3, 1, "", "register_step_post_hook"], [1678, 3, 1, "", "register_step_pre_hook"], [1678, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1678, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1679, 3, 1, "", "add_param_group"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "register_load_state_dict_post_hook"], [1679, 3, 1, "", "register_load_state_dict_pre_hook"], [1679, 3, 1, "", "register_state_dict_post_hook"], [1679, 3, 1, "", "register_state_dict_pre_hook"], [1679, 3, 1, "", "register_step_post_hook"], [1679, 3, 1, "", "register_step_pre_hook"], [1679, 3, 1, "", "state_dict"], [1679, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_load_state_dict_post_hook"], [1680, 3, 1, "", "register_load_state_dict_pre_hook"], [1680, 3, 1, "", "register_state_dict_post_hook"], [1680, 3, 1, "", "register_state_dict_pre_hook"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1681, 1, 1, "", "ChainedScheduler"], [1682, 1, 1, "", "ConstantLR"], [1683, 1, 1, "", "CosineAnnealingLR"], [1684, 1, 1, "", "CosineAnnealingWarmRestarts"], [1685, 1, 1, "", "CyclicLR"], [1686, 1, 1, "", "ExponentialLR"], [1687, 1, 1, "", "LambdaLR"], [1688, 1, 1, "", "LinearLR"], [1689, 1, 1, "", "MultiStepLR"], [1690, 1, 1, "", "MultiplicativeLR"], [1691, 1, 1, "", "OneCycleLR"], [1692, 1, 1, "", "PolynomialLR"], [1693, 1, 1, "", "ReduceLROnPlateau"], [1694, 1, 1, "", "SequentialLR"], [1695, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1681, 3, 1, "", "get_last_lr"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "print_lr"], [1681, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1682, 3, 1, "", "get_last_lr"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "print_lr"], [1682, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1683, 3, 1, "", "get_last_lr"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "print_lr"], [1683, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "get_lr"], [1685, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "print_lr"], [1691, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.overrides": [[1955, 5, 1, "", "get_ignored_functions"], [1955, 5, 1, "", "get_overridable_functions"], [1955, 5, 1, "", "get_testing_overrides"], [1955, 5, 1, "", "handle_torch_function"], [1955, 5, 1, "", "has_torch_function"], [1955, 5, 1, "", "is_tensor_like"], [1955, 5, 1, "", "is_tensor_method_or_property"], [1955, 5, 1, "", "resolve_name"], [1955, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1913, 1, 1, "", "Directory"], [1913, 1, 1, "", "EmptyMatchError"], [1913, 1, 1, "", "PackageExporter"], [1913, 1, 1, "", "PackageImporter"], [1913, 1, 1, "", "PackagingError"], [1913, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1913, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1913, 3, 1, "", "__init__"], [1913, 3, 1, "", "add_dependency"], [1913, 3, 1, "", "all_paths"], [1913, 3, 1, "", "close"], [1913, 3, 1, "", "denied_modules"], [1913, 3, 1, "", "deny"], [1913, 3, 1, "", "dependency_graph_string"], [1913, 3, 1, "", "extern"], [1913, 3, 1, "", "externed_modules"], [1913, 3, 1, "", "get_rdeps"], [1913, 3, 1, "", "get_unique_id"], [1913, 3, 1, "", "intern"], [1913, 3, 1, "", "interned_modules"], [1913, 3, 1, "", "mock"], [1913, 3, 1, "", "mocked_modules"], [1913, 3, 1, "", "register_extern_hook"], [1913, 3, 1, "", "register_intern_hook"], [1913, 3, 1, "", "register_mock_hook"], [1913, 3, 1, "", "save_binary"], [1913, 3, 1, "", "save_module"], [1913, 3, 1, "", "save_pickle"], [1913, 3, 1, "", "save_source_file"], [1913, 3, 1, "", "save_source_string"], [1913, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1913, 3, 1, "", "__init__"], [1913, 3, 1, "", "file_structure"], [1913, 3, 1, "", "id"], [1913, 3, 1, "", "import_module"], [1913, 3, 1, "", "load_binary"], [1913, 3, 1, "", "load_pickle"], [1913, 3, 1, "", "load_text"], [1913, 3, 1, "", "python_version"]], "torch.profiler": [[1915, 1, 1, "", "ProfilerAction"], [1915, 1, 1, "", "ProfilerActivity"], [1915, 1, 1, "", "_KinetoProfile"], [1915, 1, 1, "", "profile"], [1915, 5, 1, "", "schedule"], [1915, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1915, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1915, 3, 1, "", "add_metadata"], [1915, 3, 1, "", "add_metadata_json"], [1915, 3, 1, "", "events"], [1915, 3, 1, "", "export_chrome_trace"], [1915, 3, 1, "", "export_memory_timeline"], [1915, 3, 1, "", "export_stacks"], [1915, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1915, 5, 1, "", "is_available"], [1915, 5, 1, "", "mark"], [1915, 5, 1, "", "range_pop"], [1915, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1915, 3, 1, "", "step"]], "torch.quantization": [[1919, 0, 0, "-", "fx"]], "torch.quasirandom": [[1716, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1716, 3, 1, "", "draw"], [1716, 3, 1, "", "draw_base2"], [1716, 3, 1, "", "fast_forward"], [1716, 3, 1, "", "reset"]], "torch.random": [[1920, 5, 1, "", "fork_rng"], [1920, 5, 1, "", "get_rng_state"], [1920, 5, 1, "", "initial_seed"], [1920, 5, 1, "", "manual_seed"], [1920, 5, 1, "", "seed"], [1920, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1905, 5, 1, "", "get_default_load_endianness"], [1905, 5, 1, "", "register_package"], [1905, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1924, 0, 0, "-", "windows"]], "torch.signal.windows": [[1764, 5, 1, "", "bartlett"], [1765, 5, 1, "", "blackman"], [1766, 5, 1, "", "cosine"], [1767, 5, 1, "", "exponential"], [1768, 5, 1, "", "gaussian"], [1769, 5, 1, "", "general_cosine"], [1770, 5, 1, "", "general_hamming"], [1771, 5, 1, "", "hamming"], [1772, 5, 1, "", "hann"], [1773, 5, 1, "", "kaiser"], [1774, 5, 1, "", "nuttall"]], "torch.sparse": [[1784, 5, 1, "", "addmm"], [1785, 5, 1, "", "as_sparse_gradcheck"], [1786, 1, 1, "", "check_sparse_tensor_invariants"], [1787, 5, 1, "", "log_softmax"], [1788, 5, 1, "", "mm"], [1789, 5, 1, "", "sampled_addmm"], [1790, 5, 1, "", "softmax"], [1791, 5, 1, "", "spdiags"], [1792, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1786, 3, 1, "", "disable"], [1786, 3, 1, "", "enable"], [1786, 3, 1, "", "is_enabled"]], "torch.special": [[1926, 5, 1, "", "airy_ai"], [1926, 5, 1, "", "bessel_j0"], [1926, 5, 1, "", "bessel_j1"], [1926, 5, 1, "", "digamma"], [1926, 5, 1, "", "entr"], [1926, 5, 1, "", "erf"], [1926, 5, 1, "", "erfc"], [1926, 5, 1, "", "erfcx"], [1926, 5, 1, "", "erfinv"], [1926, 5, 1, "", "exp2"], [1926, 5, 1, "", "expit"], [1926, 5, 1, "", "expm1"], [1926, 5, 1, "", "gammainc"], [1926, 5, 1, "", "gammaincc"], [1926, 5, 1, "", "gammaln"], [1926, 5, 1, "", "i0"], [1926, 5, 1, "", "i0e"], [1926, 5, 1, "", "i1"], [1926, 5, 1, "", "i1e"], [1926, 5, 1, "", "log1p"], [1926, 5, 1, "", "log_ndtr"], [1926, 5, 1, "", "log_softmax"], [1926, 5, 1, "", "logit"], [1926, 5, 1, "", "logsumexp"], [1926, 5, 1, "", "multigammaln"], [1926, 5, 1, "", "ndtr"], [1926, 5, 1, "", "ndtri"], [1926, 5, 1, "", "polygamma"], [1926, 5, 1, "", "psi"], [1926, 5, 1, "", "round"], [1926, 5, 1, "", "scaled_modified_bessel_k0"], [1926, 5, 1, "", "scaled_modified_bessel_k1"], [1926, 5, 1, "", "sinc"], [1926, 5, 1, "", "softmax"], [1926, 5, 1, "", "spherical_bessel_j0"], [1926, 5, 1, "", "xlog1py"], [1926, 5, 1, "", "xlogy"], [1926, 5, 1, "", "zeta"]], "torch.testing": [[1932, 5, 1, "", "assert_allclose"], [1932, 5, 1, "", "assert_close"], [1932, 5, 1, "", "make_tensor"]], "torch.torch": [[1933, 2, 1, "", "default_generator"], [1957, 1, 1, "", "finfo"], [1957, 1, 1, "", "iinfo"]], "torch.utils": [[1933, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [21, 0, 0, "-", "data"], [1847, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1848, 5, 1, "", "get_cpp_backtrace"], [1933, 0, 0, "-", "hipify"], [1872, 0, 0, "-", "jit"], [1933, 0, 0, "-", "model_dump"], [1878, 0, 0, "-", "model_zoo"], [1849, 5, 1, "", "rename_privateuse1_backend"], [1850, 5, 1, "", "set_module"], [1930, 0, 0, "-", "tensorboard"], [1933, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[21, 1, 1, "", "BatchSampler"], [21, 1, 1, "", "ChainDataset"], [21, 1, 1, "", "ConcatDataset"], [21, 1, 1, "", "DataLoader"], [21, 1, 1, "", "Dataset"], [21, 1, 1, "", "IterableDataset"], [21, 1, 1, "", "RandomSampler"], [21, 1, 1, "", "Sampler"], [21, 1, 1, "", "SequentialSampler"], [21, 1, 1, "", "StackDataset"], [21, 1, 1, "", "Subset"], [21, 1, 1, "", "SubsetRandomSampler"], [21, 1, 1, "", "TensorDataset"], [21, 1, 1, "", "WeightedRandomSampler"], [21, 0, 0, "-", "datapipes"], [21, 5, 1, "", "default_collate"], [21, 5, 1, "", "default_convert"], [21, 5, 1, "", "get_worker_info"], [21, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[21, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[21, 0, 0, "-", "dataframe"], [21, 0, 0, "-", "iter"], [21, 0, 0, "-", "map"], [21, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[21, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[31, 5, 1, "", "from_dlpack"], [31, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1877, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1878, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1930, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1930, 3, 1, "", "__init__"], [1930, 3, 1, "", "add_audio"], [1930, 3, 1, "", "add_custom_scalars"], [1930, 3, 1, "", "add_embedding"], [1930, 3, 1, "", "add_figure"], [1930, 3, 1, "", "add_graph"], [1930, 3, 1, "", "add_histogram"], [1930, 3, 1, "", "add_hparams"], [1930, 3, 1, "", "add_image"], [1930, 3, 1, "", "add_images"], [1930, 3, 1, "", "add_mesh"], [1930, 3, 1, "", "add_pr_curve"], [1930, 3, 1, "", "add_scalar"], [1930, 3, 1, "", "add_scalars"], [1930, 3, 1, "", "add_text"], [1930, 3, 1, "", "add_video"], [1930, 3, 1, "", "close"], [1930, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 21, 1866, 1888, 1895], "mix": [0, 1866, 1888], "precis": [0, 1888, 1892, 1903], "packag": [0, 1, 15, 24, 1881, 1906, 1913], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 21, 23, 24, 26, 27, 29, 30, 31, 42, 45, 46, 48, 49, 51, 52, 53, 54, 55, 63, 64, 65, 66, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 963, 964, 965, 966, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1671, 1672, 1673, 1674, 1675, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1892, 1894, 1895, 1898, 1903, 1905, 1907, 1910, 1912, 1913, 1915, 1919, 1920, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1944, 1945, 1952, 1955, 1957, 1958], "amp": [0, 1892], "autocast": [0, 1888], "gradient": [0, 1, 53, 1146, 1888, 1889, 1895, 1933], "scale": [0, 1888, 1899], "op": [0, 13, 73, 1871, 1888, 1910, 1933], "refer": [0, 13, 18, 45, 49, 55, 1866, 1868, 1869, 1870, 1879, 1883, 1898, 1908, 1913, 1915, 1916, 1919, 1923, 1931, 1937, 1956], "elig": 0, "cuda": [0, 2, 10, 17, 18, 198, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1881, 1888, 1892, 1896, 1898, 1902, 1904, 1906, 1939, 1944, 1952, 1956], "specif": [0, 21, 1925], "behavior": [0, 21, 1889, 1897], "can": [0, 1889, 1896, 1944, 1951], "float16": 0, "float32": 0, "promot": [0, 7, 75], "widest": 0, "input": [0, 45, 1882, 1888, 1897], "type": [0, 21, 75, 591, 1868, 1869, 1894, 1910, 1913, 1931, 1957], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1499], "over": [0, 8, 1868], "binary_cross_entropi": [0, 1498], "cpu": [0, 2, 10, 16, 195, 961, 962, 963, 964, 965, 1889, 1891, 1902, 1916, 1938], "bfloat16": [0, 144], "differenti": [1, 1889], "autograd": [1, 10, 11, 15, 52, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 1883, 1888, 1889, 1894, 1895, 1910, 1921, 1922], "forward": [1, 878, 1894, 1922], "mode": [1, 42, 50, 403, 1299, 1889, 1894, 1897, 1910, 1916, 1922], "function": [1, 24, 30, 46, 48, 49, 51, 53, 55, 71, 74, 877, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 1123, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1866, 1867, 1868, 1869, 1871, 1874, 1876, 1882, 1884, 1885, 1886, 1888, 1889, 1895, 1897, 1905, 1910, 1919, 1925, 1926, 1944, 1955], "higher": 1, "level": [1, 10, 73, 1919], "api": [1, 10, 13, 15, 18, 27, 35, 45, 49, 52, 55, 1865, 1866, 1869, 1879, 1883, 1891, 1892, 1894, 1898, 1899, 1908, 1910, 1913, 1914, 1915, 1916, 1919, 1937, 1942, 1943, 1944, 1945, 1956], "local": [1, 1869, 1889, 1933, 1951, 1953], "disabl": [1, 21, 945, 1866, 1889, 1933, 1944, 1945], "comput": [1, 53, 1889, 1903, 1922, 1933], "default": [1, 21, 22, 1868, 1889, 1892, 1897, 1918], "layout": [1, 1928], "manual": 1, "In": [1, 8, 1889, 1890, 1933], "place": [1, 52, 1882, 1889, 1890, 1910, 1933], "oper": [1, 10, 22, 24, 45, 52, 76, 1868, 1869, 1874, 1876, 1882, 1883, 1884, 1889, 1894, 1899, 1906, 1910, 1911, 1916, 1925, 1931, 1933, 1943], "tensor": [1, 11, 15, 29, 45, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 1825, 1867, 1871, 1874, 1881, 1882, 1883, 1884, 1889, 1894, 1905, 1910, 1916, 1919, 1925, 1928, 1929, 1931, 1933, 1943], "correct": [1, 55, 1889], "check": [1, 55, 1866, 1889, 1898, 1951], "variabl": [1, 24, 42, 1866, 1868, 1869, 1892, 1947, 1948], "deprec": 1, "context": [1, 25, 39, 60, 1922], "method": [1, 34, 35, 38, 43, 1867, 1868, 1871, 1910, 1919, 1925], "mixin": 1, "numer": [1, 1897, 1903, 1917], "profil": [1, 24, 903, 904, 905, 906, 907, 1308, 1309, 1310, 1880, 1899, 1900, 1915, 1948, 1952, 1954], "anomali": 1, "detect": 1, "graph": [1, 17, 45, 55, 68, 898, 899, 900, 901, 902, 1001, 1866, 1889, 1892, 1916, 1939, 1944, 1952, 1953, 1954], "backend": [2, 24, 41, 42, 1866, 1898, 1901, 1909, 1916, 1918, 1921, 1936, 1938, 1940, 1954], "cudnn": 2, "mp": [2, 10, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1880, 1901], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1904, 1948], "util": [3, 4, 5, 10, 14, 21, 24, 31, 49, 51, 1044, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1847, 1848, 1849, 1850, 1872, 1877, 1878, 1885, 1905, 1919, 1930, 1933, 1935, 1953, 1958], "bottleneck": 4, "checkpoint": [5, 22, 26], "pytorch": [6, 7, 8, 9, 10, 15, 23, 24, 45, 52, 1865, 1866, 1867, 1871, 1889, 1892, 1894, 1904, 1905, 1910, 1914, 1916, 1919, 1936, 1939, 1950, 1951, 1954], "govern": [6, 9, 10], "build": [6, 7, 10, 1891, 1899, 1900, 1906], "ci": [6, 10], "how": [6, 22, 50, 1864, 1889, 1894, 1912, 1913, 1941, 1943, 1944, 1951], "add": [6, 9, 86, 673], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1907], "guid": 7, "process": [7, 9, 21, 39, 1888], "get": [7, 27, 1910, 1936, 1944, 1946], "start": [7, 27, 39, 1309, 1936, 1946], "propos": 7, "featur": [7, 1899, 1900, 1944], "report": [7, 1896], "issu": [7, 1866, 1908, 1952], "implement": [7, 32, 41, 43, 1864, 1893, 1897, 1910, 1917, 1919, 1923, 1943], "fix": [7, 42, 50, 250, 1104], "bug": 7, "ad": [7, 1894, 1910], "tutori": [7, 10, 1913, 1914, 1921], "improv": [7, 1900], "document": [7, 27, 1865], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 55, 1866, 1892, 1913, 1944], "readabl": 7, "test": [7, 1869, 1894, 1913, 1932, 1951], "case": [7, 1866], "make": [7, 9, 1939, 1947], "codebas": 7, "more": [7, 45, 48, 1921, 1936], "robust": 7, "triag": 7, "about": [7, 1889, 1921, 1943], "sourc": [7, 1904, 1906, 1913], "develop": [7, 45, 1865, 1907, 1936], "common": [7, 24, 55, 1899, 1916], "mistak": 7, "To": 7, "avoid": [7, 1902, 1904, 1910, 1913], "frequent": [7, 1866, 1896, 1910, 1916, 1944], "ask": [7, 1866, 1896, 1910, 1916, 1944], "question": [7, 1866, 1896, 1910, 1916, 1944], "On": [7, 22, 1868], "python": [7, 8, 52, 57, 58, 59, 60, 61, 62, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1894, 1904, 1910, 1947], "doc": [7, 10, 1898], "c": [7, 10, 15, 1889, 1894, 1898, 1905, 1910], "overview": [7, 18, 45, 55, 1907, 1908, 1913, 1915, 1925, 1940, 1947], "design": [8, 1869, 1893, 1921, 1922, 1923], "philosophi": 8, "principl": [8, 9], "1": [8, 42, 50, 1866, 1895], "usabl": 8, "perform": [8, 10, 1900, 1905, 1943, 1951, 1952, 1954], "2": [8, 50, 1866, 1892, 1895, 1896, 1916, 1919, 1950, 1951, 1954], "simpl": [8, 1868, 1869, 1900, 1908, 1922], "easi": 8, "3": [8, 42, 50], "first": [8, 1913], "best": [8, 1892, 1902, 1916, 1938], "class": [8, 34, 55, 1866, 1868, 1869, 1871, 1910, 1912, 1913, 1931], "languag": [8, 1865, 1866, 1868, 1869, 1870], "interoper": 8, "mechan": [9, 1886, 1889, 1897], "summari": [9, 1916, 1947], "modul": [9, 10, 49, 51, 55, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1866, 1867, 1868, 1869, 1871, 1885, 1889, 1894, 1900, 1905, 1913, 1916, 1950], "core": [9, 10, 1949], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1869], "confirm": 9, "remov": [9, 1637, 1882], "The": [9, 55, 1869, 1889, 1942], "re": [9, 1913], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 42, 50, 1944], "controversi": 9, "gener": [9, 17, 25, 52, 55, 77, 1890, 1895, 1904, 1916, 1917, 1933, 1941, 1956], "polici": [9, 1942], "faq": [9, 1906], "respons": 10, "nn": [10, 49, 51, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1868, 1869, 1885, 1886, 1887, 1889, 1892, 1894, 1905, 1919, 1925, 1950], "optim": [10, 28, 1671, 1672, 1673, 1674, 1675, 1888, 1889, 1912, 1921, 1922, 1933], "compil": [10, 51, 940, 942, 943, 944, 945, 946, 947, 1892, 1936, 1937, 1944, 1945, 1952, 1954], "jit": [10, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1866, 1869, 1872], "torchscript": [10, 15, 1866, 1867, 1868, 1869, 1871, 1891, 1899, 1907, 1910, 1911, 1913], "fx": [10, 55, 68, 69, 70, 72, 75, 1900, 1916, 1919, 1935], "torchdynamo": [10, 1893, 1907, 1908, 1909, 1939, 1941, 1945, 1954], "distribut": [10, 24, 26, 27, 28, 29, 30, 42, 1885, 1886, 1893, 1898, 1900, 1921, 1922, 1944], "rng": 10, "multiprocess": [10, 39, 1881, 1892, 1902, 1906], "dataload": [10, 1904], "linear": [10, 11, 720, 721, 744, 752, 769, 1130, 1414, 1543, 1885, 1886, 1903, 1925], "algebra": [10, 11, 1903, 1925], "linalg": [10, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1874, 1903], "spars": [10, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1885, 1886, 1925], "nestedtensor": 10, "nest": [10, 1884], "maskedtensor": [10, 1876], "mask": [10, 1876], "fast": [10, 46, 1897, 1922], "fourier": [10, 46], "transform": [10, 30, 46, 48, 49, 51, 53, 55, 1470, 1885, 1894, 1900, 1944, 1953], "fft": [10, 46, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103], "inductor": 10, "gpu": [10, 24, 1885, 1886, 1888, 1896, 1914, 1948], "triton": [10, 1948], "nvfuser": 10, "amd": [10, 1903], "rocm": [10, 1898], "hip": [10, 1898], "tool": [10, 17, 1917, 1925], "c10": 10, "dispatch": 10, "onnx": [10, 68, 69, 76, 1907, 1908, 1909, 1910, 1911], "export": [10, 45, 1907, 1908, 1910, 1913, 1916, 1919, 1933, 1944], "mobil": 10, "edg": [10, 1866, 1913], "model": [10, 15, 45, 1864, 1888, 1896, 1899, 1908, 1912, 1913, 1914, 1916, 1919, 1942, 1946, 1948], "compress": [10, 1925], "window": [10, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1906, 1924], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1865, 1873, 1904], "xla": 10, "torchserv": 10, "torchvis": [10, 50], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 948, 1889, 1897], "number": [11, 17, 42, 1889, 1891, 1896, 1904, 1933], "creat": [11, 1866, 1883], "transit": [11, 42], "from": [11, 42, 51, 55, 1864, 1882, 1906, 1910, 1913], "old": 11, "represent": [11, 68], "access": [11, 45, 1868, 1913, 1954], "real": [11, 471, 1727, 1897], "imag": [11, 300, 1163], "angl": [11, 106, 686], "ab": [11, 78, 669], "serial": [11, 45, 1905, 1933], "__config__": 12, "control": [13, 45, 52, 55, 61, 1904, 1945], "flow": [13, 45, 52, 55, 61, 1916], "cond": [13, 63, 1225], "exampl": [13, 36, 45, 55, 1888, 1893, 1894, 1895, 1908, 1910, 1922, 1940], "invari": 13, "higher_ord": 13, "cpp_extens": 14, "extend": [15, 32, 1894, 1895], "extens": [15, 17, 1894, 1899, 1906], "author": [15, 55], "stream": [16, 17, 18, 959, 964, 972, 1041, 1892], "event": [16, 17, 33, 35, 969, 1305, 1880], "random": [17, 21, 52, 1896, 1904, 1920, 1933], "commun": [17, 22, 24, 1865], "collect": [17, 24], "beta": [17, 30], "memori": [17, 21, 1892, 1896, 1898, 1900, 1956], "manag": [17, 25, 60, 1881, 1892, 1898, 1913, 1953], "nvidia": [17, 1903], "nvtx": [17, 1026, 1027, 1028], "jiter": [17, 1009, 1010], "sanit": [17, 18], "prototyp": [17, 1916, 1917], "usag": [18, 27, 42, 1892, 1895, 1899, 1900, 1906, 1950, 1956], "data": [21, 45, 52, 62, 1869, 1893, 1896, 1910, 1917, 1931], "dataset": 21, "map": [21, 67, 1898], "style": 21, "iter": [21, 1868], "load": [21, 1201, 1265, 1864, 1905, 1913, 1916], "order": [21, 1889], "sampler": 21, "batch": [21, 50, 1903, 1912], "non": [21, 45, 55, 1885, 1886, 1889, 1892, 1903, 1913, 1916], "work": [21, 49, 1888, 1896, 1925, 1943, 1944, 1952], "collate_fn": 21, "singl": [21, 42, 1888], "multi": [21, 24, 42, 1885, 1886], "platform": 21, "pin": [21, 1892], "ddp": 22, "hook": [22, 1889, 1900, 1950], "us": [22, 24, 55, 1868, 1889, 1892, 1894, 1897, 1908, 1910, 1912, 1913, 1914, 1916, 1925, 1944, 1946, 1952, 1954, 1956], "what": [22, 48, 50, 53, 1876, 1889, 1913, 1941, 1944, 1951, 1952], "doe": [22, 1889, 1943, 1944], "powersgd": 22, "state": [22, 1900, 1913, 1956], "debug": [22, 24, 55, 73, 1866, 1916, 1917, 1940, 1944, 1954], "acknowledg": [22, 1914], "deploi": 23, "ha": 23, "been": 23, "move": 23, "multipi": 23, "come": [24, 1889], "which": [24, 1889, 1944], "environ": [24, 42, 1892, 1899, 1913, 1948], "choos": 24, "network": [24, 1892, 1896, 1900], "interfac": [24, 1199, 1898], "other": [24, 1885, 1904, 1913, 1925, 1933, 1943], "nccl": [24, 1892], "basic": [24, 1869, 1883, 1895, 1921, 1931, 1952], "initi": [24, 1885, 1900, 1931], "tcp": 24, "share": [24, 1881, 1892, 1913, 1923], "file": [24, 1881, 1913], "system": [24, 1869, 1881, 1895], "post": [24, 1916], "kei": [24, 68, 1906], "valu": [24, 65, 602, 1868, 1869, 1903, 1918, 1923], "store": [24, 41], "group": 24, "point": [24, 1899], "synchron": [24, 965, 1042, 1314], "asynchron": [24, 1869, 1892, 1902], "third": 24, "parti": 24, "launch": [24, 42, 1952], "spawn": [24, 1881], "applic": 24, "monitor": [24, 1879], "barrier": 24, "torch_distributed_debug": 24, "log": [24, 358, 1267, 1899], "join": [25, 1933], "elast": [27, 32, 42], "advanc": [27, 1900], "plugin": 27, "parallel": [29, 1591, 1892, 1893, 1896, 1914, 1933], "probabl": 30, "score": 30, "pathwis": 30, "deriv": [30, 1889], "exponentialfamili": 30, "bernoulli": [30, 142, 910], "binomi": 30, "categor": 30, "cauchi": 30, "chi2": 30, "continuousbernoulli": 30, "dirichlet": 30, "exponenti": [30, 1767], "fishersnedecor": 30, "gamma": 30, "geometr": 30, "gumbel": 30, "halfcauchi": 30, "halfnorm": 30, "independ": 30, "kumaraswami": 30, "lkjcholeski": 30, "laplac": 30, "lognorm": 30, "lowrankmultivariatenorm": 30, "mixturesamefamili": 30, "multinomi": [30, 409, 1317], "multivariatenorm": 30, "negativebinomi": 30, "normal": [30, 1562, 1655, 1885, 1912], "onehotcategor": 30, "pareto": 30, "poisson": [30, 1702], "relaxedbernoulli": 30, "logitrelaxedbernoulli": 30, "relaxedonehotcategor": 30, "studentt": 30, "transformeddistribut": 30, "uniform": 30, "vonmis": 30, "weibul": 30, "wishart": 30, "kl": 30, "diverg": [30, 1871], "constraint": [30, 1892], "registri": [30, 41, 76], "dlpack": 31, "agent": 32, "server": [32, 41, 43], "concept": 32, "watchdog": 32, "custom": [33, 43, 55, 1869, 1888, 1892, 1894, 1895, 1900, 1910, 1912, 1913, 1916, 1940], "launcher": 33, "rendezv": [33, 41, 42], "handler": [33, 38, 41, 1896], "metric": [33, 38], "error": [34, 1896, 1906, 1916, 1917, 1954], "propag": [34, 1883], "object": [35, 1913], "torchelast": 37, "kubernet": 37, "multipl": [39, 1888, 1892, 1894, 1914], "worker": [39, 42, 1896], "quickstart": 40, "except": [41, 1896], "dynam": [41, 45, 52, 55, 64, 65, 1916, 1919, 1942, 1943], "c10d": 41, "etcd": 41, "legaci": 41, "torchrun": 42, "node": [42, 69, 72, 75, 898, 899, 900, 901, 902, 1889], "stack": [42, 1804, 1916], "fault": 42, "toler": 42, "size": [42, 525, 1884], "failur": 42, "min": [42, 400, 1296], "max": [42, 396, 1291], "4": [42, 50], "up": [42, 1944], "membership": [42, 1869], "note": [42, 68, 1865, 1869, 1892, 1916, 1921], "definit": [42, 1869], "deploy": [42, 1899], "import": [42, 1864, 1906, 1913, 1943], "notic": [42, 1864], "expir": 43, "timer": 43, "client": 43, "write": [43, 55, 1889, 1894, 1910, 1953], "train": [44, 1888, 1900, 1902, 1916, 1944], "script": [44, 1205, 1866, 1906, 1910], "exist": 45, "framework": [45, 1913, 1921], "an": [45, 1864, 1910, 1912, 1913], "express": [45, 1868, 1869], "special": [45, 1869, 1889, 1926], "shape": [45, 52, 64, 511, 1910, 1942, 1943], "limit": [45, 52, 55, 1864, 1895, 1910, 1939, 1944, 1945, 1950], "break": [45, 1868, 1869, 1944, 1952, 1954], "depend": [45, 52, 1908, 1913, 1922], "miss": 45, "meta": [45, 1869], "kernel": [45, 1898, 1916, 1948], "read": [45, 48, 1910, 1936, 1951], "addit": [45, 68], "link": 45, "user": [45, 1913, 1923, 1936], "deep": [45, 1936, 1941], "dive": [45, 1936, 1941], "helper": 46, "fullyshardeddataparallel": 47, "func": [48, 49, 51, 53, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1894, 1895, 1944], "ar": [48, 53, 1864, 1889, 1913, 1944], "compos": [48, 53, 1940], "why": [48, 53, 1892, 1897, 1913, 1925, 1944], "patch": [50, 1913], "norm": [50, 441, 1250, 1654], "": [50, 1913, 1944, 1951], "happen": 50, "option": [50, 1868, 1891, 1906, 1912], "batchnorm": 50, "paramet": [50, 1608, 1868, 1912], "functorch": [50, 51], "eval": [50, 1889], "migrat": [51, 1866], "make_funct": 51, "combine_state_for_ensembl": 51, "ux": 52, "vmap": [52, 53, 880, 1134, 1857, 1894, 1895, 1944], "mutat": [52, 1933], "arbitrari": [52, 1913], "structur": [52, 62, 1869, 1925], "out": [52, 1882, 1896], "item": [52, 341], "nonzero": [52, 440, 1653], "friend": 52, "whirlwind": 53, "tour": 53, "i": [53, 1876, 1889, 1913, 1941, 1943, 1944, 1951], "grad": [53, 279, 895, 1124, 1889, 1892, 1944], "auto": 53, "vector": 53, "vjp": [53, 894, 1133], "jacobian": [53, 891], "product": [53, 1874, 1944], "jvp": [53, 879, 892, 1129, 1895], "jacrev": [53, 1128], "jacfwd": [53, 1127], "hessian": [53, 889, 1126], "futur": 54, "A": [55, 1900, 1908], "quick": 55, "primer": 55, "manipul": [55, 1883], "direct": 55, "subgraph": [55, 1953], "rewrit": [55, 1953], "With": [55, 1871], "replace_pattern": 55, "proxi": 55, "retrac": 55, "interpret": [55, 1866], "pattern": [55, 1868, 1910, 1913], "introduct": [55, 1876, 1884, 1916], "pitfal": [55, 1910], "pdb": 55, "print": [55, 1868, 1869], "to_fold": 55, "graphmodul": 55, "avail": 55, "debugg": 55, "symbol": [55, 71, 74, 1910, 1916, 1933], "trace": [55, 579, 1209, 1830, 1866, 1910, 1915, 1916, 1944, 1945, 1952], "static": [55, 1910, 1916], "tracer": [55, 1866], "leaf": 55, "miscellanea": 55, "exportdb": 56, "tag": [56, 1933], "support": [56, 1867, 1869, 1876, 1882, 1883, 1884, 1895, 1910, 1911, 1916, 1925, 1944, 1950], "assume_constant_result": [56, 66, 943], "autograd_funct": 56, "class_method": 56, "cond_branch_class_method": [56, 63, 64], "cond_branch_nested_funct": [56, 63, 64], "cond_branch_nonlocal_vari": [56, 63, 64], "cond_closed_over_vari": [56, 59, 63], "cond_operand": [56, 63, 64], "cond_pred": [56, 63, 64], "constrain_as_size_exampl": [56, 65, 66], "constrain_as_value_exampl": [56, 65, 66], "decor": 56, "dictionari": [56, 62, 1869], "dynamic_shape_assert": [56, 57], "dynamic_shape_constructor": [56, 64], "dynamic_shape_if_guard": [56, 61, 64], "dynamic_shape_map": [56, 64, 67], "dynamic_shape_sl": [56, 64], "dynamic_shape_view": [56, 64], "fn_with_kwarg": [56, 62], "list_contain": [56, 57, 62, 64], "list_unpack": [56, 61, 62], "nested_funct": [56, 59], "null_context_manag": [56, 60], "pytree_flatten": 56, "scalar_output": [56, 64], "specialized_attribut": 56, "static_for_loop": [56, 61], "static_if": [56, 61], "tensor_setattr": [56, 58], "Not": [56, 1871], "yet": 56, "dynamic_shape_round": [56, 58, 64], "type_reflection_method": [56, 58], "assert": [57, 1869, 1898], "builtin": [58, 1867], "closur": [59, 1912], "escap": [66, 1944], "hatch": [66, 1944], "fxe0007": 68, "fxe0008": 69, "fxe0010": 70, "pass": [70, 1869, 1892, 1902, 1916, 1922, 1953], "fxe0011": 71, "call": [71, 1868, 1869, 1895, 1944], "fxe0012": 72, "unsupport": [72, 1868, 1869, 1871, 1910, 1911], "analysi": 72, "fxe0013": 73, "fxe0014": 74, "find": [74, 76, 1913, 1952], "opschema": 74, "match": [74, 1868, 1883], "fxe0015": 75, "insert": 75, "fxe0016": 76, "overload": 76, "abs_": 79, "absolut": [80, 670], "absolute_": 81, "aco": [82, 671], "acos_": 83, "acosh": [84, 672], "acosh_": 85, "add_": 87, "addbmm": [88, 674], "addbmm_": 89, "addcdiv": [90, 675], "addcdiv_": 91, "addcmul": [92, 676], "addcmul_": 93, "addmm": [94, 677, 1784], "addmm_": 95, "addmv": [96, 678], "addmv_": 97, "addr": [98, 679], "addr_": 99, "adjoint": [100, 680], "all": [101, 681, 1894, 1910, 1912], "allclos": [102, 682], "amax": [103, 683], "amin": [104, 684], "aminmax": [105, 685], "ani": [107, 687, 1869, 1944, 1951], "apply_": 108, "arcco": [109, 854], "arccos_": 110, "arccosh": [111, 855], "arccosh_": 112, "arcsin": [113, 856], "arcsin_": 114, "arcsinh": [115, 857], "arcsinh_": 116, "arctan": [117, 858], "arctan2": [118, 859], "arctan2_": 119, "arctan_": 120, "arctanh": [121, 860], "arctanh_": 122, "argmax": [123, 862], "argmin": [124, 863], "argsort": [125, 864], "argwher": [126, 865], "as_strid": [127, 866], "as_subclass": 128, "asin": [129, 869], "asin_": 130, "asinh": [131, 870], "asinh_": 132, "atan": [133, 871], "atan2": [134, 872], "atan2_": 135, "atan_": 136, "atanh": [137, 873], "atanh_": 138, "backward": [139, 877, 881, 1889, 1890, 1892, 1897, 1922], "baddbmm": [140, 908], "baddbmm_": 141, "bernoulli_": 143, "bincount": [145, 911], "bitwise_and": [146, 912], "bitwise_and_": 147, "bitwise_left_shift": [148, 913], "bitwise_left_shift_": 149, "bitwise_not": [150, 914], "bitwise_not_": 151, "bitwise_or": [152, 915], "bitwise_or_": 153, "bitwise_right_shift": [154, 916], "bitwise_right_shift_": 155, "bitwise_xor": [156, 917], "bitwise_xor_": 157, "bmm": [158, 920], "bool": 159, "broadcast_to": [160, 923], "byte": 161, "cauchy_": 162, "ccol_indic": 163, "cdoubl": 164, "ceil": [165, 929], "ceil_": 166, "cfloat": 167, "chalf": 168, "char": 169, "choleski": [170, 931, 1223], "cholesky_invers": [171, 932], "cholesky_solv": [172, 933], "chunk": [173, 934], "clamp": [174, 759, 935], "clamp_": 175, "clip": [176, 936, 1888], "clip_": 177, "clone": [178, 937], "coalesc": 179, "col_indic": 180, "conj": [181, 951], "conj_phys": [182, 952], "conj_physical_": 183, "contigu": 184, "copy_": 185, "copysign": [186, 953], "copysign_": 187, "corrcoef": [188, 954], "co": [189, 955], "cos_": 190, "cosh": [191, 956], "cosh_": 192, "count_nonzero": [193, 957], "cov": [194, 958], "cross": [196, 966, 1226, 1889], "crow_indic": 197, "cummax": [199, 1045], "cummin": [200, 1046], "cumprod": [201, 1047], "cumprod_": 202, "cumsum": [203, 1048], "cumsum_": 204, "data_ptr": 205, "deg2rad": [206, 1050], "dense_dim": 207, "dequant": [208, 1051, 1916], "det": [209, 1052, 1227], "detach": 210, "detach_": 211, "devic": [212, 988, 1892, 1903, 1928], "diag": [213, 1053], "diag_emb": [214, 1054], "diagflat": [215, 1055], "diagon": [216, 1056, 1228], "diagonal_scatt": [217, 1057], "diff": [218, 1058], "digamma": [219, 1059], "digamma_": 220, "dim": [221, 1882], "dim_ord": 222, "dist": [223, 1060], "div": [224, 1061, 1905], "div_": 225, "divid": [226, 1062], "divide_": 227, "dot": [228, 1063], "doubl": 229, "dsplit": [230, 1064], "element_s": 231, "eq": [232, 1071], "eq_": 233, "equal": [234, 1072], "erf": [235, 1073], "erf_": 236, "erfc": [237, 1074], "erfc_": 238, "erfinv": [239, 1075], "erfinv_": 240, "exp": [241, 1076], "exp_": 242, "expand": 243, "expand_a": 244, "expm1": [245, 1078], "expm1_": 246, "exponential_": 247, "fill_": 248, "fill_diagonal_": 249, "fix_": 251, "flatten": [252, 1105, 1373], "flip": [253, 1106], "fliplr": [254, 1107], "flipud": [255, 1108], "float": [256, 1905], "float_pow": [257, 1109], "float_power_": 258, "floor": [259, 1110], "floor_": 260, "floor_divid": [261, 1111], "floor_divide_": 262, "fmax": [263, 1112], "fmin": [264, 1113], "fmod": [265, 1114], "fmod_": 266, "frac": [267, 1115], "frac_": 268, "frexp": [269, 1116], "gather": [270, 981, 1135], "gcd": [271, 1136], "gcd_": 272, "ge": [273, 1137], "ge_": 274, "geometric_": 275, "geqrf": [276, 1138], "ger": [277, 1139], "get_devic": 278, "greater": [280, 1147], "greater_": 281, "greater_equ": [282, 1148], "greater_equal_": 283, "gt": [284, 1149], "gt_": 285, "half": 286, "hardshrink": [287, 1383, 1529], "heavisid": [288, 1152], "histc": [289, 1153], "histogram": [290, 1154], "hsplit": [291, 1156], "hypot": [292, 1159], "hypot_": 293, "i0": [294, 1160], "i0_": 295, "igamma": [296, 1161], "igamma_": 297, "igammac": [298, 1162], "igammac_": 299, "index_add": [301, 1164], "index_add_": 302, "index_copi": [303, 1165], "index_copy_": 304, "index_fil": 305, "index_fill_": 306, "index_put": 307, "index_put_": 308, "index_reduc": [309, 1166], "index_reduce_": 310, "index_select": [311, 1167], "indic": [312, 1865], "inner": [313, 1170], "int": 314, "int_repr": 315, "invers": [316, 1171, 1874], "is_coalesc": 317, "is_complex": [318, 1172], "is_conj": [319, 1173], "is_contigu": 320, "is_cuda": 321, "is_floating_point": [322, 1175], "is_infer": 323, "is_leaf": 324, "is_meta": 325, "is_pin": 326, "is_quant": 327, "is_set_to": 328, "is_shar": 329, "is_sign": 330, "is_spars": 331, "is_sparse_csr": 332, "isclos": [333, 1182], "isfinit": [334, 1183], "isinf": [335, 1185], "isnan": [336, 1186], "isneginf": [337, 1187], "isposinf": [338, 1188], "isreal": [339, 1189], "istft": [340, 1190], "items": 342, "kthvalu": [343, 1215], "lcm": [344, 1216], "lcm_": 345, "ldexp": [346, 1217], "ldexp_": 347, "le": [348, 1218], "le_": 349, "lerp": [350, 1219], "lerp_": 351, "less": [352, 1220], "less_": 353, "less_equ": [354, 1221], "less_equal_": 355, "lgamma": [356, 1222], "lgamma_": 357, "log10": [359, 1268], "log10_": 360, "log1p": [361, 1269], "log1p_": 362, "log2": [363, 1270], "log2_": 364, "log_": 365, "log_normal_": 366, "logaddexp": [367, 1271], "logaddexp2": [368, 1272], "logcumsumexp": [369, 1273], "logdet": [370, 1274], "logical_and": [371, 1275], "logical_and_": 372, "logical_not": [373, 1276], "logical_not_": 374, "logical_or": [375, 1277], "logical_or_": 376, "logical_xor": [377, 1278], "logical_xor_": 378, "logit": [379, 1279], "logit_": 380, "logsumexp": [381, 1281], "long": 382, "lt": [383, 1282], "lt_": 384, "lu": [385, 1240, 1283], "lu_solv": [386, 1243, 1284], "map_": 387, "masked_fil": 388, "masked_fill_": 389, "masked_scatt": 390, "masked_scatter_": 391, "masked_select": [392, 1287], "matmul": [393, 1244, 1288], "matrix_exp": [394, 1245, 1289], "matrix_pow": [395, 1247, 1290], "maximum": [397, 1292], "mean": [398, 1293], "median": [399, 1294], "minimum": [401, 1297], "mm": [402, 1298, 1788], "moveaxi": [404, 1300], "movedim": [405, 1301], "msort": [406, 1315], "mul": [407, 1316], "mul_": 408, "multipli": [410, 1318], "multiply_": 411, "mv": [412, 1319], "mvlgamma": [413, 1320], "mvlgamma_": 414, "nan_to_num": [415, 1321], "nan_to_num_": 416, "nanmean": [417, 1322], "nanmedian": [418, 1323], "nanquantil": [419, 1324], "nansum": [420, 1325], "narrow": [421, 1326], "narrow_copi": [422, 1327], "nbyte": 423, "ndim": 424, "ndimens": 425, "ne": [426, 1328], "ne_": 427, "neg": [428, 430, 1329, 1330], "neg_": 429, "negative_": 431, "nelement": 432, "new_empti": 433, "new_ful": 434, "new_on": 435, "new_tensor": 436, "new_zero": 437, "nextaft": [438, 1331], "nextafter_": 439, "normal_": 442, "not_equ": [443, 1656], "not_equal_": 444, "numel": [445, 1657], "numpi": [446, 1910, 1944], "orgqr": [447, 1696], "ormqr": [448, 1697], "outer": [449, 1698], "permut": [450, 1700, 1882], "pin_memori": 451, "pinvers": [452, 1701], "polygamma": [453, 1704], "polygamma_": 454, "posit": [455, 1705], "pow": [456, 1706], "pow_": 457, "prod": [458, 1707], "put_": 459, "q_per_channel_axi": 460, "q_per_channel_scal": 461, "q_per_channel_zero_point": 462, "q_scale": 463, "q_zero_point": 464, "qr": [465, 1252, 1709], "qscheme": 466, "quantil": [467, 1710], "rad2deg": [468, 1717], "random_": 469, "ravel": [470, 1726], "reciproc": [472, 1728], "reciprocal_": 473, "record_stream": 474, "register_hook": [475, 901], "register_post_accumulate_grad_hook": 476, "remaind": [477, 1729], "remainder_": 478, "renorm": [479, 1730], "renorm_": 480, "repeat": 481, "repeat_interleav": [482, 1731], "requires_grad": [483, 1889], "requires_grad_": 484, "reshap": [485, 1732], "reshape_a": 486, "resize_": 487, "resize_as_": 488, "resolve_conj": [489, 1733], "resolve_neg": [490, 1734], "retain_grad": 491, "retains_grad": 492, "roll": [493, 1736], "rot90": [494, 1737], "round": [495, 1738], "round_": 496, "row_indic": 497, "rsqrt": [498, 1740], "rsqrt_": 499, "scatter": [500, 983, 1742], "scatter_": 501, "scatter_add": [502, 1743], "scatter_add_": 503, "scatter_reduc": [504, 1744], "scatter_reduce_": 505, "select": [506, 1747, 1876], "select_scatt": [507, 1748], "set_": 508, "sgn": [509, 1761], "sgn_": 510, "share_memory_": 512, "short": 513, "sigmoid": [514, 747, 1457, 1578, 1762], "sigmoid_": 515, "sign": [516, 1763], "sign_": 517, "signbit": [518, 1775], "sin": [519, 1776], "sin_": 520, "sinc": [521, 1777], "sinc_": 522, "sinh": [523, 1778], "sinh_": 524, "slice_scatt": [526, 1779], "slogdet": [527, 1253, 1780], "smm": [528, 1781], "softmax": [529, 1460, 1582, 1782, 1790], "sort": [530, 1783], "sparse_dim": 531, "sparse_mask": 532, "sparse_resize_": 533, "sparse_resize_and_clear_": 534, "split": [535, 1799], "sqrt": [536, 1800], "sqrt_": 537, "squar": [538, 1801], "square_": 539, "squeez": [540, 1802], "squeeze_": 541, "sspaddmm": [542, 1803], "std": [543, 1805], "stft": [544, 1807], "storag": [545, 1927], "storage_offset": 546, "storage_typ": 547, "stride": 548, "sub": [549, 1808], "sub_": 550, "subtract": [551, 1809], "subtract_": 552, "sum": [553, 1792, 1810, 1885], "sum_to_s": 554, "svd": [555, 1257, 1811], "swapax": [556, 1813], "swapdim": [557, 1814], "t": [558, 1820, 1869, 1896, 1944], "t_": 559, "take": [560, 1821, 1912], "take_along_dim": [561, 1822], "tan": [562, 1823], "tan_": 563, "tanh": [564, 1467, 1587, 1824], "tanh_": 565, "tensor_split": [566, 1826], "tile": [567, 1828], "to_dens": 569, "to_mkldnn": 570, "to_spars": 571, "to_sparse_bsc": 572, "to_sparse_bsr": 573, "to_sparse_coo": 574, "to_sparse_csc": 575, "to_sparse_csr": 576, "tolist": 577, "topk": [578, 1829], "transpos": [580, 1831], "transpose_": 581, "triangular_solv": [582, 1834], "tril": [583, 1835], "tril_": 584, "triu": [585, 1837], "triu_": 586, "true_divid": [587, 1839], "true_divide_": 588, "trunc": [589, 1840], "trunc_": 590, "type_a": 592, "unbind": [593, 1841, 1884], "unflatten": [594, 1477, 1842], "unfold": [595, 1478, 1594], "uniform_": 596, "uniqu": [597, 1843], "unique_consecut": [598, 1844], "unsqueez": [599, 1845], "unsqueeze_": 600, "untyped_storag": 601, "var": [603, 1852], "vdot": [604, 1854], "view": [605, 1876, 1905, 1929, 1952], "view_a": 606, "vsplit": [607, 1858], "where": [608, 1860, 1864], "xlogi": [609, 1861], "xlogy_": 610, "zero_": 611, "_assert": 612, "_foreach_ab": 613, "_foreach_abs_": 614, "_foreach_aco": 615, "_foreach_acos_": 616, "_foreach_asin": 617, "_foreach_asin_": 618, "_foreach_atan": 619, "_foreach_atan_": 620, "_foreach_ceil": 621, "_foreach_ceil_": 622, "_foreach_co": 623, "_foreach_cos_": 624, "_foreach_cosh": 625, "_foreach_cosh_": 626, "_foreach_erf": 627, "_foreach_erf_": 628, "_foreach_erfc": 629, "_foreach_erfc_": 630, "_foreach_exp": 631, "_foreach_exp_": 632, "_foreach_expm1": 633, "_foreach_expm1_": 634, "_foreach_floor": 635, "_foreach_floor_": 636, "_foreach_frac": 637, "_foreach_frac_": 638, "_foreach_lgamma": 639, "_foreach_lgamma_": 640, "_foreach_log": 641, "_foreach_log10": 642, "_foreach_log10_": 643, "_foreach_log1p": 644, "_foreach_log1p_": 645, "_foreach_log2": 646, "_foreach_log2_": 647, "_foreach_log_": 648, "_foreach_neg": 649, "_foreach_neg_": 650, "_foreach_reciproc": 651, "_foreach_reciprocal_": 652, "_foreach_round": 653, "_foreach_round_": 654, "_foreach_sigmoid": 655, "_foreach_sigmoid_": 656, "_foreach_sin": 657, "_foreach_sin_": 658, "_foreach_sinh": 659, "_foreach_sinh_": 660, "_foreach_sqrt": 661, "_foreach_sqrt_": 662, "_foreach_tan": 663, "_foreach_tan_": 664, "_foreach_trunc": 665, "_foreach_trunc_": 666, "_foreach_zero_": 667, "_log": [668, 1875], "set_log": 668, "bnrelu2d": [688, 711], "bnrelu3d": [689, 712], "convbn1d": [690, 700], "convbn2d": [691, 701], "convbn3d": [692, 702], "convbnrelu1d": [693, 703], "convbnrelu2d": [694, 704], "convbnrelu3d": [695, 705], "convrelu1d": [696, 713], "convrelu2d": [697, 706, 714], "convrelu3d": [698, 707, 715], "linearrelu": [699, 708, 716, 717], "freeze_bn_stat": 709, "update_bn_stat": 710, "conv2d": [718, 727, 761, 1356, 1502], "conv3d": [719, 728, 762, 1357, 1503], "lstm": [722, 750, 1397, 1904], "multiheadattent": [723, 1433], "batchnorm2d": [724, 1346], "batchnorm3d": [725, 1347], "conv1d": [726, 760, 1355, 1501], "convtranspose1d": [729, 1358], "convtranspose2d": [730, 1359], "convtranspose3d": [731, 1360], "elu": [732, 763, 1369, 1515], "embed": [733, 1370, 1517], "embeddingbag": [734, 1371], "fxfloatfunct": 735, "floatfunct": 736, "groupnorm": [737, 1382], "hardswish": [738, 765, 1385, 1531], "instancenorm1d": [739, 1390], "instancenorm2d": [740, 1391], "instancenorm3d": [741, 1392], "layernorm": [742, 1399], "leakyrelu": [743, 1413], "qfunction": 745, "relu6": [746, 1447, 1572], "gru": [748, 1379], "grucel": [749, 1380], "lstmcell": [751, 1398], "rnncell": [753, 1444], "adaptive_avg_pool2d": [754, 1486], "adaptive_avg_pool3d": [755, 1487], "avg_pool2d": [756, 1494], "avg_pool3d": [757, 1495], "celu": [758, 1349, 1500], "hardsigmoid": [764, 1384, 1530], "hardtanh": [766, 1386, 1532], "interpol": [767, 1537], "leaky_relu": [768, 1541], "max_pool1d": [770, 1550], "max_pool2d": [771, 1551], "threshold": [772, 1469, 1589], "upsampl": [773, 1479, 1595], "upsample_bilinear": [774, 1596], "upsample_nearest": [775, 1597], "dequantstub": 776, "quantstub": 777, "quantwrapp": 778, "add_quant_dequ": 779, "backendconfig": 780, "backendpatternconfig": 781, "dtypeconfig": 782, "dtypewithconstraint": 783, "observationtyp": 784, "convert": [785, 1943], "default_eval_fn": 786, "fakequant": [787, 1916], "fakequantizebas": 788, "fixedqparamsfakequant": 789, "fusedmovingavgobsfakequant": 790, "default_fake_qu": 791, "default_fused_act_fake_qu": 792, "default_fused_per_channel_wt_fake_qu": 793, "default_fused_wt_fake_qu": 794, "default_histogram_fake_qu": 795, "default_per_channel_weight_fake_qu": 796, "default_weight_fake_qu": 797, "disable_fake_qu": 798, "disable_observ": 799, "enable_fake_qu": 800, "enable_observ": 801, "fuse_modul": 802, "convertcustomconfig": 803, "fusecustomconfig": 804, "preparecustomconfig": 805, "standalonemoduleconfigentri": 806, "histogramobserv": 807, "minmaxobserv": 808, "movingaverageminmaxobserv": 809, "movingaverageperchannelminmaxobserv": 810, "noopobserv": 811, "observerbas": 812, "perchannelminmaxobserv": 813, "placeholderobserv": 814, "recordingobserv": 815, "default_debug_observ": 816, "default_dynamic_quant_observ": 817, "default_float_qparams_observ": 818, "default_histogram_observ": 819, "default_observ": 820, "default_per_channel_weight_observ": 821, "default_placeholder_observ": 822, "default_weight_observ": 823, "get_observer_state_dict": 824, "load_observer_state_dict": 825, "prepar": [826, 1916, 1919], "prepare_qat": 827, "propagate_qconfig": 828, "qconfig": [829, 1916, 1919], "default_activation_only_qconfig": 830, "default_debug_qconfig": 831, "default_dynamic_qconfig": 832, "default_per_channel_qconfig": 833, "default_qat_qconfig": 834, "default_qat_qconfig_v2": 835, "default_qconfig": 836, "default_weight_only_qconfig": 837, "float16_dynamic_qconfig": 838, "float16_static_qconfig": 839, "float_qparams_weight_only_qconfig": 840, "per_channel_dynamic_qconfig": 841, "qconfigmap": 842, "get_default_qat_qconfig_map": 843, "get_default_qconfig_map": 844, "quantiz": [845, 1885, 1900, 1910, 1916, 1917, 1918, 1919], "quantize_dynam": 846, "convert_fx": 847, "fuse_fx": 848, "prepare_fx": 849, "prepare_qat_fx": 850, "quantize_qat": 851, "swap_modul": 852, "arang": 853, "are_deterministic_algorithms_en": 861, "as_tensor": 867, "asarrai": 868, "atleast_1d": 874, "atleast_2d": 875, "atleast_3d": 876, "dual_level": 882, "forward_ad": [883, 884], "make_du": 883, "unpack_du": 884, "functionctx": [885, 886, 887, 888], "mark_dirti": 885, "mark_non_differenti": 886, "save_for_backward": 887, "set_materialize_grad": 888, "hvp": 890, "vhp": 893, "gradcheck": [896, 1897], "gradgradcheck": [897, 1897], "metadata": [898, 1899], "name": [899, 1868, 1882, 1883], "next_funct": 900, "register_prehook": 902, "load_nvprof": 903, "export_chrome_trac": 904, "key_averag": 905, "self_cpu_time_tot": 906, "total_averag": 907, "bartlett_window": 909, "blackman_window": 918, "block_diag": 919, "broadcast_shap": 921, "broadcast_tensor": 922, "bucket": 924, "can_cast": 925, "cartesian_prod": 926, "cat": 927, "cdist": 928, "chain_matmul": 930, "column_stack": 938, "combin": [939, 1894], "compiled_with_cxx11_abi": 941, "allow_in_graph": [942, 1945], "list_backend": 946, "reset": 947, "concat": 949, "concaten": 950, "streamcontext": [960, 973], "current_stream": [961, 986], "device_count": [962, 989], "is_avail": [963, 1006], "cudagraph": [967, 1939], "cudapluggablealloc": 968, "externalstream": 970, "outofmemoryerror": 971, "caching_allocator_alloc": 974, "caching_allocator_delet": 975, "can_device_access_p": 976, "change_current_alloc": 977, "clock_rat": 978, "comm": [979, 980, 981, 982, 983], "broadcast": [979, 1890], "broadcast_coalesc": 980, "reduce_add": 982, "current_blas_handl": 984, "current_devic": 985, "default_stream": 987, "device_of": 990, "empty_cach": [991, 1304], "get_allocator_backend": 992, "get_arch_list": 993, "get_device_cap": 994, "get_device_nam": 995, "get_device_properti": 996, "get_gencode_flag": 997, "get_rng_stat": [998, 1145, 1306], "get_rng_state_al": 999, "get_sync_debug_mod": 1000, "graph_pool_handl": 1002, "init": [1003, 1887], "initial_se": [1004, 1169], "ipc_collect": 1005, "is_current_stream_captur": 1007, "is_initi": 1008, "_create_jit_fn": 1009, "_create_multi_output_jit_fn": 1010, "list_gpu_process": 1011, "make_graphed_cal": 1012, "manual_se": [1013, 1286, 1307], "manual_seed_al": 1014, "max_memory_alloc": 1015, "max_memory_cach": 1016, "max_memory_reserv": 1017, "mem_get_info": 1018, "memory_alloc": 1019, "memory_cach": 1020, "memory_reserv": 1021, "memory_snapshot": 1022, "memory_stat": 1023, "memory_summari": 1024, "memory_usag": 1025, "mark": 1026, "range_pop": 1027, "range_push": 1028, "power_draw": 1029, "reset_max_memory_alloc": 1030, "reset_max_memory_cach": 1031, "reset_peak_memory_stat": 1032, "seed": [1033, 1311, 1746], "seed_al": 1034, "set_devic": 1035, "set_per_process_memory_fract": [1036, 1312], "set_rng_stat": [1037, 1313, 1759], "set_rng_state_al": 1038, "set_stream": 1039, "set_sync_debug_mod": 1040, "temperatur": 1043, "cumulative_trapezoid": 1049, "dstack": 1065, "einsum": 1066, "empti": 1067, "empty_lik": 1068, "empty_strid": 1069, "enable_grad": 1070, "exp2": 1077, "ey": 1079, "fake_quantize_per_channel_affin": 1080, "fake_quantize_per_tensor_affin": 1081, "fft2": 1083, "fftfreq": 1084, "fftn": 1085, "fftshift": 1086, "hfft": 1087, "hfft2": 1088, "hfftn": 1089, "ifft": 1090, "ifft2": 1091, "ifftn": 1092, "ifftshift": 1093, "ihfft": 1094, "ihfft2": 1095, "ihfftn": 1096, "irfft": 1097, "irfft2": 1098, "irfftn": 1099, "rfft": 1100, "rfft2": 1101, "rfftfreq": 1102, "rfftn": 1103, "from_dlpack": 1117, "from_numpi": 1118, "frombuff": 1119, "full": [1120, 1905], "full_lik": 1121, "functional_cal": [1122, 1649], "grad_and_valu": 1125, "replace_all_batch_norm_modules_": 1131, "stack_module_st": 1132, "get_default_dtyp": 1140, "get_deterministic_debug_mod": 1141, "get_float32_matmul_precis": 1142, "get_num_interop_thread": 1143, "get_num_thread": 1144, "hamming_window": 1150, "hann_window": 1151, "histogramdd": 1155, "hspmm": 1157, "hstack": 1158, "inference_mod": 1168, "is_deterministic_algorithms_warn_only_en": 1174, "is_grad_en": 1176, "is_inference_mode_en": 1177, "is_nonzero": 1178, "is_storag": 1179, "is_tensor": 1180, "is_warn_always_en": 1181, "isin": 1184, "attribut": [1191, 1866, 1868, 1869, 1871, 1928], "scriptfunct": 1192, "scriptmodul": [1193, 1905], "annot": [1194, 1869], "enable_onednn_fus": 1195, "fork": 1196, "freez": 1197, "ignor": 1198, "isinst": 1200, "onednn_fusion_en": 1202, "optimize_for_infer": 1203, "save": [1204, 1741, 1864, 1889, 1899, 1905, 1916], "script_if_trac": 1206, "set_fusion_strategi": 1207, "strict_fus": 1208, "trace_modul": 1210, "unus": 1211, "wait": 1212, "kaiser_window": 1213, "kron": 1214, "cholesky_ex": 1224, "eig": 1229, "eigh": 1230, "eigval": 1231, "eigvalsh": 1232, "householder_product": 1233, "inv": 1234, "inv_ex": 1235, "ldl_factor": 1236, "ldl_factor_ex": 1237, "ldl_solv": 1238, "lstsq": 1239, "lu_factor": 1241, "lu_factor_ex": 1242, "matrix_norm": 1246, "matrix_rank": 1248, "multi_dot": 1249, "pinv": 1251, "solv": 1254, "solve_ex": 1255, "solve_triangular": 1256, "svdval": 1258, "tensorinv": 1259, "tensorsolv": 1260, "vander": [1261, 1851], "vecdot": 1262, "vector_norm": 1263, "linspac": 1264, "lobpcg": 1266, "logspac": 1280, "lu_unpack": 1285, "meshgrid": 1295, "current_allocated_memori": 1302, "driver_allocated_memori": 1303, "stop": 1310, "adaptiveavgpool1d": 1332, "adaptiveavgpool2d": 1333, "adaptiveavgpool3d": 1334, "adaptivelogsoftmaxwithloss": 1335, "adaptivemaxpool1d": 1336, "adaptivemaxpool2d": 1337, "adaptivemaxpool3d": 1338, "alphadropout": 1339, "avgpool1d": 1340, "avgpool2d": 1341, "avgpool3d": 1342, "bceloss": 1343, "bcewithlogitsloss": 1344, "batchnorm1d": 1345, "bilinear": [1348, 1497], "ctcloss": 1350, "channelshuffl": 1351, "constantpad1d": 1352, "constantpad2d": 1353, "constantpad3d": 1354, "cosineembeddingloss": 1361, "cosinesimilar": 1362, "crossentropyloss": 1363, "dataparallel": [1364, 1885, 1886, 1888, 1892], "dropout": [1365, 1511, 1885, 1886], "dropout1d": [1366, 1512], "dropout2d": [1367, 1513], "dropout3d": [1368, 1514], "featurealphadropout": 1372, "fold": [1374, 1520], "fractionalmaxpool2d": 1375, "fractionalmaxpool3d": 1376, "gelu": [1377, 1524], "glu": [1378, 1525], "gaussiannllloss": 1381, "hingeembeddingloss": 1387, "huberloss": 1388, "ident": [1389, 1623, 1631, 1869, 1896], "kldivloss": 1393, "l1loss": 1394, "lppool1d": 1395, "lppool2d": 1396, "lazybatchnorm1d": 1400, "lazybatchnorm2d": 1401, "lazybatchnorm3d": 1402, "lazyconv1d": 1403, "lazyconv2d": 1404, "lazyconv3d": 1405, "lazyconvtranspose1d": 1406, "lazyconvtranspose2d": 1407, "lazyconvtranspose3d": 1408, "lazyinstancenorm1d": 1409, "lazyinstancenorm2d": 1410, "lazyinstancenorm3d": 1411, "lazylinear": 1412, "localresponsenorm": 1415, "logsigmoid": [1416, 1546], "logsoftmax": 1417, "mseloss": 1418, "marginrankingloss": 1419, "maxpool1d": 1420, "maxpool2d": 1421, "maxpool3d": 1422, "maxunpool1d": 1423, "maxunpool2d": 1424, "maxunpool3d": 1425, "mish": [1426, 1556], "moduledict": [1428, 1869], "modulelist": [1429, 1868, 1869], "multilabelmarginloss": 1430, "multilabelsoftmarginloss": 1431, "multimarginloss": 1432, "nllloss": 1434, "prelu": [1435, 1570], "pairwisedist": 1436, "parameterdict": 1437, "parameterlist": 1438, "pixelshuffl": 1439, "pixelunshuffl": 1440, "poissonnllloss": 1441, "rnn": [1442, 1641, 1642, 1643, 1644, 1645, 1646, 1904], "rnnbase": 1443, "rrelu": [1445, 1574], "relu": [1446, 1571], "reflectionpad1d": 1448, "reflectionpad2d": 1449, "reflectionpad3d": 1450, "replicationpad1d": 1451, "replicationpad2d": 1452, "replicationpad3d": 1453, "selu": [1454, 1577], "sequenti": 1455, "silu": [1456, 1579], "smoothl1loss": 1458, "softmarginloss": 1459, "softmax2d": 1461, "softmin": [1462, 1583], "softplu": [1463, 1584], "softshrink": [1464, 1585], "softsign": [1465, 1586], "syncbatchnorm": 1466, "tanhshrink": [1468, 1588], "transformerdecod": 1471, "transformerdecoderlay": 1472, "transformerencod": 1473, "transformerencoderlay": 1474, "tripletmarginloss": 1475, "tripletmarginwithdistanceloss": 1476, "upsamplingbilinear2d": 1480, "upsamplingnearest2d": 1481, "zeropad1d": 1482, "zeropad2d": 1483, "zeropad3d": 1484, "adaptive_avg_pool1d": 1485, "adaptive_max_pool1d": 1488, "adaptive_max_pool2d": 1489, "adaptive_max_pool3d": 1490, "affine_grid": 1491, "alpha_dropout": 1492, "avg_pool1d": 1493, "batch_norm": 1496, "conv_transpose1d": 1504, "conv_transpose2d": 1505, "conv_transpose3d": 1506, "cosine_embedding_loss": 1507, "cosine_similar": 1508, "cross_entropi": 1509, "ctc_loss": 1510, "elu_": 1516, "embedding_bag": 1518, "feature_alpha_dropout": 1519, "fractional_max_pool2d": 1521, "fractional_max_pool3d": 1522, "gaussian_nll_loss": 1523, "grid_sampl": 1526, "group_norm": 1527, "gumbel_softmax": 1528, "hardtanh_": 1533, "hinge_embedding_loss": 1534, "huber_loss": 1535, "instance_norm": 1536, "kl_div": 1538, "l1_loss": 1539, "layer_norm": 1540, "leaky_relu_": 1542, "local_response_norm": 1544, "log_softmax": [1545, 1787], "lp_pool1d": 1547, "lp_pool2d": 1548, "margin_ranking_loss": 1549, "max_pool3d": 1552, "max_unpool1d": 1553, "max_unpool2d": 1554, "max_unpool3d": 1555, "mse_loss": 1557, "multi_margin_loss": 1558, "multilabel_margin_loss": 1559, "multilabel_soft_margin_loss": 1560, "nll_loss": 1561, "one_hot": 1563, "pad": [1564, 1885], "pairwise_dist": 1565, "pdist": 1566, "pixel_shuffl": 1567, "pixel_unshuffl": 1568, "poisson_nll_loss": 1569, "relu_": 1573, "rrelu_": 1575, "scaled_dot_product_attent": 1576, "smooth_l1_loss": 1580, "soft_margin_loss": 1581, "threshold_": 1590, "data_parallel": [1591, 1886], "triplet_margin_loss": 1592, "triplet_margin_with_distance_loss": 1593, "lazymodulemixin": 1598, "register_module_backward_hook": 1599, "register_module_buffer_registration_hook": 1600, "register_module_forward_hook": 1601, "register_module_forward_pre_hook": 1602, "register_module_full_backward_hook": 1603, "register_module_full_backward_pre_hook": 1604, "register_module_module_registration_hook": 1605, "register_module_parameter_registration_hook": 1606, "distributeddataparallel": [1607, 1888, 1892, 1893], "uninitializedbuff": 1609, "uninitializedparamet": 1610, "clip_grad_norm_": 1611, "clip_grad_value_": 1612, "parameters_to_vector": 1613, "parametr": [1614, 1615, 1617, 1618, 1619, 1620, 1900], "orthogon": 1614, "spectral_norm": [1615, 1648], "parametrizationlist": 1616, "cach": [1617, 1864, 1892, 1898, 1947], "is_parametr": 1618, "register_parametr": 1619, "remove_parametr": 1620, "basepruningmethod": 1621, "customfrommask": 1622, "l1unstructur": 1624, "lnstructur": 1625, "pruningcontain": 1626, "randomstructur": 1627, "randomunstructur": 1628, "prune": [1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1900], "custom_from_mask": 1629, "global_unstructur": 1630, "is_prun": 1632, "l1_unstructur": 1633, "ln_structur": 1634, "random_structur": 1635, "random_unstructur": 1636, "remove_spectral_norm": 1638, "remove_weight_norm": 1639, "packedsequ": 1640, "pack_padded_sequ": 1641, "pack_sequ": 1642, "pad_packed_sequ": 1643, "pad_sequ": 1644, "unpack_sequ": 1645, "unpad_sequ": 1646, "skip_init": 1647, "stateless": 1649, "vector_to_paramet": 1650, "weight_norm": 1651, "no_grad": 1652, "ones": [1658, 1944], "ones_lik": 1659, "jitscalartyp": 1660, "graphinfo": 1661, "verificationopt": 1662, "asgd": 1663, "adadelta": 1664, "adagrad": 1665, "adam": 1666, "adamw": 1667, "adamax": 1668, "lbfg": 1669, "nadam": 1670, "add_param_group": 1671, "load_state_dict": 1672, "state_dict": [1673, 1950], "step": [1674, 1912, 1946], "zero_grad": 1675, "radam": 1676, "rmsprop": 1677, "rprop": 1678, "sgd": 1679, "sparseadam": 1680, "chainedschedul": 1681, "constantlr": 1682, "cosineannealinglr": 1683, "cosineannealingwarmrestart": 1684, "cycliclr": 1685, "exponentiallr": 1686, "lambdalr": 1687, "linearlr": 1688, "multisteplr": 1689, "multiplicativelr": 1690, "onecyclelr": 1691, "polynomiallr": 1692, "reducelronplateau": 1693, "sequentiallr": 1694, "steplr": 1695, "pca_lowrank": 1699, "polar": 1703, "promote_typ": 1708, "quantize_per_channel": 1711, "quantize_per_tensor": 1712, "quantized_batch_norm": 1713, "quantized_max_pool1d": 1714, "quantized_max_pool2d": 1715, "sobolengin": 1716, "rand": 1718, "rand_lik": 1719, "randint": 1720, "randint_lik": 1721, "randn": 1722, "randn_lik": 1723, "randperm": 1724, "rang": [1725, 1868], "result_typ": 1735, "row_stack": 1739, "searchsort": 1745, "set_default_devic": 1749, "set_default_dtyp": 1750, "set_default_tensor_typ": 1751, "set_deterministic_debug_mod": 1752, "set_float32_matmul_precis": 1753, "set_flush_denorm": 1754, "set_grad_en": 1755, "set_num_interop_thread": 1756, "set_num_thread": 1757, "set_printopt": 1758, "set_warn_alwai": 1760, "signal": [1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1924], "bartlett": 1764, "blackman": 1765, "cosin": 1766, "gaussian": 1768, "general_cosin": 1769, "general_ham": 1770, "ham": 1771, "hann": 1772, "kaiser": 1773, "nuttal": 1774, "as_sparse_gradcheck": 1785, "check_sparse_tensor_invari": 1786, "sampled_addmm": 1789, "spdiag": 1791, "sparse_bsc_tensor": 1793, "sparse_bsr_tensor": 1794, "sparse_compressed_tensor": 1795, "sparse_coo_tensor": 1796, "sparse_csc_tensor": 1797, "sparse_csr_tensor": 1798, "std_mean": 1806, "svd_lowrank": 1812, "sym_float": 1815, "sym_int": 1816, "sym_max": 1817, "sym_min": 1818, "sym_not": 1819, "tensordot": 1827, "trapezoid": 1832, "trapz": 1833, "tril_indic": 1836, "triu_indic": 1838, "use_deterministic_algorithm": 1846, "generate_methods_for_privateuse1_backend": 1847, "get_cpp_backtrac": 1848, "rename_privateuse1_backend": 1849, "set_modul": 1850, "var_mean": 1853, "view_as_complex": 1855, "view_as_r": 1856, "vstack": 1859, "zero": 1862, "zeros_lik": 1863, "hub": 1864, "publish": 1864, "entrypoint": 1864, "run": [1864, 1951], "my": [1864, 1889, 1896, 1913, 1944, 1951], "download": 1864, "logic": [1864, 1868], "known": [1864, 1866], "bind": 1865, "tabl": [1865, 1905], "built": [1866, 1867, 1869, 1910], "comparison": [1866, 1868, 1869, 1933, 1939], "inspect": [1866, 1908, 1941], "warn": 1866, "appendix": [1866, 1869], "recurs": 1866, "constant": [1866, 1868], "fusion": 1866, "math": [1867, 1933], "construct": [1868, 1869, 1871, 1884, 1912, 1925], "refin": [1868, 1869], "enum": [1868, 1869], "tupl": [1868, 1869], "liter": [1868, 1869], "list": [1868, 1869, 1910], "dict": 1868, "arithmet": [1868, 1869], "subscript": [1868, 1869], "slice": [1868, 1869, 1903, 1933], "ternari": [1868, 1869], "cast": 1868, "statement": [1868, 1869], "assign": [1868, 1869], "If": 1868, "while": [1868, 1869], "loop": 1868, "For": 1868, "continu": [1868, 1869], "return": [1868, 1869, 1896, 1923], "resolut": [1868, 1869], "lookup": 1868, "defin": [1868, 1894, 1895], "terminologi": 1869, "primit": 1869, "instanc": 1869, "when": [1869, 1889, 1894, 1910, 1916, 1925, 1944], "signatur": 1869, "expr": 1869, "convers": [1869, 1884], "atom": 1869, "identifi": [1869, 1944, 1954], "parenthes": 1869, "form": 1869, "displai": 1869, "primari": 1869, "power": 1869, "unari": [1869, 1876, 1925], "bitwis": 1869, "binari": [1869, 1876], "shift": 1869, "boolean": 1869, "condit": 1869, "augment": 1869, "rais": 1869, "del": 1869, "compound": 1869, "els": 1869, "getattr": 1869, "hasattr": 1869, "zip": [1869, 1913], "enumer": 1869, "rule": [1869, 1883, 1895, 1908], "remot": [1869, 1923], "procedur": 1869, "execut": [1869, 1889, 1892, 1913, 1914, 1944], "program": 1869, "coverag": [1870, 1882, 1894], "properti": [1871, 1874], "correctli": 1871, "bound": 1871, "schema": 1871, "between": [1871, 1913, 1944], "matrix": [1874, 1916], "decomposit": 1874, "solver": 1874, "misc": 1874, "experiment": 1874, "motiv": [1876, 1942, 1943], "reduct": [1876, 1892, 1903, 1933], "mobile_optim": 1877, "model_zoo": 1878, "strategi": [1881, 1912], "descriptor": 1881, "file_descriptor": 1881, "file_system": 1881, "subprocess": 1881, "keep": [1882, 1913], "dimens": [1882, 1883], "unifi": 1882, "contract": 1882, "awai": 1882, "factori": 1882, "variant": 1882, "semant": [1883, 1890, 1892, 1898, 1905], "infer": [1883, 1889, 1891, 1905], "explicit": 1883, "align": 1883, "current": 1883, "subsystem": 1883, "constructor": 1884, "contain": 1885, "convolut": [1885, 1886, 1903, 1904], "layer": 1885, "pool": [1885, 1886], "activ": [1885, 1886, 1956], "weight": [1885, 1912], "nonlinear": 1885, "recurr": [1885, 1896], "distanc": [1885, 1886], "loss": [1885, 1886, 1888], "vision": [1885, 1886], "shuffl": 1885, "lazi": 1885, "attent": 1886, "typic": 1888, "unscal": 1888, "accumul": 1888, "penalti": 1888, "one": 1888, "per": [1888, 1912], "need": [1888, 1944], "particular": [1888, 1889], "dtype": [1888, 1905, 1919, 1928], "encod": 1889, "histori": [1889, 1956], "set": [1889, 1910], "No": 1889, "evalu": [1889, 1897, 1947], "multithread": 1889, "concurr": 1889, "determin": [1889, 1904], "retain": 1889, "thread": [1889, 1891], "safeti": 1889, "wirting": 1889, "calculu": 1889, "pictur": 1889, "conjug": 1889, "own": 1889, "formula": 1889, "domain": 1889, "regist": [1889, 1940], "whether": [1889, 1913], "fire": 1889, "differ": [1889, 1910, 1944], "modifi": 1889, "compat": 1890, "runtim": [1891, 1896, 1954], "tune": 1891, "tensorfloat": [1892, 1898, 1903], "32": [1892, 1898, 1903, 1906], "tf32": [1892, 1898, 1903], "amper": [1892, 1903], "reduc": [1892, 1903], "fp16": [1892, 1903], "gemm": [1892, 1903], "bf16": [1892, 1903], "bc": 1892, "alloc": [1892, 1896, 1956], "cubla": 1892, "workspac": 1892, "cufft": 1892, "plan": [1892, 1898], "just": 1892, "time": [1892, 1948, 1952], "practic": [1892, 1902, 1916, 1938], "agnost": 1892, "buffer": [1892, 1902], "instead": 1892, "whole": [1892, 1944], "captur": 1892, "partial": 1892, "9": 1892, "6": 1892, "across": [1892, 1905], "intern": [1893, 1910, 1913, 1941, 1942], "processgroup": 1893, "ddpoptim": 1893, "separ": 1894, "setup_context": 1894, "like": [1894, 1913], "subclass": [1894, 1943], "wrapper": 1894, "__torch_function__": 1894, "overrid": [1894, 1955], "nativ": [1894, 1916, 1918], "anoth": 1895, "specifi": 1895, "gotcha": 1895, "staticmethod": 1895, "isn": 1896, "freed": 1896, "properli": 1896, "loader": 1896, "doesn": 1896, "notat": 1897, "background": [1897, 1922, 1923, 1939], "inform": [1897, 1921, 1953], "analyt": 1897, "output": 1897, "u": 1897, "reus": [1898, 1902], "hipfft": 1898, "rocfft": 1898, "enabl": 1898, "larg": 1899, "fleet": 1899, "wide": 1899, "attach": 1899, "consider": 1899, "block": 1900, "neural": 1900, "tip": [1902, 1917], "fight": 1902, "deadlock": 1902, "through": 1902, "queue": 1902, "e": 1902, "g": 1902, "hogwild": 1902, "oversubscript": 1902, "accuraci": [1903, 1916, 1917, 1954], "extrem": 1903, "finit": 1903, "instinct": 1903, "mi200": 1903, "reproduc": 1904, "nondeterminist": 1904, "algorithm": [1904, 1912, 1922], "content": [1905, 1913], "preserv": 1905, "them": [1905, 1913], "version": 1905, "integ": 1905, "divis": 1905, "alwai": 1905, "includ": [1906, 1913], "compon": 1906, "speed": [1906, 1944], "One": [1906, 1953], "instal": 1906, "cffi": 1906, "cpp": 1906, "found": 1906, "win": 1906, "channel": 1906, "without": 1906, "claus": 1906, "protect": 1906, "broken": 1906, "pipe": [1906, 1914], "driver": 1906, "shut": 1906, "down": 1906, "ipc": 1906, "base": [1907, 1908, 1910, 1912, 1953], "gui": 1908, "diagnos": [1908, 1954], "sarif": 1908, "diagnost": 1908, "alexnet": 1910, "v": 1910, "index": [1910, 1933], "aten": [1910, 1949, 1953], "inlin": 1910, "discov": 1910, "unconvert": 1910, "onc": 1910, "adjust": 1912, "learn": 1912, "rate": 1912, "averag": 1912, "swa": 1912, "ema": 1912, "schedul": 1912, "care": 1912, "put": 1912, "togeth": 1912, "your": 1913, "do": [1913, 1941, 1944], "see": [1913, 1944], "insid": [1913, 1944], "treat": 1913, "archiv": 1913, "file_structur": 1913, "given": 1913, "wa": 1913, "resourc": [1913, 1943], "later": 1913, "distinguish": 1913, "explan": 1913, "format": 1913, "analyz": 1913, "extern": 1913, "mock": 1913, "refactor": 1913, "sharp": 1913, "global": 1913, "isol": 1913, "each": [1913, 1943], "mangl": 1913, "pipelin": 1914, "skip": 1914, "connect": 1914, "intel": 1915, "instrument": 1915, "technologi": 1915, "eager": 1916, "awar": 1916, "maintainc": 1916, "engin": 1916, "observ": [1916, 1919], "hardwar": 1916, "configur": [1916, 1918], "insensit": 1917, "int8": 1917, "sensit": 1917, "ao": [1919, 1934, 1935], "top": 1919, "quantize_fx": 1919, "qconfig_map": 1919, "backend_config": 1919, "custom_config": 1919, "pt2e": 1919, "0": [1919, 1950, 1951, 1954], "relat": [1919, 1943], "fake_quant": 1919, "intrins": 1919, "qat": 1919, "scheme": 1919, "rpc": 1921, "tensorpip": 1921, "rref": [1921, 1923], "remotemodul": 1921, "record": 1922, "dure": 1922, "smart": 1922, "end": 1922, "protocol": 1923, "assumpt": 1923, "lifetim": 1923, "reason": 1923, "scenario": 1923, "owner": 1923, "argument": 1923, "sparsiti": 1925, "semi": 1925, "acceler": 1925, "coo": 1925, "hybrid": 1925, "uncoalesc": 1925, "csr": 1925, "csc": 1925, "bsr": 1925, "bsc": 1925, "memory_format": 1928, "tensorboard": 1930, "creation": 1933, "sampl": 1933, "quasi": 1933, "pointwis": 1933, "spectral": 1933, "bla": 1933, "lapack": 1933, "foreach": 1933, "path": 1933, "n": [1934, 1935], "_numeric_suit": 1934, "_numeric_suite_fx": 1935, "howto": 1936, "vendor": 1936, "x86": 1938, "tree": 1939, "integr": 1939, "callabl": 1939, "previou": 1939, "after": 1940, "aotautograd": 1940, "speedi": 1940, "guard": [1941, 1942, 1947], "dynamo": 1941, "artifact": 1941, "abridg": 1942, "public": 1942, "overal": [1942, 1943], "architectur": [1942, 1943], "dimdynam": 1942, "unback": 1942, "symint": 1942, "fake": 1943, "bit": 1943, "detail": 1943, "individu": [1943, 1948], "characterist": 1943, "interact": 1943, "you": 1944, "still": 1944, "crash": 1944, "slow": 1944, "recompil": [1944, 1954], "am": 1944, "speedup": 1944, "caus": [1944, 1954], "didn": 1944, "incorrect": 1944, "result": 1944, "oom": 1944, "handl": 1944, "besid": 1944, "via": 1944, "under": 1944, "some": 1944, "did": 1944, "fine": [1944, 1945], "grain": [1944, 1945], "_dynamo": [1944, 1945], "disallow_in_graph": [1944, 1945], "_dynamo_skip": 1944, "pretrain": 1946, "next": 1946, "frame": 1947, "pep": 1947, "523": 1947, "instructiontransl": 1947, "torchinductor": [1948, 1951, 1954], "relev": 1948, "breakdown": 1948, "ir": [1949, 1953], "prim": 1949, "__call__": 1950, "dashboard": 1951, "measur": 1951, "pr": 1951, "affect": 1951, "befor": 1951, "merg": 1951, "understand": [1952, 1956], "around": 1952, "overhead": 1952, "x": 1953, "none": 1953, "partition": 1953, "matcher": 1953, "capabl": 1953, "troubleshoot": 1954, "titl": 1954, "minifi": 1954, "torch_compile_debug": 1954, "excess": 1954, "snapshot": 1956, "visual": 1956, "timelin": 1956, "info": 1957, "finfo": 1957, "iinfo": 1957}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.fix_": [[251, "torch-tensor-fix"]], "torch.Tensor.ger": [[277, "torch-tensor-ger"]], "torch.Tensor.histc": [[289, "torch-tensor-histc"]], "torch.Tensor.greater_equal_": [[283, "torch-tensor-greater-equal"]], "torch.Tensor.half": [[286, "torch-tensor-half"]], "torch.Tensor.heaviside": [[288, "torch-tensor-heaviside"]], "torch.Tensor.fmin": [[264, "torch-tensor-fmin"]], "torch.Tensor.fliplr": [[254, "torch-tensor-fliplr"]], "torch.Tensor.flatten": [[252, "torch-tensor-flatten"]], "torch.Tensor.frexp": [[269, "torch-tensor-frexp"]], "torch.Tensor.float_power_": [[258, "torch-tensor-float-power"]], "torch.Tensor.hypot": [[292, "torch-tensor-hypot"]], "torch.Tensor.ge": [[273, "torch-tensor-ge"]], "torch.Tensor.floor_": [[260, "torch-tensor-floor"]], "torch.Tensor.fix": [[250, "torch-tensor-fix"]], "torch.Tensor.gcd": [[271, "torch-tensor-gcd"]], "torch.Tensor.grad": [[279, "torch-tensor-grad"]], "torch.Tensor.greater_equal": [[282, "torch-tensor-greater-equal"]], "torch.Tensor.expm1": [[245, "torch-tensor-expm1"]], "torch.Tensor.ge_": [[274, "torch-tensor-ge"]], "torch.Tensor.exponential_": [[247, "torch-tensor-exponential"]], "torch.Tensor.expm1_": [[246, "torch-tensor-expm1"]], "torch.Tensor.flip": [[253, "torch-tensor-flip"]], "torch.Tensor.geometric_": [[275, "torch-tensor-geometric"]], "torch.Tensor.floor": [[259, "torch-tensor-floor"]], "torch.Tensor.fill_": [[248, "torch-tensor-fill"]], "torch.Tensor.geqrf": [[276, "torch-tensor-geqrf"]], "torch.Tensor.float_power": [[257, "torch-tensor-float-power"]], "torch.Tensor.floor_divide": [[261, "torch-tensor-floor-divide"]], "torch.Tensor.flipud": [[255, "torch-tensor-flipud"]], "torch.Tensor.histogram": [[290, "torch-tensor-histogram"]], "torch.Tensor.get_device": [[278, "torch-tensor-get-device"]], "torch.Tensor.greater_": [[281, "torch-tensor-greater"]], "torch.Tensor.fmod": [[265, "torch-tensor-fmod"]], "torch.Tensor.fmod_": [[266, "torch-tensor-fmod"]], "torch.Tensor.frac_": [[268, "torch-tensor-frac"]], "torch.Tensor.hardshrink": [[287, "torch-tensor-hardshrink"]], "torch.Tensor.fill_diagonal_": [[249, "torch-tensor-fill-diagonal"]], "torch.Tensor.gt_": [[285, "torch-tensor-gt"]], "torch.Tensor.floor_divide_": [[262, "torch-tensor-floor-divide"]], "torch.Tensor.fmax": [[263, "torch-tensor-fmax"]], "torch.Tensor.hsplit": [[291, "torch-tensor-hsplit"]], "torch.Tensor.hypot_": [[293, "torch-tensor-hypot"]], "torch.Tensor.gather": [[270, "torch-tensor-gather"]], "torch.Tensor.float": [[256, "torch-tensor-float"]], "torch.Tensor.frac": [[267, "torch-tensor-frac"]], "torch.Tensor.gcd_": [[272, "torch-tensor-gcd"]], "torch.Tensor.gt": [[284, "torch-tensor-gt"]], "torch.Tensor.greater": [[280, "torch-tensor-greater"]], "torch.Tensor.byte": [[161, "torch-tensor-byte"]], "torch.Tensor.bitwise_not": [[150, "torch-tensor-bitwise-not"]], "torch.Tensor.clamp": [[174, "torch-tensor-clamp"]], "torch.Tensor.chunk": [[173, "torch-tensor-chunk"]], "torch.Tensor.clone": [[178, "torch-tensor-clone"]], "torch.Tensor.copysign_": [[187, "torch-tensor-copysign"]], "torch.Tensor.cauchy_": [[162, "torch-tensor-cauchy"]], "torch.Tensor.clamp_": [[175, "torch-tensor-clamp"]], "torch.Tensor.bool": [[159, "torch-tensor-bool"]], "torch.Tensor.coalesce": [[179, "torch-tensor-coalesce"]], "torch.Tensor.cholesky_inverse": [[171, "torch-tensor-cholesky-inverse"]], "torch.Tensor.conj_physical_": [[183, "torch-tensor-conj-physical"]], "torch.Tensor.cos_": [[190, "torch-tensor-cos"]], "torch.Tensor.corrcoef": [[188, "torch-tensor-corrcoef"]], "torch.Tensor.bitwise_and_": [[147, "torch-tensor-bitwise-and"]], "torch.Tensor.cosh": [[191, "torch-tensor-cosh"]], "torch.Tensor.cfloat": [[167, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_left_shift_": [[149, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.count_nonzero": [[193, "torch-tensor-count-nonzero"]], "torch.Tensor.clip": [[176, "torch-tensor-clip"]], "torch.Tensor.bitwise_xor": [[156, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_or_": [[153, "torch-tensor-bitwise-or"]], "torch.Tensor.conj_physical": [[182, "torch-tensor-conj-physical"]], "torch.Tensor.ccol_indices": [[163, "torch-tensor-ccol-indices"]], "torch.Tensor.chalf": [[168, "torch-tensor-chalf"]], "torch.Tensor.copysign": [[186, "torch-tensor-copysign"]], "torch.Tensor.cos": [[189, "torch-tensor-cos"]], "torch.Tensor.cosh_": [[192, "torch-tensor-cosh"]], "torch.Tensor.copy_": [[185, "torch-tensor-copy"]], "torch.Tensor.cpu": [[195, "torch-tensor-cpu"]], "torch.Tensor.bitwise_not_": [[151, "torch-tensor-bitwise-not"]], "torch.Tensor.broadcast_to": [[160, "torch-tensor-broadcast-to"]], "torch.Tensor.conj": [[181, "torch-tensor-conj"]], "torch.Tensor.cov": [[194, "torch-tensor-cov"]], "torch.Tensor.cdouble": [[164, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_right_shift": [[154, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bitwise_or": [[152, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_right_shift_": [[155, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clip_": [[177, "torch-tensor-clip"]], "torch.Tensor.ceil": [[165, "torch-tensor-ceil"]], "torch.Tensor.bitwise_xor_": [[157, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_left_shift": [[148, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.col_indices": [[180, "torch-tensor-col-indices"]], "torch.Tensor.bmm": [[158, "torch-tensor-bmm"]], "torch.Tensor.cholesky_solve": [[172, "torch-tensor-cholesky-solve"]], "torch.Tensor.char": [[169, "torch-tensor-char"]], "torch.Tensor.contiguous": [[184, "torch-tensor-contiguous"]], "torch.Tensor.cholesky": [[170, "torch-tensor-cholesky"]], "torch.Tensor.ceil_": [[166, "torch-tensor-ceil"]], "torch.Tensor.arcsinh_": [[116, "torch-tensor-arcsinh"]], "torch.Tensor.asin": [[129, "torch-tensor-asin"]], "torch.Tensor.atanh": [[137, "torch-tensor-atanh"]], "torch.Tensor.addr": [[98, "torch-tensor-addr"]], "torch.Tensor.allclose": [[102, "torch-tensor-allclose"]], "torch.Tensor.arctan2_": [[119, "torch-tensor-arctan2"]], "torch.Tensor.argmax": [[123, "torch-tensor-argmax"]], "torch.Tensor.asinh": [[131, "torch-tensor-asinh"]], "torch.Tensor.baddbmm": [[140, "torch-tensor-baddbmm"]], "torch.Tensor.apply_": [[108, "torch-tensor-apply"]], "torch.Tensor.arccos": [[109, "torch-tensor-arccos"]], "torch.Tensor.arctanh_": [[122, "torch-tensor-arctanh"]], "torch.Tensor.addr_": [[99, "torch-tensor-addr"]], "torch.Tensor.atanh_": [[138, "torch-tensor-atanh"]], "torch.Tensor.argwhere": [[126, "torch-tensor-argwhere"]], "torch.Tensor.adjoint": [[100, "torch-tensor-adjoint"]], "torch.Tensor.bincount": [[145, "torch-tensor-bincount"]], "torch.Tensor.any": [[107, "torch-tensor-any"]], "torch.Tensor.atan2_": [[135, "torch-tensor-atan2"]], "torch.Tensor.as_subclass": [[128, "torch-tensor-as-subclass"]], "torch.Tensor.all": [[101, "torch-tensor-all"]], "torch.Tensor.arccos_": [[110, "torch-tensor-arccos"]], "torch.Tensor.as_strided": [[127, "torch-tensor-as-strided"]], "torch.Tensor.bernoulli": [[142, "torch-tensor-bernoulli"]], "torch.Tensor.arccosh_": [[112, "torch-tensor-arccosh"]], "torch.Tensor.arctanh": [[121, "torch-tensor-arctanh"]], "torch.Tensor.argsort": [[125, "torch-tensor-argsort"]], "torch.Tensor.bernoulli_": [[143, "torch-tensor-bernoulli"]], "torch.Tensor.argmin": [[124, "torch-tensor-argmin"]], "torch.Tensor.amin": [[104, "torch-tensor-amin"]], "torch.Tensor.aminmax": [[105, "torch-tensor-aminmax"]], "torch.Tensor.arctan2": [[118, "torch-tensor-arctan2"]], "torch.Tensor.arctan_": [[120, "torch-tensor-arctan"]], "torch.Tensor.arcsin": [[113, "torch-tensor-arcsin"]], "torch.Tensor.atan": [[133, "torch-tensor-atan"]], "torch.Tensor.bitwise_and": [[146, "torch-tensor-bitwise-and"]], "torch.Tensor.arcsin_": [[114, "torch-tensor-arcsin"]], "torch.Tensor.asin_": [[130, "torch-tensor-asin"]], "torch.Tensor.angle": [[106, "torch-tensor-angle"]], "torch.Tensor.baddbmm_": [[141, "torch-tensor-baddbmm"]], "torch.Tensor.arctan": [[117, "torch-tensor-arctan"]], "torch.Tensor.bfloat16": [[144, "torch-tensor-bfloat16"]], "torch.Tensor.atan2": [[134, "torch-tensor-atan2"]], "torch.Tensor.arcsinh": [[115, "torch-tensor-arcsinh"]], "torch.Tensor.atan_": [[136, "torch-tensor-atan"]], "torch.Tensor.asinh_": [[132, "torch-tensor-asinh"]], "torch.Tensor.amax": [[103, "torch-tensor-amax"]], "torch.Tensor.backward": [[139, "torch-tensor-backward"]], "torch.Tensor.arccosh": [[111, "torch-tensor-arccosh"]], "torch.Tensor.device": [[212, "torch-tensor-device"]], "torch.Tensor.cuda": [[198, "torch-tensor-cuda"]], "torch.Tensor.diff": [[218, "torch-tensor-diff"]], "torch.Tensor.expand": [[243, "torch-tensor-expand"]], "torch.Tensor.cross": [[196, "torch-tensor-cross"]], "torch.Tensor.exp": [[241, "torch-tensor-exp"]], "torch.Tensor.div_": [[225, "torch-tensor-div"]], "torch.Tensor.double": [[229, "torch-tensor-double"]], "torch.Tensor.dequantize": [[208, "torch-tensor-dequantize"]], "torch.Tensor.div": [[224, "torch-tensor-div"]], "torch.Tensor.cummin": [[200, "torch-tensor-cummin"]], "torch.Tensor.erfinv": [[239, "torch-tensor-erfinv"]], "torch.Tensor.diagflat": [[215, "torch-tensor-diagflat"]], "torch.Tensor.erf": [[235, "torch-tensor-erf"]], "torch.Tensor.dsplit": [[230, "torch-tensor-dsplit"]], "torch.Tensor.element_size": [[231, "torch-tensor-element-size"]], "torch.Tensor.diag_embed": [[214, "torch-tensor-diag-embed"]], "torch.Tensor.data_ptr": [[205, "torch-tensor-data-ptr"]], "torch.Tensor.diagonal": [[216, "torch-tensor-diagonal"]], "torch.Tensor.equal": [[234, "torch-tensor-equal"]], "torch.Tensor.crow_indices": [[197, "torch-tensor-crow-indices"]], "torch.Tensor.det": [[209, "torch-tensor-det"]], "torch.Tensor.eq_": [[233, "torch-tensor-eq"]], "torch.Tensor.cumprod": [[201, "torch-tensor-cumprod"]], "torch.Tensor.dim_order": [[222, "torch-tensor-dim-order"]], "torch.Tensor.dense_dim": [[207, "torch-tensor-dense-dim"]], "torch.Tensor.detach_": [[211, "torch-tensor-detach"]], "torch.Tensor.detach": [[210, "torch-tensor-detach"]], "torch.Tensor.cummax": [[199, "torch-tensor-cummax"]], "torch.Tensor.digamma": [[219, "torch-tensor-digamma"]], "torch.Tensor.erfinv_": [[240, "torch-tensor-erfinv"]], "torch.Tensor.dim": [[221, "torch-tensor-dim"]], "torch.Tensor.dist": [[223, "torch-tensor-dist"]], "torch.Tensor.deg2rad": [[206, "torch-tensor-deg2rad"]], "torch.Tensor.exp_": [[242, "torch-tensor-exp"]], "torch.Tensor.digamma_": [[220, "torch-tensor-digamma"]], "torch.Tensor.diagonal_scatter": [[217, "torch-tensor-diagonal-scatter"]], "torch.Tensor.divide": [[226, "torch-tensor-divide"]], "torch.Tensor.cumsum": [[203, "torch-tensor-cumsum"]], "torch.Tensor.divide_": [[227, "torch-tensor-divide"]], "torch.Tensor.erfc": [[237, "torch-tensor-erfc"]], "torch.Tensor.cumprod_": [[202, "torch-tensor-cumprod"]], "torch.Tensor.dot": [[228, "torch-tensor-dot"]], "torch.Tensor.eq": [[232, "torch-tensor-eq"]], "torch.Tensor.cumsum_": [[204, "torch-tensor-cumsum"]], "torch.Tensor.erf_": [[236, "torch-tensor-erf"]], "torch.Tensor.diag": [[213, "torch-tensor-diag"]], "torch.Tensor.erfc_": [[238, "torch-tensor-erfc"]], "torch.Tensor.expand_as": [[244, "torch-tensor-expand-as"]], "torch.Tensor.is_cuda": [[321, "torch-tensor-is-cuda"]], "torch.Tensor.isneginf": [[337, "torch-tensor-isneginf"]], "torch.Tensor.is_inference": [[323, "torch-tensor-is-inference"]], "torch.Tensor.index_add_": [[302, "torch-tensor-index-add"]], "torch.Tensor.inner": [[313, "torch-tensor-inner"]], "torch.Tensor.isnan": [[336, "torch-tensor-isnan"]], "torch.Tensor.is_sparse_csr": [[332, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_conj": [[319, "torch-tensor-is-conj"]], "torch.Tensor.int_repr": [[315, "torch-tensor-int-repr"]], "torch.Tensor.index_select": [[311, "torch-tensor-index-select"]], "torch.Tensor.isreal": [[339, "torch-tensor-isreal"]], "torch.Tensor.igammac_": [[299, "torch-tensor-igammac"]], "torch.Tensor.i0_": [[295, "torch-tensor-i0"]], "torch.Tensor.index_put_": [[308, "torch-tensor-index-put"]], "torch.Tensor.is_complex": [[318, "torch-tensor-is-complex"]], "torch.Tensor.is_contiguous": [[320, "torch-tensor-is-contiguous"]], "torch.Tensor.istft": [[340, "torch-tensor-istft"]], "torch.Tensor.item": [[341, "torch-tensor-item"]], "torch.Tensor.itemsize": [[342, "torch-tensor-itemsize"]], "torch.Tensor.inverse": [[316, "torch-tensor-inverse"]], "torch.Tensor.is_set_to": [[328, "torch-tensor-is-set-to"]], "torch.Tensor.imag": [[300, "torch-tensor-imag"]], "torch.Tensor.is_quantized": [[327, "torch-tensor-is-quantized"]], "torch.Tensor.int": [[314, "torch-tensor-int"]], "torch.Tensor.index_fill_": [[306, "torch-tensor-index-fill"]], "torch.Tensor.is_signed": [[330, "torch-tensor-is-signed"]], "torch.Tensor.isposinf": [[338, "torch-tensor-isposinf"]], "torch.Tensor.index_fill": [[305, "torch-tensor-index-fill"]], "torch.Tensor.isclose": [[333, "torch-tensor-isclose"]], "torch.Tensor.is_coalesced": [[317, "torch-tensor-is-coalesced"]], "torch.Tensor.index_add": [[301, "torch-tensor-index-add"]], "torch.Tensor.igammac": [[298, "torch-tensor-igammac"]], "torch.Tensor.index_put": [[307, "torch-tensor-index-put"]], "torch.Tensor.is_meta": [[325, "torch-tensor-is-meta"]], "torch.Tensor.isinf": [[335, "torch-tensor-isinf"]], "torch.Tensor.is_pinned": [[326, "torch-tensor-is-pinned"]], "torch.Tensor.i0": [[294, "torch-tensor-i0"]], "torch.Tensor.is_sparse": [[331, "torch-tensor-is-sparse"]], "torch.Tensor.igamma_": [[297, "torch-tensor-igamma"]], "torch.Tensor.index_copy_": [[304, "torch-tensor-index-copy"]], "torch.Tensor.isfinite": [[334, "torch-tensor-isfinite"]], "torch.Tensor.index_copy": [[303, "torch-tensor-index-copy"]], "torch.Tensor.is_floating_point": [[322, "torch-tensor-is-floating-point"]], "torch.Tensor.is_shared": [[329, "torch-tensor-is-shared"]], "torch.Tensor.index_reduce": [[309, "torch-tensor-index-reduce"]], "torch.Tensor.is_leaf": [[324, "torch-tensor-is-leaf"]], "torch.Tensor.indices": [[312, "torch-tensor-indices"]], "torch.Tensor.igamma": [[296, "torch-tensor-igamma"]], "torch.Tensor.index_reduce_": [[310, "torch-tensor-index-reduce"]], "torch.Tensor.kthvalue": [[343, "torch-tensor-kthvalue"]], "torch.Tensor.lt": [[383, "torch-tensor-lt"]], "torch.Tensor.logical_xor_": [[378, "torch-tensor-logical-xor"]], "torch.Tensor.less": [[352, "torch-tensor-less"]], "torch.Tensor.lgamma": [[356, "torch-tensor-lgamma"]], "torch.Tensor.logsumexp": [[381, "torch-tensor-logsumexp"]], "torch.Tensor.log_normal_": [[366, "torch-tensor-log-normal"]], "torch.Tensor.masked_scatter_": [[391, "torch-tensor-masked-scatter"]], "torch.Tensor.lerp_": [[351, "torch-tensor-lerp"]], "torch.Tensor.lt_": [[384, "torch-tensor-lt"]], "torch.Tensor.less_": [[353, "torch-tensor-less"]], "torch.Tensor.logical_not": [[373, "torch-tensor-logical-not"]], "torch.Tensor.ldexp": [[346, "torch-tensor-ldexp"]], "torch.Tensor.logical_or_": [[376, "torch-tensor-logical-or"]], "torch.Tensor.lu": [[385, "torch-tensor-lu"]], "torch.Tensor.log": [[358, "torch-tensor-log"]], "torch.Tensor.masked_fill_": [[389, "torch-tensor-masked-fill"]], "torch.Tensor.logical_and": [[371, "torch-tensor-logical-and"]], "torch.Tensor.less_equal": [[354, "torch-tensor-less-equal"]], "torch.Tensor.lerp": [[350, "torch-tensor-lerp"]], "torch.Tensor.less_equal_": [[355, "torch-tensor-less-equal"]], "torch.Tensor.log10": [[359, "torch-tensor-log10"]], "torch.Tensor.lu_solve": [[386, "torch-tensor-lu-solve"]], "torch.Tensor.logdet": [[370, "torch-tensor-logdet"]], "torch.Tensor.logit_": [[380, "torch-tensor-logit"]], "torch.Tensor.masked_scatter": [[390, "torch-tensor-masked-scatter"]], "torch.Tensor.logaddexp2": [[368, "torch-tensor-logaddexp2"]], "torch.Tensor.logit": [[379, "torch-tensor-logit"]], "torch.Tensor.log1p_": [[362, "torch-tensor-log1p"]], "torch.Tensor.map_": [[387, "torch-tensor-map"]], "torch.Tensor.ldexp_": [[347, "torch-tensor-ldexp"]], "torch.Tensor.lcm": [[344, "torch-tensor-lcm"]], "torch.Tensor.logical_or": [[375, "torch-tensor-logical-or"]], "torch.Tensor.long": [[382, "torch-tensor-long"]], "torch.Tensor.logical_not_": [[374, "torch-tensor-logical-not"]], "torch.Tensor.log10_": [[360, "torch-tensor-log10"]], "torch.Tensor.logaddexp": [[367, "torch-tensor-logaddexp"]], "torch.Tensor.logcumsumexp": [[369, "torch-tensor-logcumsumexp"]], "torch.Tensor.le": [[348, "torch-tensor-le"]], "torch.Tensor.lcm_": [[345, "torch-tensor-lcm"]], "torch.Tensor.log1p": [[361, "torch-tensor-log1p"]], "torch.Tensor.le_": [[349, "torch-tensor-le"]], "torch.Tensor.log2": [[363, "torch-tensor-log2"]], "torch.Tensor.lgamma_": [[357, "torch-tensor-lgamma"]], "torch.Tensor.log2_": [[364, "torch-tensor-log2"]], "torch.Tensor.logical_and_": [[372, "torch-tensor-logical-and"]], "torch.Tensor.masked_fill": [[388, "torch-tensor-masked-fill"]], "torch.Tensor.log_": [[365, "torch-tensor-log"]], "torch.Tensor.logical_xor": [[377, "torch-tensor-logical-xor"]], "torch.sym_int": [[1816, "torch-sym-int"]], "torch.tan": [[1823, "torch-tan"]], "torch.sym_not": [[1819, "torch-sym-not"]], "torch.triu": [[1837, "torch-triu"]], "torch.tensor": [[1825, "torch-tensor"]], "torch.trunc": [[1840, "torch-trunc"]], "torch.trapezoid": [[1832, "torch-trapezoid"]], "torch.triangular_solve": [[1834, "torch-triangular-solve"]], "torch.true_divide": [[1839, "torch-true-divide"]], "torch.var": [[1852, "torch-var"]], "torch.vsplit": [[1858, "torch-vsplit"]], "torch.tril": [[1835, "torch-tril"]], "torch.use_deterministic_algorithms": [[1846, "torch-use-deterministic-algorithms"]], "torch.tanh": [[1824, "torch-tanh"]], "torch.var_mean": [[1853, "torch-var-mean"]], "torch.unbind": [[1841, "torch-unbind"]], "torch.topk": [[1829, "torch-topk"]], "torch.vstack": [[1859, "torch-vstack"]], "torch.sym_float": [[1815, "torch-sym-float"]], "torch.utils.set_module": [[1850, "torch-utils-set-module"]], "torch.utils.get_cpp_backtrace": [[1848, "torch-utils-get-cpp-backtrace"]], "torch.sym_max": [[1817, "torch-sym-max"]], "torch.trapz": [[1833, "torch-trapz"]], "torch.triu_indices": [[1838, "torch-triu-indices"]], "torch.unsqueeze": [[1845, "torch-unsqueeze"]], "torch.trace": [[1830, "torch-trace"]], "torch.take": [[1821, "torch-take"]], "torch.view_as_real": [[1856, "torch-view-as-real"]], "torch.tensordot": [[1827, "torch-tensordot"]], "torch.vander": [[1851, "torch-vander"]], "torch.take_along_dim": [[1822, "torch-take-along-dim"]], "torch.where": [[1860, "torch-where"]], "torch.xlogy": [[1861, "torch-xlogy"]], "torch.tril_indices": [[1836, "torch-tril-indices"]], "torch.unique_consecutive": [[1844, "torch-unique-consecutive"]], "torch.t": [[1820, "torch-t"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1847, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.swapdims": [[1814, "torch-swapdims"]], "torch.transpose": [[1831, "torch-transpose"]], "torch.utils.rename_privateuse1_backend": [[1849, "torch-utils-rename-privateuse1-backend"]], "torch.vdot": [[1854, "torch-vdot"]], "torch.swapaxes": [[1813, "torch-swapaxes"]], "torch.unflatten": [[1842, "torch-unflatten"]], "torch.vmap": [[1857, "torch-vmap"]], "torch.unique": [[1843, "torch-unique"]], "torch.view_as_complex": [[1855, "torch-view-as-complex"]], "torch.sym_min": [[1818, "torch-sym-min"]], "torch.tensor_split": [[1826, "torch-tensor-split"]], "torch.tile": [[1828, "torch-tile"]], "torch.set_num_threads": [[1757, "torch-set-num-threads"]], "torch.rand_like": [[1719, "torch-rand-like"]], "torch.randint_like": [[1721, "torch-randint-like"]], "torch.repeat_interleave": [[1731, "torch-repeat-interleave"]], "torch.rsqrt": [[1740, "torch-rsqrt"]], "torch.scatter": [[1742, "torch-scatter"]], "torch.real": [[1727, "torch-real"]], "torch.remainder": [[1729, "torch-remainder"]], "torch.set_warn_always": [[1760, "torch-set-warn-always"]], "torch.seed": [[1746, "torch-seed"]], "torch.randint": [[1720, "torch-randint"]], "torch.resolve_conj": [[1733, "torch-resolve-conj"]], "torch.select_scatter": [[1748, "torch-select-scatter"]], "set_grad_enabled": [[1755, "set-grad-enabled"]], "torch.round": [[1738, "torch-round"]], "torch.result_type": [[1735, "torch-result-type"]], "torch.set_flush_denormal": [[1754, "torch-set-flush-denormal"]], "torch.select": [[1747, "torch-select"]], "torch.resolve_neg": [[1734, "torch-resolve-neg"]], "torch.rot90": [[1737, "torch-rot90"]], "torch.set_deterministic_debug_mode": [[1752, "torch-set-deterministic-debug-mode"]], "torch.rand": [[1718, "torch-rand"]], "torch.set_default_device": [[1749, "torch-set-default-device"]], "torch.sign": [[1763, "torch-sign"]], "torch.set_printoptions": [[1758, "torch-set-printoptions"]], "torch.scatter_reduce": [[1744, "torch-scatter-reduce"]], "torch.set_num_interop_threads": [[1756, "torch-set-num-interop-threads"]], "torch.set_default_tensor_type": [[1751, "torch-set-default-tensor-type"]], "torch.reciprocal": [[1728, "torch-reciprocal"]], "SobolEngine": [[1716, "sobolengine"]], "torch.set_default_dtype": [[1750, "torch-set-default-dtype"]], "torch.reshape": [[1732, "torch-reshape"]], "torch.scatter_add": [[1743, "torch-scatter-add"]], "torch.searchsorted": [[1745, "torch-searchsorted"]], "torch.set_float32_matmul_precision": [[1753, "torch-set-float32-matmul-precision"]], "torch.randn": [[1722, "torch-randn"]], "torch.save": [[1741, "torch-save"]], "torch.range": [[1725, "torch-range"]], "torch.sgn": [[1761, "torch-sgn"]], "torch.row_stack": [[1739, "torch-row-stack"]], "torch.set_rng_state": [[1759, "torch-set-rng-state"]], "torch.rad2deg": [[1717, "torch-rad2deg"]], "torch.renorm": [[1730, "torch-renorm"]], "torch.randperm": [[1724, "torch-randperm"]], "torch.sigmoid": [[1762, "torch-sigmoid"]], "torch.randn_like": [[1723, "torch-randn-like"]], "torch.quantized_max_pool2d": [[1715, "torch-quantized-max-pool2d"]], "torch.ravel": [[1726, "torch-ravel"]], "torch.roll": [[1736, "torch-roll"]], "torch.std_mean": [[1806, "torch-std-mean"]], "torch.split": [[1799, "torch-split"]], "torch.signbit": [[1775, "torch-signbit"]], "torch.sparse.as_sparse_gradcheck": [[1785, "torch-sparse-as-sparse-gradcheck"]], "torch.sparse.spdiags": [[1791, "torch-sparse-spdiags"]], "torch.signal.windows.cosine": [[1766, "torch-signal-windows-cosine"]], "torch.sparse.addmm": [[1784, "torch-sparse-addmm"]], "torch.std": [[1805, "torch-std"]], "torch.sparse.sum": [[1792, "torch-sparse-sum"]], "torch.sparse.mm": [[1788, "torch-sparse-mm"]], "torch.sub": [[1808, "torch-sub"]], "torch.sspaddmm": [[1803, "torch-sspaddmm"]], "torch.sort": [[1783, "torch-sort"]], "torch.sparse.softmax": [[1790, "torch-sparse-softmax"]], "torch.signal.windows.bartlett": [[1764, "torch-signal-windows-bartlett"]], "torch.signal.windows.hann": [[1772, "torch-signal-windows-hann"]], "torch.signal.windows.gaussian": [[1768, "torch-signal-windows-gaussian"]], "torch.sin": [[1776, "torch-sin"]], "torch.sqrt": [[1800, "torch-sqrt"]], "torch.sparse.log_softmax": [[1787, "torch-sparse-log-softmax"]], "torch.slice_scatter": [[1779, "torch-slice-scatter"]], "torch.slogdet": [[1780, "torch-slogdet"]], "torch.signal.windows.general_cosine": [[1769, "torch-signal-windows-general-cosine"]], "torch.sparse.sampled_addmm": [[1789, "torch-sparse-sampled-addmm"]], "torch.sum": [[1810, "torch-sum"]], "torch.signal.windows.general_hamming": [[1770, "torch-signal-windows-general-hamming"]], "torch.svd_lowrank": [[1812, "torch-svd-lowrank"]], "torch.squeeze": [[1802, "torch-squeeze"]], "torch.smm": [[1781, "torch-smm"]], "torch.stft": [[1807, "torch-stft"]], "torch.signal.windows.blackman": [[1765, "torch-signal-windows-blackman"]], "check_sparse_tensor_invariants": [[1786, "check-sparse-tensor-invariants"]], "torch.square": [[1801, "torch-square"]], "torch.softmax": [[1782, "torch-softmax"]], "torch.svd": [[1811, "torch-svd"]], "torch.sparse_bsc_tensor": [[1793, "torch-sparse-bsc-tensor"]], "torch.subtract": [[1809, "torch-subtract"]], "torch.sparse_bsr_tensor": [[1794, "torch-sparse-bsr-tensor"]], "torch.sinh": [[1778, "torch-sinh"]], "torch.sparse_coo_tensor": [[1796, "torch-sparse-coo-tensor"]], "torch.sinc": [[1777, "torch-sinc"]], "torch.sparse_csc_tensor": [[1797, "torch-sparse-csc-tensor"]], "torch.signal.windows.hamming": [[1771, "torch-signal-windows-hamming"]], "torch.sparse_compressed_tensor": [[1795, "torch-sparse-compressed-tensor"]], "torch.sparse_csr_tensor": [[1798, "torch-sparse-csr-tensor"]], "torch.signal.windows.kaiser": [[1773, "torch-signal-windows-kaiser"]], "torch.signal.windows.nuttall": [[1774, "torch-signal-windows-nuttall"]], "torch.signal.windows.exponential": [[1767, "torch-signal-windows-exponential"]], "torch.stack": [[1804, "torch-stack"]], "FXE0013:op-level-debugging": [[73, "fxe0013-op-level-debugging"]], "torch.Tensor.addmm_": [[95, "torch-tensor-addmm"]], "torch.Tensor.addbmm": [[88, "torch-tensor-addbmm"]], "torch.Tensor.acosh_": [[85, "torch-tensor-acosh"]], "FXE0010:fx-pass": [[70, "fxe0010-fx-pass"]], "python.closure": [[59, "python-closure"]], "cond_closed_over_variable": [[59, "cond-closed-over-variable"], [63, "cond-closed-over-variable"], [56, "cond-closed-over-variable"]], "nested_function": [[59, "nested-function"], [56, "nested-function"]], "torch.Tensor.acos": [[82, "torch-tensor-acos"]], "torch.Tensor.addcdiv": [[90, "torch-tensor-addcdiv"]], "torch.futures": [[54, "torch-futures"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[76, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.add_": [[87, "torch-tensor-add"]], "torch.Tensor.add": [[86, "torch-tensor-add"]], "python.data-structure": [[62, "python-data-structure"]], "dictionary": [[62, "dictionary"], [56, "dictionary"]], "fn_with_kwargs": [[62, "fn-with-kwargs"], [56, "fn-with-kwargs"]], "list_contains": [[62, "list-contains"], [64, "list-contains"], [57, "list-contains"], [56, "list-contains"]], "list_unpack": [[62, "list-unpack"], [61, "list-unpack"], [56, "list-unpack"]], "FXE0015:fx-node-insert-type-promotion": [[75, "fxe0015-fx-node-insert-type-promotion"]], "torch.Tensor.addcmul": [[92, "torch-tensor-addcmul"]], "torch.cond": [[63, "torch-cond"]], "cond_branch_class_method": [[63, "cond-branch-class-method"], [64, "cond-branch-class-method"], [56, "cond-branch-class-method"]], "cond_branch_nested_function": [[63, "cond-branch-nested-function"], [64, "cond-branch-nested-function"], [56, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[63, "cond-branch-nonlocal-variables"], [64, "cond-branch-nonlocal-variables"], [56, "cond-branch-nonlocal-variables"]], "cond_operands": [[63, "cond-operands"], [64, "cond-operands"], [56, "cond-operands"]], "cond_predicate": [[63, "cond-predicate"], [64, "cond-predicate"], [56, "cond-predicate"]], "torch.Tensor.addmm": [[94, "torch-tensor-addmm"]], "FXE0011:no-symbolic-function-for-call-function": [[71, "fxe0011-no-symbolic-function-for-call-function"]], "python.context-manager": [[60, "python-context-manager"]], "null_context_manager": [[60, "null-context-manager"], [56, "null-context-manager"]], "Migrating from functorch to torch.func": [[51, "migrating-from-functorch-to-torch-func"]], "function transforms": [[51, "function-transforms"]], "NN module utilities": [[51, "nn-module-utilities"]], "functorch.make_functional": [[51, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[51, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[51, "functorch-compile"]], "torch.Tensor.addcdiv_": [[91, "torch-tensor-addcdiv"]], "FXE0008:fx-node-to-onnx": [[69, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.absolute_": [[81, "torch-tensor-absolute"]], "Patching Batch Norm": [[50, "patching-batch-norm"]], "What\u2019s happening?": [[50, "what-s-happening"]], "How to fix": [[50, "how-to-fix"]], "Option 1: Change the BatchNorm": [[50, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[50, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[50, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[50, "option-4-eval-mode"]], "torch.Tensor.abs": [[78, "torch-tensor-abs"]], "torch.dynamic-shape": [[64, "torch-dynamic-shape"]], "dynamic_shape_constructor": [[64, "dynamic-shape-constructor"], [56, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[64, "dynamic-shape-if-guard"], [61, "dynamic-shape-if-guard"], [56, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[64, "dynamic-shape-map"], [67, "dynamic-shape-map"], [56, "dynamic-shape-map"]], "dynamic_shape_round": [[64, "dynamic-shape-round"], [58, "dynamic-shape-round"], [56, "dynamic-shape-round"]], "dynamic_shape_slicing": [[64, "dynamic-shape-slicing"], [56, "dynamic-shape-slicing"]], "dynamic_shape_view": [[64, "dynamic-shape-view"], [56, "dynamic-shape-view"]], "scalar_output": [[64, "scalar-output"], [56, "scalar-output"]], "torch.map": [[67, "torch-map"]], "torch.func API Reference": [[49, "module-torch.func"]], "Function Transforms": [[49, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[49, "utilities-for-working-with-torch-nn-modules"]], "torch.Tensor.addmv": [[96, "torch-tensor-addmv"]], "torch.Tensor.addmv_": [[97, "torch-tensor-addmv"]], "FXE0012:unsupported-fx-node-analysis": [[72, "fxe0012-unsupported-fx-node-analysis"]], "Generator": [[77, "generator"]], "torch.Tensor.acos_": [[83, "torch-tensor-acos"]], "torch.Tensor.acosh": [[84, "torch-tensor-acosh"]], "python.control-flow": [[61, "python-control-flow"]], "static_for_loop": [[61, "static-for-loop"], [56, "static-for-loop"]], "static_if": [[61, "static-if"], [56, "static-if"]], "python.assert": [[57, "python-assert"]], "dynamic_shape_assert": [[57, "dynamic-shape-assert"], [56, "dynamic-shape-assert"]], "torch.dynamic-value": [[65, "torch-dynamic-value"]], "constrain_as_size_example": [[65, "constrain-as-size-example"], [56, "constrain-as-size-example"], [66, "constrain-as-size-example"]], "constrain_as_value_example": [[65, "constrain-as-value-example"], [56, "constrain-as-value-example"], [66, "constrain-as-value-example"]], "torch.Tensor.abs_": [[79, "torch-tensor-abs"]], "torch.Tensor.addbmm_": [[89, "torch-tensor-addbmm"]], "torch.func Whirlwind Tour": [[53, "torch-func-whirlwind-tour"]], "What is torch.func?": [[53, "what-is-torch-func"]], "Why composable function transforms?": [[53, "why-composable-function-transforms"], [48, "why-composable-function-transforms"]], "What are the transforms?": [[53, "what-are-the-transforms"]], "grad() (gradient computation)": [[53, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[53, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[53, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[53, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[53, "jacrev-jacfwd-and-hessian"]], "FXE0014:find-opschema-matched-symbolic-function": [[74, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.addcmul_": [[93, "torch-tensor-addcmul"]], "python.builtin": [[58, "python-builtin"]], "tensor_setattr": [[58, "tensor-setattr"], [56, "tensor-setattr"]], "type_reflection_method": [[58, "type-reflection-method"], [56, "type-reflection-method"]], "torch.Tensor.absolute": [[80, "torch-tensor-absolute"]], "UX Limitations": [[52, "ux-limitations"]], "General limitations": [[52, "general-limitations"]], "torch.autograd APIs": [[52, "torch-autograd-apis"]], "vmap limitations": [[52, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[52, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[52, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[52, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[52, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[52, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[52, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[52, "randomness"]], "FXE0007:fx-graph-to-onnx": [[68, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[68, "key-representations"]], "Additional Notes:": [[68, "additional-notes"]], "torch.fx": [[55, "torch-fx"]], "Overview": [[55, "module-torch.fx"], [1908, "overview"], [1907, "overview"], [18, "module-torch.cuda._sanitizer"], [45, "overview"], [1915, "module-torch.profiler"], [1940, "overview"]], "Writing Transformations": [[55, "writing-transformations"]], "A Quick Primer on Graphs": [[55, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[55, "graph-manipulation"]], "Direct Graph Manipulation": [[55, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[55, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[55, "graph-manipulation-examples"]], "Proxy/Retracing": [[55, "proxy-retracing"]], "The Interpreter Pattern": [[55, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[55, "examples-of-the-interpreter-pattern"]], "Debugging": [[55, "debugging"], [1866, "debugging"]], "Introduction": [[55, "introduction"], [1876, "introduction"], [1884, "introduction"]], "Common Pitfalls in Transform Authoring": [[55, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[55, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[55, "debugging-the-generated-code"]], "Use pdb": [[55, "use-pdb"]], "Print the Generated Code": [[55, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[55, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[55, "debugging-the-transformation"]], "Available Debuggers": [[55, "available-debuggers"]], "Limitations of Symbolic Tracing": [[55, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[55, "dynamic-control-flow"]], "Static Control Flow": [[55, "static-control-flow"]], "Non-torch Functions": [[55, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[55, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[55, "leaf-modules"]], "Miscellanea": [[55, "miscellanea"]], "API Reference": [[55, "api-reference"], [1908, "api-reference"], [1879, "module-torch.monitor"], [18, "api-reference"], [45, "module-torch.export"], [13, "api-reference"], [1915, "api-reference"], [1913, "api-reference"]], "ExportDB": [[56, "exportdb"]], "Tags": [[56, null]], "Supported": [[56, "supported"]], "assume_constant_result": [[56, "assume-constant-result"], [66, "assume-constant-result"]], "autograd_function": [[56, "autograd-function"]], "class_method": [[56, "class-method"]], "decorator": [[56, "decorator"]], "pytree_flatten": [[56, "pytree-flatten"]], "specialized_attribute": [[56, "specialized-attribute"]], "Not Supported Yet": [[56, "not-supported-yet"]], "torch.escape-hatch": [[66, "torch-escape-hatch"]], "torch.promote_types": [[1708, "torch-promote-types"]], "NAdam": [[1670, "nadam"]], "CyclicLR": [[1685, "cycliclr"]], "StepLR": [[1695, "steplr"]], "torch.optim.Optimizer.load_state_dict": [[1672, "torch-optim-optimizer-load-state-dict"]], "torch.qr": [[1709, "torch-qr"]], "LBFGS": [[1669, "lbfgs"]], "Adamax": [[1668, "adamax"]], "ChainedScheduler": [[1681, "chainedscheduler"]], "torch.orgqr": [[1696, "torch-orgqr"]], "PolynomialLR": [[1692, "polynomiallr"]], "torch.poisson": [[1702, "torch-poisson"]], "torch.pca_lowrank": [[1699, "torch-pca-lowrank"]], "torch.quantized_max_pool1d": [[1714, "torch-quantized-max-pool1d"]], "torch.positive": [[1705, "torch-positive"]], "torch.quantile": [[1710, "torch-quantile"]], "MultiStepLR": [[1689, "multisteplr"]], "RAdam": [[1676, "radam"]], "Rprop": [[1678, "rprop"]], "torch.optim.Optimizer.zero_grad": [[1675, "torch-optim-optimizer-zero-grad"]], "LinearLR": [[1688, "linearlr"]], "RMSprop": [[1677, "rmsprop"]], "CosineAnnealingLR": [[1683, "cosineannealinglr"]], "LambdaLR": [[1687, "lambdalr"]], "ReduceLROnPlateau": [[1693, "reducelronplateau"]], "torch.optim.Optimizer.step": [[1674, "torch-optim-optimizer-step"]], "SparseAdam": [[1680, "sparseadam"]], "ConstantLR": [[1682, "constantlr"]], "AdamW": [[1667, "adamw"]], "torch.quantize_per_channel": [[1711, "torch-quantize-per-channel"]], "torch.prod": [[1707, "torch-prod"]], "torch.quantized_batch_norm": [[1713, "torch-quantized-batch-norm"]], "SGD": [[1679, "sgd"]], "torch.ormqr": [[1697, "torch-ormqr"]], "ExponentialLR": [[1686, "exponentiallr"]], "torch.quantize_per_tensor": [[1712, "torch-quantize-per-tensor"]], "torch.outer": [[1698, "torch-outer"]], "Adam": [[1666, "adam"]], "torch.optim.Optimizer.state_dict": [[1673, "torch-optim-optimizer-state-dict"]], "torch.pinverse": [[1701, "torch-pinverse"]], "CosineAnnealingWarmRestarts": [[1684, "cosineannealingwarmrestarts"]], "torch.polygamma": [[1704, "torch-polygamma"]], "MultiplicativeLR": [[1690, "multiplicativelr"]], "torch.optim.Optimizer.add_param_group": [[1671, "torch-optim-optimizer-add-param-group"]], "SequentialLR": [[1694, "sequentiallr"]], "torch.permute": [[1700, "torch-permute"]], "torch.pow": [[1706, "torch-pow"]], "torch.polar": [[1703, "torch-polar"]], "OneCycleLR": [[1691, "onecyclelr"]], "torch.nn.functional.huber_loss": [[1535, "torch-nn-functional-huber-loss"]], "torch.nn.functional.fractional_max_pool3d": [[1522, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.max_pool2d": [[1551, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.pairwise_distance": [[1565, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.max_pool1d": [[1550, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.log_softmax": [[1545, "torch-nn-functional-log-softmax"]], "torch.nn.functional.linear": [[1543, "torch-nn-functional-linear"]], "torch.nn.functional.instance_norm": [[1536, "torch-nn-functional-instance-norm"]], "torch.nn.functional.mse_loss": [[1557, "torch-nn-functional-mse-loss"]], "torch.nn.functional.logsigmoid": [[1546, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.multi_margin_loss": [[1558, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.group_norm": [[1527, "torch-nn-functional-group-norm"]], "torch.nn.functional.margin_ranking_loss": [[1549, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.hinge_embedding_loss": [[1534, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.multilabel_margin_loss": [[1559, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.hardtanh": [[1532, "torch-nn-functional-hardtanh"]], "torch.nn.functional.feature_alpha_dropout": [[1519, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.fold": [[1520, "torch-nn-functional-fold"]], "torch.nn.functional.gaussian_nll_loss": [[1523, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.hardsigmoid": [[1530, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.hardtanh_": [[1533, "torch-nn-functional-hardtanh"]], "torch.nn.functional.max_pool3d": [[1552, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.pad": [[1564, "torch-nn-functional-pad"]], "torch.nn.functional.grid_sample": [[1526, "torch-nn-functional-grid-sample"]], "torch.nn.functional.gelu": [[1524, "torch-nn-functional-gelu"]], "torch.nn.functional.interpolate": [[1537, "torch-nn-functional-interpolate"]], "torch.nn.functional.local_response_norm": [[1544, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.glu": [[1525, "torch-nn-functional-glu"]], "torch.nn.functional.one_hot": [[1563, "torch-nn-functional-one-hot"]], "torch.nn.functional.layer_norm": [[1540, "torch-nn-functional-layer-norm"]], "torch.nn.functional.normalize": [[1562, "torch-nn-functional-normalize"]], "torch.nn.functional.gumbel_softmax": [[1528, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.max_unpool1d": [[1553, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.lp_pool1d": [[1547, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.max_unpool3d": [[1555, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.hardswish": [[1531, "torch-nn-functional-hardswish"]], "torch.nn.functional.pixel_shuffle": [[1567, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.fractional_max_pool2d": [[1521, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.nll_loss": [[1561, "torch-nn-functional-nll-loss"]], "torch.nn.functional.max_unpool2d": [[1554, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1560, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.kl_div": [[1538, "torch-nn-functional-kl-div"]], "torch.nn.functional.pdist": [[1566, "torch-nn-functional-pdist"]], "torch.nn.functional.l1_loss": [[1539, "torch-nn-functional-l1-loss"]], "torch.nn.functional.lp_pool2d": [[1548, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.leaky_relu_": [[1542, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.mish": [[1556, "torch-nn-functional-mish"]], "torch.nn.functional.leaky_relu": [[1541, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.hardshrink": [[1529, "torch-nn-functional-hardshrink"]], "PackedSequence": [[1640, "packedsequence"]], "torch.nn.utils.prune.custom_from_mask": [[1629, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1641, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.weight_norm": [[1651, "torch-nn-utils-weight-norm"]], "GraphInfo": [[1661, "graphinfo"]], "ASGD": [[1663, "asgd"]], "torch.nn.utils.vector_to_parameters": [[1650, "torch-nn-utils-vector-to-parameters"]], "CustomFromMask": [[1622, "customfrommask"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1643, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.ones_like": [[1659, "torch-ones-like"]], "torch.nn.utils.prune.random_structured": [[1635, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.rnn.unpack_sequence": [[1645, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.prune.ln_structured": [[1634, "torch-nn-utils-prune-ln-structured"]], "JitScalarType": [[1660, "jitscalartype"]], "RandomStructured": [[1627, "randomstructured"]], "torch.nn.utils.parametrize.is_parametrized": [[1618, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.prune.is_pruned": [[1632, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.skip_init": [[1647, "torch-nn-utils-skip-init"]], "torch.normal": [[1655, "torch-normal"]], "torch.nn.utils.remove_weight_norm": [[1639, "torch-nn-utils-remove-weight-norm"]], "RandomUnstructured": [[1628, "randomunstructured"]], "Adagrad": [[1665, "adagrad"]], "torch.nn.utils.prune.remove": [[1637, "torch-nn-utils-prune-remove"]], "Identity": [[1623, "identity"], [1389, "identity"]], "BasePruningMethod": [[1621, "basepruningmethod"]], "torch.nn.utils.prune.random_unstructured": [[1636, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.parametrize.cached": [[1617, "torch-nn-utils-parametrize-cached"]], "torch.numel": [[1657, "torch-numel"]], "torch.norm": [[1654, "torch-norm"]], "torch.nn.utils.prune.global_unstructured": [[1630, "torch-nn-utils-prune-global-unstructured"]], "VerificationOptions": [[1662, "verificationoptions"]], "torch.nonzero": [[1653, "torch-nonzero"]], "torch.not_equal": [[1656, "torch-not-equal"]], "torch.nn.utils.prune.identity": [[1631, "torch-nn-utils-prune-identity"]], "torch.nn.utils.rnn.unpad_sequence": [[1646, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.spectral_norm": [[1648, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1620, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.stateless.functional_call": [[1649, "torch-nn-utils-stateless-functional-call"]], "PruningContainer": [[1626, "pruningcontainer"]], "torch.nn.utils.parametrize.register_parametrization": [[1619, "torch-nn-utils-parametrize-register-parametrization"]], "L1Unstructured": [[1624, "l1unstructured"]], "LnStructured": [[1625, "lnstructured"]], "torch.nn.utils.rnn.pack_sequence": [[1642, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.prune.l1_unstructured": [[1633, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.rnn.pad_sequence": [[1644, "torch-nn-utils-rnn-pad-sequence"]], "Adadelta": [[1664, "adadelta"]], "no_grad": [[1652, "no-grad"]], "torch.nn.utils.remove_spectral_norm": [[1638, "torch-nn-utils-remove-spectral-norm"]], "torch.ones": [[1658, "torch-ones"]], "torch.nn.functional.upsample": [[1595, "torch-nn-functional-upsample"]], "torch.nn.functional.softmax": [[1582, "torch-nn-functional-softmax"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1602, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1601, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parameters_to_vector": [[1613, "torch-nn-utils-parameters-to-vector"]], "torch.nn.functional.triplet_margin_loss": [[1592, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.softsign": [[1586, "torch-nn-functional-softsign"]], "DistributedDataParallel": [[1607, "distributeddataparallel"], [1893, "distributeddataparallel"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1603, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.prelu": [[1570, "torch-nn-functional-prelu"]], "torch.nn.functional.softshrink": [[1585, "torch-nn-functional-softshrink"]], "LazyModuleMixin": [[1598, "lazymodulemixin"]], "torch.nn.functional.sigmoid": [[1578, "torch-nn-functional-sigmoid"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1600, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.silu": [[1579, "torch-nn-functional-silu"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1605, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.smooth_l1_loss": [[1580, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1606, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.functional.pixel_unshuffle": [[1568, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.rrelu": [[1574, "torch-nn-functional-rrelu"]], "torch.nn.functional.threshold_": [[1590, "torch-nn-functional-threshold"]], "torch.nn.functional.softmin": [[1583, "torch-nn-functional-softmin"]], "torch.nn.functional.soft_margin_loss": [[1581, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.tanhshrink": [[1588, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.rrelu_": [[1575, "torch-nn-functional-rrelu"]], "Parameter": [[1608, "parameter"]], "torch.nn.modules.module.register_module_backward_hook": [[1599, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.unfold": [[1594, "torch-nn-functional-unfold"]], "torch.nn.functional.threshold": [[1589, "torch-nn-functional-threshold"]], "torch.nn.functional.softplus": [[1584, "torch-nn-functional-softplus"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1593, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1604, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1591, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.utils.parametrizations.orthogonal": [[1614, "torch-nn-utils-parametrizations-orthogonal"]], "ParametrizationList": [[1616, "parametrizationlist"]], "torch.nn.utils.clip_grad_value_": [[1612, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.relu": [[1571, "torch-nn-functional-relu"]], "torch.nn.functional.relu_": [[1573, "torch-nn-functional-relu"]], "torch.nn.utils.parametrizations.spectral_norm": [[1615, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.relu6": [[1572, "torch-nn-functional-relu6"]], "torch.nn.functional.scaled_dot_product_attention": [[1576, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.selu": [[1577, "torch-nn-functional-selu"]], "UninitializedParameter": [[1610, "uninitializedparameter"]], "torch.nn.functional.upsample_bilinear": [[1596, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.poisson_nll_loss": [[1569, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.utils.clip_grad_norm_": [[1611, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.tanh": [[1587, "torch-nn-functional-tanh"]], "torch.nn.functional.upsample_nearest": [[1597, "torch-nn-functional-upsample-nearest"]], "UninitializedBuffer": [[1609, "uninitializedbuffer"]], "torch.nn.functional.conv_transpose1d": [[1504, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.dropout3d": [[1514, "torch-nn-functional-dropout3d"]], "torch.nn.functional.conv_transpose3d": [[1506, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.adaptive_max_pool3d": [[1490, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1485, "torch-nn-functional-adaptive-avg-pool1d"]], "TransformerEncoder": [[1473, "transformerencoder"]], "torch.nn.functional.avg_pool2d": [[1494, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.batch_norm": [[1496, "torch-nn-functional-batch-norm"]], "Unflatten": [[1477, "unflatten"]], "TransformerEncoderLayer": [[1474, "transformerencoderlayer"]], "torch.nn.functional.cross_entropy": [[1509, "torch-nn-functional-cross-entropy"]], "UpsamplingNearest2d": [[1481, "upsamplingnearest2d"]], "Upsample": [[1479, "upsample"]], "torch.nn.functional.dropout1d": [[1512, "torch-nn-functional-dropout1d"]], "torch.nn.functional.affine_grid": [[1491, "torch-nn-functional-affine-grid"]], "torch.nn.functional.avg_pool1d": [[1493, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.embedding_bag": [[1518, "torch-nn-functional-embedding-bag"]], "TripletMarginWithDistanceLoss": [[1476, "tripletmarginwithdistanceloss"]], "torch.nn.functional.binary_cross_entropy": [[1498, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.embedding": [[1517, "torch-nn-functional-embedding"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1499, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.conv3d": [[1503, "torch-nn-functional-conv3d"]], "TransformerDecoderLayer": [[1472, "transformerdecoderlayer"]], "torch.nn.functional.conv2d": [[1502, "torch-nn-functional-conv2d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1486, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.conv_transpose2d": [[1505, "torch-nn-functional-conv-transpose2d"]], "UpsamplingBilinear2d": [[1480, "upsamplingbilinear2d"]], "torch.nn.functional.ctc_loss": [[1510, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.dropout2d": [[1513, "torch-nn-functional-dropout2d"]], "ZeroPad1d": [[1482, "zeropad1d"]], "torch.nn.functional.adaptive_max_pool2d": [[1489, "torch-nn-functional-adaptive-max-pool2d"]], "TransformerDecoder": [[1471, "transformerdecoder"]], "torch.nn.functional.bilinear": [[1497, "torch-nn-functional-bilinear"]], "torch.nn.functional.cosine_similarity": [[1508, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.elu": [[1515, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool1d": [[1488, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.celu": [[1500, "torch-nn-functional-celu"]], "torch.nn.functional.alpha_dropout": [[1492, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.dropout": [[1511, "torch-nn-functional-dropout"]], "torch.nn.functional.cosine_embedding_loss": [[1507, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.conv1d": [[1501, "torch-nn-functional-conv1d"]], "ZeroPad3d": [[1484, "zeropad3d"]], "TripletMarginLoss": [[1475, "tripletmarginloss"]], "Unfold": [[1478, "unfold"]], "Transformer": [[1470, "transformer"], [1953, "transformer"]], "torch.nn.functional.avg_pool3d": [[1495, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1487, "torch-nn-functional-adaptive-avg-pool3d"]], "ZeroPad2d": [[1483, "zeropad2d"]], "torch.nn.functional.elu_": [[1516, "torch-nn-functional-elu"]], "torch.mps.set_rng_state": [[1313, "torch-mps-set-rng-state"]], "torch.lu_unpack": [[1285, "torch-lu-unpack"]], "torch.matmul": [[1288, "torch-matmul"]], "torch.matrix_exp": [[1289, "torch-matrix-exp"]], "torch.mps.get_rng_state": [[1306, "torch-mps-get-rng-state"]], "torch.logit": [[1279, "torch-logit"]], "torch.logical_not": [[1276, "torch-logical-not"]], "torch.lu_solve": [[1284, "torch-lu-solve"]], "torch.logical_xor": [[1278, "torch-logical-xor"]], "torch.mean": [[1293, "torch-mean"]], "torch.mps.manual_seed": [[1307, "torch-mps-manual-seed"]], "torch.mps.synchronize": [[1314, "torch-mps-synchronize"]], "torch.nan_to_num": [[1321, "torch-nan-to-num"]], "torch.lt": [[1282, "torch-lt"]], "torch.min": [[1296, "torch-min"]], "torch.mps.seed": [[1311, "torch-mps-seed"]], "torch.msort": [[1315, "torch-msort"]], "torch.lu": [[1283, "torch-lu"]], "torch.logdet": [[1274, "torch-logdet"]], "torch.logical_and": [[1275, "torch-logical-and"]], "torch.mps.profiler.stop": [[1310, "torch-mps-profiler-stop"]], "torch.mps.set_per_process_memory_fraction": [[1312, "torch-mps-set-per-process-memory-fraction"]], "torch.moveaxis": [[1300, "torch-moveaxis"]], "torch.mul": [[1316, "torch-mul"]], "torch.matrix_power": [[1290, "torch-matrix-power"]], "Event": [[1305, "event"], [969, "event"]], "torch.masked_select": [[1287, "torch-masked-select"]], "torch.mps.profiler.profile": [[1308, "torch-mps-profiler-profile"]], "torch.logspace": [[1280, "torch-logspace"]], "torch.meshgrid": [[1295, "torch-meshgrid"]], "torch.mps.profiler.start": [[1309, "torch-mps-profiler-start"]], "torch.multinomial": [[1317, "torch-multinomial"]], "torch.median": [[1294, "torch-median"]], "torch.mm": [[1298, "torch-mm"]], "torch.mps.current_allocated_memory": [[1302, "torch-mps-current-allocated-memory"]], "torch.mvlgamma": [[1320, "torch-mvlgamma"]], "torch.maximum": [[1292, "torch-maximum"]], "torch.mps.empty_cache": [[1304, "torch-mps-empty-cache"]], "torch.mode": [[1299, "torch-mode"]], "torch.logsumexp": [[1281, "torch-logsumexp"]], "torch.multiply": [[1318, "torch-multiply"]], "torch.nanmean": [[1322, "torch-nanmean"]], "torch.movedim": [[1301, "torch-movedim"]], "torch.max": [[1291, "torch-max"]], "torch.manual_seed": [[1286, "torch-manual-seed"]], "torch.mv": [[1319, "torch-mv"]], "torch.logical_or": [[1277, "torch-logical-or"]], "torch.mps.driver_allocated_memory": [[1303, "torch-mps-driver-allocated-memory"]], "torch.minimum": [[1297, "torch-minimum"]], "LazyBatchNorm2d": [[1401, "lazybatchnorm2d"]], "MaxPool1d": [[1420, "maxpool1d"]], "LazyInstanceNorm3d": [[1411, "lazyinstancenorm3d"]], "HuberLoss": [[1388, "huberloss"]], "LazyInstanceNorm2d": [[1410, "lazyinstancenorm2d"]], "LazyConv2d": [[1404, "lazyconv2d"]], "GRUCell": [[1380, "grucell"], [749, "grucell"]], "InstanceNorm2d": [[1391, "instancenorm2d"], [740, "instancenorm2d"]], "LazyBatchNorm1d": [[1400, "lazybatchnorm1d"]], "InstanceNorm1d": [[1390, "instancenorm1d"], [739, "instancenorm1d"]], "GELU": [[1377, "gelu"]], "LazyConvTranspose3d": [[1408, "lazyconvtranspose3d"]], "Linear": [[1414, "linear"], [752, "linear"], [744, "linear"], [721, "linear"], [720, "linear"]], "Flatten": [[1373, "flatten"]], "Fold": [[1374, "fold"]], "GaussianNLLLoss": [[1381, "gaussiannllloss"]], "HingeEmbeddingLoss": [[1387, "hingeembeddingloss"]], "LazyConvTranspose1d": [[1406, "lazyconvtranspose1d"]], "LogSigmoid": [[1416, "logsigmoid"]], "LayerNorm": [[1399, "layernorm"], [742, "layernorm"]], "LazyConv3d": [[1405, "lazyconv3d"]], "Hardtanh": [[1386, "hardtanh"]], "LazyLinear": [[1412, "lazylinear"]], "MarginRankingLoss": [[1419, "marginrankingloss"]], "LocalResponseNorm": [[1415, "localresponsenorm"]], "LogSoftmax": [[1417, "logsoftmax"]], "LazyInstanceNorm1d": [[1409, "lazyinstancenorm1d"]], "KLDivLoss": [[1393, "kldivloss"]], "Hardsigmoid": [[1384, "hardsigmoid"]], "InstanceNorm3d": [[1392, "instancenorm3d"], [741, "instancenorm3d"]], "LSTM": [[1397, "lstm"], [750, "lstm"], [722, "lstm"]], "LeakyReLU": [[1413, "leakyrelu"], [743, "leakyrelu"]], "LazyConvTranspose2d": [[1407, "lazyconvtranspose2d"]], "LPPool1d": [[1395, "lppool1d"]], "LPPool2d": [[1396, "lppool2d"]], "GroupNorm": [[1382, "groupnorm"], [737, "groupnorm"]], "Hardshrink": [[1383, "hardshrink"]], "FractionalMaxPool2d": [[1375, "fractionalmaxpool2d"]], "Hardswish": [[1385, "hardswish"], [738, "hardswish"]], "GRU": [[1379, "gru"], [748, "gru"]], "LazyConv1d": [[1403, "lazyconv1d"]], "GLU": [[1378, "glu"]], "L1Loss": [[1394, "l1loss"]], "LazyBatchNorm3d": [[1402, "lazybatchnorm3d"]], "LSTMCell": [[1398, "lstmcell"], [751, "lstmcell"]], "FractionalMaxPool3d": [[1376, "fractionalmaxpool3d"]], "MSELoss": [[1418, "mseloss"]], "FeatureAlphaDropout": [[1372, "featurealphadropout"]], "ReflectionPad3d": [[1450, "reflectionpad3d"]], "RNN": [[1442, "rnn"]], "PReLU": [[1435, "prelu"]], "ReplicationPad2d": [[1452, "replicationpad2d"]], "MultiheadAttention": [[1433, "multiheadattention"], [723, "multiheadattention"]], "ReplicationPad1d": [[1451, "replicationpad1d"]], "PixelShuffle": [[1439, "pixelshuffle"]], "Mish": [[1426, "mish"]], "MaxPool3d": [[1422, "maxpool3d"]], "RNNBase": [[1443, "rnnbase"]], "Tanhshrink": [[1468, "tanhshrink"]], "ModuleList": [[1429, "modulelist"]], "ReLU": [[1446, "relu"]], "Softsign": [[1465, "softsign"]], "ModuleDict": [[1428, "moduledict"]], "MultiLabelMarginLoss": [[1430, "multilabelmarginloss"]], "RNNCell": [[1444, "rnncell"], [753, "rnncell"]], "Softplus": [[1463, "softplus"]], "SmoothL1Loss": [[1458, "smoothl1loss"]], "SELU": [[1454, "selu"]], "ReLU6": [[1447, "relu6"], [746, "relu6"]], "Threshold": [[1469, "threshold"]], "MultiMarginLoss": [[1432, "multimarginloss"]], "ParameterList": [[1438, "parameterlist"]], "NLLLoss": [[1434, "nllloss"]], "RReLU": [[1445, "rrelu"]], "Module": [[1427, "module"]], "SyncBatchNorm": [[1466, "syncbatchnorm"]], "ReflectionPad1d": [[1448, "reflectionpad1d"]], "PoissonNLLLoss": [[1441, "poissonnllloss"]], "Sigmoid": [[1457, "sigmoid"], [747, "sigmoid"]], "Softshrink": [[1464, "softshrink"]], "MaxUnpool2d": [[1424, "maxunpool2d"]], "PixelUnshuffle": [[1440, "pixelunshuffle"]], "SoftMarginLoss": [[1459, "softmarginloss"]], "Tanh": [[1467, "tanh"]], "Softmax2d": [[1461, "softmax2d"]], "Sequential": [[1455, "sequential"]], "SiLU": [[1456, "silu"]], "MaxUnpool1d": [[1423, "maxunpool1d"]], "ReflectionPad2d": [[1449, "reflectionpad2d"]], "MaxUnpool3d": [[1425, "maxunpool3d"]], "ReplicationPad3d": [[1453, "replicationpad3d"]], "ParameterDict": [[1437, "parameterdict"]], "Softmin": [[1462, "softmin"]], "PairwiseDistance": [[1436, "pairwisedistance"]], "MultiLabelSoftMarginLoss": [[1431, "multilabelsoftmarginloss"]], "Softmax": [[1460, "softmax"]], "MaxPool2d": [[1421, "maxpool2d"]], "ConvTranspose1d": [[1358, "convtranspose1d"], [729, "convtranspose1d"]], "BatchNorm2d": [[1346, "batchnorm2d"], [724, "batchnorm2d"]], "ChannelShuffle": [[1351, "channelshuffle"]], "Conv1d": [[1355, "conv1d"], [726, "conv1d"]], "AvgPool3d": [[1342, "avgpool3d"]], "BatchNorm3d": [[1347, "batchnorm3d"], [725, "batchnorm3d"]], "ConstantPad3d": [[1354, "constantpad3d"]], "CosineSimilarity": [[1362, "cosinesimilarity"]], "torch.narrow": [[1326, "torch-narrow"]], "ConstantPad2d": [[1353, "constantpad2d"]], "ELU": [[1369, "elu"], [732, "elu"]], "AdaptiveMaxPool1d": [[1336, "adaptivemaxpool1d"]], "AdaptiveMaxPool2d": [[1337, "adaptivemaxpool2d"]], "torch.ne": [[1328, "torch-ne"]], "BCEWithLogitsLoss": [[1344, "bcewithlogitsloss"]], "torch.narrow_copy": [[1327, "torch-narrow-copy"]], "Embedding": [[1370, "embedding"], [733, "embedding"]], "Dropout3d": [[1368, "dropout3d"]], "Conv3d": [[1357, "conv3d"], [719, "conv3d"], [728, "conv3d"]], "ConstantPad1d": [[1352, "constantpad1d"]], "torch.nanmedian": [[1323, "torch-nanmedian"]], "CELU": [[1349, "celu"]], "ConvTranspose2d": [[1359, "convtranspose2d"], [730, "convtranspose2d"]], "Dropout1d": [[1366, "dropout1d"]], "DataParallel": [[1364, "dataparallel"]], "torch.neg": [[1329, "torch-neg"]], "BatchNorm1d": [[1345, "batchnorm1d"]], "CosineEmbeddingLoss": [[1361, "cosineembeddingloss"]], "Dropout": [[1365, "dropout"]], "Dropout2d": [[1367, "dropout2d"]], "torch.nanquantile": [[1324, "torch-nanquantile"]], "AdaptiveAvgPool1d": [[1332, "adaptiveavgpool1d"]], "Bilinear": [[1348, "bilinear"]], "torch.negative": [[1330, "torch-negative"]], "AdaptiveAvgPool2d": [[1333, "adaptiveavgpool2d"]], "CTCLoss": [[1350, "ctcloss"]], "torch.nextafter": [[1331, "torch-nextafter"]], "CrossEntropyLoss": [[1363, "crossentropyloss"]], "AdaptiveAvgPool3d": [[1334, "adaptiveavgpool3d"]], "AlphaDropout": [[1339, "alphadropout"]], "torch.nansum": [[1325, "torch-nansum"]], "ConvTranspose3d": [[1360, "convtranspose3d"], [731, "convtranspose3d"]], "AdaptiveLogSoftmaxWithLoss": [[1335, "adaptivelogsoftmaxwithloss"]], "Conv2d": [[1356, "conv2d"], [727, "conv2d"], [718, "conv2d"]], "AvgPool1d": [[1340, "avgpool1d"]], "AdaptiveMaxPool3d": [[1338, "adaptivemaxpool3d"]], "EmbeddingBag": [[1371, "embeddingbag"], [734, "embeddingbag"]], "BCELoss": [[1343, "bceloss"]], "AvgPool2d": [[1341, "avgpool2d"]], "torch.lobpcg": [[1266, "torch-lobpcg"]], "torch.linalg.matmul": [[1244, "torch-linalg-matmul"]], "torch.linalg.eigvals": [[1231, "torch-linalg-eigvals"]], "torch.linalg.slogdet": [[1253, "torch-linalg-slogdet"]], "torch.linalg.solve": [[1254, "torch-linalg-solve"]], "torch.linalg.solve_triangular": [[1256, "torch-linalg-solve-triangular"]], "torch.linalg.ldl_factor": [[1236, "torch-linalg-ldl-factor"]], "torch.linalg.lu_factor_ex": [[1242, "torch-linalg-lu-factor-ex"]], "torch.linalg.det": [[1227, "torch-linalg-det"]], "torch.linalg.tensorsolve": [[1260, "torch-linalg-tensorsolve"]], "torch.linalg.eigh": [[1230, "torch-linalg-eigh"]], "torch.linalg.multi_dot": [[1249, "torch-linalg-multi-dot"]], "torch.linalg.matrix_norm": [[1246, "torch-linalg-matrix-norm"]], "torch.linspace": [[1264, "torch-linspace"]], "torch.linalg.matrix_exp": [[1245, "torch-linalg-matrix-exp"]], "torch.linalg.cross": [[1226, "torch-linalg-cross"]], "torch.linalg.householder_product": [[1233, "torch-linalg-householder-product"]], "torch.linalg.svdvals": [[1258, "torch-linalg-svdvals"]], "torch.log1p": [[1269, "torch-log1p"]], "torch.logaddexp": [[1271, "torch-logaddexp"]], "torch.linalg.matrix_rank": [[1248, "torch-linalg-matrix-rank"]], "torch.logcumsumexp": [[1273, "torch-logcumsumexp"]], "torch.linalg.svd": [[1257, "torch-linalg-svd"]], "torch.linalg.eigvalsh": [[1232, "torch-linalg-eigvalsh"]], "torch.linalg.vecdot": [[1262, "torch-linalg-vecdot"]], "torch.log10": [[1268, "torch-log10"]], "torch.linalg.eig": [[1229, "torch-linalg-eig"]], "torch.linalg.inv": [[1234, "torch-linalg-inv"]], "torch.linalg.solve_ex": [[1255, "torch-linalg-solve-ex"]], "torch.linalg.diagonal": [[1228, "torch-linalg-diagonal"]], "torch.linalg.lu": [[1240, "torch-linalg-lu"]], "torch.log": [[1267, "torch-log"]], "torch.linalg.lstsq": [[1239, "torch-linalg-lstsq"]], "torch.log2": [[1270, "torch-log2"]], "torch.linalg.inv_ex": [[1235, "torch-linalg-inv-ex"]], "torch.linalg.vander": [[1261, "torch-linalg-vander"]], "torch.linalg.lu_factor": [[1241, "torch-linalg-lu-factor"]], "torch.linalg.norm": [[1250, "torch-linalg-norm"]], "torch.linalg.pinv": [[1251, "torch-linalg-pinv"]], "torch.linalg.matrix_power": [[1247, "torch-linalg-matrix-power"]], "torch.load": [[1265, "torch-load"]], "torch.linalg.cond": [[1225, "torch-linalg-cond"]], "torch.linalg.tensorinv": [[1259, "torch-linalg-tensorinv"]], "torch.linalg.ldl_factor_ex": [[1237, "torch-linalg-ldl-factor-ex"]], "torch.linalg.qr": [[1252, "torch-linalg-qr"]], "torch.linalg.vector_norm": [[1263, "torch-linalg-vector-norm"]], "torch.linalg.lu_solve": [[1243, "torch-linalg-lu-solve"]], "torch.logaddexp2": [[1272, "torch-logaddexp2"]], "torch.linalg.ldl_solve": [[1238, "torch-linalg-ldl-solve"]], "torch.i0": [[1160, "torch-i0"]], "torch.igammac": [[1162, "torch-igammac"]], "torch.index_reduce": [[1166, "torch-index-reduce"]], "torch.func.vjp": [[1133, "torch-func-vjp"]], "torch.is_floating_point": [[1175, "torch-is-floating-point"]], "torch.hsplit": [[1156, "torch-hsplit"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1174, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.hspmm": [[1157, "torch-hspmm"]], "torch.initial_seed": [[1169, "torch-initial-seed"]], "torch.get_float32_matmul_precision": [[1142, "torch-get-float32-matmul-precision"]], "torch.get_num_interop_threads": [[1143, "torch-get-num-interop-threads"]], "torch.hypot": [[1159, "torch-hypot"]], "torch.get_default_dtype": [[1140, "torch-get-default-dtype"]], "torch.gather": [[1135, "torch-gather"]], "torch.histc": [[1153, "torch-histc"]], "torch.func.vmap": [[1134, "torch-func-vmap"]], "torch.func.jacrev": [[1128, "torch-func-jacrev"]], "torch.index_select": [[1167, "torch-index-select"]], "torch.index_add": [[1164, "torch-index-add"]], "torch.histogram": [[1154, "torch-histogram"]], "torch.hstack": [[1158, "torch-hstack"]], "torch.get_num_threads": [[1144, "torch-get-num-threads"]], "torch.func.jacfwd": [[1127, "torch-func-jacfwd"]], "torch.func.linearize": [[1130, "torch-func-linearize"]], "torch.inverse": [[1171, "torch-inverse"]], "torch.index_copy": [[1165, "torch-index-copy"]], "torch.is_conj": [[1173, "torch-is-conj"]], "torch.heaviside": [[1152, "torch-heaviside"]], "torch.func.replace_all_batch_norm_modules_": [[1131, "torch-func-replace-all-batch-norm-modules"]], "torch.gt": [[1149, "torch-gt"]], "torch.greater": [[1147, "torch-greater"]], "torch.gcd": [[1136, "torch-gcd"]], "torch.func.jvp": [[1129, "torch-func-jvp"]], "torch.get_rng_state": [[1145, "torch-get-rng-state"]], "torch.hamming_window": [[1150, "torch-hamming-window"]], "torch.inner": [[1170, "torch-inner"]], "torch.greater_equal": [[1148, "torch-greater-equal"]], "torch.igamma": [[1161, "torch-igamma"]], "torch.gradient": [[1146, "torch-gradient"]], "torch.func.stack_module_state": [[1132, "torch-func-stack-module-state"]], "torch.ger": [[1139, "torch-ger"]], "torch.get_deterministic_debug_mode": [[1141, "torch-get-deterministic-debug-mode"]], "torch.imag": [[1163, "torch-imag"]], "torch.histogramdd": [[1155, "torch-histogramdd"]], "torch.geqrf": [[1138, "torch-geqrf"]], "inference_mode": [[1168, "inference-mode"]], "torch.ge": [[1137, "torch-ge"]], "torch.hann_window": [[1151, "torch-hann-window"]], "torch.is_complex": [[1172, "torch-is-complex"]], "torch.kron": [[1214, "torch-kron"]], "torch.jit.script_if_tracing": [[1206, "torch-jit-script-if-tracing"]], "torch.is_inference_mode_enabled": [[1177, "torch-is-inference-mode-enabled"]], "torch.istft": [[1190, "torch-istft"]], "torch.jit.trace": [[1209, "torch-jit-trace"]], "torch.less_equal": [[1221, "torch-less-equal"]], "ScriptModule": [[1193, "scriptmodule"]], "torch.jit.trace_module": [[1210, "torch-jit-trace-module"]], "torch.jit.enable_onednn_fusion": [[1195, "torch-jit-enable-onednn-fusion"]], "torch.is_warn_always_enabled": [[1181, "torch-is-warn-always-enabled"]], "torch.jit.set_fusion_strategy": [[1207, "torch-jit-set-fusion-strategy"]], "torch.jit.unused": [[1211, "torch-jit-unused"]], "torch.is_grad_enabled": [[1176, "torch-is-grad-enabled"]], "torch.linalg.cholesky": [[1223, "torch-linalg-cholesky"]], "torch.ldexp": [[1217, "torch-ldexp"]], "torch.jit.fork": [[1196, "torch-jit-fork"]], "torch.jit.annotate": [[1194, "torch-jit-annotate"]], "torch.jit.optimize_for_inference": [[1203, "torch-jit-optimize-for-inference"]], "torch.le": [[1218, "torch-le"]], "torch.isneginf": [[1187, "torch-isneginf"]], "torch.isfinite": [[1183, "torch-isfinite"]], "torch.is_tensor": [[1180, "torch-is-tensor"]], "torch.jit.onednn_fusion_enabled": [[1202, "torch-jit-onednn-fusion-enabled"]], "torch.less": [[1220, "torch-less"]], "torch.lgamma": [[1222, "torch-lgamma"]], "torch.lcm": [[1216, "torch-lcm"]], "torch.is_nonzero": [[1178, "torch-is-nonzero"]], "torch.isin": [[1184, "torch-isin"]], "torch.jit.save": [[1204, "torch-jit-save"]], "torch.isposinf": [[1188, "torch-isposinf"]], "ScriptFunction": [[1192, "scriptfunction"]], "torch.lerp": [[1219, "torch-lerp"]], "torch.isinf": [[1185, "torch-isinf"]], "torch.kaiser_window": [[1213, "torch-kaiser-window"]], "torch.kthvalue": [[1215, "torch-kthvalue"]], "torch.isclose": [[1182, "torch-isclose"]], "torch.jit.script": [[1205, "torch-jit-script"]], "torch.jit.wait": [[1212, "torch-jit-wait"]], "torch.jit.interface": [[1199, "torch-jit-interface"]], "torch.isnan": [[1186, "torch-isnan"]], "strict_fusion": [[1208, "strict-fusion"]], "torch.jit.freeze": [[1197, "torch-jit-freeze"]], "torch.jit.load": [[1201, "torch-jit-load"]], "torch.jit.ignore": [[1198, "torch-jit-ignore"]], "torch.linalg.cholesky_ex": [[1224, "torch-linalg-cholesky-ex"]], "torch.jit.isinstance": [[1200, "torch-jit-isinstance"]], "Attribute": [[1191, "attribute"]], "torch.is_storage": [[1179, "torch-is-storage"]], "torch.isreal": [[1189, "torch-isreal"]], "torch.expm1": [[1078, "torch-expm1"]], "torch.from_dlpack": [[1117, "torch-from-dlpack"]], "torch.eye": [[1079, "torch-eye"]], "torch.fft.hfftn": [[1089, "torch-fft-hfftn"]], "torch.fft.ifft": [[1090, "torch-fft-ifft"]], "torch.fft.fftshift": [[1086, "torch-fft-fftshift"]], "torch.fake_quantize_per_channel_affine": [[1080, "torch-fake-quantize-per-channel-affine"]], "torch.fft.ifftshift": [[1093, "torch-fft-ifftshift"]], "torch.fmin": [[1113, "torch-fmin"]], "torch.flatten": [[1105, "torch-flatten"]], "torch.from_numpy": [[1118, "torch-from-numpy"]], "torch.full_like": [[1121, "torch-full-like"]], "torch.float_power": [[1109, "torch-float-power"]], "torch.fft.fft2": [[1083, "torch-fft-fft2"]], "torch.frac": [[1115, "torch-frac"]], "torch.fft.ihfftn": [[1096, "torch-fft-ihfftn"]], "torch.fake_quantize_per_tensor_affine": [[1081, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.fft": [[1082, "torch-fft-fft"]], "torch.fft.ihfft2": [[1095, "torch-fft-ihfft2"]], "torch.fft.ihfft": [[1094, "torch-fft-ihfft"]], "torch.flip": [[1106, "torch-flip"]], "torch.fft.hfft": [[1087, "torch-fft-hfft"]], "torch.fft.rfftn": [[1103, "torch-fft-rfftn"]], "torch.func.functionalize": [[1123, "torch-func-functionalize"]], "torch.fft.rfftfreq": [[1102, "torch-fft-rfftfreq"]], "torch.full": [[1120, "torch-full"]], "torch.func.grad": [[1124, "torch-func-grad"]], "torch.fft.rfft2": [[1101, "torch-fft-rfft2"]], "torch.floor": [[1110, "torch-floor"]], "torch.frexp": [[1116, "torch-frexp"]], "torch.fft.fftfreq": [[1084, "torch-fft-fftfreq"]], "torch.fft.ifft2": [[1091, "torch-fft-ifft2"]], "torch.fmod": [[1114, "torch-fmod"]], "torch.fmax": [[1112, "torch-fmax"]], "torch.fft.ifftn": [[1092, "torch-fft-ifftn"]], "torch.fft.hfft2": [[1088, "torch-fft-hfft2"]], "torch.fft.rfft": [[1100, "torch-fft-rfft"]], "torch.func.hessian": [[1126, "torch-func-hessian"]], "torch.fft.irfft": [[1097, "torch-fft-irfft"]], "torch.fft.fftn": [[1085, "torch-fft-fftn"]], "torch.fft.irfft2": [[1098, "torch-fft-irfft2"]], "torch.flipud": [[1108, "torch-flipud"]], "torch.func.grad_and_value": [[1125, "torch-func-grad-and-value"]], "torch.fliplr": [[1107, "torch-fliplr"]], "torch.fix": [[1104, "torch-fix"]], "torch.floor_divide": [[1111, "torch-floor-divide"]], "torch.fft.irfftn": [[1099, "torch-fft-irfftn"]], "torch.func.functional_call": [[1122, "torch-func-functional-call"]], "torch.frombuffer": [[1119, "torch-frombuffer"]], "torch.masked": [[1876, "torch-masked"]], "Motivation": [[1876, "motivation"], [1942, "motivation"], [1943, "motivation"]], "What is a MaskedTensor?": [[1876, "what-is-a-maskedtensor"]], "Supported Operators": [[1876, "supported-operators"]], "Unary Operators": [[1876, "unary-operators"]], "Binary Operators": [[1876, "binary-operators"]], "Reductions": [[1876, "reductions"]], "View and select functions": [[1876, "view-and-select-functions"]], "Distributed Data Parallel": [[1893, "distributed-data-parallel"]], "Example": [[1893, "example"], [1894, "example"]], "Internal Design": [[1893, "internal-design"]], "Implementation": [[1893, "implementation"], [1923, "implementation"]], "ProcessGroup": [[1893, "processgroup"]], "TorchDynamo DDPOptimizer": [[1893, "id1"]], "TorchScript Language Reference": [[1869, "torchscript-language-reference"], [1868, "torchscript-language-reference"]], "Terminology": [[1869, "terminology"]], "Type System": [[1869, "id1"]], "TorchScript Types": [[1869, "torchscript-types"]], "Meta Types": [[1869, "meta-types"]], "Any Type": [[1869, "any-type"]], "Operators Supported for Any Type": [[1869, "operators-supported-for-any-type"]], "Design Notes": [[1869, "design-notes"], [1921, "design-notes"]], "Primitive Types": [[1869, "primitive-types"]], "Structural Types": [[1869, "structural-types"]], "Nominal Types": [[1869, "nominal-types"]], "Built-in Class": [[1869, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1869, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1869, "custom-class"]], "Enum Type": [[1869, "enum-type"]], "TorchScript Module Class": [[1869, "torchscript-module-class"]], "Module Instance Class": [[1869, "module-instance-class"]], "Type Annotation": [[1869, "type-annotation"]], "When to Annotate Types": [[1869, "when-to-annotate-types"]], "Annotate Function Signature": [[1869, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1869, "annotate-variables-and-data-attributes"]], "Local Variables": [[1869, "local-variables"]], "Instance Data Attributes": [[1869, "instance-data-attributes"]], "Type Annotation APIs": [[1869, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1869, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1869, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1869, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1869, "unsupported-typing-constructs"], [1868, "unsupported-typing-constructs"]], "Expressions": [[1869, "expressions"], [1868, "expressions"]], "Arithmetic Conversions": [[1869, "arithmetic-conversions"]], "Atoms": [[1869, "atoms"]], "Identifiers": [[1869, "identifiers"]], "Literals": [[1869, "literals"], [1868, "literals"]], "Parenthesized Forms": [[1869, "parenthesized-forms"]], "List and Dictionary Displays": [[1869, "list-and-dictionary-displays"]], "Primaries": [[1869, "primaries"]], "Attribute References": [[1869, "attribute-references"]], "Subscriptions": [[1869, "subscriptions"]], "Slicings": [[1869, "slicings"]], "Calls": [[1869, "calls"]], "Power Operator": [[1869, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1869, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1869, "binary-arithmetic-operations"]], "Shifting Operations": [[1869, "shifting-operations"]], "Binary Bitwise Operations": [[1869, "binary-bitwise-operations"]], "Comparisons": [[1869, "comparisons"], [1939, "comparisons"]], "Value Comparisons": [[1869, "value-comparisons"]], "Membership Test Operations": [[1869, "membership-test-operations"]], "Identity Comparisons": [[1869, "identity-comparisons"]], "Boolean Operations": [[1869, "boolean-operations"]], "Conditional Expressions": [[1869, "conditional-expressions"]], "Expression Lists": [[1869, "expression-lists"]], "Simple Statements": [[1869, "simple-statements"]], "Expression Statements": [[1869, "expression-statements"]], "Assignment Statements": [[1869, "assignment-statements"]], "Augmented Assignment Statements": [[1869, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1869, "annotated-assignment-statements"]], "The raise Statement": [[1869, "the-raise-statement"]], "The assert Statement": [[1869, "the-assert-statement"]], "The return Statement": [[1869, "the-return-statement"]], "The del Statement": [[1869, "the-del-statement"]], "The pass Statement": [[1869, "the-pass-statement"]], "The print Statement": [[1869, "the-print-statement"]], "The break Statement": [[1869, "the-break-statement"]], "The continue Statement:": [[1869, "the-continue-statement"]], "Compound Statements": [[1869, "compound-statements"]], "The if Statement": [[1869, "the-if-statement"]], "Basic if/else Statement": [[1869, "basic-if-else-statement"]], "Ternary if/else Statement": [[1869, "ternary-if-else-statement"]], "The while Statement": [[1869, "the-while-statement"]], "The for-in Statement": [[1869, "the-for-in-statement"]], "The with Statement": [[1869, "the-with-statement"]], "The tuple Statement": [[1869, "the-tuple-statement"]], "The getattr Statement": [[1869, "the-getattr-statement"]], "The hasattr Statement": [[1869, "the-hasattr-statement"]], "The zip Statement": [[1869, "the-zip-statement"]], "The enumerate Statement": [[1869, "the-enumerate-statement"]], "Python Values": [[1869, "python-values"]], "Resolution Rules": [[1869, "resolution-rules"]], "Python Built-in Functions Support": [[1869, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1869, "id5"]], "Python Built-in Values Support": [[1869, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1869, "id6"]], "torch.* APIs": [[1869, "torch-apis"]], "Remote Procedure Calls": [[1869, "remote-procedure-calls"]], "Asynchronous Execution": [[1869, "asynchronous-execution"]], "Type Annotations": [[1869, "type-annotations"]], "Meta Programming": [[1869, "meta-programming"]], "Type Refinement": [[1869, "type-refinement"]], "TorchScript Builtins": [[1867, "torchscript-builtins"]], "Supported Tensor Methods": [[1867, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1867, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1867, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1867, "python-built-in-functions"]], "math Module": [[1867, "math-module"]], "TorchDynamo-based ONNX Exporter": [[1908, "torchdynamo-based-onnx-exporter"], [1907, "torchdynamo-based-onnx-exporter"]], "Dependencies": [[1908, "dependencies"]], "A simple example": [[1908, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[1908, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[1908, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[1908, null]], "CPU threading and TorchScript inference": [[1891, "cpu-threading-and-torchscript-inference"]], "Build options": [[1891, "build-options"]], "Runtime API": [[1891, "runtime-api"]], "Tuning the number of threads": [[1891, "tuning-the-number-of-threads"]], "Modules": [[1900, "modules"], [1866, "modules"]], "A Simple Custom Module": [[1900, "a-simple-custom-module"]], "Modules as Building Blocks": [[1900, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1900, "neural-network-training-with-modules"]], "Module State": [[1900, "module-state"]], "Module Initialization": [[1900, "module-initialization"]], "Module Hooks": [[1900, "module-hooks"]], "Advanced Features": [[1900, "advanced-features"]], "Distributed Training": [[1900, "distributed-training"]], "Profiling Performance": [[1900, "profiling-performance"]], "Improving Performance with Quantization": [[1900, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1900, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1900, "parametrizations"]], "Transforming Modules with FX": [[1900, "transforming-modules-with-fx"]], "Features for large-scale deployments": [[1899, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1899, "fleet-wide-operator-profiling"]], "API usage logging": [[1899, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1899, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1899, "build-environment-considerations"]], "Common extension points": [[1899, "common-extension-points"]], "JIT Utils - torch.utils.jit": [[1872, "module-torch.utils.jit"]], "TorchScript Unsupported PyTorch Constructs": [[1871, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1871, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1871, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1871, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1871, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1871, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1871, "pytorch-unsupported-modules-and-classes"]], "torch.onnx": [[1907, "torch-onnx"]], "TorchScript-based ONNX Exporter": [[1907, "torchscript-based-onnx-exporter"], [1910, "torchscript-based-onnx-exporter"]], "Contributing / Developing": [[1907, "contributing-developing"]], "HIP (ROCm) semantics": [[1898, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1898, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1898, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1898, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1898, "memory-management"], [1892, "memory-management"], [17, "memory-management"]], "hipFFT/rocFFT plan cache": [[1898, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1898, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1898, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1898, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1898, "enabling-kernel-asserts"]], "CUDA Automatic Mixed Precision examples": [[1888, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1888, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1888, "working-with-unscaled-gradients"]], "Gradient clipping": [[1888, "gradient-clipping"]], "Working with Scaled Gradients": [[1888, "working-with-scaled-gradients"]], "Gradient accumulation": [[1888, "gradient-accumulation"]], "Gradient penalty": [[1888, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1888, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1888, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1888, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1888, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1888, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1888, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1888, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1888, "functions-that-need-a-particular-dtype"]], "torch.zeros": [[1862, "torch-zeros"]], "Python Language Reference Coverage": [[1870, "python-language-reference-coverage"]], "Extending torch.func with autograd.Function": [[1895, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1895, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1895, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1895, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1895, "limitations-and-gotchas"]], "torch.vmap() Support": [[1895, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1895, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1895, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1895, "torch-func-jvp-support"]], "ONNX Backend for TorchDynamo": [[1909, "onnx-backend-for-torchdynamo"]], "Extending PyTorch": [[1894, "extending-pytorch"]], "Extending torch.autograd": [[1894, "extending-torch-autograd"]], "When to use": [[1894, "when-to-use"]], "When not to use": [[1894, "when-not-to-use"]], "How to use": [[1894, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1894, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1894, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1894, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1894, "extending-torch-nn"]], "Adding a Module": [[1894, "adding-a-module"]], "Extending torch Python API": [[1894, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1894, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1894, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1894, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1894, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1894, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1894, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1894, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1894, "writing-custom-c-extensions"]], "Frequently Asked Questions": [[1896, "frequently-asked-questions"], [1866, "frequently-asked-questions"], [1910, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1944, "frequently-asked-questions"], [1916, "frequently-asked-questions"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1896, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1896, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1896, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1896, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1896, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Numerical accuracy": [[1903, "numerical-accuracy"]], "Batched computations or slice computations": [[1903, "batched-computations-or-slice-computations"]], "Extremal values": [[1903, "extremal-values"]], "Linear algebra (torch.linalg)": [[1903, "linear-algebra-torch-linalg"]], "Non-finite values": [[1903, "non-finite-values"]], "Extremal values in linalg": [[1903, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1903, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1903, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1903, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "PyTorch documentation": [[1865, "pytorch-documentation"]], "Community": [[1865, null]], "Developer Notes": [[1865, null]], "Language Bindings": [[1865, null]], "Python API": [[1865, null], [1910, "module-torch.onnx"]], "Libraries": [[1865, null]], "Indices and tables": [[1865, "indices-and-tables"]], "Types": [[1868, "supported-type"], [1910, "types"]], "Default Types": [[1868, "default-types"]], "Optional Type Refinement": [[1868, "optional-type-refinement"]], "TorchScript Classes": [[1868, "id2"], [1866, "torchscript-classes"]], "TorchScript Enums": [[1868, "id4"]], "Named Tuples": [[1868, "named-tuples"]], "Iterables": [[1868, "iterables"]], "List Construction": [[1868, "list-construction"]], "Tuple Construction": [[1868, "tuple-construction"]], "Dict Construction": [[1868, "dict-construction"]], "Variables": [[1868, "variables"], [1866, "variables"], [1947, "variables"]], "Arithmetic Operators": [[1868, "arithmetic-operators"]], "Comparison Operators": [[1868, "comparison-operators"]], "Logical Operators": [[1868, "logical-operators"]], "Subscripts and Slicing": [[1868, "subscripts-and-slicing"]], "Function Calls": [[1868, "function-calls"]], "Method Calls": [[1868, "method-calls"]], "Ternary Expressions": [[1868, "ternary-expressions"]], "Casts": [[1868, "casts"]], "Accessing Module Parameters": [[1868, "accessing-module-parameters"]], "Statements": [[1868, "statements"]], "Simple Assignments": [[1868, "simple-assignments"]], "Pattern Matching Assignments": [[1868, "pattern-matching-assignments"]], "Print Statements": [[1868, "print-statements"]], "If Statements": [[1868, "if-statements"]], "While Loops": [[1868, "while-loops"]], "For loops with range": [[1868, "for-loops-with-range"]], "For loops over tuples": [[1868, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1868, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1868, "break-and-continue"]], "Return": [[1868, "return"]], "Variable Resolution": [[1868, "variable-resolution"]], "Use of Python Values": [[1868, "use-of-python-values"]], "Functions": [[1868, "functions"], [1866, "functions"], [1910, "functions"], [1926, "functions"], [1955, "functions"]], "Attribute Lookup On Python Modules": [[1868, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1868, "python-defined-constants"]], "Module Attributes": [[1868, "module-attributes"]], "torch.library": [[1873, "torch-library"]], "Multiprocessing best practices": [[1902, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1902, "cuda-in-multiprocessing"]], "Best practices and tips": [[1902, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1902, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1902, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1902, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1902, "hogwild"]], "CPU in multiprocessing": [[1902, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1902, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1902, "avoid-cpu-oversubscription"]], "torch.monitor": [[1879, "torch-monitor"]], "torch.zeros_like": [[1863, "torch-zeros-like"]], "TorchScript": [[1866, "torchscript"]], "Creating TorchScript Code": [[1866, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1866, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1866, "torchscript-language"]], "Built-in Functions and Modules": [[1866, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1866, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1866, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1866, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1866, "disable-jit-for-debugging"]], "Inspecting Code": [[1866, "inspecting-code"]], "Interpreting Graphs": [[1866, "interpreting-graphs"]], "Tracer": [[1866, "tracer"]], "Tracing Edge Cases": [[1866, "tracing-edge-cases"]], "Automatic Trace Checking": [[1866, "automatic-trace-checking"]], "Tracer Warnings": [[1866, "tracer-warnings"]], "Known Issues": [[1866, "known-issues"]], "Appendix": [[1866, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1866, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Attributes": [[1866, "attributes"]], "Constants": [[1866, "constants"]], "Fusion Backends": [[1866, "fusion-backends"]], "References": [[1866, "references"]], "torch.linalg": [[1874, "torch-linalg"]], "Matrix Properties": [[1874, "matrix-properties"]], "Decompositions": [[1874, "decompositions"]], "Solvers": [[1874, "solvers"]], "Inverses": [[1874, "inverses"]], "Matrix Functions": [[1874, "matrix-functions"]], "Matrix Products": [[1874, "matrix-products"]], "Tensor Operations": [[1874, "tensor-operations"]], "Misc": [[1874, "misc"]], "Experimental Functions": [[1874, "experimental-functions"]], "Named Tensors operator coverage": [[1882, "named-tensors-operator-coverage"]], "Supported Operations": [[1882, "id1"]], "Keeps input names": [[1882, "keeps-input-names"]], "Removes dimensions": [[1882, "removes-dimensions"]], "Unifies names from inputs": [[1882, "unifies-names-from-inputs"]], "Permutes dimensions": [[1882, "permutes-dimensions"]], "Contracts away dims": [[1882, "contracts-away-dims"]], "Factory functions": [[1882, "factory-functions"]], "out function and in-place variants": [[1882, "out-function-and-in-place-variants"]], "Reproducibility": [[1904, "reproducibility"]], "Controlling sources of randomness": [[1904, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1904, "pytorch-random-number-generator"]], "Python": [[1904, "python"]], "Random number generators in other libraries": [[1904, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1904, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1904, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1904, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1904, "cuda-rnn-and-lstm"]], "DataLoader": [[1904, "dataloader"]], "Multiprocessing package - torch.multiprocessing": [[1881, "module-torch.multiprocessing"]], "Strategy management": [[1881, "strategy-management"]], "Sharing CUDA tensors": [[1881, "sharing-cuda-tensors"]], "Sharing strategies": [[1881, "sharing-strategies"]], "File descriptor - file_descriptor": [[1881, "file-descriptor-file-descriptor"]], "File system - file_system": [[1881, "file-system-file-system"]], "Spawning subprocesses": [[1881, "spawning-subprocesses"]], "torch.nn": [[1885, "module-torch.nn"], [1885, "id1"]], "Containers": [[1885, "containers"]], "Convolution Layers": [[1885, "convolution-layers"]], "Pooling layers": [[1885, "pooling-layers"]], "Padding Layers": [[1885, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1885, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1885, "non-linear-activations-other"]], "Normalization Layers": [[1885, "normalization-layers"]], "Recurrent Layers": [[1885, "recurrent-layers"]], "Transformer Layers": [[1885, "transformer-layers"]], "Linear Layers": [[1885, "linear-layers"]], "Dropout Layers": [[1885, "dropout-layers"]], "Sparse Layers": [[1885, "sparse-layers"]], "Distance Functions": [[1885, "distance-functions"]], "Loss Functions": [[1885, "loss-functions"]], "Vision Layers": [[1885, "vision-layers"]], "Shuffle Layers": [[1885, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1885, "module-torch.nn.parallel"]], "Utilities": [[1885, "module-torch.nn.utils"], [1933, "utilities"]], "Quantized Functions": [[1885, "quantized-functions"]], "Lazy Modules Initialization": [[1885, "lazy-modules-initialization"]], "Serialization semantics": [[1905, "serialization-semantics"]], "Table of Contents": [[1905, "table-of-contents"]], "Saving and loading tensors": [[1905, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1905, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1905, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1905, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1905, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1905, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1905, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1905, "utility-functions"], [1919, "utility-functions"]], "torch.nn.functional": [[1886, "torch-nn-functional"]], "Convolution functions": [[1886, "convolution-functions"]], "Pooling functions": [[1886, "pooling-functions"]], "Attention Mechanisms": [[1886, "attention-mechanisms"]], "Non-linear activation functions": [[1886, "non-linear-activation-functions"]], "Linear functions": [[1886, "linear-functions"]], "Dropout functions": [[1886, "dropout-functions"]], "Sparse functions": [[1886, "sparse-functions"]], "Distance functions": [[1886, "distance-functions"]], "Loss functions": [[1886, "loss-functions"]], "Vision functions": [[1886, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1886, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1886, "data-parallel"]], "Named Tensors": [[1883, "named-tensors"]], "Creating named tensors": [[1883, "creating-named-tensors"]], "Named dimensions": [[1883, "named-dimensions"]], "Name propagation semantics": [[1883, "name-propagation-semantics"]], "match semantics": [[1883, "match-semantics"]], "Basic name inference rules": [[1883, "basic-name-inference-rules"]], "Explicit alignment by names": [[1883, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1883, "manipulating-dimensions"]], "Autograd support": [[1883, "autograd-support"]], "Currently supported operations and subsystems": [[1883, "currently-supported-operations-and-subsystems"]], "Operators": [[1883, "operators"]], "Subsystems": [[1883, "subsystems"]], "Named tensor API reference": [[1883, "named-tensor-api-reference"]], "torch.nn.init": [[1887, "torch-nn-init"]], "torch.mps": [[1880, "module-torch.mps"]], "MPS Profiler": [[1880, "mps-profiler"]], "MPS Event": [[1880, "mps-event"]], "torch.hub": [[1864, "torch-hub"]], "Publishing models": [[1864, "publishing-models"]], "How to implement an entrypoint?": [[1864, "how-to-implement-an-entrypoint"]], "Important Notice": [[1864, "important-notice"]], "Loading models from Hub": [[1864, "loading-models-from-hub"]], "Running a loaded model:": [[1864, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1864, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1864, "caching-logic"]], "Known limitations:": [[1864, "known-limitations"]], "torch.utils.mobile_optimizer": [[1877, "torch-utils-mobile-optimizer"]], "Windows FAQ": [[1906, "windows-faq"]], "Building from source": [[1906, "building-from-source"]], "Include optional components": [[1906, "include-optional-components"]], "Speeding CUDA build for Windows": [[1906, "speeding-cuda-build-for-windows"]], "One key install script": [[1906, "one-key-install-script"]], "Extension": [[1906, "extension"]], "CFFI Extension": [[1906, "cffi-extension"]], "Cpp Extension": [[1906, "cpp-extension"]], "Installation": [[1906, "installation"]], "Package not found in win-32 channel.": [[1906, "package-not-found-in-win-32-channel"]], "Import error": [[1906, "import-error"]], "Usage (multiprocessing)": [[1906, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1906, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1906, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1906, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1906, "cuda-ipc-operations"]], "Broadcasting semantics": [[1890, "broadcasting-semantics"]], "General semantics": [[1890, "general-semantics"]], "In-place semantics": [[1890, "in-place-semantics"]], "Backwards compatibility": [[1890, "backwards-compatibility"]], "torch.utils.model_zoo": [[1878, "torch-utils-model-zoo"]], "Autograd mechanics": [[1889, "autograd-mechanics"]], "How autograd encodes the history": [[1889, "how-autograd-encodes-the-history"]], "Saved tensors": [[1889, "saved-tensors"]], "Gradients for non-differentiable functions": [[1889, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1889, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1933, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1889, "setting-requires-grad"]], "Grad Modes": [[1889, "grad-modes"]], "Default Mode (Grad Mode)": [[1889, "default-mode-grad-mode"]], "No-grad Mode": [[1889, "no-grad-mode"]], "Inference Mode": [[1889, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1889, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1889, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1889, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1889, "multithreaded-autograd"]], "Concurrency on CPU": [[1889, "concurrency-on-cpu"]], "Non-determinism": [[1889, "non-determinism"]], "Graph retaining": [[1889, "graph-retaining"]], "Thread Safety on Autograd Node": [[1889, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1889, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1889, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1889, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1889, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1889, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1889, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1889, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1889, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1889, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1889, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1889, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1889, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1889, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1889, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1889, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1889, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Gradcheck mechanics": [[1897, "gradcheck-mechanics"]], "Notations and background information": [[1897, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1897, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1897, "real-to-real-functions"]], "Default real input numerical evaluation": [[1897, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1897, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1897, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1897, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1897, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1897, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1897, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1897, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1897, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1897, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1897, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1897, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1897, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1897, "gradgradcheck-implementation"]], "torch._logging": [[1875, "torch-logging"]], "CUDA semantics": [[1892, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1892, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1892, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1892, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1892, "asynchronous-execution"]], "CUDA streams": [[1892, "cuda-streams"]], "Stream semantics of backward passes": [[1892, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1892, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1892, "environment-variables"]], "Using custom memory allocators for CUDA": [[1892, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1892, "cublas-workspaces"]], "cuFFT plan cache": [[1892, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1892, "just-in-time-compilation"]], "Best practices": [[1892, "best-practices"]], "Device-agnostic code": [[1892, "device-agnostic-code"]], "Use pinned memory buffers": [[1892, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1892, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1892, "cuda-graphs"]], "Why CUDA Graphs?": [[1892, "why-cuda-graphs"]], "PyTorch API": [[1892, "pytorch-api"]], "Constraints": [[1892, "constraints"], [30, "module-torch.distributions.constraints"]], "Non-constraints": [[1892, "non-constraints"]], "Whole-network capture": [[1892, "whole-network-capture"]], "Partial-network capture": [[1892, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1892, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1892, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1892, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1892, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1892, "id5"]], "Graph memory management": [[1892, "graph-memory-management"]], "Sharing memory across captures": [[1892, "sharing-memory-across-captures"]], "torch.nested": [[1884, "module-torch.nested"]], "Construction": [[1884, "construction"], [1925, "construction"]], "size": [[1884, "size"]], "unbind": [[1884, "unbind"]], "Nested tensor constructor and conversion functions": [[1884, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1884, "supported-operations"], [1925, "supported-operations"]], "Example: AlexNet from PyTorch to ONNX": [[1910, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1910, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1910, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1910, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1910, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1910, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1910, "limitations"], [1944, "limitations"], [1939, "limitations"], [1945, "limitations"]], "Differences in Operator Implementations": [[1910, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1910, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1910, "reads-gets"]], "Writes / Sets": [[1910, "writes-sets"]], "Adding support for operators": [[1910, "adding-support-for-operators"]], "ONNX exporter internals": [[1910, "onnx-exporter-internals"]], "ATen operators": [[1910, "aten-operators"]], "List of supported operators": [[1910, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1910, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1910, "torch-autograd-functions"]], "Static Symbolic Method": [[1910, "static-symbolic-method"]], "Inline Autograd Function": [[1910, "inline-autograd-function"]], "Custom operators": [[1910, "custom-operators"]], "ONNX-script functions": [[1910, "onnx-script-functions"]], "C++ Operators": [[1910, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1910, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[1910, "classes"]], "MPS backend": [[1901, "mps-backend"]], "torch.cumulative_trapezoid": [[1049, "torch-cumulative-trapezoid"]], "torch.cuda.synchronize": [[1042, "torch-cuda-synchronize"]], "torch.dot": [[1063, "torch-dot"]], "enable_grad": [[1070, "enable-grad"]], "torch.cuda.reset_max_memory_cached": [[1031, "torch-cuda-reset-max-memory-cached"]], "torch.empty_strided": [[1069, "torch-empty-strided"]], "torch.diagflat": [[1055, "torch-diagflat"]], "torch.cuda.set_stream": [[1039, "torch-cuda-set-stream"]], "torch.cuda.utilization": [[1044, "torch-cuda-utilization"]], "torch.digamma": [[1059, "torch-digamma"]], "torch.cuda.reset_peak_memory_stats": [[1032, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.set_rng_state": [[1037, "torch-cuda-set-rng-state"]], "torch.div": [[1061, "torch-div"]], "torch.det": [[1052, "torch-det"]], "torch.cumprod": [[1047, "torch-cumprod"]], "torch.erfc": [[1074, "torch-erfc"]], "torch.cummax": [[1045, "torch-cummax"]], "torch.cuda.temperature": [[1043, "torch-cuda-temperature"]], "torch.cumsum": [[1048, "torch-cumsum"]], "torch.deg2rad": [[1050, "torch-deg2rad"]], "torch.exp2": [[1077, "torch-exp2"]], "torch.dist": [[1060, "torch-dist"]], "torch.cummin": [[1046, "torch-cummin"]], "torch.divide": [[1062, "torch-divide"]], "torch.erfinv": [[1075, "torch-erfinv"]], "torch.cuda.seed": [[1033, "torch-cuda-seed"]], "torch.diff": [[1058, "torch-diff"]], "torch.cuda.set_sync_debug_mode": [[1040, "torch-cuda-set-sync-debug-mode"]], "torch.cuda.reset_max_memory_allocated": [[1030, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.stream": [[1041, "torch-cuda-stream"]], "torch.eq": [[1071, "torch-eq"]], "torch.cuda.set_per_process_memory_fraction": [[1036, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.set_device": [[1035, "torch-cuda-set-device"]], "torch.empty": [[1067, "torch-empty"]], "torch.cuda.seed_all": [[1034, "torch-cuda-seed-all"]], "torch.diag": [[1053, "torch-diag"]], "torch.empty_like": [[1068, "torch-empty-like"]], "torch.erf": [[1073, "torch-erf"]], "torch.dequantize": [[1051, "torch-dequantize"]], "torch.diagonal": [[1056, "torch-diagonal"]], "torch.exp": [[1076, "torch-exp"]], "torch.diag_embed": [[1054, "torch-diag-embed"]], "torch.equal": [[1072, "torch-equal"]], "torch.einsum": [[1066, "torch-einsum"]], "torch.cuda.power_draw": [[1029, "torch-cuda-power-draw"]], "torch.dsplit": [[1064, "torch-dsplit"]], "torch.cuda.set_rng_state_all": [[1038, "torch-cuda-set-rng-state-all"]], "torch.dstack": [[1065, "torch-dstack"]], "torch.diagonal_scatter": [[1057, "torch-diagonal-scatter"]], "torch.cuda.device_count": [[989, "torch-cuda-device-count"]], "torch.cuda.memory_reserved": [[1021, "torch-cuda-memory-reserved"]], "torch.cuda.memory_stats": [[1023, "torch-cuda-memory-stats"]], "torch.cuda.comm.broadcast_coalesced": [[980, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.manual_seed": [[1013, "torch-cuda-manual-seed"]], "torch.cuda.max_memory_allocated": [[1015, "torch-cuda-max-memory-allocated"]], "torch.cuda.init": [[1003, "torch-cuda-init"]], "torch.cuda.default_stream": [[987, "torch-cuda-default-stream"]], "torch.cuda.get_device_name": [[995, "torch-cuda-get-device-name"]], "torch.cuda.nvtx.mark": [[1026, "torch-cuda-nvtx-mark"]], "torch.cuda.current_stream": [[986, "torch-cuda-current-stream"]], "torch.cuda.get_gencode_flags": [[997, "torch-cuda-get-gencode-flags"]], "torch.cuda.comm.scatter": [[983, "torch-cuda-comm-scatter"]], "torch.cuda.initial_seed": [[1004, "torch-cuda-initial-seed"]], "torch.cuda.get_rng_state_all": [[999, "torch-cuda-get-rng-state-all"]], "torch.cuda.nvtx.range_push": [[1028, "torch-cuda-nvtx-range-push"]], "torch.cuda.current_device": [[985, "torch-cuda-current-device"]], "torch.cuda.get_allocator_backend": [[992, "torch-cuda-get-allocator-backend"]], "torch.cuda.jiterator._create_jit_fn": [[1009, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.max_memory_reserved": [[1017, "torch-cuda-max-memory-reserved"]], "torch.cuda.memory_cached": [[1020, "torch-cuda-memory-cached"]], "device_of": [[990, "device-of"]], "torch.cuda.is_available": [[1006, "torch-cuda-is-available"]], "torch.cuda.memory_summary": [[1024, "torch-cuda-memory-summary"]], "torch.cuda.get_rng_state": [[998, "torch-cuda-get-rng-state"]], "graph": [[1001, "graph"]], "torch.cuda.get_device_properties": [[996, "torch-cuda-get-device-properties"]], "torch.cuda.comm.reduce_add": [[982, "torch-cuda-comm-reduce-add"]], "torch.cuda.graph_pool_handle": [[1002, "torch-cuda-graph-pool-handle"]], "torch.cuda.list_gpu_processes": [[1011, "torch-cuda-list-gpu-processes"]], "torch.cuda.memory_snapshot": [[1022, "torch-cuda-memory-snapshot"]], "torch.cuda.is_current_stream_capturing": [[1007, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.nvtx.range_pop": [[1027, "torch-cuda-nvtx-range-pop"]], "torch.cuda.ipc_collect": [[1005, "torch-cuda-ipc-collect"]], "device": [[988, "device"]], "torch.cuda.make_graphed_callables": [[1012, "torch-cuda-make-graphed-callables"]], "torch.cuda.manual_seed_all": [[1014, "torch-cuda-manual-seed-all"]], "torch.cuda.mem_get_info": [[1018, "torch-cuda-mem-get-info"]], "torch.cuda.current_blas_handle": [[984, "torch-cuda-current-blas-handle"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1010, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.max_memory_cached": [[1016, "torch-cuda-max-memory-cached"]], "torch.cuda.memory_allocated": [[1019, "torch-cuda-memory-allocated"]], "torch.cuda.get_arch_list": [[993, "torch-cuda-get-arch-list"]], "torch.cuda.comm.gather": [[981, "torch-cuda-comm-gather"]], "torch.cuda.get_device_capability": [[994, "torch-cuda-get-device-capability"]], "torch.cuda.get_sync_debug_mode": [[1000, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.is_initialized": [[1008, "torch-cuda-is-initialized"]], "torch.cuda.empty_cache": [[991, "torch-cuda-empty-cache"]], "torch.cuda.memory_usage": [[1025, "torch-cuda-memory-usage"]], "torch.cpu.is_available": [[963, "torch-cpu-is-available"]], "torch.cpu.synchronize": [[965, "torch-cpu-synchronize"]], "torch.copysign": [[953, "torch-copysign"]], "torch.cuda.clock_rate": [[978, "torch-cuda-clock-rate"]], "torch.compiler.disable": [[945, "torch-compiler-disable"], [1945, "torch-compiler-disable"]], "torch.compiled_with_cxx11_abi": [[941, "torch-compiled-with-cxx11-abi"]], "CUDAGraph": [[967, "cudagraph"]], "ExternalStream": [[970, "externalstream"]], "torch.compile": [[940, "torch-compile"]], "torch.cuda.OutOfMemoryError": [[971, "torch-cuda-outofmemoryerror"]], "torch.compiler.allow_in_graph": [[942, "torch-compiler-allow-in-graph"], [1945, "torch-compiler-allow-in-graph"]], "torch.cov": [[958, "torch-cov"]], "torch.conj": [[951, "torch-conj"]], "torch.cross": [[966, "torch-cross"]], "torch.cholesky": [[931, "torch-cholesky"]], "torch.concat": [[949, "torch-concat"]], "torch.cos": [[955, "torch-cos"]], "torch.clamp": [[935, "torch-clamp"]], "torch.chunk": [[934, "torch-chunk"]], "CUDAPluggableAllocator": [[968, "cudapluggableallocator"]], "torch.clip": [[936, "torch-clip"]], "torch.conj_physical": [[952, "torch-conj-physical"]], "torch.cuda.change_current_allocator": [[977, "torch-cuda-change-current-allocator"]], "torch.cuda.can_device_access_peer": [[976, "torch-cuda-can-device-access-peer"]], "torch.concatenate": [[950, "torch-concatenate"]], "torch.column_stack": [[938, "torch-column-stack"]], "torch.corrcoef": [[954, "torch-corrcoef"]], "torch.cpu.current_stream": [[961, "torch-cpu-current-stream"]], "torch.compiler.compile": [[944, "torch-compiler-compile"]], "torch.cuda.caching_allocator_alloc": [[974, "torch-cuda-caching-allocator-alloc"]], "torch.compiler.list_backends": [[946, "torch-compiler-list-backends"]], "torch.cuda.caching_allocator_delete": [[975, "torch-cuda-caching-allocator-delete"]], "torch.cholesky_solve": [[933, "torch-cholesky-solve"]], "StreamContext": [[973, "streamcontext"], [960, "streamcontext"]], "torch.cuda.comm.broadcast": [[979, "torch-cuda-comm-broadcast"]], "torch.compiler.assume_constant_result": [[943, "torch-compiler-assume-constant-result"]], "torch.complex": [[948, "torch-complex"]], "Stream": [[959, "stream"], [972, "stream"]], "torch.clone": [[937, "torch-clone"]], "torch.cpu.device_count": [[962, "torch-cpu-device-count"]], "torch.compiler.reset": [[947, "torch-compiler-reset"]], "torch.cosh": [[956, "torch-cosh"]], "torch.count_nonzero": [[957, "torch-count-nonzero"]], "torch.cpu.stream": [[964, "torch-cpu-stream"]], "torch.combinations": [[939, "torch-combinations"]], "torch.cholesky_inverse": [[932, "torch-cholesky-inverse"]], "torch.autograd.grad": [[895, "torch-autograd-grad"]], "torch.autograd.profiler.profile.key_averages": [[905, "torch-autograd-profiler-profile-key-averages"]], "torch.bitwise_left_shift": [[913, "torch-bitwise-left-shift"]], "torch.autograd.gradcheck": [[896, "torch-autograd-gradcheck"]], "torch.chain_matmul": [[930, "torch-chain-matmul"]], "torch.bartlett_window": [[909, "torch-bartlett-window"]], "torch.ceil": [[929, "torch-ceil"]], "torch.block_diag": [[919, "torch-block-diag"]], "torch.autograd.graph.Node.metadata": [[898, "torch-autograd-graph-node-metadata"]], "torch.cdist": [[928, "torch-cdist"]], "torch.blackman_window": [[918, "torch-blackman-window"]], "dual_level": [[882, "dual-level"]], "torch.autograd.profiler.profile.total_average": [[907, "torch-autograd-profiler-profile-total-average"]], "torch.bucketize": [[924, "torch-bucketize"]], "torch.bincount": [[911, "torch-bincount"]], "torch.broadcast_tensors": [[922, "torch-broadcast-tensors"]], "torch.autograd.graph.Node.name": [[899, "torch-autograd-graph-node-name"]], "torch.autograd.functional.vjp": [[894, "torch-autograd-functional-vjp"]], "torch.autograd.gradgradcheck": [[897, "torch-autograd-gradgradcheck"]], "torch.bernoulli": [[910, "torch-bernoulli"]], "torch.bitwise_and": [[912, "torch-bitwise-and"]], "torch.autograd.forward_ad.unpack_dual": [[884, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.profiler.profile.export_chrome_trace": [[904, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.bitwise_right_shift": [[916, "torch-bitwise-right-shift"]], "torch.autograd.functional.jacobian": [[891, "torch-autograd-functional-jacobian"]], "torch.bmm": [[920, "torch-bmm"]], "torch.autograd.functional.hessian": [[889, "torch-autograd-functional-hessian"]], "torch.autograd.profiler.load_nvprof": [[903, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[906, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.bitwise_or": [[915, "torch-bitwise-or"]], "torch.broadcast_to": [[923, "torch-broadcast-to"]], "torch.autograd.functional.jvp": [[892, "torch-autograd-functional-jvp"]], "torch.autograd.functional.vhp": [[893, "torch-autograd-functional-vhp"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[887, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.forward_ad.make_dual": [[883, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.graph.Node.next_functions": [[900, "torch-autograd-graph-node-next-functions"]], "torch.cat": [[927, "torch-cat"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[886, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.graph.Node.register_prehook": [[902, "torch-autograd-graph-node-register-prehook"]], "torch.cartesian_prod": [[926, "torch-cartesian-prod"]], "torch.autograd.graph.Node.register_hook": [[901, "torch-autograd-graph-node-register-hook"]], "torch.broadcast_shapes": [[921, "torch-broadcast-shapes"]], "torch.bitwise_not": [[914, "torch-bitwise-not"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[888, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.baddbmm": [[908, "torch-baddbmm"]], "torch.bitwise_xor": [[917, "torch-bitwise-xor"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[885, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.functional.hvp": [[890, "torch-autograd-functional-hvp"]], "torch.can_cast": [[925, "torch-can-cast"]], "prepare_qat_fx": [[850, "prepare-qat-fx"]], "torch.asarray": [[868, "torch-asarray"]], "fuse_fx": [[848, "fuse-fx"]], "torch.atleast_1d": [[874, "torch-atleast-1d"]], "default_per_channel_qconfig": [[833, "default-per-channel-qconfig"]], "torch.as_strided": [[866, "torch-as-strided"]], "default_weight_only_qconfig": [[837, "default-weight-only-qconfig"]], "torch.atleast_3d": [[876, "torch-atleast-3d"]], "quantize": [[845, "quantize"]], "QConfigMapping": [[842, "qconfigmapping"]], "torch.argsort": [[864, "torch-argsort"]], "torch.asinh": [[870, "torch-asinh"]], "prepare_fx": [[849, "prepare-fx"]], "per_channel_dynamic_qconfig": [[841, "per-channel-dynamic-qconfig"]], "default_qconfig": [[836, "default-qconfig"]], "torch.argwhere": [[865, "torch-argwhere"]], "default_qat_qconfig": [[834, "default-qat-qconfig"]], "torch.are_deterministic_algorithms_enabled": [[861, "torch-are-deterministic-algorithms-enabled"]], "get_default_qat_qconfig_mapping": [[843, "get-default-qat-qconfig-mapping"]], "torch.atan2": [[872, "torch-atan2"]], "torch.asin": [[869, "torch-asin"]], "torch.arange": [[853, "torch-arange"]], "torch.arctan": [[858, "torch-arctan"]], "torch.atan": [[871, "torch-atan"]], "default_qat_qconfig_v2": [[835, "default-qat-qconfig-v2"]], "torch.arctanh": [[860, "torch-arctanh"]], "torch.autograd.Function.vmap": [[880, "torch-autograd-function-vmap"]], "float_qparams_weight_only_qconfig": [[840, "float-qparams-weight-only-qconfig"]], "torch.autograd.Function.forward": [[878, "torch-autograd-function-forward"]], "torch.arccosh": [[855, "torch-arccosh"]], "float16_static_qconfig": [[839, "float16-static-qconfig"]], "torch.atanh": [[873, "torch-atanh"]], "quantize_dynamic": [[846, "quantize-dynamic"]], "convert_fx": [[847, "convert-fx"]], "torch.argmax": [[862, "torch-argmax"]], "float16_dynamic_qconfig": [[838, "float16-dynamic-qconfig"]], "torch.arctan2": [[859, "torch-arctan2"]], "torch.arcsinh": [[857, "torch-arcsinh"]], "torch.as_tensor": [[867, "torch-as-tensor"]], "torch.atleast_2d": [[875, "torch-atleast-2d"]], "torch.autograd.Function.backward": [[877, "torch-autograd-function-backward"]], "torch.autograd.Function.jvp": [[879, "torch-autograd-function-jvp"]], "swap_module": [[852, "swap-module"]], "torch.arcsin": [[856, "torch-arcsin"]], "get_default_qconfig_mapping": [[844, "get-default-qconfig-mapping"]], "quantize_qat": [[851, "quantize-qat"]], "torch.autograd.backward": [[881, "torch-autograd-backward"]], "torch.argmin": [[863, "torch-argmin"]], "torch.arccos": [[854, "torch-arccos"]], "ConvertCustomConfig": [[803, "convertcustomconfig"]], "FuseCustomConfig": [[804, "fusecustomconfig"]], "propagate_qconfig": [[828, "propagate-qconfig"]], "default_observer": [[820, "default-observer"]], "prepare_qat": [[827, "prepare-qat"]], "FusedMovingAvgObsFakeQuantize": [[790, "fusedmovingavgobsfakequantize"]], "default_histogram_observer": [[819, "default-histogram-observer"]], "default_activation_only_qconfig": [[830, "default-activation-only-qconfig"]], "MovingAveragePerChannelMinMaxObserver": [[810, "movingaverageperchannelminmaxobserver"]], "ObserverBase": [[812, "observerbase"]], "default_fused_per_channel_wt_fake_quant": [[793, "default-fused-per-channel-wt-fake-quant"]], "RecordingObserver": [[815, "recordingobserver"]], "StandaloneModuleConfigEntry": [[806, "standalonemoduleconfigentry"]], "default_dynamic_qconfig": [[832, "default-dynamic-qconfig"]], "FakeQuantizeBase": [[788, "fakequantizebase"]], "FixedQParamsFakeQuantize": [[789, "fixedqparamsfakequantize"]], "default_weight_fake_quant": [[797, "default-weight-fake-quant"]], "default_eval_fn": [[786, "default-eval-fn"]], "default_histogram_fake_quant": [[795, "default-histogram-fake-quant"]], "default_float_qparams_observer": [[818, "default-float-qparams-observer"]], "HistogramObserver": [[807, "histogramobserver"]], "load_observer_state_dict": [[825, "load-observer-state-dict"]], "QConfig": [[829, "qconfig"], [1916, "qconfig"]], "default_debug_observer": [[816, "default-debug-observer"]], "fuse_modules": [[802, "fuse-modules"]], "NoopObserver": [[811, "noopobserver"]], "PlaceholderObserver": [[814, "placeholderobserver"]], "default_placeholder_observer": [[822, "default-placeholder-observer"]], "PerChannelMinMaxObserver": [[813, "perchannelminmaxobserver"]], "default_fused_wt_fake_quant": [[794, "default-fused-wt-fake-quant"]], "PrepareCustomConfig": [[805, "preparecustomconfig"]], "default_fused_act_fake_quant": [[792, "default-fused-act-fake-quant"]], "default_fake_quant": [[791, "default-fake-quant"]], "prepare": [[826, "prepare"]], "enable_observer": [[801, "enable-observer"]], "MovingAverageMinMaxObserver": [[809, "movingaverageminmaxobserver"]], "enable_fake_quant": [[800, "enable-fake-quant"]], "default_dynamic_quant_observer": [[817, "default-dynamic-quant-observer"]], "disable_observer": [[799, "disable-observer"]], "convert": [[785, "convert"]], "default_per_channel_weight_fake_quant": [[796, "default-per-channel-weight-fake-quant"]], "ObservationType": [[784, "observationtype"]], "FakeQuantize": [[787, "fakequantize"]], "get_observer_state_dict": [[824, "get-observer-state-dict"]], "disable_fake_quant": [[798, "disable-fake-quant"]], "default_per_channel_weight_observer": [[821, "default-per-channel-weight-observer"]], "default_weight_observer": [[823, "default-weight-observer"]], "MinMaxObserver": [[808, "minmaxobserver"]], "default_debug_qconfig": [[831, "default-debug-qconfig"]], "avg_pool3d": [[757, "avg-pool3d"]], "hardtanh": [[766, "hardtanh"]], "adaptive_avg_pool2d": [[754, "adaptive-avg-pool2d"]], "celu": [[758, "celu"]], "upsample": [[773, "upsample"]], "BackendConfig": [[780, "backendconfig"]], "conv1d": [[760, "conv1d"]], "FXFloatFunctional": [[735, "fxfloatfunctional"]], "BackendPatternConfig": [[781, "backendpatternconfig"]], "hardswish": [[765, "hardswish"]], "QuantStub": [[777, "quantstub"]], "max_pool2d": [[771, "max-pool2d"]], "upsample_nearest": [[775, "upsample-nearest"]], "add_quant_dequant": [[779, "add-quant-dequant"]], "DeQuantStub": [[776, "dequantstub"]], "linear": [[769, "linear"]], "QuantWrapper": [[778, "quantwrapper"]], "elu": [[763, "elu"]], "avg_pool2d": [[756, "avg-pool2d"]], "upsample_bilinear": [[774, "upsample-bilinear"]], "conv3d": [[762, "conv3d"]], "clamp": [[759, "clamp"]], "hardsigmoid": [[764, "hardsigmoid"]], "conv2d": [[761, "conv2d"]], "threshold": [[772, "threshold"]], "FloatFunctional": [[736, "floatfunctional"]], "interpolate": [[767, "interpolate"]], "DTypeWithConstraints": [[783, "dtypewithconstraints"]], "max_pool1d": [[770, "max-pool1d"]], "QFunctional": [[745, "qfunctional"]], "leaky_relu": [[768, "leaky-relu"]], "adaptive_avg_pool3d": [[755, "adaptive-avg-pool3d"]], "DTypeConfig": [[782, "dtypeconfig"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.__config__": [[12, "module-torch.__config__"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "torchrun (Elastic Launch)": [[42, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[42, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[42, "usage"], [18, "usage"], [27, null]], "Single-node multi-worker": [[42, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[42, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[42, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[42, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[42, "note-on-rendezvous-backend"]], "Definitions": [[42, "definitions"]], "Environment Variables": [[42, "environment-variables"]], "Deployment": [[42, "deployment"]], "Failure Modes": [[42, "failure-modes"]], "Membership Changes": [[42, "membership-changes"]], "Important Notices": [[42, "important-notices"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "torch.export": [[45, "torch-export"]], "Existing frameworks": [[45, "existing-frameworks"]], "Exporting a PyTorch Model": [[45, "exporting-a-pytorch-model"]], "An Example": [[45, "an-example"]], "Expressing Dynamism": [[45, "expressing-dynamism"]], "Serialization": [[45, "serialization"], [11, "serialization"], [1933, "serialization"]], "Specialization": [[45, "specialization"]], "Input shapes": [[45, "input-shapes"]], "Non-tensor inputs": [[45, "non-tensor-inputs"]], "Limitations of torch.export": [[45, "limitations-of-torch-export"]], "Graph Breaks": [[45, "graph-breaks"], [1944, "graph-breaks"], [1954, "graph-breaks"]], "Data/Shape-Dependent Control Flow": [[45, "data-shape-dependent-control-flow"]], "Data-Dependent Accesses": [[45, "data-dependent-accesses"]], "Missing Meta Kernels for Operators": [[45, "missing-meta-kernels-for-operators"]], "Read More": [[45, "read-more"], [48, "read-more"], [1936, "read-more"]], "Additional Links for Export Users": [[45, null]], "Deep Dive for PyTorch Developers": [[45, null], [1936, null]], "Distributed communication package - torch.distributed": [[24, "distributed-communication-package-torch-distributed"]], "Backends": [[24, "backends"], [1921, "backends"]], "Backends that come with PyTorch": [[24, "backends-that-come-with-pytorch"]], "Which backend to use?": [[24, "which-backend-to-use"]], "Common environment variables": [[24, "common-environment-variables"]], "Choosing the network interface to use": [[24, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[24, "other-nccl-environment-variables"]], "Basics": [[24, "basics"], [1921, "basics"]], "Initialization": [[24, "initialization"]], "TCP initialization": [[24, "tcp-initialization"]], "Shared file-system initialization": [[24, "shared-file-system-initialization"]], "Environment variable initialization": [[24, "environment-variable-initialization"]], "Post-Initialization": [[24, "post-initialization"]], "Distributed Key-Value Store": [[24, "distributed-key-value-store"]], "Groups": [[24, "groups"]], "Point-to-point communication": [[24, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[24, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[24, "collective-functions"]], "Profiling Collective Communication": [[24, "profiling-collective-communication"]], "Multi-GPU collective functions": [[24, "multi-gpu-collective-functions"]], "Third-party backends": [[24, "third-party-backends"]], "Launch utility": [[24, "launch-utility"]], "Spawn utility": [[24, "spawn-utility"]], "Debugging torch.distributed applications": [[24, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[24, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[24, "torch-distributed-debug"]], "Logging": [[24, "logging"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Autograd": [[11, "autograd"]], "Error Propagation": [[34, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[34, "methods-and-classes"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [1947, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "Dataset Types": [[21, "dataset-types"]], "Map-style datasets": [[21, "map-style-datasets"]], "Iterable-style datasets": [[21, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[21, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[21, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[21, "automatic-batching-default"]], "Disable automatic batching": [[21, "disable-automatic-batching"]], "Working with collate_fn": [[21, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[21, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[21, "single-process-data-loading-default"]], "Multi-process data loading": [[21, "multi-process-data-loading"]], "Platform-specific behaviors": [[21, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[21, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[21, "memory-pinning"]], "Rendezvous": [[41, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[41, "registry"]], "Handler": [[41, "handler"]], "Exceptions": [[41, "exceptions"]], "Implementations": [[41, "implementations"], [32, "implementations"]], "Dynamic Rendezvous": [[41, "dynamic-rendezvous"]], "C10d Backend": [[41, "c10d-backend"]], "Etcd Backend": [[41, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[41, "etcd-rendezvous-legacy"]], "Etcd Store": [[41, "etcd-store"]], "Etcd Server": [[41, "etcd-server"]], "torch.fft": [[46, "torch-fft"]], "Fast Fourier Transforms": [[46, "fast-fourier-transforms"]], "Helper Functions": [[46, "helper-functions"]], "torch.cuda": [[17, "module-torch.cuda"]], "Random Number Generator": [[17, "random-number-generator"]], "Communication collectives": [[17, "communication-collectives"]], "Streams and events": [[17, "streams-and-events"], [16, "streams-and-events"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.cpu": [[16, "module-torch.cpu"]], "Distributed Optimizers": [[28, "distributed-optimizers"]], "Probability distributions - torch.distributions": [[30, "module-torch.distributions"]], "Score function": [[30, "score-function"]], "Pathwise derivative": [[30, "pathwise-derivative"]], "Distribution": [[30, "distribution"]], "ExponentialFamily": [[30, "exponentialfamily"]], "Bernoulli": [[30, "bernoulli"]], "Beta": [[30, "beta"]], "Binomial": [[30, "binomial"]], "Categorical": [[30, "categorical"]], "Cauchy": [[30, "cauchy"]], "Chi2": [[30, "chi2"]], "ContinuousBernoulli": [[30, "continuousbernoulli"]], "Dirichlet": [[30, "dirichlet"]], "Exponential": [[30, "exponential"]], "FisherSnedecor": [[30, "fishersnedecor"]], "Gamma": [[30, "gamma"]], "Geometric": [[30, "geometric"]], "Gumbel": [[30, "gumbel"]], "HalfCauchy": [[30, "halfcauchy"]], "HalfNormal": [[30, "halfnormal"]], "Independent": [[30, "independent"]], "Kumaraswamy": [[30, "kumaraswamy"]], "LKJCholesky": [[30, "lkjcholesky"]], "Laplace": [[30, "laplace"]], "LogNormal": [[30, "lognormal"]], "LowRankMultivariateNormal": [[30, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[30, "mixturesamefamily"]], "Multinomial": [[30, "multinomial"]], "MultivariateNormal": [[30, "multivariatenormal"]], "NegativeBinomial": [[30, "negativebinomial"]], "Normal": [[30, "normal"]], "OneHotCategorical": [[30, "onehotcategorical"]], "Pareto": [[30, "pareto"]], "Poisson": [[30, "poisson"]], "RelaxedBernoulli": [[30, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[30, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[30, "relaxedonehotcategorical"]], "StudentT": [[30, "studentt"]], "TransformedDistribution": [[30, "transformeddistribution"]], "Uniform": [[30, "uniform"]], "VonMises": [[30, "vonmises"]], "Weibull": [[30, "weibull"]], "Wishart": [[30, "wishart"]], "KL Divergence": [[30, "module-torch.distributions.kl"]], "Transforms": [[30, "module-torch.distributions.transforms"]], "Constraint Registry": [[30, "module-torch.distributions.constraint_registry"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[29, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "Elastic Agent": [[32, "module-torch.distributed.elastic.agent"]], "Server": [[32, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[32, "concepts"]], "Extending the Agent": [[32, "extending-the-agent"]], "Watchdog in the Agent": [[32, "watchdog-in-the-agent"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Examples": [[36, "examples"], [13, "examples"], [1940, "examples"]], "Train script": [[44, "train-script"]], "Events": [[35, "module-torch.distributed.elastic.events"]], "API Methods": [[35, "api-methods"]], "Event Objects": [[35, "event-objects"]], "TorchElastic Kubernetes": [[37, "torchelastic-kubernetes"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Customization": [[33, "customization"]], "Launcher": [[33, "launcher"]], "Rendezvous Handler": [[33, "rendezvous-handler"]], "Metric Handler": [[33, "metric-handler"]], "Events Handler": [[33, "events-handler"]], "Expiration Timers": [[43, "module-torch.distributed.elastic.timer"]], "Client Methods": [[43, "client-methods"]], "Server/Client Implementations": [[43, "server-client-implementations"]], "Writing a custom timer server/client": [[43, "writing-a-custom-timer-server-client"]], "Multiprocessing": [[39, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[39, "starting-multiple-workers"]], "Process Context": [[39, "process-context"]], "Metrics": [[38, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[38, "metric-handlers"]], "Methods": [[38, "methods"]], "FullyShardedDataParallel": [[47, "module-torch.distributed.fsdp"]], "torch::deploy has been moved to pytorch/multipy": [[23, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Generic Join Context Manager": [[25, "generic-join-context-manager"]], "Quickstart": [[40, "quickstart"]], "torch.func": [[48, "torch-func"]], "What are composable function transforms?": [[48, "what-are-composable-function-transforms"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Control Flow - Cond": [[13, "control-flow-cond"]], "Invariants of torch.ops.higher_order.cond": [[13, "invariants-of-torch-ops-higher-order-cond"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [1946, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1921, "tutorials"], [1913, "tutorials"], [1914, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torch.utils.dlpack": [[31, "torch-utils-dlpack"]], "Torch Distributed Elastic": [[27, "torch-distributed-elastic"]], "Get Started": [[27, "get-started"]], "Documentation": [[27, "documentation"]], "API": [[27, null]], "Advanced": [[27, null]], "Plugins": [[27, null]], "DDP Communication Hooks": [[22, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[22, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[22, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[22, "default-communication-hooks"]], "PowerSGD Communication Hook": [[22, "powersgd-communication-hook"]], "PowerSGD State": [[22, "powersgd-state"]], "PowerSGD Hooks": [[22, "powersgd-hooks"]], "Debugging Communication Hooks": [[22, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[22, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[22, "acknowledgements"], [1914, "acknowledgements"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[26, "distributed-checkpoint-torch-distributed-checkpoint"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "ConvBn1d": [[690, "convbn1d"], [700, "convbn1d"]], "LinearReLU": [[708, "linearrelu"], [699, "linearrelu"], [716, "linearrelu"], [717, "linearrelu"]], "torch.any": [[687, "torch-any"]], "ConvBn2d": [[701, "convbn2d"], [691, "convbn2d"]], "ConvReLU1d": [[696, "convrelu1d"], [713, "convrelu1d"]], "ConvBnReLU2d": [[704, "convbnrelu2d"], [694, "convbnrelu2d"]], "ConvReLU2d": [[697, "convrelu2d"], [706, "convrelu2d"], [714, "convrelu2d"]], "ConvBnReLU1d": [[693, "convbnrelu1d"], [703, "convbnrelu1d"]], "ConvReLU3d": [[707, "convrelu3d"], [698, "convrelu3d"], [715, "convrelu3d"]], "BNReLU2d": [[711, "bnrelu2d"], [688, "bnrelu2d"]], "BNReLU3d": [[712, "bnrelu3d"], [689, "bnrelu3d"]], "torch.angle": [[686, "torch-angle"]], "freeze_bn_stats": [[709, "freeze-bn-stats"]], "ConvBn3d": [[692, "convbn3d"], [702, "convbn3d"]], "ConvBnReLU3d": [[695, "convbnrelu3d"], [705, "convbnrelu3d"]], "update_bn_stats": [[710, "update-bn-stats"]], "torch._foreach_log2": [[646, "torch-foreach-log2"]], "torch._logging.set_logs": [[668, "torch-logging-set-logs"]], "torch._foreach_sigmoid": [[655, "torch-foreach-sigmoid"]], "torch.amax": [[683, "torch-amax"]], "torch.addbmm": [[674, "torch-addbmm"]], "torch._foreach_log10_": [[643, "torch-foreach-log10"]], "torch.addmm": [[677, "torch-addmm"]], "torch._foreach_tan_": [[664, "torch-foreach-tan"]], "torch._foreach_log_": [[648, "torch-foreach-log"]], "torch._foreach_neg_": [[650, "torch-foreach-neg"]], "torch._foreach_sinh_": [[660, "torch-foreach-sinh"]], "torch.add": [[673, "torch-add"]], "torch._foreach_frac_": [[638, "torch-foreach-frac"]], "torch.acosh": [[672, "torch-acosh"]], "torch._foreach_tan": [[663, "torch-foreach-tan"]], "torch.amin": [[684, "torch-amin"]], "torch._foreach_sin_": [[658, "torch-foreach-sin"]], "torch._foreach_sqrt": [[661, "torch-foreach-sqrt"]], "torch._foreach_lgamma_": [[640, "torch-foreach-lgamma"]], "torch._foreach_log1p": [[644, "torch-foreach-log1p"]], "torch.adjoint": [[680, "torch-adjoint"]], "torch._foreach_sigmoid_": [[656, "torch-foreach-sigmoid"]], "torch._foreach_log": [[641, "torch-foreach-log"]], "torch._foreach_frac": [[637, "torch-foreach-frac"]], "torch._foreach_sin": [[657, "torch-foreach-sin"]], "torch.addmv": [[678, "torch-addmv"]], "torch._foreach_reciprocal_": [[652, "torch-foreach-reciprocal"]], "torch._foreach_round": [[653, "torch-foreach-round"]], "torch._foreach_round_": [[654, "torch-foreach-round"]], "torch.allclose": [[682, "torch-allclose"]], "torch._foreach_zero_": [[667, "torch-foreach-zero"]], "torch._foreach_trunc_": [[666, "torch-foreach-trunc"]], "torch.abs": [[669, "torch-abs"]], "torch._foreach_log10": [[642, "torch-foreach-log10"]], "torch.absolute": [[670, "torch-absolute"]], "torch._foreach_sqrt_": [[662, "torch-foreach-sqrt"]], "torch._foreach_log2_": [[647, "torch-foreach-log2"]], "torch._foreach_sinh": [[659, "torch-foreach-sinh"]], "torch.aminmax": [[685, "torch-aminmax"]], "torch._foreach_neg": [[649, "torch-foreach-neg"]], "torch._foreach_lgamma": [[639, "torch-foreach-lgamma"]], "torch._foreach_reciprocal": [[651, "torch-foreach-reciprocal"]], "torch._foreach_trunc": [[665, "torch-foreach-trunc"]], "torch.all": [[681, "torch-all"]], "torch.addcmul": [[676, "torch-addcmul"]], "torch.addr": [[679, "torch-addr"]], "torch._foreach_log1p_": [[645, "torch-foreach-log1p"]], "torch.acos": [[671, "torch-acos"]], "torch.addcdiv": [[675, "torch-addcdiv"]], "torch.profiler": [[1915, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1915, "intel-instrumentation-and-tracing-technology-apis"]], "Remote Reference Protocol": [[1923, "remote-reference-protocol"]], "Background": [[1923, "background"], [1922, "background"]], "Assumptions": [[1923, "assumptions"]], "RRef Lifetime": [[1923, "rref-lifetime"]], "Design Reasoning": [[1923, "design-reasoning"]], "Protocol Scenarios": [[1923, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1923, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1923, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1923, "owner-share-rref-with-user"]], "User Share RRef with User": [[1923, "user-share-rref-with-user"]], "ONNX supported TorchScript operators": [[1911, "onnx-supported-torchscript-operators"]], "Supported operators": [[1911, "supported-operators"]], "ONNX support for TorchScript operators": [[1911, "id1"]], "Unsupported operators": [[1911, "unsupported-operators"], [1911, "id2"]], "Dynamic shapes": [[1942, "dynamic-shapes"]], "Abridged public API": [[1942, "abridged-public-api"]], "The Guard Model": [[1942, "the-guard-model"]], "Overall architecture": [[1942, "overall-architecture"], [1943, "overall-architecture"]], "Abridged internal API": [[1942, "abridged-internal-api"]], "DimDynamic policy": [[1942, "dimdynamic-policy"]], "Unbacked SymInts": [[1942, "unbacked-symints"]], "Tensor Views": [[1929, "tensor-views"]], "TorchDynamo Deep Dive": [[1941, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1941, "torchdynamo-internals"]], "What is a guard?": [[1941, "what-is-a-guard"]], "What is Dynamo doing?": [[1941, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[1941, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "Distributed RPC Framework": [[1921, "distributed-rpc-framework"]], "RPC": [[1921, "rpc"]], "TensorPipe Backend": [[1921, "tensorpipe-backend"]], "RRef": [[1921, "rref"]], "More Information about RRef": [[1921, null]], "RemoteModule": [[1921, "remotemodule"]], "Distributed Autograd Framework": [[1921, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1921, null]], "Distributed Optimizer": [[1921, "distributed-optimizer"], [1922, "distributed-optimizer"]], "torch.compiler API reference": [[1937, "torch-compiler-api-reference"]], "IRs": [[1949, "irs"]], "Core Aten IR": [[1949, "core-aten-ir"]], "Prims IR": [[1949, "prims-ir"]], "PyTorch 2.0 Performance Dashboard": [[1951, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1951, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1951, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1951, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1951, "how-can-i-run-any-performance-test-locally"]], "torch.testing": [[1932, "module-torch.testing"]], "Quantization Accuracy Debugging": [[1917, "quantization-accuracy-debugging"], [1916, "quantization-accuracy-debugging"]], "Data insensitive error": [[1917, "data-insensitive-error"]], "General tips": [[1917, "general-tips"]], "Int8 quantization tips": [[1917, "int8-quantization-tips"]], "Data sensitive error": [[1917, "data-sensitive-error"]], "Implementation error": [[1917, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1917, "numerical-debugging-tooling-prototype"]], "torch.special": [[1926, "torch-special"]], "Distributed Autograd Design": [[1922, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1922, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1922, "distributed-autograd-context"]], "Distributed Backward Pass": [[1922, "distributed-backward-pass"]], "Computing dependencies": [[1922, "computing-dependencies"]], "FAST mode algorithm": [[1922, "fast-mode-algorithm"]], "SMART mode algorithm": [[1922, "smart-mode-algorithm"]], "Simple end to end example": [[1922, "simple-end-to-end-example"]], "Fake tensor": [[1943, "fake-tensor"]], "Related work": [[1943, "related-work"]], "API: the important bits": [[1943, "api-the-important-bits"]], "Details": [[1943, "details"]], "About the tensor subclass": [[1943, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1943, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1943, "how-does-the-converter-work"]], "Performance characteristics": [[1943, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1943, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1943, "interaction-with-dynamic-shapes"]], "Other resources": [[1943, "other-resources"]], "torch.sparse": [[1925, "torch-sparse"]], "Why and when to use sparsity": [[1925, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1925, "functionality-overview"]], "Operator overview": [[1925, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1925, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1925, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1925, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1925, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1925, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1925, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1925, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1925, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1925, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1925, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1925, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1925, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1925, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1925, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1925, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1925, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1925, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1925, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1925, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1925, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1925, "linear-algebra-operations"]], "Tensor methods and sparse": [[1925, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1925, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1925, "other-functions"]], "Unary functions": [[1925, "unary-functions"]], "Understanding CUDA Memory Usage": [[1956, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[1956, "generating-a-snapshot"]], "Using the visualizer": [[1956, "using-the-visualizer"]], "Active Memory Timeline": [[1956, "active-memory-timeline"]], "Allocator State History": [[1956, "allocator-state-history"]], "Snapshot API Reference": [[1956, "snapshot-api-reference"]], "Tensor Attributes": [[1928, "tensor-attributes"]], "torch.dtype": [[1928, "torch-dtype"]], "torch.device": [[1928, "torch-device"]], "torch.layout": [[1928, "torch-layout"]], "torch.memory_format": [[1928, "torch-memory-format"]], "torch.Tensor": [[1931, "torch-tensor"]], "Data types": [[1931, "data-types"]], "Initializing and basic operations": [[1931, "initializing-and-basic-operations"]], "Tensor class reference": [[1931, "tensor-class-reference"]], "Profiling to understand torch.compile performance": [[1952, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1952, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1952, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1952, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1952, "understanding-compilation-time"]], "Finding graph breaks": [[1952, "finding-graph-breaks"]], "Launch overhead": [[1952, "launch-overhead"]], "Best Practices for Backends": [[1938, "best-practices-for-backends"]], "x86 CPU": [[1938, "x86-cpu"]], "torch.random": [[1920, "module-torch.random"]], "Type Info": [[1957, "type-info"]], "torch.finfo": [[1957, "torch-finfo"]], "torch.iinfo": [[1957, "torch-iinfo"]], "Does torch.compile support training?": [[1944, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1944, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1944, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1944, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1944, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1944, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1944, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1944, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1944, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1944, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1944, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1944, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[1944, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1944, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[1944, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[1944, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[1944, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[1944, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[1944, "which-numpy-features-does-torch-compile-support"]], "Can I execute NumPy code on CUDA via torch.compile?": [[1944, "can-i-execute-numpy-code-on-cuda-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[1944, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[1944, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[1944, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1944, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1944, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1944, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "Custom Backends": [[1940, "custom-backends"]], "Registering Custom Backends": [[1940, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1940, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1940, "debugging-backend"]], "Speedy Backend": [[1940, "speedy-backend"]], "Composable Backends": [[1940, "composable-backends"]], "torch": [[1933, "module-torch"]], "Tensors": [[1933, "tensors"]], "Creation Ops": [[1933, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1933, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1933, "generators"]], "Random sampling": [[1933, "random-sampling"]], "In-place random sampling": [[1933, "in-place-random-sampling"]], "Quasi-random sampling": [[1933, "quasi-random-sampling"]], "Parallelism": [[1933, "parallelism"]], "Math operations": [[1933, "math-operations"]], "Pointwise Ops": [[1933, "pointwise-ops"]], "Reduction Ops": [[1933, "reduction-ops"]], "Comparison Ops": [[1933, "comparison-ops"]], "Spectral Ops": [[1933, "spectral-ops"]], "Other Operations": [[1933, "other-operations"]], "BLAS and LAPACK Operations": [[1933, "blas-and-lapack-operations"]], "Foreach Operations": [[1933, "foreach-operations"]], "Symbolic Numbers": [[1933, "symbolic-numbers"]], "Export Path": [[1933, "export-path"]], "Optimizations": [[1933, "optimizations"]], "Operator Tags": [[1933, "operator-tags"]], "torch.compiler": [[1936, "torch-compiler"]], "Getting Started for PyTorch Users": [[1936, null]], "HowTo for PyTorch Backend Vendors": [[1936, null]], "Writing Graph Transformations on ATen IR": [[1953, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1953, "passes"]], "One-to-One Pass": [[1953, "one-to-one-pass"]], "One-to-X Pass": [[1953, "one-to-x-pass"]], "One-to-None Pass": [[1953, "one-to-none-pass"]], "Utilizing Local Information": [[1953, "utilizing-local-information"]], "Subgraph Rewriter": [[1953, "subgraph-rewriter"]], "Pass Manager": [[1953, "pass-manager"]], "Partitioner": [[1953, "partitioner"]], "Subgraph Matcher": [[1953, "subgraph-matcher"]], "Capability Based Partitioner": [[1953, "capability-based-partitioner"]], "torch.utils": [[1958, "module-torch.utils"]], "PyTorch 2.0 Troubleshooting": [[1954, "pytorch-2-0-troubleshooting"]], "Title": [[1954, "id1"]], "Diagnosing Runtime Errors": [[1954, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1954, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1954, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1954, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1954, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1954, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1954, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1954, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[1954, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1954, "excessive-recompilation"]], "Accuracy Debugging": [[1954, "accuracy-debugging"]], "Using a pretrained model": [[1946, "using-a-pretrained-model"]], "Next Steps": [[1946, "next-steps"]], "CUDAGraph Trees": [[1939, "cudagraph-trees"]], "CUDAGraph Background": [[1939, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1939, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1939, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1939, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1939, "cudagraph-trees-integration"]], "torch.ao.ns._numeric_suite": [[1934, "torch-ao-ns-numeric-suite"]], "torch.utils.tensorboard": [[1930, "module-torch.utils.tensorboard"]], "TorchDynamo APIs for fine-grained tracing": [[1945, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1945, "id1"]], "torch._dynamo.disallow_in_graph": [[1945, "torch-dynamo-disallow-in-graph"]], "torch.optim": [[1912, "module-torch.optim"]], "How to use an optimizer": [[1912, "how-to-use-an-optimizer"]], "Constructing it": [[1912, "constructing-it"]], "Per-parameter options": [[1912, "per-parameter-options"]], "Taking an optimization step": [[1912, "taking-an-optimization-step"]], "optimizer.step()": [[1912, "optimizer-step"]], "optimizer.step(closure)": [[1912, "optimizer-step-closure"]], "Base class": [[1912, "base-class"]], "Algorithms": [[1912, "algorithms"]], "How to adjust learning rate": [[1912, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1912, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1912, "constructing-averaged-models"]], "Custom averaging strategies": [[1912, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1912, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1912, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1912, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1912, "putting-it-all-together-ema"]], "Quantization": [[1916, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1916, "introduction-to-quantization"]], "Quantization API Summary": [[1916, "quantization-api-summary"]], "Eager Mode Quantization": [[1916, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1916, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1916, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1916, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1916, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintaince mode) FX Graph Mode Quantization": [[1916, "prototype-maintaince-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[1916, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[1916, "quantization-stack"]], "Quantized Model": [[1916, "quantized-model"]], "Quantized Tensor": [[1916, "quantized-tensor"]], "Quantize and Dequantize": [[1916, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1916, "quantized-operators-modules"]], "Quantized Engine": [[1916, "quantized-engine"]], "Quantization Flow": [[1916, "quantization-flow"]], "Observer and FakeQuantize": [[1916, "observer-and-fakequantize"]], "General Quantization Flow": [[1916, "general-quantization-flow"]], "Quantization Support Matrix": [[1916, "quantization-support-matrix"]], "Quantization Mode Support": [[1916, "quantization-mode-support"]], "Quantization Flow Support": [[1916, "quantization-flow-support"]], "Backend/Hardware Support": [[1916, "backend-hardware-support"]], "Note for native CPU backends": [[1916, "note-for-native-cpu-backends"]], "Operator Support": [[1916, "operator-support"]], "Quantization API Reference": [[1916, "quantization-api-reference"], [1919, "quantization-api-reference"]], "Quantization Backend Configuration": [[1916, "quantization-backend-configuration"], [1918, "quantization-backend-configuration"]], "Quantization Customizations": [[1916, "quantization-customizations"]], "Quantization Custom Module API": [[1916, "quantization-custom-module-api"]], "Best Practices": [[1916, "best-practices"]], "Common Errors": [[1916, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1916, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1916, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1916, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1916, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.package": [[1913, "torch-package"]], "Packaging your first model": [[1913, "packaging-your-first-model"]], "How do I\u2026": [[1913, "how-do-i"]], "See what is inside a package?": [[1913, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1913, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1913, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1913, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1913, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1913, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1913, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1913, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1913, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1913, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1913, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1913, "package-a-torchscript-module"]], "Explanation": [[1913, "explanation"]], "torch.package Format Overview": [[1913, "torch-package-format-overview"]], "Framework files": [[1913, "framework-files"]], "User files": [[1913, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1913, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1913, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1913, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1913, "dependency-management"]], "intern": [[1913, "intern"]], "extern": [[1913, "extern"]], "mock": [[1913, "mock"]], "Refactoring": [[1913, "refactoring"]], "Patterns": [[1913, "patterns"]], "torch.package sharp edges": [[1913, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1913, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1913, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1913, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1913, "mangling"]], "PyTorch 2.0 nn.Module Support": [[1950, "pytorch-2-0-nn-module-support"]], "nn.Module Hooks Support": [[1950, "nn-module-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1950, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1950, "state-dict-hooks"]], "torch.Storage": [[1927, "torch-storage"]], "Pipeline Parallelism": [[1914, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1914, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1914, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1914, "pipe-apis-in-pytorch"]], "Skip connections": [[1914, "skip-connections"]], "torch.overrides": [[1955, "torch-overrides"]], "TorchInductor GPU Profiling": [[1948, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1948, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1948, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1948, "benchmark-individual-triton-kernel"]], "torch.ao.quantization": [[1919, "torch-ao-quantization"]], "Top level APIs": [[1919, "top-level-apis"]], "Preparing model for quantization": [[1919, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1919, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1919, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1919, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1919, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1919, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1919, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1919, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1919, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1919, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1919, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1919, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1919, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1919, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1919, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1919, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1919, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1919, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1919, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1919, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1919, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1919, "quantized-dtypes-and-quantization-schemes"]], "Guards Overview": [[1947, "guards-overview"]], "Caching and Guards Overview": [[1947, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1947, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1947, "instructiontranslator"]], "Making Guards": [[1947, "making-guards"]], "torch.signal": [[1924, "module-torch.signal"]], "torch.signal.windows": [[1924, "module-torch.signal.windows"]], "Default values for native configurations": [[1918, "default-values-for-native-configurations"]], "torch.ao.ns._numeric_suite_fx": [[1935, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1935, "torch-ao-ns-fx-utils"]], "torch.Tensor.true_divide_": [[588, "torch-tensor-true-divide"]], "torch.Tensor.unfold": [[595, "torch-tensor-unfold"]], "torch.Tensor.unflatten": [[594, "torch-tensor-unflatten"]], "torch._foreach_asin_": [[618, "torch-foreach-asin"]], "torch._foreach_asin": [[617, "torch-foreach-asin"]], "torch.Tensor.unique_consecutive": [[598, "torch-tensor-unique-consecutive"]], "torch.Tensor.view": [[605, "torch-tensor-view"]], "torch._foreach_expm1": [[633, "torch-foreach-expm1"]], "torch.Tensor.unique": [[597, "torch-tensor-unique"]], "torch._foreach_erf": [[627, "torch-foreach-erf"]], "torch._foreach_abs": [[613, "torch-foreach-abs"]], "torch.Tensor.vsplit": [[607, "torch-tensor-vsplit"]], "torch._foreach_expm1_": [[634, "torch-foreach-expm1"]], "torch.Tensor.view_as": [[606, "torch-tensor-view-as"]], "torch._foreach_acos_": [[616, "torch-foreach-acos"]], "torch._foreach_floor_": [[636, "torch-foreach-floor"]], "torch.Tensor.type": [[591, "torch-tensor-type"]], "torch._foreach_atan_": [[620, "torch-foreach-atan"]], "torch._foreach_cos_": [[624, "torch-foreach-cos"]], "torch.Tensor.unbind": [[593, "torch-tensor-unbind"]], "torch.Tensor.uniform_": [[596, "torch-tensor-uniform"]], "torch._foreach_erfc": [[629, "torch-foreach-erfc"]], "torch._foreach_ceil": [[621, "torch-foreach-ceil"]], "torch._foreach_cos": [[623, "torch-foreach-cos"]], "torch.Tensor.untyped_storage": [[601, "torch-tensor-untyped-storage"]], "torch._foreach_erfc_": [[630, "torch-foreach-erfc"]], "torch._foreach_exp_": [[632, "torch-foreach-exp"]], "torch.Tensor.where": [[608, "torch-tensor-where"]], "torch.Tensor.vdot": [[604, "torch-tensor-vdot"]], "torch._foreach_ceil_": [[622, "torch-foreach-ceil"]], "torch._foreach_cosh": [[625, "torch-foreach-cosh"]], "torch._foreach_erf_": [[628, "torch-foreach-erf"]], "torch.Tensor.values": [[602, "torch-tensor-values"]], "torch.Tensor.xlogy": [[609, "torch-tensor-xlogy"]], "torch.Tensor.trunc": [[589, "torch-tensor-trunc"]], "torch.Tensor.zero_": [[611, "torch-tensor-zero"]], "torch._foreach_exp": [[631, "torch-foreach-exp"]], "torch.Tensor.trunc_": [[590, "torch-tensor-trunc"]], "torch.Tensor.unsqueeze": [[599, "torch-tensor-unsqueeze"]], "torch.Tensor.type_as": [[592, "torch-tensor-type-as"]], "torch._foreach_abs_": [[614, "torch-foreach-abs"]], "torch._foreach_floor": [[635, "torch-foreach-floor"]], "torch.Tensor.unsqueeze_": [[600, "torch-tensor-unsqueeze"]], "torch.Tensor.var": [[603, "torch-tensor-var"]], "torch._assert": [[612, "torch-assert"]], "torch._foreach_cosh_": [[626, "torch-foreach-cosh"]], "torch._foreach_atan": [[619, "torch-foreach-atan"]], "torch._foreach_acos": [[615, "torch-foreach-acos"]], "torch.Tensor.xlogy_": [[610, "torch-tensor-xlogy"]], "torch.Tensor.stft": [[544, "torch-tensor-stft"]], "torch.Tensor.tril": [[583, "torch-tensor-tril"]], "torch.Tensor.to_sparse_csc": [[575, "torch-tensor-to-sparse-csc"]], "torch.Tensor.trace": [[579, "torch-tensor-trace"]], "torch.Tensor.sum_to_size": [[554, "torch-tensor-sum-to-size"]], "torch.Tensor.triu": [[585, "torch-tensor-triu"]], "torch.Tensor.square_": [[539, "torch-tensor-square"]], "torch.Tensor.tril_": [[584, "torch-tensor-tril"]], "torch.Tensor.true_divide": [[587, "torch-tensor-true-divide"]], "torch.Tensor.to_dense": [[569, "torch-tensor-to-dense"]], "torch.Tensor.transpose_": [[581, "torch-tensor-transpose"]], "torch.Tensor.subtract": [[551, "torch-tensor-subtract"]], "torch.Tensor.tanh_": [[565, "torch-tensor-tanh"]], "torch.Tensor.tan_": [[563, "torch-tensor-tan"]], "torch.Tensor.sub_": [[550, "torch-tensor-sub"]], "torch.Tensor.squeeze_": [[541, "torch-tensor-squeeze"]], "torch.Tensor.svd": [[555, "torch-tensor-svd"]], "torch.Tensor.storage_offset": [[546, "torch-tensor-storage-offset"]], "torch.Tensor.sum": [[553, "torch-tensor-sum"]], "torch.Tensor.take": [[560, "torch-tensor-take"]], "torch.Tensor.tensor_split": [[566, "torch-tensor-tensor-split"]], "torch.Tensor.triu_": [[586, "torch-tensor-triu"]], "torch.Tensor.to_sparse_bsc": [[572, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.std": [[543, "torch-tensor-std"]], "torch.Tensor.take_along_dim": [[561, "torch-tensor-take-along-dim"]], "torch.Tensor.to_sparse_bsr": [[573, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.storage_type": [[547, "torch-tensor-storage-type"]], "torch.Tensor.t": [[558, "torch-tensor-t"]], "torch.Tensor.to": [[568, "torch-tensor-to"]], "torch.Tensor.tile": [[567, "torch-tensor-tile"]], "torch.Tensor.to_sparse": [[571, "torch-tensor-to-sparse"]], "torch.Tensor.to_sparse_coo": [[574, "torch-tensor-to-sparse-coo"]], "torch.Tensor.sub": [[549, "torch-tensor-sub"]], "torch.Tensor.tolist": [[577, "torch-tensor-tolist"]], "torch.Tensor.storage": [[545, "torch-tensor-storage"]], "torch.Tensor.transpose": [[580, "torch-tensor-transpose"]], "torch.Tensor.swapdims": [[557, "torch-tensor-swapdims"]], "torch.Tensor.tanh": [[564, "torch-tensor-tanh"]], "torch.Tensor.topk": [[578, "torch-tensor-topk"]], "torch.Tensor.stride": [[548, "torch-tensor-stride"]], "torch.Tensor.squeeze": [[540, "torch-tensor-squeeze"]], "torch.Tensor.triangular_solve": [[582, "torch-tensor-triangular-solve"]], "torch.Tensor.swapaxes": [[556, "torch-tensor-swapaxes"]], "torch.Tensor.to_mkldnn": [[570, "torch-tensor-to-mkldnn"]], "torch.Tensor.subtract_": [[552, "torch-tensor-subtract"]], "torch.Tensor.to_sparse_csr": [[576, "torch-tensor-to-sparse-csr"]], "torch.Tensor.tan": [[562, "torch-tensor-tan"]], "torch.Tensor.sspaddmm": [[542, "torch-tensor-sspaddmm"]], "torch.Tensor.t_": [[559, "torch-tensor-t"]], "torch.Tensor.sparse_mask": [[532, "torch-tensor-sparse-mask"]], "torch.Tensor.rsqrt": [[498, "torch-tensor-rsqrt"]], "torch.Tensor.square": [[538, "torch-tensor-square"]], "torch.Tensor.sign": [[516, "torch-tensor-sign"]], "torch.Tensor.signbit": [[518, "torch-tensor-signbit"]], "torch.Tensor.set_": [[508, "torch-tensor-set"]], "torch.Tensor.round_": [[496, "torch-tensor-round"]], "torch.Tensor.slice_scatter": [[526, "torch-tensor-slice-scatter"]], "torch.Tensor.sqrt_": [[537, "torch-tensor-sqrt"]], "torch.Tensor.resolve_neg": [[490, "torch-tensor-resolve-neg"]], "torch.Tensor.sigmoid": [[514, "torch-tensor-sigmoid"]], "torch.Tensor.scatter_reduce_": [[505, "torch-tensor-scatter-reduce"]], "torch.Tensor.sqrt": [[536, "torch-tensor-sqrt"]], "torch.Tensor.sinc_": [[522, "torch-tensor-sinc"]], "torch.Tensor.row_indices": [[497, "torch-tensor-row-indices"]], "torch.Tensor.scatter_add_": [[503, "torch-tensor-scatter-add"]], "torch.Tensor.share_memory_": [[512, "torch-tensor-share-memory"]], "torch.Tensor.roll": [[493, "torch-tensor-roll"]], "torch.Tensor.rsqrt_": [[499, "torch-tensor-rsqrt"]], "torch.Tensor.select": [[506, "torch-tensor-select"]], "torch.Tensor.sin": [[519, "torch-tensor-sin"]], "torch.Tensor.split": [[535, "torch-tensor-split"]], "torch.Tensor.size": [[525, "torch-tensor-size"]], "torch.Tensor.select_scatter": [[507, "torch-tensor-select-scatter"]], "torch.Tensor.shape": [[511, "torch-tensor-shape"]], "torch.Tensor.sigmoid_": [[515, "torch-tensor-sigmoid"]], "torch.Tensor.sign_": [[517, "torch-tensor-sign"]], "torch.Tensor.scatter_": [[501, "torch-tensor-scatter"]], "torch.Tensor.smm": [[528, "torch-tensor-smm"]], "torch.Tensor.sinh": [[523, "torch-tensor-sinh"]], "torch.Tensor.sparse_resize_": [[533, "torch-tensor-sparse-resize"]], "torch.Tensor.sgn_": [[510, "torch-tensor-sgn"]], "torch.Tensor.retain_grad": [[491, "torch-tensor-retain-grad"]], "torch.Tensor.softmax": [[529, "torch-tensor-softmax"]], "torch.Tensor.sort": [[530, "torch-tensor-sort"]], "torch.Tensor.retains_grad": [[492, "torch-tensor-retains-grad"]], "torch.Tensor.sparse_dim": [[531, "torch-tensor-sparse-dim"]], "torch.Tensor.rot90": [[494, "torch-tensor-rot90"]], "torch.Tensor.sgn": [[509, "torch-tensor-sgn"]], "torch.Tensor.scatter_add": [[502, "torch-tensor-scatter-add"]], "torch.Tensor.sparse_resize_and_clear_": [[534, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sinc": [[521, "torch-tensor-sinc"]], "torch.Tensor.sinh_": [[524, "torch-tensor-sinh"]], "torch.Tensor.slogdet": [[527, "torch-tensor-slogdet"]], "torch.Tensor.scatter": [[500, "torch-tensor-scatter"]], "torch.Tensor.round": [[495, "torch-tensor-round"]], "torch.Tensor.scatter_reduce": [[504, "torch-tensor-scatter-reduce"]], "torch.Tensor.short": [[513, "torch-tensor-short"]], "torch.Tensor.sin_": [[520, "torch-tensor-sin"]], "torch.Tensor.q_zero_point": [[464, "torch-tensor-q-zero-point"]], "torch.Tensor.orgqr": [[447, "torch-tensor-orgqr"]], "torch.Tensor.positive": [[455, "torch-tensor-positive"]], "torch.Tensor.polygamma_": [[454, "torch-tensor-polygamma"]], "torch.Tensor.outer": [[449, "torch-tensor-outer"]], "torch.Tensor.pin_memory": [[451, "torch-tensor-pin-memory"]], "torch.Tensor.reshape_as": [[486, "torch-tensor-reshape-as"]], "torch.Tensor.random_": [[469, "torch-tensor-random"]], "torch.Tensor.reciprocal": [[472, "torch-tensor-reciprocal"]], "torch.Tensor.prod": [[458, "torch-tensor-prod"]], "torch.Tensor.renorm_": [[480, "torch-tensor-renorm"]], "torch.Tensor.requires_grad": [[483, "torch-tensor-requires-grad"]], "torch.Tensor.polygamma": [[453, "torch-tensor-polygamma"]], "torch.Tensor.put_": [[459, "torch-tensor-put"]], "torch.Tensor.remainder": [[477, "torch-tensor-remainder"]], "torch.Tensor.requires_grad_": [[484, "torch-tensor-requires-grad"]], "torch.Tensor.pow_": [[457, "torch-tensor-pow"]], "torch.Tensor.ravel": [[470, "torch-tensor-ravel"]], "torch.Tensor.register_hook": [[475, "torch-tensor-register-hook"]], "torch.Tensor.repeat": [[481, "torch-tensor-repeat"]], "torch.Tensor.not_equal_": [[444, "torch-tensor-not-equal"]], "torch.Tensor.q_per_channel_scales": [[461, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.norm": [[441, "torch-tensor-norm"]], "torch.Tensor.resize_": [[487, "torch-tensor-resize"]], "torch.Tensor.resize_as_": [[488, "torch-tensor-resize-as"]], "torch.Tensor.pow": [[456, "torch-tensor-pow"]], "torch.Tensor.resolve_conj": [[489, "torch-tensor-resolve-conj"]], "torch.Tensor.rad2deg": [[468, "torch-tensor-rad2deg"]], "torch.Tensor.real": [[471, "torch-tensor-real"]], "torch.Tensor.permute": [[450, "torch-tensor-permute"]], "torch.Tensor.q_scale": [[463, "torch-tensor-q-scale"]], "torch.Tensor.renorm": [[479, "torch-tensor-renorm"]], "torch.Tensor.not_equal": [[443, "torch-tensor-not-equal"]], "torch.Tensor.ormqr": [[448, "torch-tensor-ormqr"]], "torch.Tensor.q_per_channel_zero_points": [[462, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.qr": [[465, "torch-tensor-qr"]], "torch.Tensor.reciprocal_": [[473, "torch-tensor-reciprocal"]], "torch.Tensor.record_stream": [[474, "torch-tensor-record-stream"]], "torch.Tensor.pinverse": [[452, "torch-tensor-pinverse"]], "torch.Tensor.quantile": [[467, "torch-tensor-quantile"]], "torch.Tensor.numpy": [[446, "torch-tensor-numpy"]], "torch.Tensor.register_post_accumulate_grad_hook": [[476, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.repeat_interleave": [[482, "torch-tensor-repeat-interleave"]], "torch.Tensor.qscheme": [[466, "torch-tensor-qscheme"]], "torch.Tensor.normal_": [[442, "torch-tensor-normal"]], "torch.Tensor.q_per_channel_axis": [[460, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.numel": [[445, "torch-tensor-numel"]], "torch.Tensor.remainder_": [[478, "torch-tensor-remainder"]], "torch.Tensor.reshape": [[485, "torch-tensor-reshape"]], "torch.Tensor.movedim": [[405, "torch-tensor-movedim"]], "torch.Tensor.matrix_exp": [[394, "torch-tensor-matrix-exp"]], "torch.Tensor.nan_to_num": [[415, "torch-tensor-nan-to-num"]], "torch.Tensor.max": [[396, "torch-tensor-max"]], "torch.Tensor.nelement": [[432, "torch-tensor-nelement"]], "torch.Tensor.new_full": [[434, "torch-tensor-new-full"]], "torch.Tensor.nanquantile": [[419, "torch-tensor-nanquantile"]], "torch.Tensor.mean": [[398, "torch-tensor-mean"]], "torch.Tensor.new_ones": [[435, "torch-tensor-new-ones"]], "torch.Tensor.mul": [[407, "torch-tensor-mul"]], "torch.Tensor.ne": [[426, "torch-tensor-ne"]], "torch.Tensor.matrix_power": [[395, "torch-tensor-matrix-power"]], "torch.Tensor.narrow": [[421, "torch-tensor-narrow"]], "torch.Tensor.mm": [[402, "torch-tensor-mm"]], "torch.Tensor.narrow_copy": [[422, "torch-tensor-narrow-copy"]], "torch.Tensor.masked_select": [[392, "torch-tensor-masked-select"]], "torch.Tensor.nansum": [[420, "torch-tensor-nansum"]], "torch.Tensor.ndim": [[424, "torch-tensor-ndim"]], "torch.Tensor.nanmedian": [[418, "torch-tensor-nanmedian"]], "torch.Tensor.nbytes": [[423, "torch-tensor-nbytes"]], "torch.Tensor.new_zeros": [[437, "torch-tensor-new-zeros"]], "torch.Tensor.mvlgamma": [[413, "torch-tensor-mvlgamma"]], "torch.Tensor.mul_": [[408, "torch-tensor-mul"]], "torch.Tensor.new_empty": [[433, "torch-tensor-new-empty"]], "torch.Tensor.mv": [[412, "torch-tensor-mv"]], "torch.Tensor.negative": [[430, "torch-tensor-negative"]], "torch.Tensor.mode": [[403, "torch-tensor-mode"]], "torch.Tensor.moveaxis": [[404, "torch-tensor-moveaxis"]], "torch.Tensor.maximum": [[397, "torch-tensor-maximum"]], "torch.Tensor.ne_": [[427, "torch-tensor-ne"]], "torch.Tensor.multiply": [[410, "torch-tensor-multiply"]], "torch.Tensor.matmul": [[393, "torch-tensor-matmul"]], "torch.Tensor.neg_": [[429, "torch-tensor-neg"]], "torch.Tensor.nonzero": [[440, "torch-tensor-nonzero"]], "torch.Tensor.new_tensor": [[436, "torch-tensor-new-tensor"]], "torch.Tensor.neg": [[428, "torch-tensor-neg"]], "torch.Tensor.multiply_": [[411, "torch-tensor-multiply"]], "torch.Tensor.msort": [[406, "torch-tensor-msort"]], "torch.Tensor.mvlgamma_": [[414, "torch-tensor-mvlgamma"]], "torch.Tensor.ndimension": [[425, "torch-tensor-ndimension"]], "torch.Tensor.min": [[400, "torch-tensor-min"]], "torch.Tensor.negative_": [[431, "torch-tensor-negative"]], "torch.Tensor.nanmean": [[417, "torch-tensor-nanmean"]], "torch.Tensor.nextafter_": [[439, "torch-tensor-nextafter"]], "torch.Tensor.nextafter": [[438, "torch-tensor-nextafter"]], "torch.Tensor.nan_to_num_": [[416, "torch-tensor-nan-to-num"]], "torch.Tensor.minimum": [[401, "torch-tensor-minimum"]], "torch.Tensor.multinomial": [[409, "torch-tensor-multinomial"]], "torch.Tensor.median": [[399, "torch-tensor-median"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [12, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [18, "module-torch.cuda._sanitizer"], [21, "module-torch.utils.data"], [21, "module-torch.utils.data.datapipes"], [21, "module-torch.utils.data.datapipes.dataframe"], [21, "module-torch.utils.data.datapipes.iter"], [21, "module-torch.utils.data.datapipes.map"], [21, "module-torch.utils.data.datapipes.utils"], [24, "module-torch.distributed"], [24, "module-torch.distributed.algorithms"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks"], [24, "module-torch.distributed.algorithms.model_averaging"], [24, "module-torch.distributed.elastic"], [24, "module-torch.distributed.elastic.utils"], [24, "module-torch.distributed.elastic.utils.data"], [24, "module-torch.distributed.launch"], [24, "module-torch.distributed.launcher"], [24, "module-torch.distributed.nn"], [24, "module-torch.distributed.nn.api"], [24, "module-torch.distributed.nn.jit"], [24, "module-torch.distributed.nn.jit.templates"], [24, "module-torch.distributed.pipeline"], [24, "module-torch.distributed.pipeline.sync"], [24, "module-torch.distributed.pipeline.sync.skip"], [24, "module-torch.distributed.tensor"], [26, "module-torch.distributed.checkpoint"], [28, "module-torch.distributed.optim"], [29, "module-torch.distributed.tensor.parallel"], [30, "module-torch.distributions"], [30, "module-torch.distributions.constraint_registry"], [30, "module-torch.distributions.constraints"], [30, "module-torch.distributions.kl"], [30, "module-torch.distributions.transforms"], [32, "module-torch.distributed.elastic.agent"], [32, "module-torch.distributed.elastic.agent.server"], [34, "module-torch.distributed.elastic.multiprocessing.errors"], [35, "module-torch.distributed.elastic.events"], [38, "module-torch.distributed.elastic.metrics"], [39, "module-torch.distributed.elastic.multiprocessing"], [41, "module-torch.distributed.elastic.rendezvous"], [41, "module-torch.distributed.elastic.rendezvous.registry"], [42, "module-torch.distributed.run"], [43, "module-torch.distributed.elastic.timer"], [45, "module-torch.export"], [46, "module-torch.fft"], [47, "module-torch.distributed.fsdp"], [49, "module-torch.func"], [54, "module-torch.futures"], [55, "module-torch.fx"], [55, "module-torch.fx.experimental"], [55, "module-torch.fx.experimental.migrate_gradual_types"], [55, "module-torch.fx.experimental.unification"], [55, "module-torch.fx.experimental.unification.multipledispatch"], [55, "module-torch.fx.passes"], [55, "module-torch.fx.passes.backends"], [55, "module-torch.fx.passes.dialect"], [55, "module-torch.fx.passes.dialect.common"], [55, "module-torch.fx.passes.infra"], [55, "module-torch.fx.passes.tests"], [55, "module-torch.fx.passes.utils"], [1864, "module-torch.hub"], [1866, "module-torch.jit"], [1866, "module-torch.jit.mobile"], [1867, "module-torch.jit.supported_ops"], [1871, "module-torch.jit.unsupported_tensor_ops"], [1872, "module-torch.utils.jit"], [1874, "module-torch.linalg"], [1875, "module-torch._logging"], [1876, "module-torch.masked"], [1876, "module-torch.masked.maskedtensor"], [1878, "module-torch.utils.model_zoo"], [1879, "module-torch.monitor"], [1880, "module-torch.mps"], [1881, "module-torch.multiprocessing"], [1884, "module-torch.nested"], [1885, "module-torch.nn"], [1885, "module-torch.nn.backends"], [1885, "module-torch.nn.modules"], [1885, "module-torch.nn.parallel"], [1885, "module-torch.nn.utils"], [1885, "module-torch.nn.utils.stateless"], [1910, "module-torch.onnx"], [1912, "module-torch.optim"], [1913, "module-torch.package"], [1913, "module-torch.package.analyze"], [1915, "module-torch.profiler"], [1916, "module-torch.ao"], [1916, "module-torch.ao.nn"], [1916, "module-torch.ao.nn.quantizable"], [1916, "module-torch.ao.nn.quantizable.modules"], [1916, "module-torch.ao.nn.quantized"], [1916, "module-torch.ao.nn.quantized.reference"], [1916, "module-torch.ao.nn.quantized.reference.modules"], [1916, "module-torch.ao.nn.sparse"], [1916, "module-torch.ao.nn.sparse.quantized"], [1916, "module-torch.ao.nn.sparse.quantized.dynamic"], [1916, "module-torch.ao.ns"], [1916, "module-torch.ao.ns.fx"], [1916, "module-torch.ao.pruning"], [1916, "module-torch.ao.pruning.scheduler"], [1916, "module-torch.ao.pruning.sparsifier"], [1916, "module-torch.ao.quantization"], [1916, "module-torch.ao.quantization.backend_config"], [1916, "module-torch.ao.quantization.fx"], [1919, "module-torch.ao.nn.intrinsic"], [1919, "module-torch.ao.nn.intrinsic.modules"], [1919, "module-torch.ao.nn.intrinsic.qat"], [1919, "module-torch.ao.nn.intrinsic.qat.modules"], [1919, "module-torch.ao.nn.intrinsic.quantized"], [1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1919, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1919, "module-torch.ao.nn.intrinsic.quantized.modules"], [1919, "module-torch.ao.nn.qat"], [1919, "module-torch.ao.nn.qat.dynamic"], [1919, "module-torch.ao.nn.qat.dynamic.modules"], [1919, "module-torch.ao.nn.qat.modules"], [1919, "module-torch.ao.nn.quantized.dynamic"], [1919, "module-torch.ao.nn.quantized.dynamic.modules"], [1919, "module-torch.ao.nn.quantized.functional"], [1919, "module-torch.ao.nn.quantized.modules"], [1919, "module-torch.ao.quantization.pt2e"], [1919, "module-torch.ao.quantization.pt2e.representation"], [1919, "module-torch.ao.quantization.quantizer"], [1919, "module-torch.nn.intrinsic"], [1919, "module-torch.nn.intrinsic.modules"], [1919, "module-torch.nn.intrinsic.qat"], [1919, "module-torch.nn.intrinsic.qat.modules"], [1919, "module-torch.nn.intrinsic.quantized"], [1919, "module-torch.nn.intrinsic.quantized.dynamic"], [1919, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1919, "module-torch.nn.intrinsic.quantized.modules"], [1919, "module-torch.nn.qat"], [1919, "module-torch.nn.qat.dynamic"], [1919, "module-torch.nn.qat.dynamic.modules"], [1919, "module-torch.nn.qat.modules"], [1919, "module-torch.nn.quantizable"], [1919, "module-torch.nn.quantizable.modules"], [1919, "module-torch.nn.quantized"], [1919, "module-torch.nn.quantized.dynamic"], [1919, "module-torch.nn.quantized.dynamic.modules"], [1919, "module-torch.nn.quantized.modules"], [1919, "module-torch.quantization"], [1919, "module-torch.quantization.fx"], [1920, "module-torch.random"], [1921, "module-torch.distributed.autograd"], [1921, "module-torch.distributed.rpc"], [1924, "module-torch.signal"], [1924, "module-torch.signal.windows"], [1925, "module-torch.sparse"], [1926, "module-torch.special"], [1930, "module-torch.utils.tensorboard"], [1932, "module-torch.testing"], [1933, "module-torch"], [1933, "module-torch.contrib"], [1933, "module-torch.utils.backcompat"], [1933, "module-torch.utils.hipify"], [1933, "module-torch.utils.model_dump"], [1933, "module-torch.utils.viz"], [1934, "module-torch.ao.ns._numeric_suite"], [1935, "module-torch.ao.ns._numeric_suite_fx"], [1937, "module-torch.compiler"], [1958, "module-torch.utils"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "parallel_info() (in module torch.__config__)": [[12, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[12, "torch.__config__.show"]], "torch.__config__": [[12, "module-torch.__config__"]], "cond() (in module torch._higher_order_ops.cond)": [[13, "torch._higher_order_ops.cond.cond"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[21, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[21, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[21, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[21, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[21, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[21, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[21, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[21, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[21, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[21, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[21, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[21, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[21, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[21, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[21, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[21, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[21, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[21, "torch.utils.data.random_split"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[21, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[21, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[21, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[21, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[21, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[22, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[24, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[24, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[24, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[24, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[24, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[24, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[24, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[24, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[24, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[24, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[24, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[24, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[24, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[24, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[24, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[24, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[24, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[24, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[24, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[24, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[24, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[24, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[24, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[24, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[24, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[24, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[24, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[24, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[24, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[24, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[24, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[24, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[24, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[24, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[24, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[24, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[24, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[24, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[24, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[24, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[24, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[24, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[24, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[24, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[24, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[24, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[24, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[24, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[24, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[24, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[24, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[24, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[24, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[24, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[24, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[24, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[24, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[24, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[24, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[24, "module-torch.distributed"]], "torch.distributed.algorithms": [[24, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[24, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[24, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[24, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[24, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[24, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[24, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[24, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[24, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[24, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[24, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[24, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[24, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[24, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[24, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[24, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[25, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[25, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[25, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[25, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[25, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[25, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[26, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[28, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[28, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[29, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[29, "torch.distributed.tensor.parallel.parallelize_module"]], "pre_dp_module_transform() (in module torch.distributed.tensor.parallel.ddp)": [[29, "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform"]], "torch.distributed.tensor.parallel": [[29, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[30, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[30, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[30, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[30, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[30, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[30, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[30, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[30, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[30, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[30, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[30, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[30, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[30, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[30, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[30, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[30, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[30, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[30, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[30, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[30, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[30, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[30, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[30, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[30, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[30, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[30, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[30, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[30, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[30, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[30, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[30, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[30, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[30, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[30, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[30, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[30, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[30, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[30, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[30, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[30, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[30, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[30, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[30, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[30, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[30, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[30, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[30, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[30, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[30, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[30, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[30, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[30, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[30, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[30, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[30, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[30, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[30, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[30, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[30, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[30, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[30, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[30, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[30, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[30, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[30, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[30, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[30, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[30, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[30, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[30, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[31, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[31, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[32, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[32, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[32, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[32, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[32, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[32, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[34, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[35, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[35, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[35, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[38, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[39, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[39, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[41, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[41, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[41, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[42, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[43, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[43, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[43, "module-torch.distributed.elastic.timer"]], "argumentkind (class in torch.export)": [[45, "torch.export.ArgumentKind"]], "argumentspec (class in torch.export)": [[45, "torch.export.ArgumentSpec"]], "constraint (class in torch.export)": [[45, "torch.export.Constraint"]], "dim() (in module torch.export)": [[45, "torch.export.Dim"]], "exportbackwardsignature (class in torch.export)": [[45, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[45, "torch.export.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[45, "torch.export.ExportedProgram"]], "modulecallentry (class in torch.export)": [[45, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[45, "torch.export.ModuleCallSignature"]], "buffers() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.buffers"]], "constrain_as_size() (in module torch.export)": [[45, "torch.export.constrain_as_size"]], "constrain_as_value() (in module torch.export)": [[45, "torch.export.constrain_as_value"]], "dims() (in module torch.export)": [[45, "torch.export.dims"]], "dynamic_dim() (in module torch.export)": [[45, "torch.export.dynamic_dim"]], "export() (in module torch.export)": [[45, "torch.export.export"]], "load() (in module torch.export)": [[45, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[45, "torch.export.register_dataclass"]], "save() (in module torch.export)": [[45, "torch.export.save"]], "torch.export": [[45, "module-torch.export"]], "torch.fft": [[46, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[47, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[47, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[47, "module-torch.distributed.fsdp"]], "torch.func": [[49, "module-torch.func"]], "future (class in torch.futures)": [[54, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[54, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[54, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[54, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[54, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[54, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[54, "torch.futures.Future.then"]], "torch.futures": [[54, "module-torch.futures"]], "value() (torch.futures.future method)": [[54, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[54, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[54, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[55, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[55, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[55, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[55, "torch.fx.Node"]], "proxy (class in torch.fx)": [[55, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[55, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[55, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[55, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[55, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[55, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[55, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[55, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[55, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[55, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[55, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[55, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[55, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[55, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[55, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[55, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[55, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[55, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[55, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[55, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[55, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[55, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[55, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[55, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[55, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[55, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[55, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[55, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[55, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[55, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[55, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[55, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[55, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[55, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[55, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[55, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[55, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[55, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[55, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[55, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[55, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[55, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[55, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[55, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[55, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[55, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[55, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[55, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[55, "module-torch.fx"]], "torch.fx.experimental": [[55, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[55, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[55, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[55, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[55, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[55, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[55, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[55, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[55, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[55, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[55, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[55, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[55, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[55, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[55, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[55, "torch.fx.wrap"]], "generator (class in torch)": [[77, "torch.Generator"]], "device (torch.generator attribute)": [[77, "torch.Generator.device"]], "get_state() (torch.generator method)": [[77, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[77, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[77, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[77, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[77, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[78, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[79, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[80, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[81, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[82, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[83, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[84, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[85, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[86, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[87, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[88, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[89, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[90, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[91, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[92, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[93, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[94, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[95, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[96, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[97, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[98, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[99, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[100, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[101, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[102, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[103, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[104, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[105, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[106, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[107, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[108, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[109, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[110, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[111, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[112, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[113, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[114, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[115, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[116, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[117, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[118, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[119, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[120, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[121, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[122, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[123, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[124, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[125, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[126, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[127, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[128, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[129, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[130, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[131, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[132, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[133, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[134, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[135, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[136, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[137, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[138, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[139, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[140, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[141, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[142, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[143, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[144, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[145, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[146, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[147, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[148, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[149, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[150, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[151, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[152, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[153, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[154, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[155, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[156, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[158, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[159, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[160, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[161, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[162, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[163, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[164, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[165, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[166, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[167, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[168, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[169, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[170, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[171, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[172, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[173, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[174, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[175, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[176, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[177, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[178, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[179, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[180, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[181, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[182, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[183, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[184, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[185, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[186, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[187, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[188, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[189, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[190, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[191, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[192, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[193, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[194, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[195, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[196, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[197, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[198, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[199, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[200, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[201, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[202, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[203, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[204, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[205, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[206, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[207, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[208, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[209, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[210, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[211, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[212, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[213, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[214, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[215, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[216, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[217, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[218, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[219, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[220, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[221, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[222, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[223, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[224, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[225, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[226, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[227, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[228, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[229, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[230, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[231, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[232, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[233, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[234, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[235, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[236, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[237, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[238, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[239, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[240, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[241, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[242, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[243, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[244, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[245, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[246, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[247, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[248, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[249, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[250, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[251, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[252, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[253, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[254, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[255, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[256, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[257, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[258, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[259, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[260, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[261, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[262, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[263, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[264, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[265, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[266, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[267, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[268, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[269, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[270, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[271, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[272, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[273, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[274, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[275, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[276, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[277, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[278, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[279, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[280, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[281, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[282, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[283, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[284, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[285, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[286, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[287, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[288, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[289, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[290, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[291, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[292, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[293, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[294, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[295, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[296, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[297, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[298, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[299, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[300, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[301, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[302, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[303, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[304, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[305, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[306, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[307, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[308, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[309, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[310, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[311, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[312, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[313, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[314, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[315, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[316, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[317, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[318, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[319, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[320, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[321, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[322, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[323, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[324, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[325, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[326, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[327, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[328, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[329, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[330, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[331, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[332, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[333, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[334, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[335, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[336, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[337, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[338, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[339, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[340, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[341, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[342, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[343, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[344, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[345, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[346, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[347, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[348, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[349, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[350, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[351, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[352, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[353, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[354, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[355, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[356, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[357, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[358, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[359, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[360, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[361, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[362, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[363, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[364, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[365, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[366, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[367, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[368, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[369, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[370, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[371, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[372, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[373, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[374, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[375, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[376, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[377, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[378, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[379, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[380, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[381, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[382, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[383, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[384, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[385, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[386, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[387, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[388, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[389, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[390, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[391, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[392, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[393, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[394, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[395, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[396, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[397, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[398, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[399, "torch.Tensor.median"]], "min() (torch.tensor method)": [[400, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[401, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[402, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[403, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[404, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[405, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[406, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[407, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[408, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[409, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[410, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[411, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[412, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[413, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[414, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[415, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[416, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[417, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[418, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[419, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[420, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[421, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[422, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[423, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[424, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[425, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[426, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[427, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[428, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[429, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[430, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[431, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[432, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[433, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[434, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[435, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[436, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[437, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[438, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[439, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[440, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[441, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[442, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[443, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[444, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[445, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[446, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[447, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[448, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[449, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[450, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[451, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[452, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[453, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[454, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[455, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[456, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[457, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[458, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[459, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[460, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[461, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[462, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[463, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[464, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[465, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[466, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[467, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[468, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[469, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[470, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[471, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[472, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[473, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[474, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[475, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[476, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[477, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[478, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[479, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[480, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[481, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[482, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[483, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[484, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[485, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[486, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[487, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[488, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[489, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[490, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[491, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[492, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[493, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[494, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[495, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[496, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[497, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[498, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[499, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[500, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[501, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[502, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[503, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[504, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[505, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[506, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[507, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[508, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[509, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[510, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[511, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[512, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[513, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[514, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[515, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[516, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[517, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[518, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[519, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[520, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[521, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[522, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[523, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[524, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[525, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[526, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[527, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[528, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[529, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[530, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[531, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[532, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[533, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[534, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[535, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[536, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[537, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[538, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[539, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[540, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[541, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[542, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[543, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[544, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[545, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[546, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[547, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[548, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[549, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[550, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[551, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[552, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[553, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[554, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[555, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[556, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[557, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[558, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[559, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[560, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[561, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[562, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[563, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[564, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[565, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[566, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[567, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[568, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[569, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[570, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[571, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[572, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[573, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[577, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[578, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[579, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[580, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[581, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[582, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[583, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[584, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[585, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[586, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[587, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[588, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[589, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[590, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[591, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[592, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[593, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[594, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[595, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[596, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[597, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[598, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[599, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[600, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[601, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[602, "torch.Tensor.values"]], "var() (torch.tensor method)": [[603, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[604, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[605, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[606, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[607, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[608, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[609, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[610, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[611, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[612, "torch._assert"]], "_foreach_abs() (in module torch)": [[613, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[614, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[615, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[616, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[617, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[618, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[619, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[620, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[621, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[622, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[623, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[624, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[625, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[626, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[627, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[628, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[629, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[630, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[631, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[632, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[633, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[634, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[635, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[636, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[637, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[638, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[639, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[640, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[641, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[642, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[643, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[644, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[645, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[646, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[647, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[648, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[649, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[650, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[651, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[652, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[653, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[654, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[655, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[656, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[657, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[658, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[659, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[660, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[661, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[662, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[663, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[664, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[665, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[666, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[667, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[668, "torch._logging.set_logs"]], "abs() (in module torch)": [[669, "torch.abs"]], "absolute() (in module torch)": [[670, "torch.absolute"]], "acos() (in module torch)": [[671, "torch.acos"]], "acosh() (in module torch)": [[672, "torch.acosh"]], "add() (in module torch)": [[673, "torch.add"]], "addbmm() (in module torch)": [[674, "torch.addbmm"]], "addcdiv() (in module torch)": [[675, "torch.addcdiv"]], "addcmul() (in module torch)": [[676, "torch.addcmul"]], "addmm() (in module torch)": [[677, "torch.addmm"]], "addmv() (in module torch)": [[678, "torch.addmv"]], "addr() (in module torch)": [[679, "torch.addr"]], "adjoint() (in module torch)": [[680, "torch.adjoint"]], "all() (in module torch)": [[681, "torch.all"]], "allclose() (in module torch)": [[682, "torch.allclose"]], "amax() (in module torch)": [[683, "torch.amax"]], "amin() (in module torch)": [[684, "torch.amin"]], "aminmax() (in module torch)": [[685, "torch.aminmax"]], "angle() (in module torch)": [[686, "torch.angle"]], "any() (in module torch)": [[687, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[688, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[689, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[700, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[701, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[711, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[712, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[717, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[718, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[719, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[720, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[720, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[721, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[722, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[723, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[723, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[723, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[724, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[725, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[726, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[727, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[728, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[733, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[734, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[744, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[744, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[748, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[749, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[752, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[752, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[754, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[755, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[776, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[777, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[778, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[779, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[780, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[780, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[780, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[780, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[780, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[780, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[780, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[781, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[782, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[782, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[784, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[784, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[784, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[785, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[786, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[787, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[788, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[802, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[803, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[803, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[803, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[803, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[803, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[804, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[804, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[807, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[808, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[808, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[808, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[808, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[812, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[812, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[813, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[826, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[827, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[828, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[829, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[830, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[842, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[843, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[844, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[845, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[846, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[847, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[848, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[851, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[852, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[853, "torch.arange"]], "arccos() (in module torch)": [[854, "torch.arccos"]], "arccosh() (in module torch)": [[855, "torch.arccosh"]], "arcsin() (in module torch)": [[856, "torch.arcsin"]], "arcsinh() (in module torch)": [[857, "torch.arcsinh"]], "arctan() (in module torch)": [[858, "torch.arctan"]], "arctan2() (in module torch)": [[859, "torch.arctan2"]], "arctanh() (in module torch)": [[860, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[861, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[862, "torch.argmax"]], "argmin() (in module torch)": [[863, "torch.argmin"]], "argsort() (in module torch)": [[864, "torch.argsort"]], "argwhere() (in module torch)": [[865, "torch.argwhere"]], "as_strided() (in module torch)": [[866, "torch.as_strided"]], "as_tensor() (in module torch)": [[867, "torch.as_tensor"]], "asarray() (in module torch)": [[868, "torch.asarray"]], "asin() (in module torch)": [[869, "torch.asin"]], "asinh() (in module torch)": [[870, "torch.asinh"]], "atan() (in module torch)": [[871, "torch.atan"]], "atan2() (in module torch)": [[872, "torch.atan2"]], "atanh() (in module torch)": [[873, "torch.atanh"]], "atleast_1d() (in module torch)": [[874, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[875, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[876, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[877, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[878, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[879, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[880, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[881, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[882, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[883, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[884, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[885, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[886, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[889, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[890, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[895, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[896, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[897, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[898, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[899, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[900, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[901, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[902, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[903, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[904, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[905, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[906, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[907, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[908, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[909, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[910, "torch.bernoulli"]], "bincount() (in module torch)": [[911, "torch.bincount"]], "bitwise_and() (in module torch)": [[912, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[913, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[914, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[915, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[916, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[917, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[918, "torch.blackman_window"]], "block_diag() (in module torch)": [[919, "torch.block_diag"]], "bmm() (in module torch)": [[920, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[921, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[922, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[923, "torch.broadcast_to"]], "bucketize() (in module torch)": [[924, "torch.bucketize"]], "can_cast() (in module torch)": [[925, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[926, "torch.cartesian_prod"]], "cat() (in module torch)": [[927, "torch.cat"]], "cdist() (in module torch)": [[928, "torch.cdist"]], "ceil() (in module torch)": [[929, "torch.ceil"]], "chain_matmul() (in module torch)": [[930, "torch.chain_matmul"]], "cholesky() (in module torch)": [[931, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[932, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[933, "torch.cholesky_solve"]], "chunk() (in module torch)": [[934, "torch.chunk"]], "clamp() (in module torch)": [[935, "torch.clamp"]], "clip() (in module torch)": [[936, "torch.clip"]], "clone() (in module torch)": [[937, "torch.clone"]], "column_stack() (in module torch)": [[938, "torch.column_stack"]], "combinations() (in module torch)": [[939, "torch.combinations"]], "compile() (in module torch)": [[940, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[941, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[942, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[943, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[944, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[945, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[946, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[947, "torch.compiler.reset"]], "complex() (in module torch)": [[948, "torch.complex"]], "concat() (in module torch)": [[949, "torch.concat"]], "concatenate() (in module torch)": [[950, "torch.concatenate"]], "conj() (in module torch)": [[951, "torch.conj"]], "conj_physical() (in module torch)": [[952, "torch.conj_physical"]], "copysign() (in module torch)": [[953, "torch.copysign"]], "corrcoef() (in module torch)": [[954, "torch.corrcoef"]], "cos() (in module torch)": [[955, "torch.cos"]], "cosh() (in module torch)": [[956, "torch.cosh"]], "count_nonzero() (in module torch)": [[957, "torch.count_nonzero"]], "cov() (in module torch)": [[958, "torch.cov"]], "stream (class in torch.cpu)": [[959, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[960, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[961, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[962, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[963, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[964, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[965, "torch.cpu.synchronize"]], "cross() (in module torch)": [[966, "torch.cross"]], "cudagraph (class in torch.cuda)": [[967, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[967, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[968, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[969, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[969, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[969, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[969, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[969, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[969, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[969, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[969, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[970, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[970, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[970, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[970, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[970, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[970, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[971, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[972, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[972, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[972, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[972, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[972, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[972, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[973, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[974, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[975, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[976, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[977, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[978, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[979, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[980, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[981, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[982, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[983, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[984, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[985, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[986, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[987, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[988, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[989, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[990, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[991, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[992, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[993, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[994, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[995, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[996, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[997, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[998, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[999, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1000, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1001, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1002, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1003, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1004, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1005, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1006, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1007, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1008, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1009, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1010, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1011, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1012, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1013, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1014, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1015, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1016, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1017, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1018, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1019, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1020, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1021, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1022, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1023, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1024, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1025, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1026, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1027, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1028, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1029, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1030, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1031, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1032, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1033, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1034, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1035, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1036, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1037, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1038, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1039, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1040, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1041, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1042, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1043, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1044, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1045, "torch.cummax"]], "cummin() (in module torch)": [[1046, "torch.cummin"]], "cumprod() (in module torch)": [[1047, "torch.cumprod"]], "cumsum() (in module torch)": [[1048, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1049, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1050, "torch.deg2rad"]], "dequantize() (in module torch)": [[1051, "torch.dequantize"]], "det() (in module torch)": [[1052, "torch.det"]], "diag() (in module torch)": [[1053, "torch.diag"]], "diag_embed() (in module torch)": [[1054, "torch.diag_embed"]], "diagflat() (in module torch)": [[1055, "torch.diagflat"]], "diagonal() (in module torch)": [[1056, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1057, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1058, "torch.diff"]], "digamma() (in module torch)": [[1059, "torch.digamma"]], "dist() (in module torch)": [[1060, "torch.dist"]], "div() (in module torch)": [[1061, "torch.div"]], "divide() (in module torch)": [[1062, "torch.divide"]], "dot() (in module torch)": [[1063, "torch.dot"]], "dsplit() (in module torch)": [[1064, "torch.dsplit"]], "dstack() (in module torch)": [[1065, "torch.dstack"]], "einsum() (in module torch)": [[1066, "torch.einsum"]], "empty() (in module torch)": [[1067, "torch.empty"]], "empty_like() (in module torch)": [[1068, "torch.empty_like"]], "empty_strided() (in module torch)": [[1069, "torch.empty_strided"]], "enable_grad (class in torch)": [[1070, "torch.enable_grad"]], "eq() (in module torch)": [[1071, "torch.eq"]], "equal() (in module torch)": [[1072, "torch.equal"]], "erf() (in module torch)": [[1073, "torch.erf"]], "erfc() (in module torch)": [[1074, "torch.erfc"]], "erfinv() (in module torch)": [[1075, "torch.erfinv"]], "exp() (in module torch)": [[1076, "torch.exp"]], "exp2() (in module torch)": [[1077, "torch.exp2"]], "expm1() (in module torch)": [[1078, "torch.expm1"]], "eye() (in module torch)": [[1079, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1080, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1081, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1082, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1083, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1084, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1085, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1086, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1087, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1088, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1089, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1090, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1091, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1092, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1093, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1094, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1095, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1096, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1097, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1098, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1099, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1100, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1101, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1102, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1103, "torch.fft.rfftn"]], "fix() (in module torch)": [[1104, "torch.fix"]], "flatten() (in module torch)": [[1105, "torch.flatten"]], "flip() (in module torch)": [[1106, "torch.flip"]], "fliplr() (in module torch)": [[1107, "torch.fliplr"]], "flipud() (in module torch)": [[1108, "torch.flipud"]], "float_power() (in module torch)": [[1109, "torch.float_power"]], "floor() (in module torch)": [[1110, "torch.floor"]], "floor_divide() (in module torch)": [[1111, "torch.floor_divide"]], "fmax() (in module torch)": [[1112, "torch.fmax"]], "fmin() (in module torch)": [[1113, "torch.fmin"]], "fmod() (in module torch)": [[1114, "torch.fmod"]], "frac() (in module torch)": [[1115, "torch.frac"]], "frexp() (in module torch)": [[1116, "torch.frexp"]], "from_dlpack() (in module torch)": [[1117, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1118, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1119, "torch.frombuffer"]], "full() (in module torch)": [[1120, "torch.full"]], "full_like() (in module torch)": [[1121, "torch.full_like"]], "functional_call() (in module torch.func)": [[1122, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1123, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1124, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1125, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1126, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1127, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1128, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1129, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1130, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1131, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1132, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1133, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1134, "torch.func.vmap"]], "gather() (in module torch)": [[1135, "torch.gather"]], "gcd() (in module torch)": [[1136, "torch.gcd"]], "ge() (in module torch)": [[1137, "torch.ge"]], "geqrf() (in module torch)": [[1138, "torch.geqrf"]], "ger() (in module torch)": [[1139, "torch.ger"]], "get_default_dtype() (in module torch)": [[1140, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1141, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1142, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1143, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1144, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1145, "torch.get_rng_state"]], "gradient() (in module torch)": [[1146, "torch.gradient"]], "greater() (in module torch)": [[1147, "torch.greater"]], "greater_equal() (in module torch)": [[1148, "torch.greater_equal"]], "gt() (in module torch)": [[1149, "torch.gt"]], "hamming_window() (in module torch)": [[1150, "torch.hamming_window"]], "hann_window() (in module torch)": [[1151, "torch.hann_window"]], "heaviside() (in module torch)": [[1152, "torch.heaviside"]], "histc() (in module torch)": [[1153, "torch.histc"]], "histogram() (in module torch)": [[1154, "torch.histogram"]], "histogramdd() (in module torch)": [[1155, "torch.histogramdd"]], "hsplit() (in module torch)": [[1156, "torch.hsplit"]], "hspmm() (in module torch)": [[1157, "torch.hspmm"]], "hstack() (in module torch)": [[1158, "torch.hstack"]], "hypot() (in module torch)": [[1159, "torch.hypot"]], "i0() (in module torch)": [[1160, "torch.i0"]], "igamma() (in module torch)": [[1161, "torch.igamma"]], "igammac() (in module torch)": [[1162, "torch.igammac"]], "imag() (in module torch)": [[1163, "torch.imag"]], "index_add() (in module torch)": [[1164, "torch.index_add"]], "index_copy() (in module torch)": [[1165, "torch.index_copy"]], "index_reduce() (in module torch)": [[1166, "torch.index_reduce"]], "index_select() (in module torch)": [[1167, "torch.index_select"]], "inference_mode (class in torch)": [[1168, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1169, "torch.initial_seed"]], "inner() (in module torch)": [[1170, "torch.inner"]], "inverse() (in module torch)": [[1171, "torch.inverse"]], "is_complex() (in module torch)": [[1172, "torch.is_complex"]], "is_conj() (in module torch)": [[1173, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1174, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1175, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1176, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1177, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1178, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1179, "torch.is_storage"]], "is_tensor() (in module torch)": [[1180, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1181, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1182, "torch.isclose"]], "isfinite() (in module torch)": [[1183, "torch.isfinite"]], "isin() (in module torch)": [[1184, "torch.isin"]], "isinf() (in module torch)": [[1185, "torch.isinf"]], "isnan() (in module torch)": [[1186, "torch.isnan"]], "isneginf() (in module torch)": [[1187, "torch.isneginf"]], "isposinf() (in module torch)": [[1188, "torch.isposinf"]], "isreal() (in module torch)": [[1189, "torch.isreal"]], "istft() (in module torch)": [[1190, "torch.istft"]], "attribute (class in torch.jit)": [[1191, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1191, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1191, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1191, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1191, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1192, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1192, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1192, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1192, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1193, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1193, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1193, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1193, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1193, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1193, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1194, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1195, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1196, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1197, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1198, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1199, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1200, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1201, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1202, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1203, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1204, "torch.jit.save"]], "script() (in module torch.jit)": [[1205, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1206, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1207, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1208, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1209, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1210, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1211, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1212, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1213, "torch.kaiser_window"]], "kron() (in module torch)": [[1214, "torch.kron"]], "kthvalue() (in module torch)": [[1215, "torch.kthvalue"]], "lcm() (in module torch)": [[1216, "torch.lcm"]], "ldexp() (in module torch)": [[1217, "torch.ldexp"]], "le() (in module torch)": [[1218, "torch.le"]], "lerp() (in module torch)": [[1219, "torch.lerp"]], "less() (in module torch)": [[1220, "torch.less"]], "less_equal() (in module torch)": [[1221, "torch.less_equal"]], "lgamma() (in module torch)": [[1222, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1223, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1224, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1225, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1226, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1227, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1228, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1229, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1230, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1231, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1232, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1233, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1234, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1235, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1236, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1237, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1238, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1239, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1240, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1241, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1242, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1243, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1244, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1245, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1246, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1247, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1248, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1249, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1250, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1251, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1252, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1253, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1254, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1255, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1256, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1257, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1258, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1259, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1260, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1261, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1262, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1263, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1264, "torch.linspace"]], "load() (in module torch)": [[1265, "torch.load"]], "lobpcg() (in module torch)": [[1266, "torch.lobpcg"]], "log() (in module torch)": [[1267, "torch.log"]], "log10() (in module torch)": [[1268, "torch.log10"]], "log1p() (in module torch)": [[1269, "torch.log1p"]], "log2() (in module torch)": [[1270, "torch.log2"]], "logaddexp() (in module torch)": [[1271, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1272, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1273, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1274, "torch.logdet"]], "logical_and() (in module torch)": [[1275, "torch.logical_and"]], "logical_not() (in module torch)": [[1276, "torch.logical_not"]], "logical_or() (in module torch)": [[1277, "torch.logical_or"]], "logical_xor() (in module torch)": [[1278, "torch.logical_xor"]], "logit() (in module torch)": [[1279, "torch.logit"]], "logspace() (in module torch)": [[1280, "torch.logspace"]], "logsumexp() (in module torch)": [[1281, "torch.logsumexp"]], "lt() (in module torch)": [[1282, "torch.lt"]], "lu() (in module torch)": [[1283, "torch.lu"]], "lu_solve() (in module torch)": [[1284, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1285, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1286, "torch.manual_seed"]], "masked_select() (in module torch)": [[1287, "torch.masked_select"]], "matmul() (in module torch)": [[1288, "torch.matmul"]], "matrix_exp() (in module torch)": [[1289, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1290, "torch.matrix_power"]], "max() (in module torch)": [[1291, "torch.max"]], "maximum() (in module torch)": [[1292, "torch.maximum"]], "mean() (in module torch)": [[1293, "torch.mean"]], "median() (in module torch)": [[1294, "torch.median"]], "meshgrid() (in module torch)": [[1295, "torch.meshgrid"]], "min() (in module torch)": [[1296, "torch.min"]], "minimum() (in module torch)": [[1297, "torch.minimum"]], "mm() (in module torch)": [[1298, "torch.mm"]], "mode() (in module torch)": [[1299, "torch.mode"]], "moveaxis() (in module torch)": [[1300, "torch.moveaxis"]], "movedim() (in module torch)": [[1301, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1302, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1303, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1304, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1305, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1306, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1307, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1308, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1309, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1310, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1311, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1312, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1313, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1314, "torch.mps.synchronize"]], "msort() (in module torch)": [[1315, "torch.msort"]], "mul() (in module torch)": [[1316, "torch.mul"]], "multinomial() (in module torch)": [[1317, "torch.multinomial"]], "multiply() (in module torch)": [[1318, "torch.multiply"]], "mv() (in module torch)": [[1319, "torch.mv"]], "mvlgamma() (in module torch)": [[1320, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1321, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1322, "torch.nanmean"]], "nanmedian() (in module torch)": [[1323, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1324, "torch.nanquantile"]], "nansum() (in module torch)": [[1325, "torch.nansum"]], "narrow() (in module torch)": [[1326, "torch.narrow"]], "narrow_copy() (in module torch)": [[1327, "torch.narrow_copy"]], "ne() (in module torch)": [[1328, "torch.ne"]], "neg() (in module torch)": [[1329, "torch.neg"]], "negative() (in module torch)": [[1330, "torch.negative"]], "nextafter() (in module torch)": [[1331, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1332, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1333, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1334, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1336, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1337, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1338, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1339, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1340, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1341, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1342, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1343, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1344, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1345, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1346, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1347, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1348, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1349, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1350, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1351, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1352, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1353, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1354, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1355, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1356, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1357, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1358, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1359, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1360, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1361, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1362, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1363, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1364, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1365, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1366, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1367, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1368, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1369, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1370, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1370, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1371, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1371, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1371, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1372, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1373, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1374, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1375, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1376, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1377, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1378, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1379, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1380, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1381, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1382, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1383, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1384, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1385, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1386, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1387, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1388, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1389, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1390, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1391, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1392, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1393, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1394, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1395, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1396, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1397, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1398, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1399, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1400, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1400, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1401, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1401, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1402, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1402, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1403, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1403, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1404, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1404, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1405, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1405, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1406, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1406, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1407, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1407, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1408, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1408, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1409, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1409, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1410, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1410, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1411, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1411, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1412, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1412, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1413, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1414, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1415, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1416, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1417, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1418, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1419, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1420, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1421, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1422, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1423, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1424, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1425, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1426, "torch.nn.Mish"]], "module (class in torch.nn)": [[1427, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1427, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1427, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1427, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1427, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1427, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1427, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1427, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1427, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1427, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1427, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1427, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1427, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1427, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1427, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1427, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1427, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1427, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1427, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1427, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1427, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1427, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1427, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1427, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1427, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1427, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1427, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1427, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1427, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1427, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1427, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1427, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1427, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1427, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1427, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1427, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1427, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1427, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1427, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1427, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1428, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1429, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1430, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1431, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1432, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1433, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1433, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1433, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1434, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1435, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1436, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1437, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1438, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1438, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1438, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1439, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1440, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1441, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1442, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1443, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1443, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1444, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1445, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1446, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1447, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1448, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1449, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1450, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1451, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1452, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1453, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1454, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1455, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1455, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1456, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1457, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1458, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1459, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1460, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1461, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1462, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1463, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1464, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1465, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1466, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1466, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1467, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1468, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1469, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1470, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1470, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1470, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1471, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1471, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1472, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1472, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1473, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1473, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1474, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1474, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1475, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1476, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1477, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1478, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1479, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1480, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1481, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1482, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1483, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1484, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1485, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1486, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1491, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1492, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1496, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1497, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1498, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1499, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1500, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1507, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1508, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1509, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1510, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1511, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1515, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1516, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1517, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1518, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1519, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1520, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1522, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1523, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1524, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1525, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1526, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1527, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1528, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1529, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1530, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1531, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1533, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1534, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1535, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1536, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1537, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1538, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1539, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1540, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1541, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1542, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1543, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1544, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1545, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1546, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1547, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1549, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1550, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1556, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1557, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1558, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1559, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1562, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1563, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1564, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1565, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1566, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1567, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1568, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1569, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1570, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1571, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1572, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1573, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1574, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1575, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1576, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1578, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1579, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1580, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1581, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1582, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1583, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1584, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1585, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1586, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1587, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1588, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1589, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1590, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1591, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1592, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1593, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1594, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1595, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1596, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1597, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1599, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1600, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1601, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1605, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1607, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1608, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1609, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1610, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1610, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1611, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1612, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1613, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1614, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1615, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1616, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1616, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1617, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1618, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1619, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1620, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1622, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1623, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1624, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1625, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1626, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1627, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1638, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1639, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1640, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1640, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1641, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1642, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1645, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1646, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1647, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1648, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1649, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1650, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1651, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1652, "torch.no_grad"]], "nonzero() (in module torch)": [[1653, "torch.nonzero"]], "norm() (in module torch)": [[1654, "torch.norm"]], "normal() (in module torch)": [[1655, "torch.normal"]], "not_equal() (in module torch)": [[1656, "torch.not_equal"]], "numel() (in module torch)": [[1657, "torch.numel"]], "ones() (in module torch)": [[1658, "torch.ones"]], "ones_like() (in module torch)": [[1659, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1660, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1660, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1660, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1660, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1660, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1660, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1660, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1660, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1661, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1661, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1662, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1663, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1663, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1664, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1664, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1665, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1665, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1666, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1666, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1666, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1666, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1666, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1666, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1666, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1667, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1667, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1668, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1668, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1669, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1669, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1670, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1670, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1671, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1672, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1673, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1674, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1675, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1676, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1676, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1677, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1677, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1678, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1678, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1679, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1679, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1680, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1680, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1681, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1681, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1681, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1681, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1681, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1682, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1682, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1682, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1682, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1682, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1683, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1683, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1683, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1683, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1684, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1685, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1685, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1685, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1686, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1686, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1686, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1686, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1687, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1687, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1687, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1687, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1688, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1688, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1688, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1688, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1689, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1689, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1689, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1689, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1690, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1690, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1690, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1690, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1691, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1691, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1691, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1691, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1692, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1692, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1692, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1692, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1693, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1693, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1694, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1694, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1694, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1694, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1695, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1695, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1695, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1695, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1696, "torch.orgqr"]], "ormqr() (in module torch)": [[1697, "torch.ormqr"]], "outer() (in module torch)": [[1698, "torch.outer"]], "pca_lowrank() (in module torch)": [[1699, "torch.pca_lowrank"]], "permute() (in module torch)": [[1700, "torch.permute"]], "pinverse() (in module torch)": [[1701, "torch.pinverse"]], "poisson() (in module torch)": [[1702, "torch.poisson"]], "polar() (in module torch)": [[1703, "torch.polar"]], "polygamma() (in module torch)": [[1704, "torch.polygamma"]], "positive() (in module torch)": [[1705, "torch.positive"]], "pow() (in module torch)": [[1706, "torch.pow"]], "prod() (in module torch)": [[1707, "torch.prod"]], "promote_types() (in module torch)": [[1708, "torch.promote_types"]], "qr() (in module torch)": [[1709, "torch.qr"]], "quantile() (in module torch)": [[1710, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1711, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1712, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1713, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1714, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1715, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1716, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1716, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1716, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1716, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1716, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1717, "torch.rad2deg"]], "rand() (in module torch)": [[1718, "torch.rand"]], "rand_like() (in module torch)": [[1719, "torch.rand_like"]], "randint() (in module torch)": [[1720, "torch.randint"]], "randint_like() (in module torch)": [[1721, "torch.randint_like"]], "randn() (in module torch)": [[1722, "torch.randn"]], "randn_like() (in module torch)": [[1723, "torch.randn_like"]], "randperm() (in module torch)": [[1724, "torch.randperm"]], "range() (in module torch)": [[1725, "torch.range"]], "ravel() (in module torch)": [[1726, "torch.ravel"]], "real() (in module torch)": [[1727, "torch.real"]], "reciprocal() (in module torch)": [[1728, "torch.reciprocal"]], "remainder() (in module torch)": [[1729, "torch.remainder"]], "renorm() (in module torch)": [[1730, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1731, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1732, "torch.reshape"]], "resolve_conj() (in module torch)": [[1733, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1734, "torch.resolve_neg"]], "result_type() (in module torch)": [[1735, "torch.result_type"]], "roll() (in module torch)": [[1736, "torch.roll"]], "rot90() (in module torch)": [[1737, "torch.rot90"]], "round() (in module torch)": [[1738, "torch.round"]], "row_stack() (in module torch)": [[1739, "torch.row_stack"]], "rsqrt() (in module torch)": [[1740, "torch.rsqrt"]], "save() (in module torch)": [[1741, "torch.save"]], "scatter() (in module torch)": [[1742, "torch.scatter"]], "scatter_add() (in module torch)": [[1743, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1744, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1745, "torch.searchsorted"]], "seed() (in module torch)": [[1746, "torch.seed"]], "select() (in module torch)": [[1747, "torch.select"]], "select_scatter() (in module torch)": [[1748, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1749, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1750, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1751, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1752, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1753, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1754, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1755, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1756, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1757, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1758, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1759, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1760, "torch.set_warn_always"]], "sgn() (in module torch)": [[1761, "torch.sgn"]], "sigmoid() (in module torch)": [[1762, "torch.sigmoid"]], "sign() (in module torch)": [[1763, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1764, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1765, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1766, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1767, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1768, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1769, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1770, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1771, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1772, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1773, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1774, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1775, "torch.signbit"]], "sin() (in module torch)": [[1776, "torch.sin"]], "sinc() (in module torch)": [[1777, "torch.sinc"]], "sinh() (in module torch)": [[1778, "torch.sinh"]], "slice_scatter() (in module torch)": [[1779, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1780, "torch.slogdet"]], "smm() (in module torch)": [[1781, "torch.smm"]], "softmax() (in module torch)": [[1782, "torch.softmax"]], "sort() (in module torch)": [[1783, "torch.sort"]], "addmm() (in module torch.sparse)": [[1784, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1785, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1786, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1786, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1786, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1786, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1787, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1788, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1789, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1790, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1791, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1792, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1793, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1794, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1795, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1796, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1797, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1798, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1799, "torch.split"]], "sqrt() (in module torch)": [[1800, "torch.sqrt"]], "square() (in module torch)": [[1801, "torch.square"]], "squeeze() (in module torch)": [[1802, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1803, "torch.sspaddmm"]], "stack() (in module torch)": [[1804, "torch.stack"]], "std() (in module torch)": [[1805, "torch.std"]], "std_mean() (in module torch)": [[1806, "torch.std_mean"]], "stft() (in module torch)": [[1807, "torch.stft"]], "sub() (in module torch)": [[1808, "torch.sub"]], "subtract() (in module torch)": [[1809, "torch.subtract"]], "sum() (in module torch)": [[1810, "torch.sum"]], "svd() (in module torch)": [[1811, "torch.svd"]], "svd_lowrank() (in module torch)": [[1812, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1813, "torch.swapaxes"]], "swapdims() (in module torch)": [[1814, "torch.swapdims"]], "sym_float() (in module torch)": [[1815, "torch.sym_float"]], "sym_int() (in module torch)": [[1816, "torch.sym_int"]], "sym_max() (in module torch)": [[1817, "torch.sym_max"]], "sym_min() (in module torch)": [[1818, "torch.sym_min"]], "sym_not() (in module torch)": [[1819, "torch.sym_not"]], "t() (in module torch)": [[1820, "torch.t"]], "take() (in module torch)": [[1821, "torch.take"]], "take_along_dim() (in module torch)": [[1822, "torch.take_along_dim"]], "tan() (in module torch)": [[1823, "torch.tan"]], "tanh() (in module torch)": [[1824, "torch.tanh"]], "tensor() (in module torch)": [[1825, "torch.tensor"]], "tensor_split() (in module torch)": [[1826, "torch.tensor_split"]], "tensordot() (in module torch)": [[1827, "torch.tensordot"]], "tile() (in module torch)": [[1828, "torch.tile"]], "topk() (in module torch)": [[1829, "torch.topk"]], "trace() (in module torch)": [[1830, "torch.trace"]], "transpose() (in module torch)": [[1831, "torch.transpose"]], "trapezoid() (in module torch)": [[1832, "torch.trapezoid"]], "trapz() (in module torch)": [[1833, "torch.trapz"]], "triangular_solve() (in module torch)": [[1834, "torch.triangular_solve"]], "tril() (in module torch)": [[1835, "torch.tril"]], "tril_indices() (in module torch)": [[1836, "torch.tril_indices"]], "triu() (in module torch)": [[1837, "torch.triu"]], "triu_indices() (in module torch)": [[1838, "torch.triu_indices"]], "true_divide() (in module torch)": [[1839, "torch.true_divide"]], "trunc() (in module torch)": [[1840, "torch.trunc"]], "unbind() (in module torch)": [[1841, "torch.unbind"]], "unflatten() (in module torch)": [[1842, "torch.unflatten"]], "unique() (in module torch)": [[1843, "torch.unique"]], "unique_consecutive() (in module torch)": [[1844, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1845, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1846, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1847, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1848, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1849, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1850, "torch.utils.set_module"]], "vander() (in module torch)": [[1851, "torch.vander"]], "var() (in module torch)": [[1852, "torch.var"]], "var_mean() (in module torch)": [[1853, "torch.var_mean"]], "vdot() (in module torch)": [[1854, "torch.vdot"]], "view_as_complex() (in module torch)": [[1855, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1856, "torch.view_as_real"]], "vmap() (in module torch)": [[1857, "torch.vmap"]], "vsplit() (in module torch)": [[1858, "torch.vsplit"]], "vstack() (in module torch)": [[1859, "torch.vstack"]], "where() (in module torch)": [[1860, "torch.where"]], "xlogy() (in module torch)": [[1861, "torch.xlogy"]], "zeros() (in module torch)": [[1862, "torch.zeros"]], "zeros_like() (in module torch)": [[1863, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1864, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1864, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1864, "torch.hub.help"]], "list() (in module torch.hub)": [[1864, "torch.hub.list"]], "load() (in module torch.hub)": [[1864, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1864, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1864, "torch.hub.set_dir"]], "torch.hub": [[1864, "module-torch.hub"]], "pytorch_jit": [[1866, "envvar-PYTORCH_JIT"]], "environment variable": [[1866, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1866, "torch.jit.export"]], "torch.jit": [[1866, "module-torch.jit"]], "torch.jit.mobile": [[1866, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1867, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1868, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1868, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1871, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1872, "module-torch.utils.jit"]], "library (class in torch.library)": [[1873, "torch.library.Library"]], "define() (torch.library.library method)": [[1873, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1873, "torch.library.fallthrough_kernel"]], "impl() (torch.library.library method)": [[1873, "torch.library.Library.impl"]], "torch.linalg": [[1874, "module-torch.linalg"]], "torch._logging": [[1875, "module-torch._logging"]], "torch.masked": [[1876, "module-torch.masked"]], "torch.masked.maskedtensor": [[1876, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1877, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1878, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1878, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1879, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1879, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1879, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1879, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1879, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1879, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1879, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1879, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1879, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1879, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1879, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1879, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1879, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1879, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1879, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1879, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1879, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1879, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1880, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1881, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1881, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1881, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1883, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1883, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1883, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1883, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1883, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1883, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1884, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1884, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1884, "torch.nested.to_padded_tensor"]], "torch.nested": [[1884, "module-torch.nested"]], "torch.nn": [[1885, "module-torch.nn"]], "torch.nn.backends": [[1885, "module-torch.nn.backends"]], "torch.nn.modules": [[1885, "module-torch.nn.modules"]], "torch.nn.parallel": [[1885, "module-torch.nn.parallel"]], "torch.nn.utils": [[1885, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1885, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1887, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1887, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1887, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1887, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1887, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1887, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1887, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1887, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1905, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1905, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1905, "torch.serialization.set_default_load_endianness"]], "diagnosticoptions (class in torch.onnx)": [[1908, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1908, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1908, "torch.onnx.ExportOutput"]], "exportoutputserializer (class in torch.onnx)": [[1908, "torch.onnx.ExportOutputSerializer"]], "onnxexportererror (class in torch.onnx)": [[1908, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1908, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1908, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1908, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1908, "torch.onnx.ExportOutput.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[1908, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1908, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.exportoutput property)": [[1908, "torch.onnx.ExportOutput.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1908, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1908, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.exportoutput property)": [[1908, "torch.onnx.ExportOutput.model_proto"]], "opset_version (torch.onnx.onnxregistry property)": [[1908, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1908, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.exportoutput method)": [[1908, "torch.onnx.ExportOutput.save"]], "save_diagnostics() (torch.onnx.exportoutput method)": [[1908, "torch.onnx.ExportOutput.save_diagnostics"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1908, "torch.onnx.ExportOutputSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[1909, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[1910, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[1910, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1910, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1910, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1910, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1910, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1910, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1910, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1910, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1910, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[1912, "torch.optim.Optimizer"]], "torch.optim": [[1912, "module-torch.optim"]], "directory (class in torch.package)": [[1913, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1913, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1913, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1913, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1913, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1913, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_text"]], "torch.package": [[1913, "module-torch.package"]], "torch.package.analyze": [[1913, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1914, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1914, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1915, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1915, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1915, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1915, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1915, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1915, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1915, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1915, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1915, "module-torch.profiler"]], "torch.ao": [[1916, "module-torch.ao"]], "torch.ao.nn": [[1916, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1916, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1916, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1916, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1916, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1916, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1916, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1916, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1916, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1916, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1916, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1916, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1916, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1916, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1916, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1916, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1916, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1919, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1919, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1919, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1919, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1919, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1919, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1919, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1919, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1919, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1919, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1919, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1919, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1919, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1919, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1919, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1919, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1919, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1919, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1919, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1919, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1919, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1919, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1919, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1919, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1919, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1919, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1919, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1919, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1919, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1919, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1919, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1919, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1919, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1919, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1919, "module-torch.quantization"]], "torch.quantization.fx": [[1919, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1920, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1920, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1920, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1920, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1920, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1920, "torch.random.set_rng_state"]], "torch.random": [[1920, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1921, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1921, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1921, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1921, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1921, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1921, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1921, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1921, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1921, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1921, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1921, "module-torch.distributed.rpc"]], "torch.signal": [[1924, "module-torch.signal"]], "torch.signal.windows": [[1924, "module-torch.signal.windows"]], "torch.sparse": [[1925, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1926, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1926, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1926, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1926, "torch.special.digamma"]], "entr() (in module torch.special)": [[1926, "torch.special.entr"]], "erf() (in module torch.special)": [[1926, "torch.special.erf"]], "erfc() (in module torch.special)": [[1926, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1926, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1926, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1926, "torch.special.exp2"]], "expit() (in module torch.special)": [[1926, "torch.special.expit"]], "expm1() (in module torch.special)": [[1926, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1926, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1926, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1926, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1926, "torch.special.i0"]], "i0e() (in module torch.special)": [[1926, "torch.special.i0e"]], "i1() (in module torch.special)": [[1926, "torch.special.i1"]], "i1e() (in module torch.special)": [[1926, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1926, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1926, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1926, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1926, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1926, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1926, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1926, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1926, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1926, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1926, "torch.special.psi"]], "round() (in module torch.special)": [[1926, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1926, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1926, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1926, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1926, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1926, "torch.special.spherical_bessel_j0"]], "torch.special": [[1926, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1926, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1926, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1926, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1927, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1927, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1927, "torch.ByteStorage"]], "charstorage (class in torch)": [[1927, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1927, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1927, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1927, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1927, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1927, "torch.HalfStorage"]], "intstorage (class in torch)": [[1927, "torch.IntStorage"]], "longstorage (class in torch)": [[1927, "torch.LongStorage"]], "qint32storage (class in torch)": [[1927, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1927, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1927, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1927, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1927, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1927, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1927, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1927, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1927, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1927, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1927, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1927, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1927, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1927, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1927, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1927, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1927, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1927, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1927, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1927, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1927, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1927, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1927, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1927, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1927, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1927, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1927, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1927, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1927, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1927, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1927, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1927, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1927, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1927, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1927, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1927, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1927, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1927, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1927, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1927, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1927, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1927, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1927, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1927, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1927, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1927, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1927, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1927, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1927, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1927, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1927, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1927, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1927, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1927, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1927, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1927, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1927, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1927, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1927, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1927, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1927, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1927, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1927, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1927, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1928, "torch.device"]], "dtype (class in torch)": [[1928, "torch.dtype"]], "layout (class in torch)": [[1928, "torch.layout"]], "memory_format (class in torch)": [[1928, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1930, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1931, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1931, "torch.Tensor.T"]], "tensor (class in torch)": [[1931, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1931, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1931, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1932, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1932, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1932, "torch.testing.make_tensor"]], "torch.testing": [[1932, "module-torch.testing"]], "symbool (class in torch)": [[1933, "torch.SymBool"]], "symfloat (class in torch)": [[1933, "torch.SymFloat"]], "symint (class in torch)": [[1933, "torch.SymInt"]], "tag (class in torch)": [[1933, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1933, "torch.torch.default_generator"]], "name (torch.tag property)": [[1933, "torch.Tag.name"]], "torch": [[1933, "module-torch"]], "torch.contrib": [[1933, "module-torch.contrib"]], "torch.utils.backcompat": [[1933, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1933, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1933, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1933, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1934, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1934, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1934, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1934, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1935, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1935, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1937, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1955, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1955, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1955, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1955, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1955, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1955, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1955, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1955, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1955, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[1956, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[1956, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[1956, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[1957, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1957, "torch.torch.iinfo"]], "torch.utils": [[1958, "module-torch.utils"]]}})